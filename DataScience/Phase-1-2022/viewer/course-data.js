window.COURSE_DATA = {"language":"en","lastDownload":"2022-10-31T12:02:25-04:00","title":"Phase 1","modules":[{"id":45618,"name":"Unlock Course (Flex)","status":"unlocked","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g4d57aee0699badffa55902e7b1cdd877","items":[{"id":439811,"title":"Unlock Phase 1","type":"Assignment","indent":0,"locked":false,"submissionTypes":null,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"min_score","requiredPoints":1.0,"completed":false,"content":"\u003cp\u003eContent will be available when your cohort starts\u003c/p\u003e","exportId":"g5dfe270350325ff596475df83cbbd2e2"}]},{"id":45813,"name":"Table of Contents","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"g1c9c0f4c1fe7f335b0f4a2b57107f34e","items":[{"id":441964,"title":"Table of Contents (Live)","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 0: Welcome\" href=\"modules/g853611164f15b95f60a986b6ec229fc2\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43380\" data-api-returntype=\"Module\"\u003eTopic 0: Welcome\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 1: Getting Started with Data Science\" href=\"modules/gb56ea62caa669cb8a22ba6c6577a8549\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43381\" data-api-returntype=\"Module\"\u003eTopic 1: Getting Started with Data Science\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003e\u003ca title=\"Topic 1 Lesson Priorities (Live)\" href=\"pages/topic-1-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/topic-1-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eTopic 1 Lesson Priorities\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 2: Bash and Git\" href=\"modules/gd00f7473182381bf5d3bf2ec0358096f\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43382\" data-api-returntype=\"Module\"\u003eTopic 2: Bash and Git\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003e\u003ca title=\"Topic 2 Lesson Priorities (Live)\" href=\"pages/topic-2-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/topic-2-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eTopic 2 Lesson Priorities\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 3: Data Analysis in Base Python\" href=\"modules/g798dff3510ce5c3611d5289919360ea6\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43383\" data-api-returntype=\"Module\"\u003eTopic 3: Data Analysis in Base Python\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003e\u003ca title=\"Topic 3 Lesson Priorities (Live)\" href=\"pages/topic-3-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/topic-3-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eTopic 3 Lesson Priorities\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 4: Data Analysis in Pandas\" href=\"modules/g8c2df3870940e917de3c16b2e88376b7\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43384\" data-api-returntype=\"Module\"\u003eTopic 4: Data Analysis in Pandas\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003e\u003ca title=\"Topic 4 Lesson Priorities (Live)\" href=\"pages/topic-4-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/topic-4-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eTopic 4 Lesson Priorities\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 5: Data Cleaning in Pandas\" href=\"modules/gb253ee1696bdd9cce223fed5e589a630\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43385\" data-api-returntype=\"Module\"\u003eTopic 5: Data Cleaning in Pandas\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003e\u003ca title=\"Topic 5 Lesson Priorities (Live)\" href=\"pages/topic-5-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/topic-5-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eTopic 5 Lesson Priorities\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 6: Getting Started with SQL\" href=\"modules/g98b53f0f86b445c61c8446066aa60910\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43386\" data-api-returntype=\"Module\"\u003eTopic 6: Getting Started with SQL\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003e\u003ca title=\"Topic 6 Lesson Priorities (Live)\" href=\"pages/topic-6-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/topic-6-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eTopic 6 Lesson Priorities\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 7: SQL Table Relations\" href=\"modules/ge332ce73dc486a92a4d89647893f0efa\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43387\" data-api-returntype=\"Module\"\u003eTopic 7: SQL Table Relations\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003e\u003ca title=\"Topic 7 Lesson Priorities (Live)\" href=\"pages/topic-7-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/topic-7-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eTopic 7 Lesson Priorities\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 8: Other Database Structures\" href=\"modules/gc534a61f2b9a11056437f449a1fcdd9f\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43388\" data-api-returntype=\"Module\"\u003eTopic 8: Other Database Structures\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003e\u003ca title=\"Topic 8 Lesson Priorities (Live)\" href=\"pages/topic-8-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/topic-8-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eTopic 8 Lesson Priorities\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 9: APIs\" href=\"modules/g2d8a046e995c851ade19d8a750ecbe48\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43389\" data-api-returntype=\"Module\"\u003eTopic 9: APIs\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003e\u003ca title=\"Topic 9 Lesson Priorities (Live)\" href=\"pages/topic-9-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/topic-9-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eTopic 9 Lesson Priorities\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 10: HTML, CSS and Web Scraping\" href=\"modules/g6a3aa465bf267289b3b5c32435c69db0\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43390\" data-api-returntype=\"Module\"\u003eTopic 10: HTML, CSS and Web Scraping\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003e\u003ca title=\"Topic 10 Lesson Priorities (Live)\" href=\"pages/topic-10-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/topic-10-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eTopic 10 Lesson Priorities\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca title=\"üèÜ Milestones\" href=\"modules/g15c954d4a30ba76f0a45a01c4d263387\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43378\" data-api-returntype=\"Module\"\u003eüèÜ Milestones\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca title=\"APPENDIX: Pandas\" href=\"modules/g5b7183538a54f5150f35f60d5d7c44b5\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43391\" data-api-returntype=\"Module\"\u003eAPPENDIX\u003c/a\u003e\u003c/p\u003e","exportId":"table-of-contents-live"}]},{"id":45633,"name":"Topic 0: Welcome","status":"completed","unlockDate":null,"prereqs":[45618],"requirement":"all","sequential":false,"exportId":"g853611164f15b95f60a986b6ec229fc2","items":[{"id":439986,"title":"Welcome","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-welcome-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-welcome-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003cp\u003eWelcome to Flatiron School's Data Science Program! Over the next 800-1000 hours you will learn everything you need to know to get started as a professional Data Scientist. Before you get started we wanted to share an important thought. This is going to be the most rewarding learning experience you've ever had, we promise. Let's get started!\u003c/p\u003e\n\n\u003ch2\u003eLearning How To Learn\u003c/h2\u003e\n\n\u003cp\u003eThe most common misconception we get when people start this course is that we will teach you programming, math, modeling and visualization. Don't get us wrong, we are going to teach you those things, but that's actually not the most important set of skills you're going to learn.\u003c/p\u003e\n\n\u003cp\u003eOver your career as a professional data scientist you're going to end up programming in languages and using modeling techniques that haven't even been invented yet. So, the most important thing we can (and we will) teach you is \u003cstrong\u003ehow to learn\u003c/strong\u003e. While covering topics like Python, Statistics, and Regression, we'll work with you to build the skills required to read and understand error messages and to google for answers so once you get a job as a data scientist, when you have to learn a new language, library, or model, you'll know how to quickly get started. We'll also teach you your first set of tools so that you can contribute immediately using them as a professional data scientist.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-welcome-intro\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-welcome-intro\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-welcome-intro/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"welcome"},{"id":439997,"title":"How to Use Lesson Priorities (Live)","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cp\u003eThis page explains how to use the daily Lesson Priorities pages that are shared throughout the program. Your instructor may also provide guidance that modifies these instructions.\u003c/p\u003e\n\u003ch1\u003eMotivation\u003c/h1\u003e\n\u003cp\u003eOur program is fast paced, and we want to help you focus your time on the activities that will best support your learning. The Canvas courses contain a lot of material - more than most students will be able to complete during the program. The Lesson Priorities pages can help you make sure that you are learning the core concepts and skills on schedule so you stay on track throughout the program.\u003c/p\u003e\n\u003ch1\u003ePriority Levels\u003c/h1\u003e\n\u003cp\u003eThe Lesson Priorities pages assign priority levels to readings to help you manage your time throughout the program. Priority levels help you think about when or whether to complete a reading if you don‚Äôt have enough time to complete all the readings for a given day.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eFirst Priority: Focus.\u003c/strong\u003e 1st priority lessons cover core concepts and skills, so you should complete all of them according to your schedule. This will ensure that you are prepared for the upcoming lectures and other activities. If you are unable to complete these readings on schedule, make sure to finish them the following day and/or reach out to your instructor for support.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eSecond Priority: Support.\u003c/strong\u003e 2nd priority lessons are important but not critical for your success in the program. They are often the \"lab\" assignments associated with a lesson, where you are not being introduced to new topics but are instead getting the opportunity to practice them. Complete them the day they are assigned if you have time, but don‚Äôt worry if you are unable to. You can complete them later when you might have more time.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eThird Priority: Extension.\u003c/strong\u003e 3rd priority lessons provide additional practice or teach supplemental content that is not needed to succeed in the program. Complete these readings only after you have completed all previous 1st or 2nd priority lessons.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1\u003eAdjusting the Schedule\u003c/h1\u003e\n\u003cp\u003eThe readings for each day are chosen to prepare you for the lectures that will be delivered that day or the following day. However, you should feel free to adjust your personal reading schedule as needed for your own learning. Some possible adjustments you might make:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eIf Monday‚Äôs readings cover material for a lecture that is happening on Tuesday afternoon, complete some of those readings on Tuesday morning instead.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you complete all of the readings for a day, go back and complete unfinished readings from prior days or get a head start on the next day‚Äôs readings.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you know you will need to be absent, complete readings ahead of schedule so you won‚Äôt be behind when you return.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIf you have any questions about how best to adjust your reading schedule, reach out to your instructor.\u003c/p\u003e\n\u003ch1\u003eCumulative Labs\u003c/h1\u003e\n\u003cp\u003eThere are a few Cumulative Labs in each Phase to help assess your progress in the program. If you can complete these labs, you are on track for success with the rest of the Phase and the upcoming Code Challenge. If you find yourself struggling, revisit the prior lessons relevant to the parts where you get stuck. If you are unable to complete one, please reach out for assistance.\u003c/p\u003e\n\u003cp\u003eComplete the Cumulative Labs soon after you‚Äôve participated in the lecture that covers the topic. Your instructor may also give you special instructions about when or how to complete the Cumulative Labs - hold off on doing them if your instructor has specific plans for when/how to do them.\u003c/p\u003e\n\u003ch1\u003eAppendix\u003c/h1\u003e\n\u003cp\u003eSome lessons have a low enough priority that they are not included in the main topic modules. These lessons are contained in modules with names that start with \"APPENDIX\". Feel free to browse these sections for additional content that interests you, but you will not be assessed on this content and it's less likely to be relevant for your job search.\u003c/p\u003e\n\u003ch1\u003eSummary\u003c/h1\u003e\n\u003cp\u003eThe Lesson Priorities pages should help you manage your time through Phases 1-4. Most of your time in the program will be spent outside of live class sessions, so the quality of your learning experience will depend greatly on how you use that time. Your instructor will give some instructions for how to use your time. Follow their instructions, and then use these Reading Priorities pages to help decide how best to use any remaining unstructured time. If you ever have any questions about what you should be doing, reach out to your peers or your instructor.\u003c/p\u003e","exportId":"how-to-use-lesson-priorities-live"}]},{"id":45634,"name":"Topic 1: Getting Started with Data Science","status":"completed","unlockDate":null,"prereqs":[45618],"requirement":"all","sequential":false,"exportId":"gb56ea62caa669cb8a22ba6c6577a8549","items":[{"id":440005,"title":"Topic 1 Lesson Priorities (Live)","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cp\u003e\u003cstrong\u003eIf you have not completed all of the content from Pre-Work, you should do so as soon as possible.\u003c/strong\u003e Proficiency with the content from the Pre-Work is required to follow along with the lectures and other activities. If you have any questions about Pre-Work material, please reach out to your instructor for support.\u003c/p\u003e\n\u003cp\u003eFor a reminder of how to use these lesson priorities, see \u003ca title=\"How to Use Lesson Priorities (Live)\" href=\"pages/how-to-use-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/how-to-use-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eHow to Use Lesson Priorities (Live)\u003c/a\u003e\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 98.8747%; height: 236px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete Before \u003cem\u003eData Science Environments\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 48.7333%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 6.93321%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003cstrong\u003e \u003ca title=\"Getting Started with Data Science - Introduction\" href=\"pages/getting-started-with-data-science-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/getting-started-with-data-science-introduction\" data-api-returntype=\"Page\"\u003eGetting Started with Data Science - Introduction\u003c/a\u003e \u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003ca title=\"The Data Science Process\" href=\"pages/the-data-science-process\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/the-data-science-process\" data-api-returntype=\"Page\"\u003eThe Data Science Process\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003ca title=\"Problems Data Science Can Solve\" href=\"pages/problems-data-science-can-solve\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/problems-data-science-can-solve\" data-api-returntype=\"Page\"\u003eProblems Data Science Can Solve\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003cstrong\u003e\u003ca title=\"PEP8\" href=\"assignments/gfed45802704e0b7865e825dba6faff25\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186756\" data-api-returntype=\"Assignment\"\u003ePEP8\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003ca title=\"Data Privacy and Data Ethics\" href=\"pages/data-privacy-and-data-ethics\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/data-privacy-and-data-ethics\" data-api-returntype=\"Page\"\u003eData Privacy and Data Ethics\u003c/a\u003e\u0026nbsp;\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: Data Science Basics\" href=\"quizzes/g3fc96605f5d6cc55db8e217edd865729\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30549\" data-api-returntype=\"Quiz\"\u003eQuiz: Data Science Basics\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 98.0734%;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eData Science Environments\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 48.7333%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 6.93321%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 48.7333%;\"\u003e\u003cstrong\u003e\u003ca title=\"Data Science Environments Exit Ticket\" href=\"quizzes/g344243053420d69c7ffad8c81e13c8d5\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30576\" data-api-returntype=\"Quiz\"\u003eData Science Environments Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003cstrong\u003e\u003ca title=\"Setting up a Professional Data Science Environment - Introduction\" href=\"pages/setting-up-a-professional-data-science-environment-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/setting-up-a-professional-data-science-environment-introduction\" data-api-returntype=\"Page\"\u003eSetting up a Professional Data Science Environment - Introduction\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003cstrong\u003e\u003ca title=\"Setting up a Professional Data Science Environment - MacOS Installation\" href=\"pages/setting-up-a-professional-data-science-environment-macos-installation\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/setting-up-a-professional-data-science-environment-macos-installation\" data-api-returntype=\"Page\"\u003eSetting up a Professional Data Science Environment - MacOS Installation\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\"\u003e\u003cstrong\u003e1st*\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003cstrong\u003e\u003ca title=\"Setting up a Professional Data Science Environment - Windows Installation\" href=\"pages/setting-up-a-professional-data-science-environment-windows-installation\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/setting-up-a-professional-data-science-environment-windows-installation\" data-api-returntype=\"Page\"\u003eSetting up a Professional Data Science Environment - Windows Installation\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\"\u003e\u003cstrong\u003e1st*\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003cstrong\u003e\u003ca title=\"Setting up a Professional Data Science Environment - Configuring Git and Anaconda\" href=\"pages/setting-up-a-professional-data-science-environment-configuring-git-and-anaconda\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/setting-up-a-professional-data-science-environment-configuring-git-and-anaconda\" data-api-returntype=\"Page\"\u003eSetting up a Professional Data Science Environment - Configuring Git and Anaconda\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003ca title=\"Running Jupyter Notebooks Locally\" href=\"pages/running-jupyter-notebooks-locally\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/running-jupyter-notebooks-locally\" data-api-returntype=\"Page\"\u003eRunning Jupyter Notebooks Locally\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003ca title=\"Running Jupyter Notebooks Locally - Lab\" href=\"assignments/g2079b79db5f5e3608e7b2979d6657035\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186769\" data-api-returntype=\"Assignment\"\u003eRunning Jupyter Notebooks Locally - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 48.7333%;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: Professional Data Science Environment\" href=\"quizzes/ga453b697c32536aa3d4b985a1dce583b\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30590\" data-api-returntype=\"Quiz\"\u003eQuiz: Professional Data Science Environment\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003ca title=\"Getting Started with Data Science - Recap\" href=\"pages/getting-started-with-data-science-recap\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/getting-started-with-data-science-recap\" data-api-returntype=\"Page\"\u003eGetting Started with Data Science - Recap\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003e*Follow the setup instructions for your operating system only\u003c/strong\u003e\u003c/p\u003e","exportId":"topic-1-lesson-priorities-live"},{"id":440008,"title":"Getting Started with Data Science - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-introduction-v2-2-intro\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-v2-2-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-v2-2-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eCongratulations on making it this far! Now that you have mastered fundamentals of programming with Python, descriptive statistics, and data visualization, we're going to start digging in to the process of \"doing data science\".\u003c/p\u003e\n\u003ch2\u003eData Science Fundamentals\u003c/h2\u003e\n\u003cp\u003eIn the first half of this section, we will introduce a lot of new ideas about what we mean by \"data science\". What is the process? What kinds of problems can data science solve?\u003c/p\u003e\n\u003cp\u003eWe will also go over some key professional concerns of data scientists, including following code best practices and being ethical in our use of data.\u003c/p\u003e\n\u003ch2\u003eProfessional Data Science Environment Setup\u003c/h2\u003e\n\u003cp\u003eSo far, all of your lessons have been completed in a cloud environment that \"just works\". You open a lesson and are immediately able to run through your own copy of the code without worrying about where the code came from, how it is stored, whether you have the appropriate software downloaded, etc.\u003c/p\u003e\n\u003cp\u003eThis is very convenient for educational purposes, but is not very representative of a real-world data science environment. So, in the second half of this section, we show you how to get all of the tools set up so that your computer has a professional data science environment!\u003c/p\u003e\n\u003cp\u003eThe tools we cover in this section include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePython\u003c/li\u003e\n\u003cli\u003eJupyter Notebook\u003c/li\u003e\n\u003cli\u003eAnaconda\u003c/li\u003e\n\u003cli\u003eGit\u003c/li\u003e\n\u003cli\u003eGitHub\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eYou have actually already been using all of these tools \"under the hood\", but these lessons will walk through what they are all used for and how to install and use them on your computer.\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eRemember, it's okay to feel a little uncomfortable. We are going to throw a lot of new concepts at you, and some of them won't fully make sense until much further down the line. Remember that you'll continue to practice these day after day, until they become second nature!\u003c/p\u003e","exportId":"getting-started-with-data-science-introduction"},{"id":440013,"title":"The Data Science Process","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-the-data-science-process\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-the-data-science-process/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch1\u003eThe Data Science Process\u003c/h1\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eJust as it's important to understand the kinds of problems that can be solved by data science, it's also important to have a sense of the process used to conduct data science. In this lesson, we'll outline the lifecycle of a typical data science project - from business understanding through data visualization.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the full data science process\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eThe Data Science Process\u003c/h2\u003e\n\n\u003cp\u003eThere is much more to data science than just selecting, applying and tuning Machine Learning algorithms. A data science project will often include the following stages:\n\u003cbr\u003e\n\u003cbr\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_process.png\" width=\"950\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cbr\u003e\n\u003cbr\u003e\nIn this section, you will go through each of these stages and see what is involved.\u003c/p\u003e\n\n\u003ch2\u003eBusiness Understanding / Domain Knowledge\u003c/h2\u003e\n\n\u003cp\u003eBefore trying to solve a data related problem, it is important that a Data Scientist/Analyst has a clear understanding of the problem domain and the kinds of question(s) that need to be answered by their analysis. Some of the questions that the Data Scientist might be asked include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eHow much or how many? E.g. Identifying the number of new customers likely to join your company in the next quarter. (Regression analysis)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eWhich category? E.g. Assigning a document to a given category for a document management system. (Classification analysis)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eWhich group? E.g. Creating a number of groups (segments) of your customers based on their monetary value. (Clustering)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eIs this weird? E.g. Detecting suspicious activities of customers by a credit card company to identify potential fraud. (Anomaly detection)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eWhich items would a user prefer? E.g. Recommending new products (such as movies, books or music) to existing customers (Recommendation systems)\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cbr\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_domain.png\" width=\"450\"\u003e\n\u003cbr\u003e\u003c/p\u003e\n\n\u003ch2\u003eData Mining\u003c/h2\u003e\n\n\u003cp\u003eAfter identifying the objective for your analysis and agreeing on analytical question(s) that need to be answered, the next step is to identify and gather the required data. \u003c/p\u003e\n\n\u003cp\u003eData mining is a process of identifying and collecting data of interest from different sources - databases, text files, APIs, the Internet, and even printed documents. Some of the questions that you may ask yourself at this stage are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWhat data do I need in order to answer my analytical question?\u003c/li\u003e\n\u003cli\u003eWhere can I find this data?\u003c/li\u003e\n\u003cli\u003eHow can I obtain the data from the data source?\u003c/li\u003e\n\u003cli\u003eHow do I sample from this data?\u003c/li\u003e\n\u003cli\u003eAre there any privacy/legal issues that I must consider prior to using this data?\n\u003cbr\u003e\n\u003cbr\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_datamining.png\" width=\"650\"\u003e\n\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eData Cleaning\u003c/h2\u003e\n\n\u003cp\u003eData cleaning is usually the most time-consuming stage of the Data Science process. This stage may take up to 50-80% of a Data Scientist's time as there are a vast number of possible problems that make the data \"dirty\" and unsuitable for analysis. Some of the problems you may see in data are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eInconsistencies in data\u003c/li\u003e\n\u003cli\u003eMisspelled text data\u003c/li\u003e\n\u003cli\u003eOutliers\u003c/li\u003e\n\u003cli\u003eImbalanced data\u003c/li\u003e\n\u003cli\u003eInvalid/outdated data\u003c/li\u003e\n\u003cli\u003eMissing data\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThis stage requires the development of a careful strategy on how to deal with these issues. Such a strategy may vary substantially between different analyses depending on the nature of problems being solved. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_data_cleaning_corrected.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eData Exploration\u003c/h2\u003e\n\n\u003cp\u003eData exploration or Exploratory Data Analysis (EDA) helps highlight the patterns and relations in data. Exploratory analysis may involve the following activities:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCalculating basic descriptive statistics such as the mean, the median, and the mode\u003c/li\u003e\n\u003cli\u003eCreating a range of plots including histograms, scatter plots, and distribution curves to identify trends in the data\u003c/li\u003e\n\u003cli\u003eOther interactive visualizations to focus on a specific segments of data \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_exploration.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eFeature Engineering\u003c/h2\u003e\n\n\u003cp\u003eA \"Feature\" is a measurable attribute of the phenomenon being observed - the number of bedrooms in a house or the weight of a vehicle. Based on the nature of the analytical question asked in the first step, a Data Scientist may have to engineer additional features not found in the original dataset. Feature engineering is the process of using expert knowledge to transform raw data into meaningful features that directly address the problem you are trying to solve. For example, taking weight and height to calculate Body Mass Index for the individuals in the dataset. This stage will substantially influence the accuracy of the predictive model you construct in the next stage. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_engineering.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003ch2\u003ePredictive Modeling\u003c/h2\u003e\n\n\u003cp\u003eModeling is the stage where you use mathematical and/or statistical approaches to answer your analytical question. Predictive Modeling refers to the process of using probabilistic statistical methods to try to predict the outcome of an event. For example, based on employee data, an organization can develop a predictive model to identify employee attrition rate in order to develop better retention strategies.\u003c/p\u003e\n\n\u003cp\u003eChoosing the \"right\" model is often a challenging decision as there is never a single right answer. Selecting a model involves balancing the accuracy and computational cost of the analysis process. For example, some recent approaches in predictive modeling such as deep learning have been shown to offer vastly improved accuracy of results, but with a very high computational cost.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_predictive.png\" width=\"250\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eData Visualization\u003c/h2\u003e\n\n\u003cp\u003eAfter deriving the required results from a statistical model, visualizations are normally used to summarize and present the findings of the analysis process in a form which is easily understandable by non-technical decision makers. \u003c/p\u003e\n\n\u003cp\u003eData visualization could be thought of as an evolution of visual communication techniques as it deals with the visual representation of data. There are a wide range of different data visualization techniques, from bar graphs, line graphs and scatter plots to alluvial diagrams and spatio-temporal visualizations, each of which will work better for presenting certain types of information.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_visualization.png\" width=\"650\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we looked at the end-to-end Data Science process to give a sense of the activities that Data Scientists engage with.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-the-data-science-process\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-the-data-science-process\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-the-data-science-process/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"the-data-science-process"},{"id":440017,"title":"Problems Data Science Can Solve","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-problems-data-science-can-solve\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-problems-data-science-can-solve/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson we will look at what data science is and the different kinds of problems that it can be used to solve. By the end of the lesson you should be able to answer which technique you would use as a professional data scientist for a particular business problem. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the problems data science can solve\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhat Problems Can Data Science Solve?\u003c/h2\u003e\n\n\u003cp\u003eCongratulations on deciding to become a data scientist! Before we dig into the details of the tools and techniques that you'll need to learn, it's important to take a little time to understand what you'll be able to do once you graduate. Here is a list of some of the common types of business problems data scientists are expected to solve. \u003c/p\u003e\n\n\u003ch2\u003e1. Regression: How much or how many?\u003c/h2\u003e\n\n\u003cp\u003eRegression analysis is used to predict a continuous value - such as the number of staff you'll need for a busy shift or the likely sale price of a house. \u003c/p\u003e\n\n\u003ch3\u003eExample:  Sales or Market Forecasts\u003c/h3\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-problems-data-science-can-solve/master/images/Image_185_forecast_corrected.png\" width=\"650\"\u003e\u003c/p\u003e\n\n\u003cp\u003eTraditional trend analysis only looks at how one business entity changes with respect to another. Regression analyses can provide insight into how an outcome will change when several other variables are modified.\u003c/p\u003e\n\n\u003ch2\u003e2. Classification: Which category?\u003c/h2\u003e\n\n\u003cp\u003eClassification is used to predict which category something will fall into. If you're trying to figure out whether a client is likely to default on a loan (i.e., default or no default) or which of your products a customer is likely to prefer, you're dealing with a classification problem.\u003c/p\u003e\n\n\u003ch3\u003eExample: Credit Rating\u003c/h3\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-problems-data-science-can-solve/master/images/credit.png\" width=\"850\"\u003e\u003c/p\u003e\n\n\u003cp\u003eCredit card companies receive hundreds of thousands of applications for new credit cards every week. These applications contain detailed information on social, economic, and personal attributes of applicants. Classification analysis can allow companies to categorize these applications based on the quality of their credit.\u003c/p\u003e\n\n\u003ch2\u003e3. Anomaly detection: Is this weird?\u003c/h2\u003e\n\n\u003cp\u003eAnomaly detection is a common data science technique used to find unusual patterns that do not conform to expected behavior. It has applications across various industries from intrusion detection (identifying strange patterns in network traffic that could signal a hack) to fraud detection in credit card transactions to fault detection in operating environments.\u003c/p\u003e\n\n\u003ch3\u003eExample: Identifying Fraud\u003c/h3\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-problems-data-science-can-solve/master/images/Image_186_fishanomaly.png\" alt=\"img\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThis approach focuses on finding \u003cstrong\u003eoutliers\u003c/strong\u003e in the data that appear to have unusual patterns. This serves as a first indication of the presence of fraudulent activity. Such approaches are also frequently applied by large social networks like Facebook, Twitter, etc.\u003c/p\u003e\n\n\u003ch2\u003e4. Recommender systems: Which item would a user prefer?\u003c/h2\u003e\n\n\u003cp\u003eRecommender systems are one of the most popular applications of data science today. They are used to predict user preferences towards a product/service. Almost every major tech company (Amazon, Netflix, Google, Facebook) has applied them in some form or the other. You might have noticed phrases like \"If you like this product, you may also like ...\", \"Users who bought this item also bought ...\", and \"Based on your preferences, we recommend following products to you ...\". You got it, these are all recommender systems in action. \u003c/p\u003e\n\n\u003cp\u003eRecommender systems can help a business retain customers by providing them with tailored suggestions specific to their needs. They can help increase sales and create brand loyalty through relevant personalization. When a customer feels as though they are understood by your brand, they are more likely to stay loyal and continue purchasing through your site.\nAccording to a recent study by McKinsey, up to 75% of what consumers watch on Netflix comes from the company‚Äôs recommender system. Retail giant Amazon credits recommender systems with 35% of their revenue. Best Buy decided to focus on their online sales, and in 2016‚Äôs second quarter they reported a 23.7% increase, thanks in part to their recommender system. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWhile you're going to learn to use a wide range of tools and techniques throughout this course, most of them will be used to predict a continuous value, to decide the most likely category for a value, to identify anomalies or to provide recommendations.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-problems-data-science-can-solve\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-problems-data-science-can-solve\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-problems-data-science-can-solve/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"problems-data-science-can-solve"},{"id":440020,"title":"PEP8","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-PEP8\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-PEP8\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-PEP8/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003ePEP stands for Python Enhancement Proposals. Check them out \u003ca href=\"https://www.python.org/dev/peps/\"\u003ehere\u003c/a\u003e! We'll start by talking about PEP8, which is the Style Guide for Python code. This discusses many points which are also important for collaboration. Git is useful for sharing and integrating code bases, but if code is poorly written it can still be cryptic and difficult to decipher. By following styling guidelines such as those outlined in PEP8, we can all create more legible code that can be shared in a streamlined fashion.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eList the conventions defined in PEP8 \u003c/li\u003e\n\u003c/ul\u003e","exportId":"gfed45802704e0b7865e825dba6faff25"},{"id":440023,"title":"Data Privacy and Data Ethics","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-ethics\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-ethics/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eData ethics and data privacy are integral to any data project. There are obvious cases such as protecting the privacy of individuals health records under HIPAA. There are also many gray areas surrounding what constitutes personally identifiable information (PII) which occur throughout many industries including advertising, finance, and consumer goods. You may have noticed that starting around the summer of 2018, you started receiving privacy policy notices on many websites asking you to accept the use of cookies. This was a result of Europe's GDPR legislation. You are also probably aware of the Cambridge Analytica debacle in the 2016 United States presidential election. As a data practitioner, it is your responsibility to uphold data ethics in a fast-changing environment.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDetermine whether or not a data science procedure meets an ethics standard\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eExamples\u003c/h2\u003e\n\n\u003ch3\u003eData Breaches\u003c/h3\u003e\n\n\u003cp\u003eIf the data you are handling is valuable, then security should be a primary concern. Data breaches are all too common and often, such leaks of sensitive information could have been avoided if businesses and organizations followed standard security protocols. While there are thousands of said cases, two of the biggest breaches which have caught the public's attention include Cambridge Analytica's misuse of Facebook data to influence political elections, and Equifax's leaking of roughly 100 million individuals' social security numbers and credit scores. \u003c/p\u003e\n\n\u003ch3\u003eIdentifying PII\u003c/h3\u003e\n\n\u003cp\u003ePII stands for \u003cstrong\u003epersonally identifiable information\u003c/strong\u003e. While some cases such as one's social security number and medical records are clear examples of PII, other pieces of data may or may not qualify as PII depending on the jurisdiction. In the United States for example, there are two federal regulations: the Health Insurance Portability and Accountability Act (HIPAA), and the Privacy Act of 1974. While in theory these acts aim to protect the use, collection, and maintenance of personal data, the scope of what constitutes PII and the subsequent regulations surrounding handling and using said data is generally antiquated. For example, a user's IP address has been categorized as non-PII by several U.S. courts despite it being a unique identifier to most individual's home internet connection. This was further eroded by the rollback of net neutrality laws by the FCC Chairman Ajit Pai in mid-2018. Aside from federal jurisdiction, several states, most notably California have their own data protection laws to the benefit and protection of users and consumers.\u003c/p\u003e\n\n\u003ch3\u003eGDPR\u003c/h3\u003e\n\n\u003cp\u003eGDPR stands for the \u003cstrong\u003egeneral data protection regulation\u003c/strong\u003e. It was passed on April 14th 2016 by the European Union and went into effect on May 25th 2018. GDPR protects the data rights of all European citizens and is an example of how legislation will have to change and adapt to the online digital era of the 21st century. GDPR has implemented more widespread regulations surrounding what constitutes PII and has set fine structures for up to 4% of a company's revenue.\u003c/p\u003e\n\n\u003ch3\u003eData Best Practices\u003c/h3\u003e\n\n\u003cp\u003eThere are two primary practices that you should follow when dealing with PII and other sensitive data. The first is to encrypt sensitive data. When in doubt, encrypt. Secondly, ask yourself what level of information you really need. Large organizations will always include data cleaning teams which will first scrub sensitive data such as names and addresses before passing said data off to analysts and others to mine. Ultimately, any well-thought strategy will include multiple layers, safeguards, and other measures to ensure data is safe and secure.\u003c/p\u003e\n\n\u003ch3\u003eData Collection Processes\u003c/h3\u003e\n\n\u003cp\u003eWhen collecting data, it is important to ensure you are not gathering it in a manner that will generate bias. For example, if Data Scientists are not careful in the way they phrase questions in surveys, they can generate misleading results. If a poll contained the question \"How poorly has Politician X performed when it comes to the economy\" it adds a negative connotation the question. That phrasing might make people say Politician X performed worse than if they had merely been asked \"How has Politician X performed when it comes to the economy?\" \u003c/p\u003e\n\n\u003cp\u003eIn some cases, choosing which variables to collect and how to define them can also contain bias. You‚Äôll notice that in some of the datasets we use, gender is represented as a binary value and race is referenced in an insensitive manner. This is an artifact of the societal conditions at the time the data was collected. As soon-to-be Data Scientists, it will be your responsibility to ensure that data collection is done in an inclusive manner.\u003c/p\u003e\n\n\u003ch3\u003eAlgorithm Bias\u003c/h3\u003e\n\n\u003cp\u003ePeople often trust algorithms and their output based on measurements such as \"this algorithm has 99.9% accuracy\". However, it should also be noted that while algorithms such as linear regression are mathematically sound and powerful tools, the models are simply reflections of the data that is fed in. For example, logistic regression and other algorithms are used to inform a wide range of decisions including whether to provide someone with a loan, the degree of criminal sentencing, or whether to hire an individual for a job. (Do a quick search online for algorithm bias, or check out some of the articles below.) In all of these scenarios, it is again important to remember that the algorithm is simply reflective of the underlying data itself. If an algorithm is trained on a dataset where African Americans have had disproportionate criminal prosecution, the algorithm will continue to perpetuate these racial injustices. Similarly, algorithms trained on data reflecting a gender pay-gap will also continue to promote this bias. With this, substantial thought and analysis regarding problem set up and the resulting model is incredibly important.\u003c/p\u003e\n\n\u003cp\u003eBelow is a handful of resources providing further information regarding some of the topics discussed here.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.propublica.org/article/machine-bias-risk-assessments-in-criminal-sentencing\"\u003eMachine Bias\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.bloomberg.com/opinion/articles/2018-10-16/amazon-s-gender-biased-algorithm-is-not-alone\"\u003eAmazon‚Äôs Gender-Biased Algorithm Is Not Alone\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.bostonglobe.com/business/2017/12/21/the-software-that-runs-our-lives-can-bigoted-and-unfair-but-can-fix/RK4xG4gYxcVNVTIubeC1JI/story.html\"\u003eThe software that runs our lives can be bigoted and unfair. But we can fix it\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.bostonglobe.com/ideas/2017/07/07/why-artificial-intelligence-far-too-human/jvG77QR5xPbpwBL2ApAFAN/story.html\"\u003eWhy artificial intelligence is far too human\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.npr.org/2016/03/14/470427605/can-computers-be-racist-the-human-like-bias-of-algorithms\"\u003eCan Computers Be Racist? The Human-Like Bias Of Algorithms\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eGray Areas and Forward Thinking\u003c/h2\u003e\n\n\u003cp\u003eAside from overtly illegal practices according to current legislation, data privacy and ethics calls into question a myriad of various thought experiments. For example, should IP addresses or cookies be considered PII? How should security camera footage be handled? What about vehicles such as Google street view cars which are capturing video and pictures of public places? Some companies are now even taking pictures of license plates to track car movements. Should they be allowed to maintain massive databases of said information? What regulations should be put on these and other potentially sensitive datasets?  \u003c/p\u003e\n\n\u003cp\u003eAll of these examples question where and when limits should be put on data. Science fiction stories such as 1984, are much more accurate then one might expect. Moreover, injustices and questionable practices still abound. For example, despite public outcry at debacles like Cambridge Analytica, many companies still exist with nearly identical practices such as \u003ca href=\"https://web.archive.org/web/20160305010738/http://applecart.co/\"\u003eApplecart\u003c/a\u003e in New York City, which collects and sells user data to the Republican party, amongst others. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-ethics/master/images/fix-it.png\" width=\"750\"\u003e\u003c/p\u003e\n\n\u003ch2\u003e\u003ca href=\"https://www.eff.org/deeplinks/2019/02/announcing-fix-it-already\"\u003eFix it Already!\u003c/a\u003e\u003c/h2\u003e\n\n\u003cp\u003eIn staying current, you should also identify some news sources to stay up to date on tech trends.\u003cbr\u003e\nOne great resource is the \u003ca href=\"https://www.eff.org/\"\u003eElectronic Frontier Foundation (EFF)\u003c/a\u003e.  \u003c/p\u003e\n\n\u003cp\u003eEFF recently put together an article called Fix it Already, outlining fixable mishaps by technology companies that continue to be ignored. Take a look at the article \u003ca href=\"https://www.eff.org/deeplinks/2019/02/announcing-fix-it-already\"\u003ehere\u003c/a\u003e and get involved to put pressure on these organizations and your representatives to shape up. Here's a quick preview of their list:  \u003c/p\u003e\n\n\u003cp\u003e\u003c/p\u003e\u003cli\u003e\u003cspan\u003eAndroid should let users \u003ca href=\"https://fixitalready.eff.org/android\"\u003edeny and revoke apps' Internet permissions\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eApple should let users \u003ca href=\"https://fixitalready.eff.org/apple\"\u003eencrypt their iCloud backups\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eFacebook should \u003ca href=\"https://fixitalready.eff.org/facebook\"\u003eleave your phone number where you put it\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eSlack should give \u003ca href=\"https://fixitalready.eff.org/slack\"\u003efree workspace administrators control over data retention\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eTwitter should \u003ca href=\"https://fixitalready.eff.org/twitter\"\u003eend-to-end encrypt direct messages\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eVenmo should let users \u003ca href=\"https://fixitalready.eff.org/venmo\"\u003ehide their friends lists\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eVerizon should \u003ca href=\"https://fixitalready.eff.org/verizon\"\u003estop pre-installing spyware on its users‚Äô phones\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eWhatsApp should \u003ca href=\"https://fixitalready.eff.org/whatsapp\"\u003eget your consent before you‚Äôre added to a group\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eWindows 10 should let users \u003ca href=\"https://fixitalready.eff.org/win10\"\u003ekeep their disk encryption keys to themselves\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\n\u003ch2\u003eDisclaimer\u003c/h2\u003e\n\n\u003cp\u003eAs a final note, it should also be noted that the nature of online data can also include offensive or inappropriate data at times. For example, if acquiring data from an API such as Twitter, there is potential to encounter lewd or offensive material. While many of these services will eventually screen out and remove particularly egregious cases, plenty of trolls still exist.\u003c/p\u003e\n\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\n\u003cp\u003eThere's a multitude of resources to get involved with data privacy and ethics, but here's a few to get you started.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.eff.org/\"\u003eElectronic Frontier Foundation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:32016R0679\u0026amp;from=EN\"\u003eGDPR\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.hhs.gov/hipaa/for-professionals/index.html\"\u003eHIPAA\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://datadetox.myshadow.org/en/home\"\u003eData Detox\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you got a preview of some of the many issues regarding data privacy and ethics. From GDPR to being aware of your own data aura, there's plenty to keep you busy and on your toes regarding this fascinating perspective on the data industry.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-data-ethics\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-data-ethics\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-data-ethics/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"data-privacy-and-data-ethics"},{"id":440027,"title":"Quiz: Data Science Basics","type":"Quizzes::Quiz","indent":2,"locked":false,"assignmentExportId":"g96119bdb0262ed9d0485b15baff3b45f","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"min_score","requiredPoints":3.0,"completed":true,"content":"","exportId":"g3fc96605f5d6cc55db8e217edd865729"},{"id":440040,"title":"Data Science Environments Exit Ticket","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"g10caf87cc51921545898a32660183594","questionCount":8,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"","exportId":"g344243053420d69c7ffad8c81e13c8d5"},{"id":440044,"title":"Setting up a Professional Data Science Environment - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-introduction\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-introduction/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you want to become a professional data scientist, it‚Äôs important to take a little time to ‚Äúset yourself up for success‚Äù by installing and learning to use the right tools on your computer.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eList some tools used by professional data scientists, and why they are useful\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eWhat Tools do Professional Data Scientists Use?\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003ePython\u003c/strong\u003e - There are many languages that can be used for data science, but these days most data scientists are using Python to write their code.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eJupyter Notebook\u003c/strong\u003e - Most of those data scientists use Jupyter Notebook for writing their Python code. Jupyter Notebook is a tool that allows you to mix comments in-between your code snippets so you can document and share your thought process and make it easier for others to review, replicate, and expand on your work. It's also what we're using for almost all of our lessons in this course!\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eAnaconda\u003c/strong\u003e - Anaconda is one of the most popular ways for data scientists to install Python and Jupyter on their computers. It also provides package management and virtual environments so you can get all the latest data science tools running, like NumPy, Scikit-Learn, and Tensorflow, and so you can use different versions of Python and your packages for different projects without them conflicting with each other.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eGit\u003c/strong\u003e - Git is a version control system. It‚Äôs a way of keeping track of all the changes made across your project. Think of it like ‚Äútrack changes‚Äù in Word - but with the ability to track changes across multiple documents. At Flatiron School, we use Git to keep track of all of the lessons we create and all the changes we make to them.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eGitHub\u003c/strong\u003e - GitHub is a website where data scientists (and programmers) can save their work in case their computer breaks, and share it with their team or the world! At Flatiron School, we store all of our lessons on GitHub.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIt‚Äôs going to take us a few minutes to get this all installed, but once we do, not only will you be set-up for working through the course, but you‚Äôll also have a professional data science setup on your computer for any future courses or projects you want to work on!\u003c/p\u003e\n\u003ch2\u003eComputer Prerequisites\u003c/h2\u003e\n\u003cp\u003eThere are many amazing computing devices available these days, but not all of them will allow you to do data science. We love smartphones, flip phones, Chromebooks, tablets (including iPads), Game Boys, Nintendo Switches, Rokus and Arduinos. But you‚Äôre not going to be able to complete this course on any of those devices.\u003c/p\u003e\n\u003cp\u003eYou‚Äôre going to need a computer (laptop or desktop). It should be running a recent (last 3-4 years) version of MacOS, Windows or Linux, and ideally, it should have 8Gb of RAM and at least 20Gb free hard drive space. More information \u003ca id=\"32789\" class=\"instructure_file_link instructure_scribd_file\" href=\"viewer/files/ComputerRequirements.pdf?canvas_download=1\u0026amp;canvas_qs_wrap=1\" target=\"_blank\" data-canvas-previewable=\"true\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/files/32789\" data-api-returntype=\"File\"\u003ein this document\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eIn the next few lessons, you'll install and configure some of the primary tools that you'll use as a data scientist!\u003c/p\u003e","exportId":"setting-up-a-professional-data-science-environment-introduction"},{"id":440048,"title":"Setting up a Professional Data Science Environment - MacOS Installation","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-science-env-mac-installation\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-mac-installation\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-mac-installation/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eThere are two major pieces we need to install in order to set you up for success as a professional data scientist! In this lesson, we will be installing Git and Anaconda for MacOS.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eInstall Git\u003c/li\u003e\n\u003cli\u003eInstall Anaconda\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003ePlease note - the exact names and versions will change over time.\u003c/p\u003e\n\u003ch2\u003eInstalling Git\u003c/h2\u003e\n\u003cp\u003eIf you are comfortable with the command line and have installed \u003ca href=\"https://brew.sh/\" target=\"_blank\"\u003e homebrew\u003c/a\u003e, you should install Git by running the command \u003ccode\u003ebrew install git\u003c/code\u003e in a terminal window. If you have no idea what that last sentence meant, please disregard and follow the below steps.\u003c/p\u003e\n\u003ch3\u003eOverview\u003c/h3\u003e\n\u003cp\u003ePlease also reference the image screengrabs for more detail below.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eNavigate to Git's download page for MacOS \u003ca href=\"https://git-scm.com/download/mac\" target=\"_blank\"\u003ehere\u003c/a\u003e. Since you are not using homebrew, you should click on the latest version number under the Binary Installer option\n\u003cul\u003e\n\u003cli\u003eThis should take you to another page, where the download of the installer dmg file should begin automatically after a few seconds\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDouble click on the downloaded dmg file to open a small Finder window\u003c/li\u003e\n\u003cli\u003eDouble click on the .pkg file to run it, and click \"Open\" when the pop-up security warning asks if you are sure you want to open it\n\u003cul\u003e\n\u003cli\u003eIf you get a security warning that simply says the file cannot be opened because it is from an unidentified developer, then:\n\u003cul\u003e\n\u003cli\u003eClick on the Apple symbol at the top left of your screen\u003c/li\u003e\n\u003cli\u003eSelect ‚ÄúSystem Preferences‚Äù from the drop-down menu\u003c/li\u003e\n\u003cli\u003eSelect ‚ÄúSecurity and Privacy‚Äù\u003c/li\u003e\n\u003cli\u003eSelect the ‚ÄúGeneral‚Äù tag\u003c/li\u003e\n\u003cli\u003eBelow the ‚ÄúAllow apps downloaded from‚Äù option, click the \"Open Anyway\" option. You may need to click the lock to make changes, which will prompt you to enter your password\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhen the Installer opens, click \"Continue\" on each screen, then \"Install\"\n\u003cul\u003e\n\u003cli\u003eYou may need to enter your password when prompted\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhen the installation is complete, click the \"Close\" button\n\u003cul\u003e\n\u003cli\u003eIf the installation window asks if you want to move the installer .pkg file to trash, you can click ‚ÄúMove to Trash‚Äù\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4\u003eGit Installation Step-by-Step:\u003c/h4\u003e\n\u003cp\u003e\u003ciframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vQtsPSXRa47q3beYt81S9lchOz5ZC5vrqK324GH1GuGGQXSALFfpBSF_VWVcm8GrQNqvGfjxZeohx5I/embed?start=false\u0026amp;loop=false\u0026amp;delayms=3000\" width=\"960\" height=\"569\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003ch3\u003eConfirming Your Git Installation\u003c/h3\u003e\n\u003cp\u003eTo confirm you have installed Git successfully:\u003c/p\u003e\n\u003cp\u003e1. Open a terminal window\u003c/p\u003e\n\u003cul style=\"list-style-type: circle;\"\u003e\n\u003cli\u003eWhen we ask you to use the terminal, we mean the ‚ÄúTerminal‚Äù app in the ‚ÄúUtilities‚Äù folder within your ‚ÄúApplications‚Äù folder - or, find the \"Terminal\" app in your Launchpad (often found in a subdirectory named \"Other\")\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e2. Type \u003ccode\u003egit --version\u003c/code\u003e: It should return the version of git you are running\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003chr\u003e\n\u003ch2\u003eInstalling Anaconda\u003c/h2\u003e\n\u003cp\u003eThe easiest way to get set up with Python and Jupyter Notebook so you can start coding is to install the Anaconda distribution.\u003c/p\u003e\n\u003ch3\u003eOverview:\u003c/h3\u003e\n\u003cp\u003ePlease also reference the image screengrabs for more detail below.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eDownload the latest version of Anaconda \u003ca href=\"https://www.anaconda.com/products/individual\" target=\"_blank\"\u003ehere\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eOpen the pkg file once it has downloaded to open the Anaconda installer\u003c/li\u003e\n\u003cli\u003eClick \"Continue\" to run the package to determine if the software can be installed\u003c/li\u003e\n\u003cli\u003eWhen the Installation window opens, click \"Continue\"\u003c/li\u003e\n\u003cli\u003eRead the Read Me, then click \"Continue\"\u003c/li\u003e\n\u003cli\u003eAccept the license by clicking \"Continue\", then click \"Agree\" in the pop-up window\u003c/li\u003e\n\u003cli\u003eClick \"Install\" to install the software\n\u003cul\u003e\n\u003cli\u003eYou may need to enter your password when prompted\u003c/li\u003e\n\u003cli\u003eYou can ignore any supplementary materials advertised, such as PyCharm\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClick \"Close\" when the installation was completed successfully\n\u003cul\u003e\n\u003cli\u003eIf the installation window asks if you want to move the installer .pkg file to trash, you can click ‚ÄúMove to Trash‚Äù\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4\u003eAnaconda Installation Step-by-Step:\u003c/h4\u003e\n\u003cp\u003e\u003ciframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vQ5d1LpSJt8OnoANlTfAHZg8ff4zVS22HPV1_98k8bGRQEotl686kSjzqEi_vjhXudMB4ui9i_wBheJ/embed?start=false\u0026amp;loop=false\u0026amp;delayms=3000\" width=\"960\" height=\"569\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003ch3\u003eConfirming Your Anaconda Installation\u003c/h3\u003e\n\u003cp\u003eTo confirm you have installed Anaconda successfully:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eOpen a terminal window\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eType \u003ccode\u003econda info\u003c/code\u003e: It should return a table of details about your conda installation\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2\u003eConfirmation\u003c/h2\u003e\n\u003cp\u003eThis image shows what it should look like when you confirm both your Git and Anaconda installs (although version numbers and details may change):\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-mac-installation/master/images/mac-confirm-install.png\" width=\"500\"\u003e\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eCongratulations! If you've gotten this far and everything has worked, you have successfully installed Git and Anaconda on your Mac!\u003c/p\u003e","exportId":"setting-up-a-professional-data-science-environment-macos-installation"},{"id":440052,"title":"Setting up a Professional Data Science Environment - Windows Installation","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-science-env-windows-installation\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-windows-installation\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-windows-installation/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eThere are two major pieces we need to install in order to set you up for success as a professional data scientist! In this lesson, we will be installing Git and Anaconda for Windows.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eInstall Git\u003c/li\u003e\n\u003cli\u003eInstall Anaconda\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eLet‚Äôs start by getting Git and Anaconda installed.\u003c/p\u003e\n\u003cp\u003ePlease note - the exact names and versions will change over time.\u003c/p\u003e\n\u003ch2\u003eInstalling Git\u003c/h2\u003e\n\u003ch3\u003eOverview:\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eDownload the install package from \u003ca href=\"https://git-scm.com/download/win\" target=\"_blank\"\u003ehere\u003c/a\u003e.\n\u003cul\u003e\n\u003cli\u003eIf you do not know whether you need the 32 or 64-bit install, check your system type. On Windows 10, head to Settings \u0026gt; System \u0026gt; About. Under the Device specifications header, next to System type, you‚Äôll see if Windows and your processor are 32-bit or 64-bit.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOpen the downloaded exe file\n\u003cul\u003e\n\u003cli\u003eYou can either click the downloaded file at the bottom of your browser to open, or navigate to your downloads folder\u003c/li\u003e\n\u003cli\u003eIt may open a window asking if you want to allow this application to make changes to your device, click ‚ÄúYes‚Äù\u003c/li\u003e\n\u003cli\u003eClick ‚ÄúNext‚Äù to accept the license\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSelect the installation desination\n\u003cul\u003e\n\u003cli\u003eThe default option is recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSelect components\n\u003cul\u003e\n\u003cli\u003eMake sure to keep the ‚ÄúWindows Explorer integration‚Äù options checked\u003c/li\u003e\n\u003cli\u003eOtherwise, the default options are recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eChoose a default editor that you are comfortable with, or choose either Nano or Visual Studio Code if you have not used an editor before\n\u003cul\u003e\n\u003cli\u003eIf you know or have used vi/vim, feel free to use it (otherwise it is not recommended)\u003c/li\u003e\n\u003cli\u003eYou must have the editor installed to continue. You can set a default now and change it later.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAdjust the PATH environment\n\u003cul\u003e\n\u003cli\u003eSelect ‚ÄúUse Git from the Windows Command Prompt‚Äù\u003c/li\u003e\n\u003cli\u003eThe first option is also fine, as you‚Äôll mainly be using Git from the new ‚ÄúGit Bash‚Äù program that is being installed, but the second option is ideal as it‚Äôll give you the option of using it through either Git Bash or the Windows Command Prompt in the future if you wish\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eChoose HTTPS transport backend.\n\u003cul\u003e\n\u003cli\u003eSelect the ‚ÄúUse the OpenSSL library‚Äù option\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConfigure line-ending conversions\n\u003cul\u003e\n\u003cli\u003eThe default option is recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConfigure the terminal emulator\n\u003cul\u003e\n\u003cli\u003eSelect MinTTY as the default terminal emulator\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eChoose the default behavior of \u003ccode\u003egit pull\u003c/code\u003e\n\u003cul\u003e\n\u003cli\u003eThe default option is recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConfigure extra options to enable file system caching\u003c/li\u003e\n\u003cli\u003eChoose a credential helper\n\u003cul\u003e\n\u003cli\u003eSelect Git Credential Manager\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWait while Git is installed onto your computer\u003c/li\u003e\n\u003cli\u003eClick \"Finish\" to complete set-up\n\u003cul\u003e\n\u003cli\u003eIt is not necessary to view the release notes\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e* It is \u003cstrong\u003estrongly recommended\u003c/strong\u003e that you select any options to install and use the \"Git Bash\" shell - it's generally included by default. The Git Bash shell will allow students with either Windows or Mac computers to run the same set of commands, and all commands in this program follow that convention.\u003c/p\u003e\n\u003cp\u003eNote - if there are any differences in the options provided in the installer you download, accept the defaults.\u003c/p\u003e\n\u003ch4\u003eGit Installation Step-by-Step:\u003c/h4\u003e\n\u003cp\u003e\u003ciframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vSB09TxDpbxOjud38L2dX0_YJbh2JOVDMYqkTOxhEbhKKLjCmwM9JP27JTJ8VtOYAwnPzlJg_Ipf7gd/embed?start=false\u0026amp;loop=false\u0026amp;delayms=3000\" width=\"960\" height=\"569\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003ch3\u003eConfirming Your Git Installation\u003c/h3\u003e\n\u003cp\u003eTo confirm you have installed Git successfully:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eOpen a terminal window\n\u003cul\u003e\n\u003cli\u003eWhen we ask you to use the terminal, we mean the Git Bash application we just installed through Git\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eType \u003ccode\u003egit --version\u003c/code\u003e: It should return the version of git you are running\u003c/li\u003e\n\u003c/ol\u003e\n\u003chr\u003e\n\u003ch2\u003eInstalling Anaconda\u003c/h2\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-windows-installation/master/images/win_anaconda.png\" width=\"650\"\u003e\u003c/p\u003e\n\u003cp\u003eThe easiest way to get set up with Python and Jupyter Notebook so you can start coding is to install the Anaconda distribution.\u003c/p\u003e\n\u003ch3\u003eOverview:\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eDownload the latest version of Anaconda \u003ca href=\"https://www.anaconda.com/download/#windows\" target=\"_blank\"\u003ehere\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003eSame as with the Git installation - If you do not know whether you need the 32 or 64-bit install, check your system type.\u003c/li\u003e\n\u003cli\u003eA window may pop up asking if you want to give Anaconda your information in return for a cheat sheet - you do not need to do so unless you want to.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOpen the .exe file once it has downloaded to open the Anaconda installer\n\u003cul\u003e\n\u003cli\u003eClick \"Next\", then \"I Agree\" to accept the license\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eInstall for \"Just Me\"\u003c/li\u003e\n\u003cli\u003eSelect the destination folder\n\u003cul\u003e\n\u003cli\u003eThe default option is recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eChoose both Advanced Installation Options\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003eAlthough you will see a warning from the installer, \u003cstrong\u003e\u003cem\u003emake sure\u003c/em\u003e\u003c/strong\u003e to choose \u003cem\u003eboth\u003c/em\u003e \"Add Anaconda to my PATH environment variable\" \u003cem\u003eand\u003c/em\u003e \"Register Anaconda as my default Python\" !!\u003c/li\u003e\n\u003cli\u003eFor this program, these options will actually avoid you needed to uninstall and reinstall Anaconda in the near future, which is what they're warning about\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWait while Anaconda is installed on your computer\n\u003cul\u003e\n\u003cli\u003eYou can ignore any supplementary materials advertised, such as PyCharm\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhen it thanks you for installing Anaconda, click \"Finish\"\n\u003cul\u003e\n\u003cli\u003eYou do not need to learn more about your installation, and can close the browser window if one opens\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4\u003eAnaconda Installation Step-by-Step:\u003c/h4\u003e\n\u003cp\u003e\u003ciframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vS_m9nr642u3w6p3MmgyvnRWHgVRLVA_8EwsW8UDxgbxmMU2cJ04AkQSbBafLqGOJgQveXLzQtBWIas/embed?start=false\u0026amp;loop=false\u0026amp;delayms=3000\" width=\"960\" height=\"569\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003ch3\u003eConfirming Your Anaconda Installation\u003c/h3\u003e\n\u003cp\u003eTo confirm you have installed Anaconda successfully:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eOpen a terminal window\u003c/li\u003e\n\u003cli\u003eType \u003ccode\u003econda info\u003c/code\u003e: It should return a table of details about your conda installation\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eCongratulations! If you've gotten this far and everything has worked, you have successfully installed Git and Anaconda on your Windows PC!\u003c/p\u003e","exportId":"setting-up-a-professional-data-science-environment-windows-installation"},{"id":440054,"title":"Setting up a Professional Data Science Environment - Configuring Git and Anaconda","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-science-env-config\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-config\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-config/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this lesson, you'll continue setting up your professional data science environment by configuring your terminal to work with GitHub, creating an Anaconda virtual environment, setting up your new virtual environment to open by default from your terminal, and confirming your configuration.\u003c/p\u003e  \u003ch2\u003eObjectives\u003c/h2\u003e  \u003cp\u003eYou will be able to:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eUse basic commands to navigate the command line\u003c/li\u003e \u003cli\u003ePractice utilizing Git and GitHub\u003c/li\u003e \u003cli\u003eSummarize why virtual environments are used\u003c/li\u003e \u003cli\u003eSet up a virtual environment\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eConnecting Your Terminal to GitHub\u003c/h2\u003e  \u003cp\u003eNow that you have Git installed locally, you'll be often working back and forth between GitHub, a service which hosts Git repositories online, and your local computer. To better integrate with GitHub, you should set up your name and email address:\u003c/p\u003e  \u003col\u003e \u003cli\u003e\u003cp\u003eIn your terminal window*, type \u003ccode\u003egit config --global user.name\u003c/code\u003e\u003c/p\u003e  \u003cul\u003e \u003cli\u003eIf it returns your name, you‚Äôre set!\u003c/li\u003e \u003cli\u003eIf it returns nothing or displays an error message, type \u003ccode\u003egit config --global user.name ‚ÄúYour Name‚Äù\u003c/code\u003e - replacing Your Name with your name inside the quotes (this should be your real first and last name, not your GitHub username)\u003c/li\u003e \u003c/ul\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eIn your terminal window, type \u003ccode\u003egit config --global user.email\u003c/code\u003e\u003c/p\u003e  \u003cul\u003e \u003cli\u003eIf it returns your email address, you‚Äôre set!\u003c/li\u003e \u003cli\u003eIf it returns nothing or displays an error message, type \u003ccode\u003egit config --global user.email your@email.com\u003c/code\u003e - replacing \u003ca href=\"mailto:your@email.com\"\u003eyour@email.com\u003c/a\u003e with your email address\u003c/li\u003e \u003c/ul\u003e\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003e* Remember, when we say \"terminal\" we mean the Terminal app for Mac, and the Git Bash program for Windows\u003c/p\u003e  \u003ch2\u003eCloning this Repository\u003c/h2\u003e  \u003cp\u003eTo complete the later steps in this configuration process, you‚Äôre going to need to download a copy of the files in this repository, so we should do this now since you already have a terminal window open.\u003c/p\u003e  \u003cp\u003eYou should get in the habit of checking exactly where you are in your Terminal before downloading anything. Use the command \u003ccode\u003epwd\u003c/code\u003e to print your working directory. If you're not in a place you want to download lessons, you should navigate to a place you want to keep your Flatiron repositories and files.\u003c/p\u003e  \u003cp\u003eIf you have not used the command line much or at all, follow the below steps:\u003c/p\u003e  \u003col\u003e \u003cli\u003eOpen a new terminal window\u003c/li\u003e \u003cli\u003eType \u003ccode\u003epwd\u003c/code\u003e - this should show your home directory, the most basic of paths on your computer\u003c/li\u003e \u003cli\u003eType \u003ccode\u003ecd Documents\u003c/code\u003e - this will change your directory, and move you into your Documents folder\u003c/li\u003e \u003cli\u003eType \u003ccode\u003emkdir Flatiron\u003c/code\u003e - this will create a new folder, called Flatiron, to keep all of your Flatiron repositories and files\u003c/li\u003e \u003cli\u003eType \u003ccode\u003ecd Flatiron\u003c/code\u003e - this will change your directory, moving you into the new Flatiron folder you just created\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003eMacOS Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-make-flatiron-directory.png\" width=\"450\"\u003e\u003c/p\u003e  \u003cp\u003eWindows Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/windows_create_dir.png\" width=\"450\"\u003e\u003c/p\u003e  \u003cblockquote\u003e \u003ch2\u003eImportant Note\u003c/h2\u003e  \u003cp\u003eYou should \u003cstrong\u003eNEVER\u003c/strong\u003e clone a Git repository into another Git repository!\u003c/p\u003e  \u003cp\u003eYou can always check if you are currently in a Git repository by running \u003ccode\u003egit status\u003c/code\u003e. If you get an error that says \"\u003ccode\u003efatal: not a git repository (or any of the parent directories): .git\u003c/code\u003e\", then you are not in a Git repository.\u003c/p\u003e \u003c/blockquote\u003e  \u003cp\u003eOnce you are in a good place to download files from GitHub, like a general folder to keep all of your Flatiron repositories and files, type (or better still, copy and paste) \u003ccode\u003egit clone https://github.com/learn-co-curriculum/dsc-data-science-env-config.git\u003c/code\u003e\u003c/p\u003e  \u003cp\u003e\u003cem\u003eIn Windows, in Git Bash, to paste from the clipboard the shortcut should be \u003cstrong\u003eshift-insert\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e  \u003cp\u003eThis will create a new subdirectory whose name is \"dsc-data-science-env-config\" which will contain a copy of all of the files in this repository!\u003c/p\u003e  \u003cp\u003eMove into that directory using the \u003ccode\u003ecd\u003c/code\u003e, or change directory, command (after typing \u003ccode\u003ecd dsc\u003c/code\u003e you should be able to hit the \u003cstrong\u003etab\u003c/strong\u003e key to \"tab complete\" so you don't need to type the whole directory name).\u003c/p\u003e  \u003cp\u003eNow, if you run \u003ccode\u003epwd\u003c/code\u003e to print your working directory again, you should be inside the folder we just cloned down from that GitHub link!\u003c/p\u003e  \u003cp\u003eMacOS Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-git-clone.png\" width=\"650\"\u003e\u003c/p\u003e  \u003cp\u003eWindows Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/win_git_clone.png\" width=\"650\"\u003e\u003c/p\u003e  \u003ch2\u003eSetting Up Virtual Environments\u003c/h2\u003e  \u003cp\u003eAs you do data science projects, you will spend a lot of your time using pre-written libraries to speed up your development - like numpy, pandas, or scikit-learn. As you work on different projects, you may also find that you use different versions of different libraries for different projects. The most common versioning issue is that some projects will run in Python 2 whereas others will run in Python 3, but you may also find that different projects depend on different versions of libraries like Tensorflow.\u003c/p\u003e  \u003cp\u003eOccasionally, code that works in an old version of a library won‚Äôt work in a newer version. So if you open up a new project and install the dependencies, it‚Äôs possible that your old project won‚Äôt work anymore.\u003c/p\u003e  \u003cp\u003eTo avoid that problem, a best practice is to use ‚Äúvirtual environments‚Äù. Virtual environments allow you to have different versions of Python and different versions of the various libraries you use, so you can install a new version of a library for one project but still use the old version for another project. It‚Äôs almost as if you have multiple computers that you can swap between, each having a different setup and configuration, just by running a couple of commands.\u003c/p\u003e  \u003cp\u003eThere is a built-in virtual environment feature in Python, but we‚Äôre going to use the more flexible virtual environments provided by Conda as part of the Anaconda distribution you installed.\u003c/p\u003e  \u003cp\u003eTo use a new virtual environment, there are two steps you need to complete. The first step is to create the virtual environment. That may take a couple of minutes as your computer has to download the necessary version of Python and all of the libraries that you want to be able to use in that environment. The next step then is to ‚Äúuse‚Äù the virtual environment by activating it.\u003c/p\u003e  \u003cp\u003eIf you want to learn more about Conda environments, have a look at the \u003ca href=\"https://conda.io/docs/user-guide/tasks/manage-environments.html\" target=\"_blank\"\u003edocumentation\u003c/a\u003e, otherwise, let‚Äôs give this a try.\u003c/p\u003e  \u003ch3\u003eCreating the Conda Virtual Environment\u003c/h3\u003e  \u003cp\u003eYou need to start by navigating into this project folder. If you run \u003ccode\u003epwd\u003c/code\u003e to print your working directory in your terminal, you should be inside the folder we cloned down. If the name of the current working directory is not \"dsc-data-science-env-config\", then you need to move into that folder - follow the steps above.\u003c/p\u003e  \u003cp\u003eThe instructions to create the environment are slightly different for MacOS and Windows, because they need to use different environment files, so make sure you follow the instructions relevant to your operating system.\u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eMacOS\u003c/strong\u003e: run \u003ccode\u003econda env create -f mac_environment.yml\u003c/code\u003e\u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eWindows\u003c/strong\u003e: run \u003ccode\u003econda env create -f win_environment.yml\u003c/code\u003e\u003c/p\u003e  \u003cp\u003eDepending on the speed of your computer and your internet connection it may take up to twenty minutes for this to complete. While it does you should see output similar to that displayed below start to appear in your terminal.\u003c/p\u003e  \u003cp\u003eMacOS Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-env-create-from-yml.png\" width=\"450\"\u003e\u003c/p\u003e  \u003cp\u003eWindows Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/win_env_create.PNG\" width=\"450\"\u003e\u003c/p\u003e  \u003ch3\u003eActivating the Conda Virtual Environment\u003c/h3\u003e  \u003cp\u003eNext, try activating the environment. Type \u003ccode\u003econda activate learn-env\u003c/code\u003e.\u003c/p\u003e  \u003cp\u003eTo confirm that it worked, type \u003ccode\u003econda info --envs\u003c/code\u003e and confirm that the asterisk (*) is next to the learn-env environment.\u003c/p\u003e  \u003cp\u003eMacOS Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-conda-info-envs.png\" width=\"450\"\u003e\u003c/p\u003e  \u003cp\u003eWindowsWindows Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/win_env_check.PNG\" width=\"450\"\u003e\u003c/p\u003e  \u003ch2\u003eTroubleshooting\u003c/h2\u003e  \u003cp\u003eif you see a message that states ‚ÄúWARNING: A newer version of Conda exists‚Äù, run \u003ccode\u003econda update -n base conda\u003c/code\u003e and then try again to create the environment.\u003c/p\u003e  \u003cp\u003eIf you see a message that states \"file not found\", double check that you are running this command from the directory that contains the .yml file. If you type \u003ccode\u003els\u003c/code\u003e you should see the environment.yml file. If you don't see it, you likely forgot to run \u003ccode\u003ecd dsc-data-science-env-config\u003c/code\u003e to change into the right directory.\u003c/p\u003e  \u003ch2\u003eSetting your Default Environment\u003c/h2\u003e  \u003cp\u003eYou have successfully created your virtual environment! But, to be sure that you are using the learn-env, it's helpful to set it as your default environment so that you don't need to remember to manually switch to it every time you open the terminal. This step is \u003cstrong\u003ehighly recommended\u003c/strong\u003e but not required.\u003c/p\u003e  \u003ch3\u003eMac\u003c/h3\u003e  \u003cp\u003eOn a Mac, we need to first see what shell you're running in your terminal. Run \u003ccode\u003eecho $SHELL\u003c/code\u003e.\u003c/p\u003e  \u003cp\u003eIf the response ends in \u003ccode\u003ebash\u003c/code\u003e:\u003c/p\u003e  \u003cul\u003e \u003cli\u003erun \u003ccode\u003eecho \"conda activate learn-env\" \u0026gt;\u0026gt; ~/.bash_profile\u003c/code\u003e to add the configuration to your bash profile\u003c/li\u003e \u003cli\u003erun \u003ccode\u003esource ~/.bash_profile\u003c/code\u003e to activate the changes you just made\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-bash-set-default-env.png\" width=\"450\"\u003e\u003c/p\u003e  \u003cblockquote\u003e \u003cp\u003e(Don't forget to run \u003ccode\u003esource ~/.bash_profile\u003c/code\u003e like the Test Student in the screen capture!)\u003c/p\u003e \u003c/blockquote\u003e  \u003cp\u003eIf the response ends in \u003ccode\u003ezsh\u003c/code\u003e:\u003c/p\u003e  \u003cul\u003e \u003cli\u003erun \u003ccode\u003eecho \"conda activate learn-env\" \u0026gt;\u0026gt; ~/.zshrc\u003c/code\u003e to add the configuration to your bash profile\u003c/li\u003e \u003cli\u003erun \u003ccode\u003esource ~/.zshrc\u003c/code\u003e to activate the changes you just made\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-zsh-set-default-env.png\" width=\"450\"\u003e\u003c/p\u003e  \u003ch3\u003eWindows\u003c/h3\u003e  \u003cp\u003eTo follow these instructions on a Windows machine you must be using the Git Bash shell it was suggested to install above.\u003c/p\u003e  \u003col\u003e \u003cli\u003eRun \u003ccode\u003etouch ~/.bash_profile\u003c/code\u003e to create a new file.\u003c/li\u003e \u003cli\u003eRun \u003ccode\u003eecho \"conda activate learn-env\" \u0026gt;\u0026gt; ~/.bash_profile\u003c/code\u003e to add the configuration to your bash profile\u003c/li\u003e \u003cli\u003eRun \u003ccode\u003esource ~/.bash_profile\u003c/code\u003e to activate the changes you just made\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/win_default_env.PNG\" width=\"450\"\u003e\u003c/p\u003e  \u003ch2\u003eUpdating your Virtual Environment\u003c/h2\u003e  \u003cp\u003e\u003cimg src=\"https://imgs.xkcd.com/comics/python_environment_2x.png\" alt=\"xkcd comic about python environments\" width=\"500\"\u003e\u003c/p\u003e  \u003cp\u003ePython packages are constantly updating and changing, and switching between environments, updating or installing new packages, and troubleshooting environment issues will are all necessary skills for when you're a fully-fledged professional data scientist.\u003c/p\u003e  \u003cp\u003eIn general, because we are using Anaconda as our package manager, it is preferable to update or install new packages using \u003ccode\u003econda\u003c/code\u003e options instead of \u003ccode\u003epip\u003c/code\u003e.\u003c/p\u003e  \u003cp\u003eIf you are ever concerned about conflicting package versions, just remember that creating a new conda environment is as easy as \u003ccode\u003econda create --name new-env\u003c/code\u003e - and it is very normal to have different environments with different packages for different purposes. Just remember that you've likely just set up learn-env to activate by default, so you'll need to either change that or activate other environments manually when needed.\u003c/p\u003e  \u003ch2\u003eConfiguring your Kernel and Confirming your Configuration\u003c/h2\u003e  \u003cp\u003eJupyter Notebooks run \"kernels\" - the computational engine used for executing your code. It's important to be running the right kernel within your notebook, otherwise you may get errors stating that you don't have a particular package or have the wrong version of it or even complaints about the version of Python you're running (some packages don't support Python 3.8, for example).\u003c/p\u003e  \u003cp\u003eRight now, let's check that everything is running properly. In your terminal, run \u003ccode\u003ejupyter notebook\u003c/code\u003e. This should prompt a new browser window to open, at an address that is something like \"localhost:8888\". \u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/jupyter-home-dir.png\" width=\"650\"\u003e\u003c/p\u003e  \u003cp\u003eWe'll talk a lot more about Jupyter Notebooks later on in the course, because you'll use them quite a lot! For now, we want to check not only that the terminal shortcut you just used to open a Jupyter Notebook worked, but also that you are running your learn-env kernel in your notebook.\u003c/p\u003e  \u003cp\u003eYou should be able to see learn-env as an option in two places:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eWhen you create a new Jupyter Notebook, by clicking \"New\" on the right-hand side\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/check-kernel1.png\" width=\"650\"\u003e\u003c/p\u003e  \u003cul\u003e \u003cli\u003eOnce you're in a notebook or create a new one, by checking the options under \"Kernel\" in the top menu bar\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/check-kernel2.png\" width=\"650\"\u003e\u003c/p\u003e  \u003cp\u003eIf you don't see the learn-env option in those two places:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eClose the notebook in the browser\u003c/li\u003e \u003cli\u003eClose down the notebook server from the terminal  \u003cul\u003e \u003cli\u003e(run \u003ccode\u003ectrl\u003c/code\u003e + \u003ccode\u003ec\u003c/code\u003e and then type \u003ccode\u003ey\u003c/code\u003e to confirm that you want to close down jupyter)\u003c/li\u003e \u003c/ul\u003e\u003c/li\u003e \u003cli\u003eIn the terminal, enter \u003c/li\u003e \u003c/ul\u003e \u003cpre\u003e\u003ccode\u003econda activate learn-env\u003cbr\u003epython -m ipykernel install --user --name learn-env --display-name \"Python (learn-env)\" \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eThat will add the learn-env to your list of kernels. When you restart the Jupyter Notebook server and try again, you'll be able to select the learn-env option in those two places above.\u003c/p\u003e  \u003cp\u003eIt will be essential to run \u003ccode\u003econda activate learn-env\u003c/code\u003e every time you start a new terminal window if you do not set your terminal to activate that environment by default. If you don't do this you \u003cstrong\u003ewill\u003c/strong\u003e get errors, so please check this first. You can always run \u003ccode\u003econda info --envs\u003c/code\u003e to see which environment is selected - and, if you run the above steps to set the learn-env to open by default, you won't need to remember to activate every time you open your terminal.\u003c/p\u003e  \u003ch2\u003eSummary\u003c/h2\u003e  \u003cp\u003eCongratulations! That was a lot! If you've gotten this far and everything has worked, you have successfully set up your computer with some of the primary tools you need to work as a professional data scientist!\u003c/p\u003e","exportId":"setting-up-a-professional-data-science-environment-configuring-git-and-anaconda"},{"id":440059,"title":"Running Jupyter Notebooks Locally","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-running-jupyter-locally\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-running-jupyter-locally\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-running-jupyter-locally/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this lesson you will practice the workflow you will be using when you want to work \u003cem\u003elocally\u003c/em\u003e instead of in IllumiDesk on Canvas, and also get some hands-on practice with important tools that you will need to be familiar with as a professional Data Scientist: the command line, git, GitHub, and running Jupyter Notebooks locally.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse basic commands to navigate the command line\u003c/li\u003e\n\u003cli\u003eUse bash commands to create new files and folders\u003c/li\u003e\n\u003cli\u003eUse git clone to clone a repository\u003c/li\u003e\n\u003cli\u003eWork on your labs locally\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSetting the Stage\u003c/h2\u003e\n\u003cp\u003eRemember how \u003cstrong\u003eCode Lessons\u003c/strong\u003e and \u003cstrong\u003eLabs\u003c/strong\u003e on Canvas use Illumidesk (by clicking the grey button below) to open notebooks and start coding?\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-running-jupyter-locally/master/images/illumidesk_4.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003cp\u003eWhen you're a professional Data Scientist, you won't have access to Illumidesk, but you'll need to get everything up and running to work on your local machine. Luckily, you've already set up a professional data science environment, and in this lesson you'll learn how to actually run your code on your local machine instead of through Illumidesk!\u003c/p\u003e\n\u003ch2\u003eThe Command Line\u003c/h2\u003e\n\u003cp\u003eIn order to be able to work locally, we first need to tell you a tiny bit about command line. On Mac computers, this is the terminal application. On Windows computers, we'll use \"Git Bash\". The command line serves as a low-level interpreter through which you, the user, can send commands directly to the computer. As a computer user, you previously have probably sent commands to the computer through a graphical user interface (GUI) such as a web browser, text editor, photo editor, or any other of the myriad of computer programs now in existence. While the command line is initially daunting with its cryptic looking text, we will quickly see some of the many advantages it can have.\u003c/p\u003e\n\u003cp\u003eOne of the many useful features of the command line will be using \u003cem\u003egit\u003c/em\u003e to clone (download) a local copy of the curriculum hosted on Canvas. This will allow you to work offline and to save changes as you work through exercises and start programming!\u003c/p\u003e\n\u003cp\u003eTo start, \u003cstrong\u003efor Mac users, open the terminal application\u003c/strong\u003e, \u003cstrong\u003efor Windows, open ‚ÄúGit Bash‚Äù\u003c/strong\u003e.\u003c/p\u003e\n\u003ch3\u003epwd\u003c/h3\u003e\n\u003cp\u003eThe first command to try out is \u003cstrong\u003epwd\u003c/strong\u003e which stands for \u003cstrong\u003eprint working directory\u003c/strong\u003e. This will tell you where you currently are in the computer's directory structure. Try it out.\u003c/p\u003e\n\u003ch3\u003ecd\u003c/h3\u003e\n\u003cp\u003eThe next essential command is \u003cstrong\u003ecd\u003c/strong\u003e which stands for \u003cstrong\u003echange directory\u003c/strong\u003e. This allows you to navigate to different folders on your computer's hard drive. Typing \u003ccode\u003ecd\u003c/code\u003e by itself (or \u003ccode\u003ecd ~\u003c/code\u003e) will automatically take you to your home directory. Typing \u003ccode\u003ecd\u003c/code\u003e and a folder name will take you to that folder. Typing \u003ccode\u003ecd ..\u003c/code\u003e will move you one folder up in the hierarchy. Play around and trying moving between folders for a minute or two.\u003c/p\u003e\n\u003ch3\u003eTab Completion\u003c/h3\u003e\n\u003cp\u003eAn extraordinarly useful feature when working with the command line is tab completion. This allows you to hit the tab button to autocomplete names once you have made a unique specification.\u003c/p\u003e\n\u003cp\u003eFor example, if you navigate to your root directory by running the command \u003ccode\u003ecd\u003c/code\u003e, if you're on a Mac, you will probably have 2 folders within your root directory named \"Downloads\" and \"Documents\" (these are standard folder names created by default in most systems, although you may have renamed them, or your system may be different). With these, or longer folder names, it can sometimes become cumbersome to type the full folder name. instead, you can start typing the command and folder name such as \u003ccode\u003ecd Dow\u003c/code\u003e and then press \u003cstrong\u003etab\u003c/strong\u003e to autocomplete. Like magic, the command line should complete the statement correctly to be \u003ccode\u003ecd Downloads\u003c/code\u003e. (Note: this will not work if you have another folder that begins with \"Dow\". Similarly, if you just typed \u003ccode\u003ecd D\u003c/code\u003e or \u003ccode\u003ecd Do\u003c/code\u003e followed by \u003cstrong\u003etab\u003c/strong\u003e, the command line will not autocomplete, as the selection is not unique, because \u003cstrong\u003eD\u003c/strong\u003e or \u003cstrong\u003eDo\u003c/strong\u003e could both refer to either \u003cstrong\u003eDocuments\u003c/strong\u003e or \u003cstrong\u003eDownloads\u003c/strong\u003e. Also note that these commands are case sensitive, and folder capitalization much be matched exactly.\u003c/p\u003e\n\u003ch3\u003els\u003c/h3\u003e\n\u003cp\u003eContinuing with navigating the computer's hard drive, it's useful to know how to \u003cstrong\u003elist files\u003c/strong\u003e. This is done with the \u003ccode\u003els\u003c/code\u003e command, short for list.\u003c/p\u003e\n\u003cp\u003eYou can also pass optional parameters to \u003ccode\u003els\u003c/code\u003e such as \u003ccode\u003els -a\u003c/code\u003e which lists \u003cstrong\u003eall files\u003c/strong\u003e (including hidden files), \u003ccode\u003els -l\u003c/code\u003e gives a \u003cstrong\u003elong listing\u003c/strong\u003e of files (including file size and last edit times). You can also pass multiple parameters simultaneously, such as \u003ccode\u003els -al\u003c/code\u003e to produce a detailed listing of all files.\u003c/p\u003e\n\u003ch3\u003e* the wildcard parameter\u003c/h3\u003e\n\u003cp\u003eAlso very useful is the wildcard parameter. For example, if you wanted to list all files in the current working directory that begin with a, you could type \u003ccode\u003els a*\u003c/code\u003e. Here, the asterix (\u003ccode\u003e*\u003c/code\u003e) denotes anything is allowed following the a. Similarly, to list all pdf files in the current working directory you can use \u003ccode\u003els *.pdf\u003c/code\u003e, or to list all text files, you can use \u003ccode\u003els *.txt\u003c/code\u003e.\u003c/p\u003e\n\u003ch3\u003emkdir\u003c/h3\u003e\n\u003cp\u003eFinally, as you continue to navigate the file directory from the command line it can be useful to be able to create new folders. To do this, use the \u003ccode\u003emkdir\u003c/code\u003e command, which stands for \u003cstrong\u003emake directory\u003c/strong\u003e. Try it out with \u003ccode\u003emkdir NewFolderName\u003c/code\u003e. Afterward, use the \u003ccode\u003els\u003c/code\u003e command to see that there is indeed a new folder, and if you wish, move into the new folder using the \u003ccode\u003ecd\u003c/code\u003e command.\u003c/p\u003e\n\u003ch2\u003eCloning GitHub repositories and Canvas lessons\u003c/h2\u003e\n\u003cp\u003eYou have already read a little bit about GitHub and how it's used to share code. Since you can now navigate the file directory using the command line, you're ready to download some course materials from GitHub to your local environment. In practice, you will do the following:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eFork\u003c/strong\u003e the course material repository: Forking is the process of making a personal copy of the Canvas course materials on your own GitHub account.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eClone\u003c/strong\u003e the forked course material repository: Cloning is the process of downloading a repository from Github onto your personal computer.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eDon't worry if this process seems a little confusing. It will be explained in more detail soon. For now, you can just follow the steps below:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a folder on your computer for your course materials and navigate into it\u003cbr\u003e\n\u003cul\u003e\n\u003cli\u003eYou may also want to create a subfolder titled \"phase_1\" and navigate into that\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eReturn to your web browser and navigate to the lesson you want to download\u003c/li\u003e\n\u003cli\u003eClick the GitHub icon\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-running-jupyter-locally/master/images/illumidesk_3.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003cp\u003eYou'll be redirected to the associated GitHub repository.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eClick the fork button\u003c/strong\u003e, as shown, in order to create a copy to your personal account which you can edit and update\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-running-jupyter-locally/master/images/before-fork.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003cp\u003eOne of two things will happen. Either it'll pop up a modal (window) and if you scroll to the bottom of it you'll see it says that you already have a fork. If that's the case, just click on the link to view your existing fork.\u003c/p\u003e\n\u003cp\u003eIf you don't already have a fork, you'll be redirected to your new personal copy of the repository:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-running-jupyter-locally/master/images/after-fork.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003ch2\u003eFinally\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ePress \u003cstrong\u003ecmd + L\u003c/strong\u003e to highlight the url bar and \u003cstrong\u003ecmd + c\u003c/strong\u003e to copy the url (whenever we use \u003cstrong\u003ecmd\u003c/strong\u003e to refer to holding down the command key on a Mac computer, on a Windows computer, hold down the control key instead)\u003c/li\u003e\n\u003cli\u003eReturn to the terminal (you should be in your course materials folder or your \"phase_1\" subfolder)\u003c/li\u003e\n\u003cli\u003eType: \u003ccode\u003egit clone\u003c/code\u003e and paste your repo url (\u003cstrong\u003ecmd + v\u003c/strong\u003e for Mac; for Windows, in git bash, \u003cstrong\u003eshift + insert\u003c/strong\u003e)\u003c/li\u003e\n\u003cli\u003eEt Voila! The repository and all of its contents will be downloaded locally to your computer!\u003c/li\u003e\n\u003cli\u003eRemember that you need to \u003ccode\u003ecd\u003c/code\u003e into the new repository once you've downloaded it\u003c/li\u003e\n\u003cli\u003eThe next step is to open your Jupyter Notebook locally (\u003cstrong\u003enot on Canvas/Illumidesk\u003c/strong\u003e) using the command line\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eStarting the Jupyter Notebook\u003c/h2\u003e\n\u003cp\u003eMake sure to activate your conda virtual environment in your terminal first by typing \u003ccode\u003esource activate learn-env\u003c/code\u003e. Then type \u003ccode\u003ejupyter notebook\u003c/code\u003e in your command line and press enter. Next, your default browser will open a new window or tab and you will see the list of files that are in your current directory (\u003cem\u003eremember you want to be in the GitHub repo directory that we just downloaded\u003c/em\u003e).\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e To stop a Jupyter Notebook, go to your command line where the notebook is running and press the \u003cstrong\u003econtrol\u003c/strong\u003e key + the letter \u003cstrong\u003ec\u003c/strong\u003e (\u003ccode\u003ectrl\u003c/code\u003e+\u003ccode\u003ec\u003c/code\u003e).\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThen click on the \u003ccode\u003eindex.ipynb\u003c/code\u003e file which is the Jupyter Notebook we will be using in this and future labs and lessons. This will open a new tab where you will see the same content you saw in IllumiDesk on Canvas!\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eIn this lesson, you learned about the command line, cloning GitHub repositorites, and how to work with Jupyter notebooks locally. In the next lab, you'll put what you learned into practice!\u003c/p\u003e","exportId":"running-jupyter-notebooks-locally"},{"id":440062,"title":"Running Jupyter Notebooks Locally - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":null,"graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-running-jupyter-locally-lab\" target=\"_blank\"\u003e \u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e \u003c/a\u003e \u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-running-jupyter-locally-lab/issues/new\" target=\"_blank\"\u003e \u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e \u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eFollow the directions from the previous lesson to open this notebook on your local computer!\u003c/p\u003e\n\u003cp\u003eStart by clicking the \u003cimg src=\"viewer/files/Uploaded%20Media/GitHub-Mark-32px.png\" alt=\"Github logo\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/files/1513121\" data-api-returntype=\"File\"\u003e\u0026nbsp;button above, to view the repository content on GitHub.\u003c/p\u003e","exportId":"g2079b79db5f5e3608e7b2979d6657035"},{"id":440066,"title":"Quiz: Professional Data Science Environment","type":"Quizzes::Quiz","indent":2,"locked":false,"assignmentExportId":"gc2b464d5b246d34c9bb22b4af9dd68d9","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"min_score","requiredPoints":3.0,"completed":true,"content":"","exportId":"ga453b697c32536aa3d4b985a1dce583b"},{"id":440070,"title":"Getting Started with Data Science - Recap","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-introduction-v2-2-recap\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-v2-2-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-v2-2-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this section, you learned about the data science process and set up a professional data science environment on your computer.\u003c/p\u003e  \u003ch2\u003eKey Takeaways\u003c/h2\u003e  \u003cul\u003e \u003cli\u003eThere is a lot to learn about data science, but most of the models involved do one of the following things:  \u003cul\u003e \u003cli\u003ePredicting a continuous value (regression)\u003c/li\u003e \u003cli\u003ePredicting a category (classification)\u003c/li\u003e \u003cli\u003eIdentifying unusual data (anomaly detection)\u003c/li\u003e \u003cli\u003eGenerating recommendations\u003c/li\u003e \u003c/ul\u003e\u003c/li\u003e \u003cli\u003eData science is not just about selecting and tuning machine learning models. Much of the value comes from understanding the business needs and formulating the problem thoughtfully. And most of the effort is in the early stages of finding, cleaning, exploring, and simplifying the data so it's ready to be run against your models.\u003c/li\u003e \u003cli\u003eIt's important to use professional tools.  \u003cul\u003e \u003cli\u003eJupyter Notebook is a great environment for combining your notes and your code\u003c/li\u003e \u003cli\u003eGit allows you to keep track of your changes\u003c/li\u003e \u003cli\u003eGitHub allows you to share your changes with your team\u003c/li\u003e \u003cli\u003eConda virtual environments ensure that the libraries you use for one project won't break another project you were working on\u003c/li\u003e \u003c/ul\u003e\u003c/li\u003e \u003c/ul\u003e","exportId":"getting-started-with-data-science-recap"}]},{"id":45638,"name":"Topic 2: Bash and Git","status":"started","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"gd00f7473182381bf5d3bf2ec0358096f","items":[{"id":440081,"title":"Topic 2 Lesson Priorities (Live)","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cp\u003eFor a reminder of how to use these lesson priorities, see \u003ca title=\"How to Use Lesson Priorities (Live)\" href=\"pages/how-to-use-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/how-to-use-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eHow to Use Lesson Priorities (Live)\u003c/a\u003e\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 98.314%; height: 121px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete Before \u003cem\u003eBash and Git Introduction\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 48.7333%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 6.93321%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"Bash and Git - Introduction\" href=\"pages/bash-and-git-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/bash-and-git-introduction\" data-api-returntype=\"Page\"\u003e\u003cstrong\u003eBash and Git - Introduction\u003c/strong\u003e\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"The Bash Shell\" href=\"pages/the-bash-shell\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/the-bash-shell\" data-api-returntype=\"Page\"\u003eThe Bash Shell\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"Git Version Control 101\" href=\"pages/git-version-control-101\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/git-version-control-101\" data-api-returntype=\"Page\"\u003e\u003cstrong\u003eGit Version Control 101\u003c/strong\u003e\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 98.1264%; height: 151px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eBash and Git Introduction\u003c/em\u003e Lecture, Before \u003cem\u003eGit Fundamentals\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 48.7333%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 6.93321%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"Short Video: Bash\" href=\"pages/short-video-bash?module_item_id=g411555d6048aff1f39a29289e31619ad\" data-api-endpoint=\"pages/short-video-bash?module_item_id=mastercourse_15802_379_4a14f5d3091e90d2d58f0fe6878ad9e7\" data-api-returntype=\"Page\"\u003eShort Video: Bash\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 48.7333%;\"\u003e\u003cstrong\u003e\u003ca title=\"Bash Exit Ticket\" href=\"quizzes/g45e2eb98ac8f48b70905148b24529dd9\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30562\" data-api-returntype=\"Quiz\"\u003eBash Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"Getting Started with Git\" href=\"pages/getting-started-with-git\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/getting-started-with-git\" data-api-returntype=\"Page\"\u003eGetting Started with Git\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e3rd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"Git Practice\" href=\"pages/git-practice\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/git-practice\" data-api-returntype=\"Page\"\u003eGit Practice\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 48.7333%;\"\u003e\u003ca title=\".gitignore\" href=\"pages/dot-gitignore\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/dot-gitignore\" data-api-returntype=\"Page\"\u003e.gitignore\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 48.7333%;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: Bash and Git Fundamentals\" href=\"quizzes/gdf1958170fb1be12193296399ab484d2\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30554\" data-api-returntype=\"Quiz\"\u003eQuiz: Bash and Git Fundamentals\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 98.3134%; height: 184px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eGit Fundamentals\u003c/em\u003e Lecture, Before \u003cem\u003eGit Collaboration\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 48.7333%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 6.93321%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 48.7333%;\"\u003e\u003cstrong\u003e\u003ca title=\"Git Exit Ticket\" href=\"quizzes/g0676d1cd424d2d148b28d57bbe490338\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30552\" data-api-returntype=\"Quiz\"\u003eGit Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"Collaborating with Git Branches\" href=\"pages/collaborating-with-git-branches\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/collaborating-with-git-branches\" data-api-returntype=\"Page\"\u003eCollaborating with Git Branches\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"Git Merge - Lab\" href=\"pages/git-merge-lab\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/git-merge-lab\" data-api-returntype=\"Page\"\u003eGit Merge - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"Git Stash - Lab\" href=\"pages/git-stash-lab\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/git-stash-lab\" data-api-returntype=\"Page\"\u003eGit Stash - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"Git Resources\" href=\"pages/git-resources\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/git-resources\" data-api-returntype=\"Page\"\u003eGit Resources\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e3rd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 48.7333%;\"\u003e\u003ca title=\"Quiz: Git Collaboration\" href=\"quizzes/gc063a86905e9f4ca9cd5caec4b8601e3\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30583\" data-api-returntype=\"Quiz\"\u003eQuiz: Git Collaboration\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 98.7812%; height: 88px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eGit Collaboration\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 48.7333%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 6.93321%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 48.7333%;\"\u003e\u003cstrong\u003e\u003ca title=\"Collaborating with Git Exit Ticket\" href=\"quizzes/g27426852f823c095338dad1cd46aa373\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30564\" data-api-returntype=\"Quiz\"\u003eCollaborating with Git Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"Bash and Git - Recap\" href=\"pages/bash-and-git-recap\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/bash-and-git-recap\" data-api-returntype=\"Page\"\u003eBash and Git - Recap\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003c/table\u003e","exportId":"topic-2-lesson-priorities-live"},{"id":440085,"title":"Bash and Git - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-bash-collab-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-bash-collab-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you'll learn about Bash command line and Git. You've seen a bit of this from our first section in which you took a look at how to clone a GitHub repository. Now, we'll further investigate how to navigate the command line and use more powerful Git techniques. \u003c/p\u003e\n\n\u003ch2\u003eBash and the command line\u003c/h2\u003e\n\n\u003cp\u003eThe command line or shell is the preliminary interface where users can interact with the operating system. Before applications, windows, and graphical user interfaces, all interaction with the computer was facilitated through the command line. Of these command line shells, bash now comes preinstalled in every mac and many other unix based systems.\u003c/p\u003e\n\n\u003ch3\u003eNavigating directories\u003c/h3\u003e\n\n\u003cp\u003eThe preliminary fundamental techniques you'll practice in this section are changing directories using the \u003ccode\u003ecd\u003c/code\u003e command, making directories with the \u003ccode\u003emkdir\u003c/code\u003e command, and checking where you are using the print working directory, \u003ccode\u003epwd\u003c/code\u003e command. In addition, you'll also take a look at how to create and edit files from the command line using the \u003ccode\u003enano\u003c/code\u003e command.\u003c/p\u003e\n\n\u003ch2\u003eGit\u003c/h2\u003e\n\n\u003cp\u003eYou've previously seen how to fork and clone git repositories from GitHub. Git is a version control system that is used by developers all over the world for collaboration. Git is the technology underlying the GitHub platform, a cloud service provider, of which there are many. \u003c/p\u003e\n\n\u003ch3\u003eGit commands\u003c/h3\u003e\n\n\u003cp\u003eIn this section, you'll take a look at several Git commands including \u003ccode\u003egit add\u003c/code\u003e, \u003ccode\u003egit commit\u003c/code\u003e, \u003ccode\u003egit push\u003c/code\u003e, \u003ccode\u003egit merge\u003c/code\u003e, \u003ccode\u003egit branch\u003c/code\u003e, \u003ccode\u003egit checkout\u003c/code\u003e, \u003ccode\u003egit status\u003c/code\u003e, \u003ccode\u003egit stash\u003c/code\u003e, and \u003ccode\u003egit log\u003c/code\u003e. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you'll take a look at Git and Bash! Get ready to have the preliminary tools that almost all developers consider to be their foundation!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-git-bash-collab-intro\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-git-bash-collab-intro\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-bash-collab-intro/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"bash-and-git-introduction"},{"id":440089,"title":"The Bash Shell","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-bash-shell\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-bash-shell/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWhen conducting Data Science (or programming in general), it‚Äôs helpful to get oriented with the command line, or bash shell. On mac computers, this is the terminal application. You've actually already seen some of this when working through how to download lessons from Learn and GitHub onto your local computer! The command line serves as a low-level interpreter through which you, the user, can send commands directly to the computer. As a computer user, you previously have probably sent commands to the computer through a graphical user interface (GUI) such as a web browser, text editor, photo editor, or any other of the myriad of computer programs now in existence. While the command line is initially daunting with its cryptic looking text, we will quickly see some of its advantages.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eNavigate between directories using the Bash shell\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eShell\u003c/h2\u003e\n\n\u003cp\u003eTo start, open up your shell program. For mac, this is the terminal, and for Windows we recommend git bash. Note that the \"command prompt\" on Windows may look similar but it is actually another language.\u003c/p\u003e\n\n\u003ch2\u003eMac\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-bash-shell/master/images/mac_terminal.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eWindows\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-bash-shell/master/images/git_bash.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eWorkflow Hints\u003c/h2\u003e\n\n\u003cp\u003eWhen going back and forth between this lesson and your shell, it is useful to either use split screen or to know the shortcuts to switch between applications on your computer. \u003c/p\u003e\n\n\u003cp\u003eShortcuts to change programs/applications:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eMac: (cmd+tab)\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eWindows: (alt+tab)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003epwd\u003c/h2\u003e\n\n\u003cp\u003eRemember, \u003cstrong\u003epwd\u003c/strong\u003e stands for \u003cstrong\u003eprint working directory\u003c/strong\u003e. This is essential to determine where you are within the file structure.  \u003c/p\u003e\n\n\u003ch2\u003ecd\u003c/h2\u003e\n\n\u003cp\u003eFrom there, remember that \u003cstrong\u003ecd\u003c/strong\u003e stands for \u003cstrong\u003echange directory\u003c/strong\u003e. You can navigate to the home directory with \u003ccode\u003ecd\u003c/code\u003e alone, or go up one level with \u003ccode\u003ecd ..\u003c/code\u003e. You can also use the \u003ccode\u003e~\u003c/code\u003e symbol to refer to your home directory. For example, \u003ccode\u003ecd ~/Documents\u003c/code\u003e will take you to the Documents folder in your home directory no matter where you are. \u003c/p\u003e\n\n\u003ch2\u003els\u003c/h2\u003e\n\n\u003cp\u003eYou can use the \u003cstrong\u003els\u003c/strong\u003e command, which stands for \u003cstrong\u003elist files\u003c/strong\u003e to print all the files in the current working directory. \u003c/p\u003e\n\n\u003ch2\u003eTab completion\u003c/h2\u003e\n\n\u003cp\u003eAnother useful feature when working on the command line is tab completion. This also works in many other programming environments such as Jupyter notebooks.\u003c/p\u003e\n\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://www.ks.uiuc.edu/Training/Tutorials/Reference/unixprimer.html\"\u003eMore Basic Shell Commands\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://linux.die.net/man/1/bash\"\u003eLinux Bash Man Page\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://tiswww.case.edu/php/chet/bash/bashref.html\"\u003eDetailed Bash\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we reviewed some of the basic bash commands in order to navigate through files and folders on your computer. From here, we're ready to get started with Git, an important version control system used by many programmers, developers, and Data Scientists.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-bash-shell\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-bash-shell\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-bash-shell/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"the-bash-shell"},{"id":440093,"title":"Short Video: Bash","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv style=\"padding:62.5% 0 0 0;position:relative;\"\u003e\u003ciframe src=\"https://player.vimeo.com/video/713398999?h=cf5cb60dab\u0026amp;badge=0\u0026amp;autopause=0\u0026amp;player_id=0\u0026amp;app_id=58479\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen=\"\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;\" title=\"bash_new_directory_phase1_gd\"\u003e\u003c/iframe\u003e\u003c/div\u003e","exportId":"short-video-bash"},{"id":440096,"title":"Git Version Control 101","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-version-control-101\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-version-control-101/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e‚ÄúThe past is never where you think you left it.‚Äù ‚Äî \u003ca href=\"http://en.wikipedia.org/wiki/Katherine_Anne_Porter\"\u003eKatherine Anne Porter\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eVersion Control is the process of storing multiple versions of a single project, allowing each version to be recalled at a later date.\u003c/p\u003e\n\n\u003cp\u003eThere are a lot of different ways to do version control. You could save a new file every time you make a change, timestamp that file, and place all of those files into a timestamped folder. You could track all of your changes in a spreadsheet with copious notes. Or you could use dedicated version control software. Guess which method programmers use?\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the purpose of version control and Git\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy Use Version Control?\u003c/h2\u003e\n\n\u003cp\u003eLet's think about the future for a second. It's a year or two down the road, and you're working at your dream job (YAY!). You just deployed a new chat feature for the app you're working on. Suddenly, your boss runs over to your desk: \"Wait! We can't deploy the chat yet! Revert! Revert!\"\u003c/p\u003e\n\n\u003cp\u003eWhat do you do? You need to find all of the new code you pushed to the server and delete it. Then you need to find the old code, test it, and re-upload it. So much work to do. Well, since you used version control software, it's as easy as 1, 2, 3. Actually, it's as easy as \u003ccode\u003egit reset --hard \u0026lt;commit id\u0026gt;\u003c/code\u003e... but we'll get to that later. Using version control is useful because it allows you to easily rollback to a previous version of your application, saving you a ton of extra work and time.\u003c/p\u003e\n\n\u003cp\u003eThere are a lot of advantages to version control. It's a great way to keep a backup of your work, it facilitates collaboration, and it gives you the freedom to experiment and try new things without messing up the code base.\u003c/p\u003e\n\n\u003ch2\u003eLocal vs Remote Version Control\u003c/h2\u003e\n\n\u003cp\u003eA local version control system stores all of the information on your computer, locally. This system works great while you work on a project by yourself. However, it becomes cumbersome when you attempt to collaborate.\u003c/p\u003e\n\n\u003cp\u003eSome organizations use a centralized repository on a company server. Think of a repository as a big folder that stores all of the files of a particular project. It is simply the location where a project's data is stored. Users pull only the files they need to work on from the server. The advantage is that multiple people can collaborate and work on the same project at once. The disadvantage of this process is that a user must be connected to the network in order to work on the project.\u003c/p\u003e\n\n\u003cp\u003eWhich brings us to the third system, a distributed version control system. In a distributed system, all users have a complete copy of the entire repository. This means that you can work on the project independent of any network connection. Upon reconnecting, you can push your changes to the server and merge with the server's repository.\u003c/p\u003e\n\n\u003ch2\u003eMeet Git\u003c/h2\u003e\n\n\u003cp\u003eGit is the distributed version control system we use here at The Flatiron School. Git began in 2005 and has quickly grown to be one of the most widely used version control systems in the industry. Because so many companies use Git, it's important that you get used to working with it. We also use GitHub, a popular remote repository hosting service built to integrate seamlessly with Git.\u003c/p\u003e\n\n\u003cp\u003eCheck out some of the resources below to learn more about Git.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Getting-Started-About-Version-Control\"\u003eGetting Started - About Version Control\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/video/what-is-git\"\u003eGit Basics - What is Git?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you were introduced to version control and Git, and the reasons we use it as part of our workflow!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-git-version-control-101\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-git-version-control-101\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-version-control-101/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"git-version-control-101"},{"id":440109,"title":"Bash Exit Ticket","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"g031dacd688eae230e78c682a673206c4","questionCount":8,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"","exportId":"g45e2eb98ac8f48b70905148b24529dd9"},{"id":440112,"title":"Getting Started with Git","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-git-intro\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eAs you now know, Git is a version control system. The Flatiron School hosts our curriculum using GitHub, and we use IllumiDesk to facilitate a deep integration with GitHub. GitHub is an online hosting platform that uses Git. We need to teach you just enough Git to interact with GitHub like a real developer. While you can run Python notebooks on the Illumidesk platform, you'll also want to be able to download material to your local computer so you can work on it there.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDescribe the difference between a forked and a cloned respository\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003egit clone\u003c/code\u003e to clone a repository\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003egit add\u003c/code\u003e, \u003ccode\u003egit commit\u003c/code\u003e, and \u003ccode\u003egit push\u003c/code\u003e to make changes to a repository\u003c/li\u003e\n\u003cli\u003eCompare local and remote repositories\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSome terminology and concepts\u003c/h2\u003e\n\u003cp\u003eAs you can see from the objectives above, we're going to dive in and use several Git commands in this lesson.\u003c/p\u003e\n\u003cp\u003eThe first thing we'll look at is \u003cem\u003eforking\u003c/em\u003e, a concept from the GitHub platform.\u003c/p\u003e\n\u003cp\u003eForking is the process of making a personal copy of the lesson or lab on GitHub.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"http://ironboard-curriculum-content.s3.amazonaws.com/front-end/lab-assets/git-workflow-1.png\" alt=\"What's a Fork\"\u003e\u003c/p\u003e\n\u003cp\u003eAfterward, we'll use \u003ccode\u003egit clone\u003c/code\u003e from a bash shell like terminal or git bash in order to copy the material from the web to our local computer.\u003c/p\u003e\n\u003cp\u003eFrom there, Git will allow us to continue to track and incorporate changes that we make to our work.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egit status\u003c/code\u003e allows us to see if we have made any changes.\u003c/p\u003e\n\u003cp\u003eIf we have made changes that we would like to save to our version control history, we can then use \u003ccode\u003egit add\u003c/code\u003e to stage the changed files to the version history and \u003ccode\u003egit commit\u003c/code\u003e to finalize the process. Finally, we can then use \u003ccode\u003egit push\u003c/code\u003e to push our changes to the web so that we or collaborators can access them from anywhere.\u003c/p\u003e\n\u003cp\u003eNow that you have a brief overview of what we're about to dive into, let's go through the process step by step.\u003c/p\u003e\n\u003ch2\u003eOpen up a Bash Shell and Create a Course Folder / Subfolder\u003c/h2\u003e\n\u003cp\u003eTo use Git, we're going back to the bash shell (mac: terminal, windows: git bash) once again!\u003c/p\u003e\n\u003cp\u003eTo start:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a folder on your computer for your course materials and navigate into it (preferably using \u003ccode\u003emkdir\u003c/code\u003e and \u003ccode\u003ecd\u003c/code\u003e) if you haven't already\n\u003cul\u003e\n\u003cli\u003eYou may want to create a subfolder titled \"Section1\", \"Phase_1\" (or whatever you find to be an appropriate title) and navigate into that\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eReturn to your web browser and navigate to the lesson or lab you want to download\u003c/li\u003e\n\u003cli\u003eClick the GitHub icon\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-intro/master/images/canvas_github_icon.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003cp\u003eYou'll be redirected to the associated GitHub repository.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-intro/master/images/before-fork.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eClick the fork button\u003c/strong\u003e, as shown above in order to create a copy on your personal account which you can edit and update.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAfter a moment of this:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-intro/master/images/during-fork.png\" width=\"400\"\u003e\u003c/p\u003e\n\u003cp\u003eYou'll be redirected to your new personal copy of the repository:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-intro/master/images/after-fork.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003ch2\u003e\u003ccode\u003egit clone\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eNow that you have your own copy (by forking), we're going to download this copy to your local computer using \u003ccode\u003egit clone\u003c/code\u003e.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eCopy the URL\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMac: Press \u003cstrong\u003ecmd+L\u003c/strong\u003e to highlight the url bar and \u003cstrong\u003ecmd+c\u003c/strong\u003e to copy the url\u003c/li\u003e\n\u003cli\u003eWindows: Press \u003cstrong\u003eCtrl+L\u003c/strong\u003e to highlight the url bar and \u003cstrong\u003eCtrl+c\u003c/strong\u003e to copy the url\u003c/li\u003e\n\u003cli\u003eYou can also click the green \"Code\" button on the GitHub page, and click the clipboard icon to copy the url\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eReturn to your bash shell\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eType: \u003ccode\u003egit clone\u003c/code\u003e and paste your repo url (\u003cstrong\u003ecmd + v\u003c/strong\u003e or \u003cstrong\u003eCtrl+V\u003c/strong\u003e)\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eVoila!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eThe repository and all of its contents will be downloaded locally to your computer!\u003c/p\u003e\n\u003cp\u003eYou should be able to see the new folder by listing the files in the current directory with \u003ccode\u003els\u003c/code\u003e. You can then navigate into the git directory with \u003ccode\u003ecd directory_name\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eNow that you have a local copy, we can further investigate some more Git commands for version control. \u003cstrong\u003eNote that for these to work you must be in the git folder (the one you just cloned above). Make sure to navigate into the folder using the \u003ccode\u003ecd\u003c/code\u003e command.\u003c/strong\u003e\u003c/p\u003e\n\u003ch2\u003e\u003ccode\u003egit status\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eOnce you have a Git repository downloaded locally, Git will keep track of every change you make to the code in that folder. You can ask Git what the differences or changes you've made since the last commit by typing \u003ccode\u003egit status\u003c/code\u003e into your terminal.\u003c/p\u003e\n\u003cp\u003eIt's really helpful to constantly get the status from Git to see what changes you need to add, commit, or push.\u003c/p\u003e\n\u003ch2\u003e\u003ccode\u003egit add\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eAdding changes with the \u003ccode\u003egit add\u003c/code\u003e command is a way to stage any changes and get them ready to be a permanent record in your Git log via a commit. The workflow worth memorizing right now is to simply add all your changes via \u003ccode\u003egit add .\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003e\u003ccode\u003egit commit\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eA commit is a permanent moment in time in your Git history. A commit creates a new version of your code. To commit, memorize this command. \u003ccode\u003egit commit -am \"Your commit message\"\u003c/code\u003e. You are using the \u003ccode\u003egit commit\u003c/code\u003e command with the flags \u003ccode\u003e-am\u003c/code\u003e, which tell Git to add and commit all changes and to include a commit message. You supply the commit message in \u003ccode\u003e\"\"\u003c/code\u003e directly after the command, where it says \u003ccode\u003e\"Your commit message\"\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003e\u003ccode\u003egit push\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003ePushing is the process of taking your local code and commits and syncing them, or uploading them, to GitHub. You're updating the GitHub remote (remotes are just fancy names for cloud copies of the repository), generally your fork, represented by a remote named \u003ccode\u003eorigin\u003c/code\u003e, by pushing your code to the remote. The Git command to do this is simply \u003ccode\u003egit push\u003c/code\u003e. When you \u003ccode\u003egit push\u003c/code\u003e from within a Git repository, it will take all the commits that you have locally and push them to the online remote.\u003c/p\u003e\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.git-tower.com/blog/git-cheat-sheet/\"\u003eGit Cheatsheet\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.git-tower.com/learn/git/ebook/en/command-line/appendix/best-practices\"\u003eGit Best Practices\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://guides.github.com/introduction/flow\"\u003eUnderstanding the GitHub Flow\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://guides.github.com/activities/hello-world\"\u003eHello World GitHub\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://guides.github.com/activities/forking\"\u003eForking on GitHub\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://rogerdudler.github.io/git-guide/\"\u003eGit - The Simple Guide\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://gitimmersion.com/\"\u003eGit Immersion\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://try.github.com/\"\u003eTry Git\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eIn this lesson, we took an introductory look at Git and GitHub. First, we saw how to fork and clone repositories from GitHub onto your local machine. From there, we then further discussed how to add changes to git, commit them, and push them online.\u003c/p\u003e","exportId":"getting-started-with-git"},{"id":440116,"title":"Git Practice","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-git-practice\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-practice\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-practice/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you've seen a little bit of the bash shell and cloned a Git repository from GitHub, its time to practice a full workflow cycle in a little more detail. In this lesson, we'll start by taking a look at how to create a new Git repository if you are not working from an existing one. From there, we'll further investigate how the concepts of \u003ccode\u003egit add\u003c/code\u003e, \u003ccode\u003egit commit\u003c/code\u003e, and \u003ccode\u003egit push\u003c/code\u003e work in practice.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a new git repository\u003c/li\u003e\n\u003cli\u003eCompare local and remote repositories\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003egit add\u003c/code\u003e, \u003ccode\u003egit commit\u003c/code\u003e, and \u003ccode\u003egit push\u003c/code\u003e to make changes to a repository\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCreating a New Git Repository\u003c/h2\u003e\n\n\u003cp\u003eIn order to create a new Git repository, start by going to \u003ccode\u003ehttps://github.com/new\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e(Alternatively, you can click the New button under the repositories tab of you profile page)\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-practice/master/images/repos_page_new_button.png\" width=\"550\"\u003e\u003c/p\u003e\n\n\u003cp\u003eEither way, you'll then end up at the \u003ccode\u003ehttps://github.com/new\u003c/code\u003e page:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-practice/master/images/github_new.png\" width=\"550\"\u003e\u003c/p\u003e\n\n\u003cp\u003eHere, you have several fields to go through:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eNaming the repository\n\n\u003col\u003e\n\u003cli\u003eFor this example, make the repository name \u003ccode\u003egit_practice\u003c/code\u003e \u003c/li\u003e\n\u003c/ol\u003e\u003c/li\u003e\n\u003cli\u003eDescription\n\n\u003col\u003e\n\u003cli\u003eOptional as described; leave it blank for now\u003c/li\u003e\n\u003c/ol\u003e\u003c/li\u003e\n\u003cli\u003eThe public vs private \n\n\u003col\u003e\n\u003cli\u003eDo you want this code to be publicly visible to everyone on GitHub or do you wish to keep it private?\u003c/li\u003e\n\u003cli\u003ePublic is probably fine for this\u003c/li\u003e\n\u003c/ol\u003e\u003c/li\u003e\n\u003cli\u003eInitialize this repository with a README\n\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eThis option is very important!\u003c/strong\u003e\n\n\u003col\u003e\n\u003cli\u003eIf you check this box then you will clone the online repository as we did before and work from there\u003c/li\u003e\n\u003cli\u003eIf you don't check this box, then you will start from your local computer and then attach that work to the online repository.\u003c/li\u003e\n\u003c/ol\u003e\u003c/li\u003e\n\u003c/ol\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eFor now, name the repository \u003ccode\u003egit_practice\u003c/code\u003e, select public and \u003cstrong\u003edo NOT check the readme box\u003c/strong\u003e.\nThen click create repository.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-practice/master/images/git_practice_new.png\" width=\"550\"\u003e\u003c/p\u003e\n\n\u003cp\u003eYou'll see a page like this:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNote: The screenshots here use the word \u003ccode\u003emaster\u003c/code\u003e which is a legacy term that is still used in GitHub. It is more common now, and what you are likely to see, is \u003ccode\u003emain\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-practice/master/images/git_practice_blank_repo.png\" width=\"550\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThis says it all!\u003c/p\u003e\n\n\u003cp\u003eHere's an explanation of the steps we're going to follow:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e Create a directory (GitHub doesn't tell you to do this, but we want to organize and contain what we're sending to the web) \u003c/li\u003e\n\u003cli\u003e \u003ccode\u003eecho \"# git_practice\" \u0026gt;\u0026gt; README.md\u003c/code\u003e: \u003ccode\u003eecho\u003c/code\u003e is a bash command which will create a markdown file \u003ccode\u003eREADME.md\u003c/code\u003e with the text \u003ccode\u003e\"# git_practice\"\u003c/code\u003e \u003c/li\u003e\n\u003cli\u003e\u003ccode\u003egit init\u003c/code\u003e: This turns the current directory into a Git repository\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003egit add README.md\u003c/code\u003e: Now that the current folder is a Git repository from \u003ccode\u003egit init\u003c/code\u003e, we can add files for Git to track \u003c/li\u003e\n\u003cli\u003e\u003ccode\u003egit commit -m \"first commit\"\u003c/code\u003e: Once files have been added to Git, we commit them. The \u003ccode\u003e-m\u003c/code\u003e option is for leaving a comment which is required \u003c/li\u003e\n\u003cli\u003e\u003ccode\u003egit remote add origin url_goes_here\u003c/code\u003e: By default, git does not have to be connected to an online platform like GitHub. You can use Git locally for version control too. There are also other online Git platforms like Bitbucket and GitLab. Here, you're adding a link to GitHub's online hosting so that you can also sync your work with the cloud. This is super handy for sharing your work with others, collaborating, or any of the other reasons why cloud services are used \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eAgain, now that you have an overview, let's have at it!\u003c/p\u003e\n\n\u003ch2\u003eCreate a new directory for your repo\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eOpen up your command line (mac: terminal, windows: git bash) \u003c/li\u003e\n\u003cli\u003eNavigate to the appropriate directory such as /Documents/Flatiron/Module_2_Git_Bash (or however you plan to organize your course materials)\u003c/li\u003e\n\u003cli\u003eCreate a new folder for this lesson \u003ccode\u003emkdir git_practice\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eNavigate into your new folder\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003ecd git_practice\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2\u003eInitialize this folder as a git repository\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003egit init\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2\u003eCreate a README\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eecho \"# git_practice\" \u0026gt;\u0026gt; README.md\u003c/code\u003e as described works perfectly well\u003c/li\u003e\n\u003cli\u003eAlternatively, if you're feeling adventurous, you can try a text editor such as nano, vim, or emacs \n\n\u003cul\u003e\n\u003cli\u003eIf you're going the adventurous route, try \u003ccode\u003enano README.txt\u003c/code\u003e for now and then type \"# git_practice\" in the file. Press \"Ctrl+X\" to quit and press \"Y\" to confirm you wish to save your changes \u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eGit Status\u003c/h2\u003e\n\n\u003cp\u003eWhile not required, let's get familiar with what's going on with \u003ccode\u003egit status\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eGit Add\u003c/h2\u003e\n\n\u003cp\u003eAdd your file. You can use \u003ccode\u003egit add README.md\u003c/code\u003e or \u003ccode\u003egit add --all\u003c/code\u003e (if there were multiple files, you would add all of them). \u003c/p\u003e\n\n\u003ch2\u003eGit Status\u003c/h2\u003e\n\n\u003cp\u003eAgain, not required but helpful to get familiar with everything. Try it again and note the difference: \u003ccode\u003egit status\u003c/code\u003e. \u003c/p\u003e\n\n\u003ch2\u003eGit Commit\u003c/h2\u003e\n\n\u003cp\u003eNow that we've added the files, we're ready to finalize them to our version history. Commit them with \u003ccode\u003egit commit -m \"your message here\"\u003c/code\u003e. \u003c/p\u003e\n\n\u003ch2\u003eAdd a Remote Location\u003c/h2\u003e\n\n\u003cp\u003eAgain, remember that Git itself is a version control system that can be used anywhere. GitHub is an online hosting platform allowing us to take Git repositories to the cloud to share and collaborate. By adding a remote location, we are able to sync our work between online and offline and collaborate with others. The \u003ccode\u003eorigin\u003c/code\u003e is simply a default naming convention symbolizing that the online version will be the central source of truth for this repository.\u003c/p\u003e\n\n\u003cp\u003eWith that, we can set it up with\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003egit remote add origin the_url_for_the_repo\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eGenerally, it's easiest to simply copy and paste from the code provided by GitHub.\u003c/p\u003e\n\n\u003ch2\u003ePushing our changes\u003c/h2\u003e\n\n\u003cp\u003eWe've already added our \u003cstrong\u003eREADME.md\u003c/strong\u003e file to Git and commited the changes. While these changes are present and up to date (take a look at \u003ccode\u003egit status\u003c/code\u003e again), they are not reflected online yet as we haven't synced our updates with our online version. To do this, type \u003ccode\u003egit push origin master\u003c/code\u003e.  \u003c/p\u003e\n\n\u003cp\u003eIf you are wondering what \u003ccode\u003emaster\u003c/code\u003e is, it's the name of our branch. You can use branches in git to seperate versions of code from each other. A common example comes from web development for production environments. The \u003ccode\u003emaster\u003c/code\u003e branch usually contains the working code for the website or app in production, and then other branches can be created for developing updates and new features, while not breaking the current working version. \u003ccode\u003emaster\u003c/code\u003e is the default branch for all Git repositories, and we'll take a further look into branches in general in the upcoming lessons.\u003c/p\u003e\n\n\u003ch2\u003ePreviewing Changes\u003c/h2\u003e\n\n\u003cp\u003eNow that you've pushed your changes online, refresh the GitHub page. You should now see a little page like this:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-practice/master/images/git_repo.png\" width=\"550\"\u003e\u003c/p\u003e\n\n\u003cp\u003eCongratulations! You just created your first Git repository!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we continued to practice our bash skills with the command line and started practicing our version control skills with Git. We created our first Git repository from scratch, and practiced adding, commiting, and pushing those changes to GitHub.\u003c/p\u003e","exportId":"git-practice"},{"id":440120,"title":".gitignore","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-gitignore\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-gitignore\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-gitignore/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSo far our examples have assumed that we want Git to track changes to all files in our repository. In some cases, we want Git to ignore certain files, and this is accomplished using a \u003ccode\u003e.gitignore\u003c/code\u003e file.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe use cases for a \u003ccode\u003e.gitignore\u003c/code\u003e file\u003c/li\u003e\n\u003cli\u003eInterpret and utilize the glob syntax of a \u003ccode\u003e.gitignore\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eUse Git and \u003ccode\u003e.gitignore\u003c/code\u003e to ignore files that Git is currently tracking, or to track files that Git is currently ignoring\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy \u003ccode\u003e.gitignore\u003c/code\u003e?\u003c/h2\u003e\n\n\u003cp\u003eIf version control systems like Git are designed to track all of your changes, why would we want to tell it to ignore some files? There are three main reasons:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003ePrivate files\u003c/li\u003e\n\u003cli\u003eIrrelevant files\u003c/li\u003e\n\u003cli\u003eFiles that are too large for GitHub\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003ePrivate Files\u003c/h3\u003e\n\n\u003cp\u003e\u003ca title=\"¬© 2014 Andreas Kainz \u0026amp; Uri Herrera \u0026amp; Andrew Lake \u0026amp; Marco Martin \u0026amp; Harald Sitter \u0026amp; Jonathan Riddell \u0026amp; Ken Vermette \u0026amp; Aleix Pol \u0026amp; David Faure \u0026amp; Albert Vaca \u0026amp; Luca Beltrame \u0026amp; Gleb Popov \u0026amp; Nuno Pinheiro \u0026amp; Alex Richardson \u0026amp;  Jan Grulich \u0026amp; Bernhard Landauer \u0026amp; Heiko Becker \u0026amp; Volker Krause \u0026amp; David Rosca \u0026amp; Phil Schaf\u0026nbsp;/\u0026nbsp;KDE\" href=\"https://commons.wikimedia.org/wiki/File:Breezeicons-actions-22-view-certificate.svg\"\u003e\u003cimg width=\"256\" alt=\"Breezeicons-actions-22-view-certificate\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e1/Breezeicons-actions-22-view-certificate.svg/256px-Breezeicons-actions-22-view-certificate.svg.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIn some cases, you will need credentials in order for your code to access some service. This includes free services! For example, if you are using a rate-limited API, the API needs to know who is making the request in order to determine whether you have exceeded your limit of requests.\u003c/p\u003e\n\n\u003cp\u003eThese credentials are often stored in the form of \u003cem\u003ekeys\u003c/em\u003e or \u003cem\u003esecrets\u003c/em\u003e, often stored in JSON or YML file formats.\u003c/p\u003e\n\n\u003cp\u003eYou want to avoid pushing these files to public GitHub repositories, because people have set up bots to crawl GitHub in order to steal these valuable credentials!\u003c/p\u003e\n\n\u003cp\u003eUsing \u003ccode\u003e.gitignore\u003c/code\u003e you can make sure that your credentials are not pushed.\u003c/p\u003e\n\n\u003ch3\u003eIrrelevant Files\u003c/h3\u003e\n\n\u003cp\u003e\u003ca title=\"¬© 2014 Andreas Kainz \u0026amp; Uri Herrera \u0026amp; Andrew Lake \u0026amp; Marco Martin \u0026amp; Harald Sitter \u0026amp; Jonathan Riddell \u0026amp; Ken Vermette \u0026amp; Aleix Pol \u0026amp; David Faure \u0026amp; Albert Vaca \u0026amp; Luca Beltrame \u0026amp; Gleb Popov \u0026amp; Nuno Pinheiro \u0026amp; Alex Richardson \u0026amp;  Jan Grulich \u0026amp; Bernhard Landauer \u0026amp; Heiko Becker \u0026amp; Volker Krause \u0026amp; David Rosca \u0026amp; Phil Schaf\u0026nbsp;/\u0026nbsp;KDE\" href=\"https://commons.wikimedia.org/wiki/File:Breezeicons-actions-22-noisereduction.svg\"\u003e\u003cimg width=\"256\" alt=\"Breezeicons-actions-22-noisereduction\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/be/Breezeicons-actions-22-noisereduction.svg/256px-Breezeicons-actions-22-noisereduction.svg.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eSome of the files generated in the process of coding are not actually relevant for future users of the repository.\u003c/p\u003e\n\n\u003cp\u003eThese include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eLog files\u003c/li\u003e\n\u003cli\u003eNotebook checkpoint files (e.g. \u003ccode\u003e.ipynb_checkpoints\u003c/code\u003e from Jupyter Notebook)\u003c/li\u003e\n\u003cli\u003eOS-specific files (e.g. \u003ccode\u003e.DS_Store\u003c/code\u003e, which is only applicable to Mac computers)\u003c/li\u003e\n\u003cli\u003eConfiguration files for code editors (e.g. \u003ccode\u003e.vscode\u003c/code\u003e, which is used by VS Code)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIf you are working with collaborators, not only are these files \u003cem\u003enot useful\u003c/em\u003e to them, they can actually cause \u003cem\u003emerge conflicts\u003c/em\u003e!\u003c/p\u003e\n\n\u003ch3\u003eFiles That Are Too Large for GitHub\u003c/h3\u003e\n\n\u003cp\u003e\u003ca title=\"¬© 2014 Andreas Kainz \u0026amp; Uri Herrera \u0026amp; Andrew Lake \u0026amp; Marco Martin \u0026amp; Harald Sitter \u0026amp; Jonathan Riddell \u0026amp; Ken Vermette \u0026amp; Aleix Pol \u0026amp; David Faure \u0026amp; Albert Vaca \u0026amp; Luca Beltrame \u0026amp; Gleb Popov \u0026amp; Nuno Pinheiro \u0026amp; Alex Richardson \u0026amp;  Jan Grulich \u0026amp; Bernhard Landauer \u0026amp; Heiko Becker \u0026amp; Volker Krause \u0026amp; David Rosca \u0026amp; Phil Schaf\u0026nbsp;/\u0026nbsp;KDE\" href=\"https://commons.wikimedia.org/wiki/File:Breezeicons-actions-22-project-development-close.svg\"\u003e\u003cimg width=\"256\" alt=\"Breezeicons-actions-22-project-development-close\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Breezeicons-actions-22-project-development-close.svg/256px-Breezeicons-actions-22-project-development-close.svg.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eGitHub \u003ca href=\"https://docs.github.com/en/repositories/working-with-files/managing-large-files/about-large-files-on-github\"\u003elimits the size\u003c/a\u003e of files that can be pushed to its repositories. If you try to push a file that exceeds the 100 MB threshold, you will get an error message and the push will fail.\u003c/p\u003e\n\n\u003cp\u003eOften in a data science context, these large files are the data files themselves. Sometimes you will find that a compressed file (e.g. \u003ccode\u003e.zip\u003c/code\u003e file) is small enough to be pushed to GitHub, but the expanded version is too big. Then you can specify the expanded version in the \u003ccode\u003e.gitignore\u003c/code\u003e while still being able to share the compressed data on GitHub.\u003c/p\u003e\n\n\u003ch2\u003e\u003ccode\u003e.gitignore\u003c/code\u003e Syntax\u003c/h2\u003e\n\n\u003cp\u003eNow that we understand some reasons that we might want to ignore certain files, how does that actually work?\u003c/p\u003e\n\n\u003cp\u003eTo start with, you put a hidden text file called \u003ccode\u003e.gitignore\u003c/code\u003e at the root of the repository. It is hidden because it starts with \u003ccode\u003e.\u003c/code\u003e, which means that in order to view it you will need to type \u003ccode\u003els -a\u003c/code\u003e rather than just \u003ccode\u003els\u003c/code\u003e in the terminal. We demonstrate the \u003ccode\u003e.gitignore\u003c/code\u003e in this very repository below:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"err\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003els\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eCONTRIBUTING.md  index.ipynb  LICENSE.md  README.md\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"err\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003els\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e.   CONTRIBUTING.md  .gitignore   .ipynb_checkpoints  README.md\n..  .git         index.ipynb  LICENSE.md\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eBasic Syntax\u003c/h3\u003e\n\n\u003cp\u003eThe file's content is just a list of things to ignore, as well as whitespace and comments (which start with \u003ccode\u003e#\u003c/code\u003e). The items in the list are separated by newlines.\u003c/p\u003e\n\n\u003cp\u003eFor example, this could be the contents of a valid \u003ccode\u003e.gitignore\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# a comment\nsecrets.json\n\n# another comment\nsecrets.yml\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis means that if the repository contained a file called \u003ccode\u003esecrets.json\u003c/code\u003e and/or a file called \u003ccode\u003esecrets.yml\u003c/code\u003e, Git would ignore them.\u003c/p\u003e\n\n\u003ch3\u003eGlob Syntax\u003c/h3\u003e\n\n\u003cp\u003e\u003ccode\u003e.gitignore\u003c/code\u003e can also work with wildcard characters using \u003ca href=\"https://en.wikipedia.org/wiki/Glob_(programming)\"\u003eglob syntax\u003c/a\u003e. For example, if you wanted to ignore all files ending with \u003ccode\u003e.csv\u003c/code\u003e, the \u003ccode\u003e.gitignore\u003c/code\u003e might look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# ignore all CSV files\n*.csv\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOr, if you only wanted to ignore only CSV files in the \u003ccode\u003edata/\u003c/code\u003e folder, that might look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# ignore CSV files in the data/ folder\ndata/*.csv\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFor more examples with comments, see the \u003ca href=\"https://git-scm.com/docs/gitignore\"\u003eGit documentation\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003eUseful Defaults\u003c/h3\u003e\n\n\u003cp\u003eThe examples above were specific to a particular project, and you will typically need to write your own \u003ccode\u003e.gitignore\u003c/code\u003e lines for these specialized use cases.\u003c/p\u003e\n\n\u003cp\u003eOutside of these narrow use cases, there are resources available for developing \u003ccode\u003e.gitignore\u003c/code\u003e files that are appropriate for your type of project in general. For example, GitHub maintains a \u003ca href=\"https://github.com/github/gitignore/blob/main/Python.gitignore\"\u003ePython \u003ccode\u003e.gitignore\u003c/code\u003e template\u003c/a\u003e (this can be added to your repository by selecting it from the drop-down when you initialize a repository on GitHub). There is also a tool called \u003ca href=\"https://gitignore.io\"\u003egitignore.io\u003c/a\u003e that will help you identify useful \u003ccode\u003e.gitignore\u003c/code\u003e lines for your operating system or code editor. It's usually a good idea to use these resources first, before trying to write your own glob syntax!\u003c/p\u003e\n\n\u003ch3\u003eIgnoring a Tracked File\u003c/h3\u003e\n\n\u003cp\u003eIf you previously used \u003ccode\u003egit add\u003c/code\u003e on a file then ran \u003ccode\u003egit commit\u003c/code\u003e, that means that the file is already tracked, regardless of what the \u003ccode\u003e.gitignore\u003c/code\u003e says.\u003c/p\u003e\n\n\u003ch4\u003eIrrelevant Files\u003c/h4\u003e\n\n\u003cp\u003eIf the file is just irrelevant for your collaborators, you can tell Git to stop tracking it. For example, if you wanted to tell Git to stop tracking \u003ccode\u003elog.txt\u003c/code\u003e, you could use this command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003egit \u003cspan class=\"nb\"\u003erm\u003c/span\u003e \u003cspan class=\"nt\"\u003e--cached\u003c/span\u003e log.txt\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNote that this is a command you run in the terminal, \u003cem\u003enot\u003c/em\u003e a line to be added to the \u003ccode\u003e.gitignore\u003c/code\u003e file. For the changes to be reflected on GitHub, you will also need to run \u003ccode\u003egit commit\u003c/code\u003e and \u003ccode\u003egit push\u003c/code\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIn general \u003ccode\u003egit rm\u003c/code\u003e is a useful command that deletes a file from the directory and stages that file deletion with Git (i.e. combines the \u003ccode\u003erm file_name\u003c/code\u003e and \u003ccode\u003egit add file_name\u003c/code\u003e steps). Adding \u003ccode\u003e--cached\u003c/code\u003e to \u003ccode\u003egit rm\u003c/code\u003e means that Git will no longer track the file, but that the file will not actually be deleted from the directory.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e(You also probably want to add that file name to the \u003ccode\u003e.gitignore\u003c/code\u003e at the same time!)\u003c/p\u003e\n\n\u003ch4\u003ePrivate or Too Large Files\u003c/h4\u003e\n\n\u003cp\u003eIf the file is private/secret or too large for GitHub, you will need to rewrite your Git history. This can be fairly complicated (see \u003ca href=\"https://medium.com/analytics-vidhya/tutorial-removing-large-files-from-git-78dbf4cf83a?sk=c3763d466c7f2528008c3777192dfb95\"\u003ethis blog post\u003c/a\u003e for more details) so it's always better to add things to \u003ccode\u003e.gitignore\u003c/code\u003e sooner rather than later!\u003c/p\u003e\n\n\u003ch3\u003eTelling Git Not to Ignore\u003c/h3\u003e\n\n\u003cp\u003eMany developer setups will include a \u003ca href=\"https://sebastiandedeyne.com/setting-up-a-global-gitignore-file/\"\u003eglobal \u003ccode\u003e.gitignore\u003c/code\u003e file\u003c/a\u003e. This file is not located within a specific repository, and can be especially useful for OS-related settings (e.g. ignoring \u003ccode\u003e.DS_Store\u003c/code\u003e on a Mac).\u003c/p\u003e\n\n\u003cp\u003eSometimes you might want to override these global settings for the current repository, particularly if your global \u003ccode\u003e.gitignore\u003c/code\u003e is relatively broad. To do that, you use the same glob syntax, placing a \u003ccode\u003e!\u003c/code\u003e at the beginning.\u003c/p\u003e\n\n\u003cp\u003eSo, for example, if you want Git \u003cem\u003enot\u003c/em\u003e to ignore \u003ccode\u003elog.txt\u003c/code\u003e in a particular repository, you could add this to the \u003ccode\u003e.gitignore\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# do not ignore log.txt\n!log.txt\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eSometimes you want Git to ignore certain files. The common reasons for this are that the files are private, the files are irrelevant to collaborators, or that the files are too big for GitHub. To tell Git to ignore the files, you use a hidden file called \u003ccode\u003e.gitignore\u003c/code\u003e at the root of the repository. This file uses glob syntax to specify which files should be ignored, including \u003ccode\u003e*\u003c/code\u003e to indicate a wildcard and \u003ccode\u003e!\u003c/code\u003e to indicate that a file should \u003cem\u003enot\u003c/em\u003e be ignored. We recommend that you use useful defaults rather than writing your own \u003ccode\u003e.gitignore\u003c/code\u003e lines most of the time, and that you always make sure to add private or too-large files to the \u003ccode\u003e.gitignore\u003c/code\u003e as soon as possible so you don't have to rewrite your Git history.\u003c/p\u003e","exportId":"dot-gitignore"},{"id":440123,"title":"Quiz: Bash and Git Fundamentals","type":"Quizzes::Quiz","indent":2,"locked":false,"assignmentExportId":"ge9ba676807899bec91cbc7f9d78f6249","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"min_score","requiredPoints":3.0,"completed":true,"content":"","exportId":"gdf1958170fb1be12193296399ab484d2"},{"id":440134,"title":"Git Exit Ticket","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"g617f66134b910f0fae0f7c7316d649c9","questionCount":8,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"","exportId":"g0676d1cd424d2d148b28d57bbe490338"},{"id":440138,"title":"Collaborating with Git Branches","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-branches\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-branches/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eSo far we've primarily presented Git as a version control system. Not only is Git a good version control system, it is also a marvelous tool for collaboration and team development. In fact, it was originally designed by Linus Torvalds for coordinating development for the Linux kernel. A primary mechanism through which Git collaboration can effectively be organized is the concept of branches.\u003c/p\u003e\n\u003cp\u003eTwo golden practices in collaborating with \u003ccode\u003egit\u003c/code\u003e are:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eKeep the \u003ccode\u003emaster\u003c/code\u003e \u003cem\u003ebranch\u003c/em\u003e functional at all times\u003c/li\u003e\n\u003cli\u003eKeep lines of work ( \u003cem\u003ebranches\u003c/em\u003e ) separate from each other\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eLet's explore \u003ccode\u003egit\u003c/code\u003e \u003cem\u003ebranches\u003c/em\u003e and we'll come back to review why these golden practices are so helpful.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eExplain branches and their purpose in git\u003c/li\u003e\n\u003cli\u003eCreate a new branch\u003c/li\u003e\n\u003cli\u003eSwitch between branches\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003egit merge\u003c/code\u003e to merge different branches\u003c/li\u003e\n\u003cli\u003eIdentify and fix merge conflicts when merging branches\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eDefine a \u003ccode\u003egit\u003c/code\u003e branch\u003c/h2\u003e\n\u003cp\u003eA \u003ccode\u003egit\u003c/code\u003e branch is a means to separate a new set of commits or edits from another branch. Typically we create a new branch off of \u003ccode\u003emaster\u003c/code\u003e. If all developers we collaborate with honor golden practice 1, we can trust that \u003ccode\u003emaster\u003c/code\u003e will be a safe starting point.\u003c/p\u003e\n\u003cp\u003eWhen we branch, we're creating a separate parallel universe. We can experiment there without any adverse effects to the \u003ccode\u003emaster\u003c/code\u003e branch. It's a contained sandbox where mistakes can be made or ideas can incubate.\u003c/p\u003e\n\u003cp\u003eIt's an idea that a lot of fiction has presented in the last 50 years.\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eParallel Universe\u003c/th\u003e\n\u003cth\u003eSource\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eMirror Dimension\u003c/td\u003e\n\u003ctd\u003eDr. Strange (2016)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDarkest Timeline\u003c/td\u003e\n\u003ctd\u003e\"Community\" / \"Inspector Spacetime\"\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eThe entire premise of..\u003c/td\u003e\n\u003ctd\u003e\"Dr. Who\"\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eMirror, Mirror (Evil Kirk / Spock)\u003c/td\u003e\n\u003ctd\u003eStar Trek\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cem\u003ePlot Against America\u003c/em\u003e\u003c/td\u003e\n\u003ctd\u003ePhilip Roth\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eThe entire plot of...\u003c/td\u003e\n\u003ctd\u003e\"Primer\" (2004)\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eIf you understand multiple-timeline fiction, you get the idea of branches.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://media.giphy.com/media/aorHd4Tl6qIDK/giphy.gif\" alt=\"Annie Edison Says Farewhen to the Inspector\"\u003e\u003c/p\u003e\n\u003cp\u003eBy working in branches, collaborators can work without messing with the main timeline, known as \u003ccode\u003emaster\u003c/code\u003e. OK, so how can we \u003cem\u003eactually\u003c/em\u003e leverage this reality-shattering idea?\u003c/p\u003e\n\u003ch2\u003eCreate a new branch\u003c/h2\u003e\n\u003cp\u003eLet's suppose a \u003ccode\u003emaster\u003c/code\u003e branch with two commits:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-branches/master/images/new_image_git_1.png\"\u003e\u003c/p\u003e\n\u003cp\u003eBest practices suggest that any new set of changes related to fixing a bug, creating a feature, or even messing around with experimental code in a \"sandbox\", should be started on a new branch.\u003c/p\u003e\n\u003cp\u003eIn order to start a new branch, type:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ git branch \u0026lt;new-branch-name\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis creates a new branch. If you wish to see a list of all branches associated with a \u003ccode\u003egit\u003c/code\u003e repo, you can type:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ git branch -a\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIn case of a branch relating to writing a new feature, you could name the branch \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e. Thus: \u003ccode\u003egit branch add-preprocessing-and-normalization\u003c/code\u003e creates a new branch named \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e. This will take the entire commit history of the branch you're on (usually \u003ccode\u003emaster\u003c/code\u003e) and make it the same history as on the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e branch.\u003c/p\u003e\n\u003cp\u003eAt this moment \u003ccode\u003emaster\u003c/code\u003e and \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e \u003cstrong\u003eare the same branches / realities\u003c/strong\u003e etc.\u003c/p\u003e\n\u003ch2\u003eSwitch to a new branch\u003c/h2\u003e\n\u003cp\u003eIn order to start making changes on your new branch, you need to \"check it out.\" After checking a branch out, your commits will be added to that branch's history. You move between branches with:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ git checkout \u0026lt;branch-name\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eProtip\u003c/strong\u003e: You can create and checkout a new branch in one command using: \u003ccode\u003egit checkout -b \u0026lt;new-branch-name\u0026gt;\u003c/code\u003e. This will both create the branch \u003ccode\u003enew-branch-name\u003c/code\u003e and move into it by checking it out.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIf you are currently on \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e, you can move back to \u003ccode\u003emaster\u003c/code\u003e with \u003ccode\u003egit checkout master\u003c/code\u003e. You can also type \u003ccode\u003egit checkout -\u003c/code\u003e in order to move back to the previous branch.\u003c/p\u003e\n\u003cp\u003eWhen you add commits to a branch, you can see the history of the commits by typing:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ git log --graph\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe \u003ccode\u003egit log\u003c/code\u003e command displays the history of commits for the branch you're on. The \u003ccode\u003e--graph\u003c/code\u003e \"flag\" tells \u003ccode\u003egit\u003c/code\u003e to make it pretty, like a timeline. You can use \"Space\" to page down the history of commits. Use \u003ccode\u003eq\u003c/code\u003e to exit.\u003c/p\u003e\n\u003cp\u003eLet's suppose we added two new commits to our new branch. We could visualize it as:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-branches/master/images/new_image_git_2.png\"\u003e\u003c/p\u003e\n\u003cp\u003eTo make sure that you don't lose work, you should make sure all your changes are committed before you switch branches. If you're doing work in \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e that updates \u003ccode\u003emodel.py\u003c/code\u003e, because \u003ccode\u003emaster\u003c/code\u003e \u003cem\u003ealso\u003c/em\u003e has a \u003ccode\u003emodel.py\u003c/code\u003e file, \u003ccode\u003emaster\u003c/code\u003e could overwrite your changes. Make sure all your changes are committed before you switch branches.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eAdvanced\u003c/strong\u003e: \u003ccode\u003egit\u003c/code\u003e has a powerful feature called \u003ccode\u003estash\u003c/code\u003e which can be used when you're ready to hold changes-in-progress. When you're very comfortable with \u003ccode\u003egit\u003c/code\u003e, look into it!\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAs you add more commits on the new branch you're changing \u003cem\u003eonly\u003c/em\u003e the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e reality. The \u003ccode\u003emaster\u003c/code\u003e branch \u003cstrong\u003ewill not be changed\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eYou can confirm this by first checking out \u003ccode\u003emaster\u003c/code\u003e using \u003ccode\u003egit checkout master\u003c/code\u003e, then use \u003ccode\u003egit log --graph\u003c/code\u003e again, and you can see that the \u003ccode\u003emaster\u003c/code\u003e branch \u003cem\u003eonly\u003c/em\u003e has the code up to the moment you \"branched\" into the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e timeline, er, branch.\u003c/p\u003e\n\u003cp\u003eThe code from \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e is safely tucked away in that branch, waiting patiently in isolation from the rest of your code in \u003ccode\u003emaster\u003c/code\u003e until the feature is considered complete. Let's talk about merging these commits into \u003ccode\u003emaster\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003eMerge a branch into master\u003c/h2\u003e\n\u003cp\u003eNow that you have some additions to the code that you'd like to combine back with the \u003ccode\u003emaster\u003c/code\u003e, the goal is to bring the commits that occurred on the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e branch into the \u003ccode\u003emaster\u003c/code\u003e branch. By merging the branch, \u003ccode\u003emaster\u003c/code\u003e will have all of the commits from the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e branch as though those events occurred on the \u003ccode\u003emaster\u003c/code\u003e branch.\u003c/p\u003e\n\u003cp\u003eWhen merging a branch with \u003ccode\u003egit merge\u003c/code\u003e, it's important to be currently working on your target branch, the branch that you want to move the content to of the new branch.\u003c/p\u003e\n\u003cp\u003eThe first step for our \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e merge is to checkout \u003ccode\u003emaster\u003c/code\u003e because that is where you want the commits to end up. You can then use \u003ccode\u003egit merge \u0026lt;branch-to-merge\u0026gt; -m \"message\"\u003c/code\u003e like shown here:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ git checkout master\n$ git merge add-preprocessing-and-normalization -m \"merge in the feature\" \n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eNow the branches have been merged. If you type \u003ccode\u003egit log --graph\u003c/code\u003e, you'll see the commits from the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e branch on your \u003ccode\u003emaster\u003c/code\u003e branch.\u003c/p\u003e\n\u003cp\u003eHere's another way to visualize it:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-branches/master/images/new_image_git_3.png\"\u003e\u003c/p\u003e\n\u003cp\u003eIn this graphic, you might note that a commit happened to \u003ccode\u003emaster\u003c/code\u003e \u003cem\u003ebetween\u003c/em\u003e the two commits that made up our feature branch. The amazing thing is \u003ccode\u003egit\u003c/code\u003e reconciles the \u003ccode\u003emaster\u003c/code\u003e timeline, the additional commit, and the commits in this feature branch. It re-weaves multiple realities together. That is \u003cem\u003eseriously\u003c/em\u003e cool.\u003c/p\u003e\n\u003cp\u003eWhen you're done with a branch that's been merged you can delete it with:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ git branch -d \u0026lt;branch-to-delete\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eMerge conflicts\u003c/h2\u003e\n\u003cp\u003eOccasionally, when merging two branches, you might run into a message similar to this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eAuto-merging \u0026lt;filename\u0026gt;\nCONFLICT (content): Merge conflict in \u0026lt;filename\u0026gt;\nAutomatic merge failed; fix conflicts and then commit the result. \n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWhat happened here? Well, you made changes to the same file (\u003ccode\u003e\u0026lt;filename\u0026gt;\u003c/code\u003e in this case) on both the base and the feature branches, and now Git doesn't know which set of changes to retain. In order to resolve this, you need to manually fix the relevant file. To do this, first open the relevant file. After opening the file, you will see conflict markers -- \u003ccode\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; HEAD\u003c/code\u003e, \u003ccode\u003e=======\u003c/code\u003e, and \u003ccode\u003e\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; branch-name\u003c/code\u003e. These markers indicate which portions of the file have conflicting changes. The markers and the conflicting changes are represented like this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e...\n...\neverthing is fine here\n\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; HEAD\n...\n...\nthis is the portion from the destination branch\n=======\n...\n...\nthis is the portion from the source branch\n\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; branch-name\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAll the lines between \u003ccode\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; HEAD\u003c/code\u003e and \u003ccode\u003e=======\u003c/code\u003e are the conflicting lines from the base branch and all lines between \u003ccode\u003e=======\u003c/code\u003e and \u003ccode\u003e\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; branch-name\u003c/code\u003e are the conflicting lines from the \u003ccode\u003e\u0026lt;branch-name\u0026gt;\u003c/code\u003e branch. Here you can discard the set of conflicting lines of your choice and then delete the conflict markers (\u003ccode\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; HEAD\u003c/code\u003e, \u003ccode\u003e=======\u003c/code\u003e, and \u003ccode\u003e\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; branch-name\u003c/code\u003e). After you do this, add and commit your changes so you can merge the branches without any issues.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eNote: If there are multiple conflicts in the same file, each conflict is surrounded by conflict markers and it is your resposibility to resolve each conflict individually and remove all the conflict markers before you attempt to merge again.\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eKeep your local repo up to date\u003c/h2\u003e\n\u003cp\u003eWhen you are collaborating with several people on a project, it is important that you are always up to date with the changes others are making to the project. Not only will this ensure that you are always working with the latest version of the project, but it will also help reduce merge conflicts!\u003c/p\u003e\n\u003cp\u003eThus your local branches can merge in changes from remote repository branches just like they can do for local branches! To update a list of available branches at a remote we use: \u003ccode\u003egit fetch \u0026lt;remote-name\u0026gt;\u003c/code\u003e. Note this only updates the list of branches from remote repositories and not the local branches themselves. If you want to update the local branches, you have to merge. To give you a preview of what merging a remote branch workflow looks like:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ git fetch origin \n$ git checkout add-preprocessing-and-normalization \n$ git merge origin/laurens-preprocessing \n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAnd now our local \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e has Lauren's ideas woven into it.\u003c/p\u003e\n\u003cp\u003eAlternatively, as a shorthand, you can fetch and then automatically merge the same-named branch from the remote using \u003ccode\u003egit pull \u0026lt;remote-name\u0026gt; \u0026lt;branch-name-to-merge-in\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003eExplain the motivation of the \"Golden Practices\"\u003c/h2\u003e\n\u003cp\u003eAs developers we try to make sure that everyone has a clean place to start from: be that for writing a new feature or fixing a bug. Branching lets us keep \u003ccode\u003emaster\u003c/code\u003e working at all times. If an emergency bug comes up, we know we have a solid foundation to build from. Feature branches also help us look at \u003ccode\u003egit log\u003c/code\u003e and see what the intention of a feature was.\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eGit is a complex tool, and these tools are just scratching the surface for collaborating with people. These workflows are just being introduced to you -- and it may be challenging for the time being. You'll have lots of time to practice them and get used to what each command does. Don't try to cram it all in at once; instead just start to get an understanding of what is at your disposal.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"http://imgs.xkcd.com/comics/git.png\" alt=\"XKCD Git\"\u003e\u003c/p\u003e\n\u003cp\u003eImage courtesy of \u003ca href=\"https://www.xkcd.com/\"\u003exkcd\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eDo not do as stick man suggests!\u003c/em\u003e\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\n\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" title=\"Thumbs up!\" alt=\"thumbs up\" data-repository=\"dsc-git-branches\"\u003e\u003cimg id=\"thumbs-down\" title=\"Thumbs down!\" alt=\"thumbs down\" data-repository=\"dsc-git-branches\"\u003e\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-branches/issues/new\"\u003eTell us here!\u003c/a\u003e\u003c/h5\u003e\n\u003c/footer\u003e","exportId":"collaborating-with-git-branches"},{"id":440143,"title":"Git Merge - Lab","type":"WikiPage","indent":1,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-merge-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-merge-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIt's time to continue to practice your git and bash skills! In this lab, you'll work primarily from the command line in order to create a git repository, create a development branch and practice merging updates into a master copy. Along the way, you'll see how python scripts can be run from the command line and continue to get more familiar with git and bash in general!\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eExplain branches and their purpose in git\u003c/li\u003e\n\u003cli\u003eCreate a new branch\u003c/li\u003e\n\u003cli\u003eSwitch between branches\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003egit merge\u003c/code\u003e to merge different branches\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eCreate a Local Folder to House the Git Repository\u003c/h2\u003e\n\u003cp\u003eTo start, create a folder from the command line. (Be sure to place this in a logical, organized location!)\u003c/p\u003e\n\u003ch2\u003eInitialize Git In Your New Folder\u003c/h2\u003e\n\u003cp\u003eStill working from the command line, navigate into your folder and initialize git!\u003c/p\u003e\n\u003ch2\u003eOptional: Check What's Going On with git status\u003c/h2\u003e\n\u003ch2\u003eCreate a New Python File\u003c/h2\u003e\n\u003cp\u003eFrom the command line type \u003ccode\u003enano numbers.py\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eInside the file that opens write the following:\u003c/p\u003e\n\u003cp\u003e(use 4 spaces for the indentation on the second line) \u003ccode\u003e\nfor i in range(10):\n    print(i**2)\n\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003ePress Ctrl+X to exit and press Y to confirm that you wish to save your changes.\u003c/p\u003e\n\u003ch2\u003eTest Your Python File\u003c/h2\u003e\n\u003cp\u003ePython files can be run from the command line with \u003ccode\u003epython filename\u003c/code\u003e.\u003cbr\u003eSo in this case, let's practice running our super simple script with \u003ccode\u003epython numbers.py\u003c/code\u003e. With luck, you should see the square numbers up through 81.\u003c/p\u003e\n\u003ch2\u003eAdd and Commit Your Changes\u003c/h2\u003e\n\u003cp\u003eAdd and commit (with a comment) your new file.\u003c/p\u003e\n\u003ch2\u003eCreate and Checkout a New Branch\u003c/h2\u003e\n\u003cp\u003eCreate a new branch called cubes and switch to it.\u003c/p\u003e\n\u003ch2\u003eModify the Branch\u003c/h2\u003e\n\u003cp\u003eType \u003ccode\u003enano numbers.py\u003c/code\u003e to open up the file again.\u003c/p\u003e\n\u003cp\u003eChange the file from\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efor i in range(10):\n    print(i**2)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eto\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efor i in range(10):\n    print(i**3)\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eAdd and Commit the Changes to the Cubes Branch\u003c/h2\u003e\n\u003cp\u003eAdd and commit your changes to the cubes branch.\u003c/p\u003e\n\u003ch2\u003eSwitch Back to the Master Branch\u003c/h2\u003e\n\u003cp\u003eNow that we've made development changes in our new branch, we may wish to integrate them back into our master branch such as updating our production code. To do this, we'll switch back to the master branch and then merge the changes we made to our development branch.\u003c/p\u003e\n\u003ch2\u003eMerge the Changes from Cubes\u003c/h2\u003e\n\u003cp\u003eFinally, let's merge the changes from the cubes branch into our master branch.\u003c/p\u003e\n\u003ch2\u003eDo a Couple Sanity Checks\u003c/h2\u003e\n\u003cp\u003eEverything should have gone smoothly, but let's do a couple of checks to be sure. Try running the python file again and observe the output. Take a look a \u003ccode\u003egit status\u003c/code\u003e and see what the output is.\u003c/p\u003e\n\u003ch2\u003eDelete the Development Branch\u003c/h2\u003e\n\u003cp\u003eWhile deleting branches should be cautionary, now that we've merged our changes into the master, we really don't need our development cubes branch anymore. To clean things up, delete the branch.\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eCongratulations! In this lab, you practiced using multiple branches in git and merging your changes together. What's more, we also saw that you can use git locally with no remote connection to GitHub if you wish!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\n\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" title=\"Thumbs up!\" alt=\"thumbs up\" data-repository=\"dsc-git-merge-lab\"\u003e\u003cimg id=\"thumbs-down\" title=\"Thumbs down!\" alt=\"thumbs down\" data-repository=\"dsc-git-merge-lab\"\u003e\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-merge-lab/issues/new\"\u003eTell us here!\u003c/a\u003e\u003c/h5\u003e\n\u003c/footer\u003e","exportId":"git-merge-lab"},{"id":440148,"title":"Git Stash - Lab","type":"WikiPage","indent":1,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-stash-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-stash-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eYou've started to see some of the awesome power of git as a tool for version control and collaboration. Sometimes, workflows aren't quite as linear or straightforward as those examples we've discussed thus far. For example, if both the local and remote versions of a repository have been updated at the same time, you may encounter merge conflicts! Essentially, Git is unsure of which changes to incorporate if both versions of the repository have changed the same line of the same file. In these cases, \u003ccode\u003egit stash\u003c/code\u003e can be a valuable tool: it allows you to \u003cem\u003estash\u003c/em\u003e away your changes for later use!\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse \u003ccode\u003egit stash\u003c/code\u003e to store changes to files\u003c/li\u003e\n\u003cli\u003eIdentify and fix merge conflicts when merging branches\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eGetting started\u003c/h2\u003e\n\u003cp\u003eSince we're doing another Git investigation, let's start by working from our previously created \u003ccode\u003egit\u003c/code\u003e repository from \u003cem\u003eGit Merge - Lab\u003c/em\u003e.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCheck \u003ccode\u003egit status\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eHopefully, you should see the usual:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eOn branch master\nnothing to commit, working tree clean\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIf not, add and commit your changes and recheck \u003ccode\u003egit status\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003eMake some changes\u003c/h2\u003e\n\u003cp\u003eNow that we have a clean working directory, let's muck things up! (Sorry if you already had untracked changes and cleaned them up; it's good practice at the very least!)\u003c/p\u003e\n\u003cp\u003eOnce again, let's modify \u003ccode\u003enumbers.py\u003c/code\u003e. Open up the file from the command line with \u003ccode\u003enano numbers.py\u003c/code\u003e and modify the script so that it prints the fourth power of numbers. The script should look like this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"python\"\u003efor i in range(10):\n    print(i**4)    \n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003eCheck \u003ccode\u003egit status\u003c/code\u003e again\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThis time, you should see something like:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eOn branch master\nChanges not staged for commit:\n  (use \"git add \u0026lt;file\u0026gt;...\" to update what will be committed)\n  (use \"git checkout -- \u0026lt;file\u0026gt;...\" to discard changes in working directory)\n\n    modified:   numbers.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eTry out \u003ccode\u003egit stash\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eNow for our new wizardry! Execute the command \u003ccode\u003egit stash\u003c/code\u003e. Afterward, do another \u003ccode\u003egit status\u003c/code\u003e to see what's going on.\u003c/p\u003e\n\u003ch3\u003eFurther exploration\u003c/h3\u003e\n\u003cp\u003eYou should see that we're back to a clean working tree. You can further see this by using the bash command \u003ccode\u003ecat\u003c/code\u003e which will print the contents of a file to the command line, so in this case, try out \u003ccode\u003ecat numbers.py\u003c/code\u003e. You should see that our file has reverted back to the previous version where we were actually cubing our numbers.\u003c/p\u003e\n\u003cp\u003eSo what happened to our changes? Where did they go? We stashed them. To see stashes, you can use the command \u003ccode\u003egit stash list\u003c/code\u003e. Try it out now.\u003c/p\u003e\n\u003cp\u003eIf you want a few more details about the stash, you can use \u003ccode\u003egit stash show\u003c/code\u003e. Again, give it a try.\u003c/p\u003e\n\u003cp\u003eFinally, if you want to re-implement your stashed changes you can use \u003ccode\u003egit stash apply\u003c/code\u003e. Let's go ahead and reapply our changes (raising numbers to the fourth power rather than the third).\u003c/p\u003e\n\u003cp\u003eOnce you do that, you'll see a message as if we did \u003ccode\u003egit status\u003c/code\u003e, and you'll see that we once again have changes that have not been added or committed. What's more, while we've applied our stash, the stash still exists (you can see this once again with \u003ccode\u003egit stash list\u003c/code\u003e).\u003c/p\u003e\n\u003ch2\u003eSee all of the commit history\u003c/h2\u003e\n\u003cp\u003eAs a friendly reminder, you can see all of the commit history to date with \u003ccode\u003egit log --graph\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003eCreate a new branch\u003c/h2\u003e\n\u003cp\u003eNext, we're going to briefly investigate some merge conflicts. These occur when you have two versions of the same file which both have the same line modified. This typically occurs when merging branches as we cleanly did in the last lab. Here, we'll cause the same behavior to occur by modifying our new branch and then attempting to apply our stashed changes.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a new branch called \u003ccode\u003ebeta\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eOn your new branch, modify \u003ccode\u003enumbers.py\u003c/code\u003e to raise numbers to the 5th power\u003c/li\u003e\n\u003cli\u003eOnce you modify the script, take a look at the state of affairs with \u003ccode\u003egit status\u003c/code\u003e. Then add and commit your changes with an appropriate description\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eMerge Conflicts\u003c/h2\u003e\n\u003cp\u003eNow for the fun part. We're going to create a merge conflict. Execute \u003ccode\u003egit stash apply\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eYou should be presented with a message:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eAuto-merging numbers.py\nCONFLICT (content): Merge conflict in numbers.py\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWhat's more, if you open up \u003ccode\u003enumbers.py\u003c/code\u003e with \u003ccode\u003enano numbers.py\u003c/code\u003e, you'll see some bizarre changes:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-stash-lab/master/images/stash_merge_conflict.png\" width=\"750\"\u003e\u003c/p\u003e\n\u003cp\u003eSo what do all of these symbols mean?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; Updated Upstream\u003c/code\u003e - the beginning of the original branch (beta)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e=======\u003c/code\u003e - the end of the original branch/the beginning of the branch being merged in (our stashed changes)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; Stashed changes\u003c/code\u003e - the end of our stashed changes\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThis is because our new branch and the stashed changes modified the same line of the same file. Specifically, both modified line 2 of the \u003ccode\u003enumbers.py\u003c/code\u003e file. As such, Git is unsure of which version of line 2 we wish to incorporate. It has highlighted this for us, and it‚Äôs now our job to manually modify the file to resolve these conflicts, keeping the version we are interested in.\u003c/p\u003e\n\u003cp\u003eAs a further note, this is why development would generally be separated by files, or at the very least, sections of files; we can avoid merge conflicts and continue to collaborate together working seamlessly on a project.\u003c/p\u003e\n\u003cp\u003eYour \u003ccode\u003enumbers.py\u003c/code\u003e file should now be back to numbers raised the 4th degree as such:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"python\"\u003efor i in range(10):\n    print(i**4)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e(To do this, we simply manually opened up the file with nano and resolved the merge conflicts, including removing the notes left for us by Git.)\u003c/p\u003e\n\u003cp\u003eChecking \u003ccode\u003egit status\u003c/code\u003e, we now see that we have once again modified \u003ccode\u003enumbers.py\u003c/code\u003e. As usual, we can now add and commit those changes to our version history.\u003c/p\u003e\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://www.git-scm.com/docs/git-stash\"\u003eGit Stash Documentation\u003c/a\u003e\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eIn this lesson, we took a look at \u003ccode\u003egit stash\u003c/code\u003e as well as merge conflicts, and how to resolve them. \u003ccode\u003egit stash\u003c/code\u003e is often useful when you need to quickly store away your changes and don't wish to create a new branch; you intend to quickly reintroduce these changes but need to put them to the side for a moment. This can be helpful if the remote repository has been updated and you first need to fetch and pull it, but have already also made some changes locally. In this and other cases, it's often easiest to first just stash the changes and then apply them subsequently. Similarly, we also saw that stashed changes can be applied to multiple branches. Overall, the more you use Git and its myriad of tools, the more options you'll have for organizing and synchronizing your development process.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\n\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" title=\"Thumbs up!\" alt=\"thumbs up\" data-repository=\"dsc-git-stash-lab\"\u003e\u003cimg id=\"thumbs-down\" title=\"Thumbs down!\" alt=\"thumbs down\" data-repository=\"dsc-git-stash-lab\"\u003e\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-stash-lab/issues/new\"\u003eTell us here!\u003c/a\u003e\u003c/h5\u003e\n\u003c/footer\u003e","exportId":"git-stash-lab"},{"id":440153,"title":"Git Resources","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-resources\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-resources/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eNow that you've gotten a solid introduction to git, it's time to give you a resource trove! Take a look at these resources if you want to learn more. They're optional but great to make note of and come back to.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse resources to expand Git and Markdown skills\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eGit and Markdown Resources\u003c/h2\u003e\n\u003ch3\u003eGit Basics\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e(\u003ca href=\"https://gist.github.com/aviflombaum/0d1c335291350a2e4036\"\u003eGist of Git resources\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Getting-Started-A-Short-History-of-Git\"\u003eGetting Started 1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Getting-Started-About-Version-Control\"\u003eGetting Started 2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Basics-Recording-Changes-to-the-Repository\"\u003eGit Basics 1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Basics-Viewing-the-Commit-History\"\u003eViewing The Commit History\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Basics-Working-with-Remotes\"\u003eRemotes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://bloggytoons.com/posts/2013/10/10/git-kitchen-wchef-ramsay\"\u003eGit Kitchen\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Branching-What-a-Branch-Is\"\u003eBranches\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Branching-Basic-Branching-and-Merging\"\u003eMerging\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Branching-Branch-Management\"\u003eBranch Management\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Branching-Branching-Workflows\"\u003eWorkflows\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAdditional Git Resources\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://rogerdudler.github.io/git-guide/\"\u003eGit Guide\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://pcottle.github.io/learnGitBranching/\"\u003eGit Branching\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://marklodato.github.io/visual-git-guide/index-en.html\"\u003eVisual Git\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.youtube.com/watch?v=3QnD2c4Xovk\u0026amp;feature=plcp\"\u003ePublic Private Key Video\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eMarkdown\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://github.github.com/github-flavored-markdown\"\u003eGitHub Flavored Markdown\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://daringfireball.net/projects/markdown/basics\"\u003eDaring Fireball MD Basics\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://daringfireball.net/projects/markdown/syntax\"\u003eDaring Fireball MD Syntax\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://bywordapp.com/markdown/guide.html\"\u003eByword MultiMarkdown Guide\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4\u003eMarkdown plugins and apps\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/revolunet/sublimetext-markdown-preview\"\u003eSublime MD Preview Plugin\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://mouapp.com/\"\u003eMou MD writer app\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://atom.io\"\u003eAtom text editor\u003c/a\u003e has a markdown preview built in.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eNot a lesson in the traditional sense, but a great list of resources for you now or going forward on git resources! (Also of note, Markdown is the text formating used to display readme's on GitHub, hence the .md extension of README.md.) Cheers!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\n\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" title=\"Thumbs up!\" alt=\"thumbs up\" data-repository=\"dsc-git-resources\"\u003e\u003cimg id=\"thumbs-down\" title=\"Thumbs down!\" alt=\"thumbs down\" data-repository=\"dsc-git-resources\"\u003e\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-resources/issues/new\"\u003eTell us here!\u003c/a\u003e\u003c/h5\u003e\n\u003c/footer\u003e","exportId":"git-resources"},{"id":440156,"title":"Quiz: Git Collaboration","type":"Quizzes::Quiz","indent":2,"locked":false,"assignmentExportId":"g0b62797edc80228b9ae7b5c67c55c54e","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"min_score","requiredPoints":3.0,"completed":false,"content":"","exportId":"gc063a86905e9f4ca9cd5caec4b8601e3"},{"id":440174,"title":"Bash and Git - Recap","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-collab-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-collab-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this section you took a look at how Git is used for collaboration as part of a development team. This started by practicing navigating directories using the command line and continued by further investigating Git commands. You also practiced creating and maintaining Git repositories including adding, committing, and pushing changes. You saw how to make multiple branches and then merge changes back into the master branch. You also saw how to navigate merge conflicts when the same line of the same file has been edited in both branches trying to be merged. Make sure you continue to head back to the PEP8 and Git documentation for clarification, review, and learn more commands and arguments or style suggestions.\u003c/p\u003e\n\u003ch2\u003eBash and the command line\u003c/h2\u003e\n\u003cp\u003eRecall some of our primary tools for navigating the command line: \u003ccode\u003ecd\u003c/code\u003e, \u003ccode\u003els\u003c/code\u003e, \u003ccode\u003epwd\u003c/code\u003e, \u003ccode\u003emkdir\u003c/code\u003e, and \u003ccode\u003enano\u003c/code\u003e. You can use \u003ccode\u003ecd ..\u003c/code\u003e to move up a directory level and \u003ccode\u003ecd ~/Documents\u003c/code\u003e for folders starting at the user's home directory. You can use \u003ccode\u003els -a\u003c/code\u003e to view hidden files and \u003ccode\u003els -la\u003c/code\u003e for a long listing of all files. (Again the \u003ccode\u003el\u003c/code\u003e argument is for long form and the \u003ccode\u003ea\u003c/code\u003e in both cases for all files, including those beginning with \u003ccode\u003e.\u003c/code\u003e, indicating that they are hidden.) You can also make directories with the \u003ccode\u003emkdir\u003c/code\u003e command. You saw how to use \u003ccode\u003enano\u003c/code\u003e to make and edit files from the command line. Other editors such as emacs and vim can be worthwhile if you are doing more substantial command line editing.\u003c/p\u003e\n\u003ch2\u003eGit\u003c/h2\u003e\n\u003cp\u003eRemember that Git was not only designed as a version control system, but a means for collaborative development. It was originally released in 2005 by Linus Torvalds, to help facilitate development of the Linux kernel. While there is still much to learn about Git, you saw some of the primary concepts all developers interact with when using Git to collaborate on projects.\u003c/p\u003e\n\u003ch3\u003eGit commands\u003c/h3\u003e\n\u003cp\u003eYou've seen a decent amount of Git commands including \u003ccode\u003egit add\u003c/code\u003e, \u003ccode\u003egit commit\u003c/code\u003e, \u003ccode\u003egit branch\u003c/code\u003e, \u003ccode\u003egit checkout\u003c/code\u003e, and \u003ccode\u003egit merge\u003c/code\u003e. Also its important to know how to access documentation so that you can both review and extend your knowledge. For example, to see a list of git commands in general, start with \u003ccode\u003egit --help\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-collab-recap/master/images/git_help.png\" width=\"700\"\u003e\u003c/p\u003e\n\u003cp\u003eYou can also review individual commands with 'git help ' such as \u003ccode\u003egit help add\u003c/code\u003e (press \u003ccode\u003eq\u003c/code\u003e to quit the documentation.)\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-collab-recap/master/images/git_help_add.png\" width=\"1200\"\u003e\u003c/p\u003e\n\u003cp\u003eIn the synopsis, you can see optional parameters such as in \u003ccode\u003egit add --all\u003c/code\u003e which you previously used before.\u003c/p\u003e\n\u003cp\u003eSimilarly, for the commit documentation, take a look at \u003ccode\u003egit help commit\u003c/code\u003e (and subsequently use \u003ccode\u003eq\u003c/code\u003e to quit.)\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-collab-recap/master/images/git_help_commit.png\" width=\"1000\"\u003e\u003c/p\u003e\n\u003cp\u003eHere, you might notice additional arguments that you can begin to use, such as \u003ccode\u003ea\u003c/code\u003e, which you see listed in the synopsis. Then, if you look under the options header, you will see a full description.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-collab-recap/master/images/git_help_commit_options.png\" width=\"900\"\u003e\u003c/p\u003e\n\u003cp\u003eSo for example, you could combine this with the \u003ccode\u003em\u003c/code\u003e option as \u003ccode\u003egit commit -am \"your commit message\"\u003c/code\u003e. (Indeed this is a useful shortcut; by doing this you can bypass the \u003ccode\u003egit add\u003c/code\u003e command in your workflow in updating files being tracked by Git.)\u003c/p\u003e\n\u003cp\u003eAt some point, you will also run into some trouble with Git and have merge conflicts or other idiosyncrasies between versions of your code. You have seen how Git annotates merge conflicts, and can also use \u003ccode\u003egit stash\u003c/code\u003e to temporarily store changes.\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eOnce again, preliminary tools such as the command line and Git are foundational to managing projects and maintaining code. Similarly, knowing how to access further information quickly is also an indispensable soft skill. Be sure to continue to organize work, modularize, and use version control. Also, keep PEP8 in mind and be thoughtful of how you organize, comment, and structure your code. All of these will make you a better programmer and Data Scientist.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\n\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" title=\"Thumbs up!\" alt=\"thumbs up\" data-repository=\"dsc-git-collab-recap\"\u003e\u003cimg id=\"thumbs-down\" title=\"Thumbs down!\" alt=\"thumbs down\" data-repository=\"dsc-git-collab-recap\"\u003e\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-collab-recap/issues/new\"\u003eTell us here!\u003c/a\u003e\u003c/h5\u003e\n\u003c/footer\u003e","exportId":"bash-and-git-recap"}]},{"id":45642,"name":"Topic 3: Data Analysis in Base Python","status":"started","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g798dff3510ce5c3611d5289919360ea6","items":[{"id":440186,"title":"Topic 3 Lesson Priorities (Live)","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cp\u003e\u003cstrong\u003eThe first lecture in this topic covers content that was introduced in the Pre-Work\u003c/strong\u003e. Be sure to go back and review this content if you feel uncertain about data manipulation with base Python.\u003c/p\u003e\n\u003cp\u003eFor a reminder of how to use these lesson priorities, see \u003ca title=\"How to Use Lesson Priorities (Live)\" href=\"pages/how-to-use-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/how-to-use-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eHow to Use Lesson Priorities (Live)\u003c/a\u003e\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 88.7081%; height: 60px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete Before \u003cem\u003ePython Data Manipulation\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 32.6414%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 2.9876%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003cstrong\u003e\u003ca title=\"Data Analysis in Base Python - Introduction\" href=\"pages/data-analysis-in-base-python-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/data-analysis-in-base-python-introduction\" data-api-returntype=\"Page\"\u003eData Analysis in Base Python - Introduction\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003ca title=\"Short Video: List Comprehensions and Dictionary Comprehensions\" href=\"pages/short-video-list-comprehensions-and-dictionary-comprehensions\" data-api-endpoint=\"pages/short-video-list-comprehensions-and-dictionary-comprehensions\" data-api-returntype=\"Page\"\u003eShort Video: List Comprehensions and Dictionary Comprehensions\u003c/a\u003e\u0026nbsp;\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 88.7081%; height: 147px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003ePython Data Manipulation\u003c/em\u003e Lecture, Before \u003cem\u003eData Analysis with CSV Files\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 32.6414%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 2.9876%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003cstrong\u003e\u003ca title=\"Python Data Manipulation Exit Ticket\" href=\"quizzes/gc29d9ce2ff9c715a75278780ea856aa6\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30567\" data-api-returntype=\"Quiz\"\u003ePython Data Manipulation Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003cstrong\u003e\u003ca title=\"File Input and Output in Python\" href=\"assignments/gf51f7ff13bc3c4e413c7ca73a07fae54\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186730\" data-api-returntype=\"Assignment\"\u003eFile Input and Output in Python\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003cstrong\u003e\u003ca title=\"CSV\" href=\"assignments/g24d05e47f4390531bc8dc930f333d2e9\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186715\" data-api-returntype=\"Assignment\"\u003eCSV\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 32.6414%;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: Data Analysis with Base Python \" href=\"quizzes/g0f269a778bfec639d5bc74b32b8ff84d\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30577\" data-api-returntype=\"Quiz\"\u003eQuiz: Data Analysis with Base Python \u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 88.7081%; height: 263px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eData Analysis with CSV Files\u003c/em\u003e\u0026nbsp;Lecture, Before \u003cem\u003eData Analysis with JSON Files\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 32.6414%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 2.9876%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003cstrong\u003e\u003ca title=\"Data Analysis with CSVs Exit Ticket\" href=\"quizzes/g2a4459472e02be064bae46fe92d56ec5\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30581\" data-api-returntype=\"Quiz\"\u003eData Analysis with CSVs Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003cstrong\u003e\u003ca title=\"JSON\" href=\"assignments/ga04c79d1eaf15c23f148e5d332dde21b\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186744\" data-api-returntype=\"Assignment\"\u003eJSON\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003ca title=\"JSON - Lab\" href=\"assignments/g1cdf2e88ec7422089bef9ddf8b50fc83\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186745\" data-api-returntype=\"Assignment\"\u003eJSON - Lab\u003c/a\u003e\u0026nbsp;\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003cstrong\u003e\u003ca title=\"Working with Known JSON Schemas\" href=\"assignments/gf3caae422ef7dee572f98221d8a62f41\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186789\" data-api-returntype=\"Assignment\"\u003eWorking with Known JSON Schemas\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003ca title=\"Working with Known JSON Schemas - Lab\" href=\"assignments/gbf5a923d347522f919e93620881c0252\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186790\" data-api-returntype=\"Assignment\"\u003eWorking with Known JSON Schemas - Lab\u003c/a\u003e\u0026nbsp;\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003ca title=\"Exploring and Transforming JSON Schemas\" href=\"assignments/gb51784d7a69a0c8c29987cb96607eca0\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186728\" data-api-returntype=\"Assignment\"\u003eExploring and Transforming JSON Schemas\u003c/a\u003e\u0026nbsp;\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"height: 28px; width: 32.6414%;\" width=\"64\"\u003e\u003ca title=\"Exploring and Transforming JSON Schemas - Lab\" href=\"assignments/g2e4f113fb8a929893f5dc33a077850cf\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186729\" data-api-returntype=\"Assignment\"\u003eExploring and Transforming JSON Schemas - Lab\u003c/a\u003e\u0026nbsp;\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 24px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 24px;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: Data Serialization Formats \" href=\"quizzes/g919915f93846219b96688242093bc527\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30585\" data-api-returntype=\"Quiz\"\u003eQuiz: Data Serialization Formats \u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; text-align: center; height: 24px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 88.6145%; height: 104px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eData Analysis with JSON Files\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 32.6414%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 2.9876%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003cstrong\u003e\u003ca title=\"Data Analysis with JSONs Exit Ticket \" href=\"quizzes/g92eed2d6e4f3c5b60a9abd3ec8aff16a\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30565\" data-api-returntype=\"Quiz\"\u003eData Analysis with JSONs Exit Ticket \u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 32.6414%;\"\u003e\u003cstrong\u003e\u003ca title=\"‚≠êÔ∏è Data Serialization Formats - Cumulative Lab\" href=\"quizzes/gd382b571f354991be10756bfc79dd939\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30553\" data-api-returntype=\"Quiz\"\u003e‚≠êÔ∏è Data Serialization Formats - Cumulative Lab\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; text-align: center;\"\u003e\u003cstrong\u003e1st*\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 29px;\"\u003e\u003ca title=\"Data Analysis in Base Python - Recap\" href=\"pages/data-analysis-in-base-python-recap\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/data-analysis-in-base-python-recap\" data-api-returntype=\"Page\"\u003eData Analysis in Base Python - Recap\u003c/a\u003e\u0026nbsp;\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003e*Cumulative labs may be used for pairing exercises and might not be published yet; contact your instructor if you have questions\u003c/strong\u003e\u003c/p\u003e","exportId":"topic-3-lesson-priorities-live"},{"id":440189,"title":"Data Analysis in Base Python - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-analysis-python-intro\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-analysis-python-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-analysis-python-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this section, you'll continue solidifying your knowledge of Python programming, descriptive statistics, and data visualization by performing key data analysis tasks. You will learn how to load data from CSV and JSON files into Python objects in memory, and wrap up with an analysis that joins together two datasets.\u003c/p\u003e  \u003ch2\u003eBase Python\u003c/h2\u003e  \u003cp\u003eWhen we say \"base Python\", this means that we are emphasizing the data types and modules that are part of Python itself, rather than using third-party libraries. For much of this course, you will use numerous Python libraries such as \u003ccode\u003epandas\u003c/code\u003e and StatsModels, but first we want to dig into how data analysis tasks can be performed without them.\u003c/p\u003e  \u003ch3\u003ePython Data Types and Control Structures\u003c/h3\u003e  \u003cp\u003eIn this section, our data is stored in data structures that are built into the Python language: numbers, strings, lists, dictionaries, etc. For example, if we have this table of data:\u003c/p\u003e  \u003ctable\u003e\u003cthead\u003e \u003ctr\u003e \u003cth\u003ecolor\u003c/th\u003e \u003cth\u003enumber\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e\u003ctbody\u003e \u003ctr\u003e \u003ctd\u003egreen\u003c/td\u003e \u003ctd\u003e7\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003ered\u003c/td\u003e \u003ctd\u003e2\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eorange\u003c/td\u003e \u003ctd\u003e1\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e\u003c/table\u003e  \u003cp\u003eA standard way we might represent that table would be a list of dictionaries, where each dictionary represents a row and has the keys \u003ccode\u003ecolor\u003c/code\u003e and \u003ccode\u003enumber\u003c/code\u003e:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003einfo_table = [\u003cbr\u003e    {\"color\": \"green\", \"number\": 7},\u003cbr\u003e    {\"color\": \"red\", \"number\": 2},\u003cbr\u003e    {\"color\": \"orange\", \"number\": 1}\u003cbr\u003e]\u003cbr\u003e\u003cbr\u003etype(info_table) \u003c/code\u003e\u003c/pre\u003e \u003cp\u003elist\u003c/p\u003e  \u003cp\u003eThen if we wanted to print out all of the values associated with the \u003ccode\u003ecolor\u003c/code\u003e keys, the logic would look something like this:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003efor row in info_table:\u003cbr\u003e    print(row[\"color\"]) \u003c/code\u003e\u003c/pre\u003e \u003cp\u003egreen     red     orange\u003c/p\u003e  \u003cp\u003eIn later sections of this course, that same task (printing the list of colors) might look something like this, using the \u003ccode\u003epandas\u003c/code\u003e library:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eimport pandas as pd\u003cbr\u003edf = pd.DataFrame(info_table)\u003cbr\u003etype(df) \u003c/code\u003e\u003c/pre\u003e \u003cp\u003epandas.core.frame.DataFrame\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eprint(df[\"color\"]) \u003c/code\u003e\u003c/pre\u003e \u003cp\u003e0     green     1       red     2    orange     Name: color, dtype: object\u003c/p\u003e  \u003cp\u003eIn the base Python example, we had a variable \u003ccode\u003einfo_table\u003c/code\u003e which was type \u003ccode\u003elist\u003c/code\u003e (a built-in Python type), whereas in the pandas example, we had a variable \u003ccode\u003edf\u003c/code\u003e which was type \u003ccode\u003epandas.core.frame.DataFrame\u003c/code\u003e (a custom type from the pandas library).\u003c/p\u003e  \u003cp\u003eThen to print out the colors, in the base Python example we had a \u003ccode\u003efor\u003c/code\u003e loop and then code to extract the information from each individual dictionary. The string values got printed out without any additional markup. Then in the pandas example we did not have to use a loop (hint: this is \u003cem\u003ebroadcasting\u003c/em\u003e like we saw previously with NumPy) and also we had some extra markup where it printed out the index values as well as \u003ccode\u003eName: color, dtype: object\u003c/code\u003e.\u003c/p\u003e  \u003cp\u003eIn this section you will practice performing data analysis with the first (base Python) format, before eventually learning how to use pandas instead.\u003c/p\u003e  \u003ch3\u003ePython Modules\u003c/h3\u003e  \u003cp\u003eIn addition to the data types used, we will also use built-in Python modules. These modules must be imported, but they are part of Python itself and do not require separate installation.\u003c/p\u003e  \u003cp\u003eThe main modules we will focus on are \u003ccode\u003ecsv\u003c/code\u003e (\u003ca href=\"https://docs.python.org/3/library/csv.html\"\u003edocumentation here\u003c/a\u003e) and \u003ccode\u003ejson\u003c/code\u003e (\u003ca href=\"https://docs.python.org/3/library/json.html\"\u003edocumentation here\u003c/a\u003e).\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eimport csv\u003cbr\u003eimport json \u003c/code\u003e\u003c/pre\u003e \u003ch2\u003eLoading Data from Files\u003c/h2\u003e  \u003cp\u003eWhile trivial example data structures like the one above can be declared directly in Python code, more realistic data comes in the form of a file on disk.\u003c/p\u003e  \u003cp\u003eIn this section you will practice opening data files that use the CSV and JSON formats, then loading them into sensible objects using the \u003ccode\u003ecsv\u003c/code\u003e and \u003ccode\u003ejson\u003c/code\u003e libraries in order to perform additional analysis.\u003c/p\u003e  \u003ch3\u003eCSV Files\u003c/h3\u003e  \u003cp\u003eThe first major file type we will explore is CSV (comma-separated value). For example, this code loads a dataset of 5000 apple trees in an orchard, where the column \u003ccode\u003eyield\u003c/code\u003e represents the total pounds of apples yielded by that tree for a given year.\u003c/p\u003e  \u003cp\u003eYou can think of the table as looking like this, except that it is thousands of lines long:\u003c/p\u003e  \u003ctable\u003e\u003cthead\u003e \u003ctr\u003e \u003cth\u003eyield\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e\u003ctbody\u003e \u003ctr\u003e \u003ctd\u003e39.741234289561504\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e39.872054738763474\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e44.33116416558151\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e46.6006230827385\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e40.694984210927196\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e40.96981882686812\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e\u003c/table\u003e  \u003cp\u003eIn relatively few lines of code, we can perform some key data analysis tasks: counting, measuring central tendency, finding the maximum, and finding the minimum.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003ewith open(\"data/apple_orchard.csv\") as f:\u003cbr\u003e    apple_orchard_data = list(csv.DictReader(f))\u003cbr\u003e    apple_tree_yields = [float(x[\"yield\"]) for x in apple_orchard_data]\u003cbr\u003e    print(\"Total apple tree yields:\", len(apple_tree_yields))\u003cbr\u003e    print(\"Average apple tree yield:\", sum(apple_tree_yields) / len(apple_tree_yields))\u003cbr\u003e    print(\"Maximum apple tree yield:\", max(apple_tree_yields))\u003cbr\u003e    print(\"Minimum apple tree yield:\", min(apple_tree_yields)) \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eTotal apple tree yields: 5000     Average apple tree yield: 42.40762385776258     Maximum apple tree yield: 65.54817042071103     Minimum apple tree yield: 21.93121221285836\u003c/p\u003e  \u003ch3\u003eJSON Files\u003c/h3\u003e  \u003cp\u003eThe second major file type we will explore is JSON (JavaScript object notation). For example, this code loads a dataset of interactions between Twitter users, where each user is represented as a \"node\" and when one tweets at another that connection is represented as a \"link\".\u003c/p\u003e  \u003cp\u003eYou can think of this data as looking like this, although this version is truncated:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e{\u003cbr\u003e  'nodes': [\u003cbr\u003e    {'id': '347457291'},\u003cbr\u003e    {'id': '232762581'},\u003cbr\u003e    {'id': '23678636'},\u003cbr\u003e    {'id': '21278412'},\u003cbr\u003e    {'id': '222040026'},\u003cbr\u003e    {'id': '19579205'},\u003cbr\u003e    {'id': '222957350'},\u003cbr\u003e    {'id': '264013722'},\u003cbr\u003e    ...\u003cbr\u003e  ],\u003cbr\u003e  'links': [\u003cbr\u003e    {'source': '347457291', 'target': '232762581'},\u003cbr\u003e    {'source': '347457291', 'target': '119706266'},\u003cbr\u003e    {'source': '347457291', 'target': '421509544'},\u003cbr\u003e    {'source': '232762581', 'target': '222957350'},\u003cbr\u003e    {'source': '232762581', 'target': '21648607'},\u003cbr\u003e    {'source': '232762581', 'target': '155691033'},\u003cbr\u003e    {'source': '232762581', 'target': '59974294'},\u003cbr\u003e    ...\u003cbr\u003e  ]\u003cbr\u003e  ...\u003cbr\u003e} \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eIn relatively few lines of code, we can count the number of users and find the users who were \"sources\" (the user initiating a tweet that tags someone else) most often and \"targets\" (the user being tagged in a tweet) most often.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003edef build_freq_table(key, links):\u003cbr\u003e    table = {}\u003cbr\u003e    for link in links:\u003cbr\u003e        user = link[key]\u003cbr\u003e        table[user] = table.get(user, 0) + 1\u003cbr\u003e    return table\u003cbr\u003e\u003cbr\u003edef print_top_5(table):\u003cbr\u003e    for k, v in sorted(table.items(), key=lambda x: x[1], reverse=True)[:5]:\u003cbr\u003e        print(f\"User {k}\\t| {v} Tweets\")\u003cbr\u003e\u003cbr\u003ewith open(\"data/twitter_graph.json\") as f:\u003cbr\u003e    twitter_data = json.load(f)\u003cbr\u003e    print(f\"There are {len(twitter_data['nodes'])} users in this dataset\")\u003cbr\u003e    print()\u003cbr\u003e\u003cbr\u003e    links = twitter_data[\"links\"]\u003cbr\u003e    sources = build_freq_table(\"source\", links)\u003cbr\u003e    targets = build_freq_table(\"target\", links)\u003cbr\u003e\u003cbr\u003e    print(\"Top 5 Sources:\")\u003cbr\u003e    print_top_5(sources)\u003cbr\u003e    print()\u003cbr\u003e    print(\"Top 5 Targets:\")\u003cbr\u003e    print_top_5(targets) \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eThere are 99 users in this dataset\u003c/p\u003e  \u003cp\u003eTop 5 Sources:     User 232762581  | 23 Tweets     User 49076695   | 20 Tweets     User 523173553  | 19 Tweets     User 24883888   | 17 Tweets     User 53318310   | 16 Tweets\u003c/p\u003e  \u003cp\u003eTop 5 Targets:     User 169686021  | 13 Tweets     User 23642374   | 12 Tweets     User 25797630   | 11 Tweets     User 25626212   | 11 Tweets     User 21648607   | 10 Tweets\u003c/p\u003e  \u003ch2\u003eWhat About NumPy and Matplotlib?\u003c/h2\u003e  \u003cp\u003eYou can continue using NumPy and Matplotlib as you see fit. For example, if you want to convert a base Python list into a NumPy array because it will help you perform some descriptive analysis task, that is not an issue. You will also need to use Matplotlib in the lessons ahead to create the required visualizations.\u003c/p\u003e  \u003cp\u003eThe main library that you will \u003cem\u003enot\u003c/em\u003e be using extensively is \u003ccode\u003epandas\u003c/code\u003e, which will be introduced in a future section.\u003c/p\u003e  \u003ch2\u003eSummary\u003c/h2\u003e  \u003cp\u003eIn this section you will learn how to load and manipulate CSV and JSON datasets using base Python. This means that we will mainly be using the data structures and modules built into Python, rather than third-party libraries. We also walked through some examples of the kinds of analysis you will be able to perform by the end of this section.\u003c/p\u003e","exportId":"data-analysis-in-base-python-introduction"},{"id":440199,"title":"Short Video: List Comprehensions and Dictionary Comprehensions","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv style=\"padding: 62.5% 0 0 0; position: relative;\"\u003e\u003ciframe style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\" title=\"comprehensions_phase1_gd\" src=\"https://player.vimeo.com/video/713398582?h=e73b68c5ba\u0026amp;badge=0\u0026amp;autopause=0\u0026amp;player_id=0\u0026amp;app_id=58479\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\u003c/div\u003e","exportId":"short-video-list-comprehensions-and-dictionary-comprehensions"},{"id":440201,"title":"Python Data Manipulation Exit Ticket","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"gd98c284b756f6a49ec3fb8921b7a378a","questionCount":8,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"","exportId":"gc29d9ce2ff9c715a75278780ea856aa6"},{"id":440205,"title":"File Input and Output in Python","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-file-io\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-file-io\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-file-io/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll learn about interacting with files in Python. First you'll start by reviewing the core concepts of opening, closing, reading, and writing files, and how this process is similar and different between the familiar GUI software and using Python code. Then you'll walk through some specific examples of reading and writing files with Python, ending with a series of examples using different libraries to open different types of files.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand the core concepts of file I/O\u003c/li\u003e\n\u003cli\u003eRead data from files into Python\u003c/li\u003e\n\u003cli\u003eWrite data from Python into files\u003c/li\u003e\n\u003cli\u003eDescribe key file types and how to interact with them in Python\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gf51f7ff13bc3c4e413c7ca73a07fae54"},{"id":440209,"title":"CSV","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-csv\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-csv\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-csv/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson we will cover the CSV (comma-separated values) data format, one of the most simple and popular data serialization formats used in data science.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe features of the CSV format and the Python \u003ccode\u003ecsv\u003c/code\u003e module\u003c/li\u003e\n\u003cli\u003eUse Python to read and parse data from CSV files\u003c/li\u003e\n\u003cli\u003eInterpret the schemas of CSV files\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g24d05e47f4390531bc8dc930f333d2e9"},{"id":440211,"title":"Quiz: Data Analysis with Base Python ","type":"Quizzes::Quiz","indent":2,"locked":false,"assignmentExportId":"gc07b04a5f68d1d3ba548be39fcabc86c","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"min_score","requiredPoints":3.0,"completed":true,"content":"","exportId":"g0f269a778bfec639d5bc74b32b8ff84d"},{"id":440222,"title":"Data Analysis with CSVs Exit Ticket","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"g338275f019a7c0d0d8ad37cc3bdc010e","questionCount":7,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"","exportId":"g2a4459472e02be064bae46fe92d56ec5"},{"id":440226,"title":"JSON","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-json-v2-1\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll continue investigating new formats for data. Specifically, you'll investigate one of the most popular data formats for the web: JSON files.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe features of the JSON format and the Python \u003ccode\u003ejson\u003c/code\u003e module\u003c/li\u003e\n\u003cli\u003eUse Python to load and parse JSON documents\u003c/li\u003e\n\u003c/ul\u003e","exportId":"ga04c79d1eaf15c23f148e5d332dde21b"},{"id":440229,"title":"JSON - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-json-lab-v2-1\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-lab-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-lab-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll practice navigating JSON data structures.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ePractice using Python to load and parse JSON documents\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g1cdf2e88ec7422089bef9ddf8b50fc83"},{"id":440233,"title":"Working with Known JSON Schemas","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-working-with-known-json-schemas\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-working-with-known-json-schemas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-working-with-known-json-schemas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou've started taking a look at JSON files and you'll continue to explore how to navigate and traverse these files. One common use case of JSON files will be when you are connecting to various websites through their established APIs to retrieve data from them. With these, you are typically given a schema for how the data is structured and then will use this knowledge to retrieve pertinent information.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the JSON module to load and parse JSON documents\u003c/li\u003e\n\u003cli\u003eExtract data using predefined JSON schemas\u003c/li\u003e\n\u003cli\u003eConvert JSON to a pandas dataframe\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gf3caae422ef7dee572f98221d8a62f41"},{"id":440238,"title":"Working with Known JSON Schemas - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-working-with-known-json-schemas-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-working-with-known-json-schemas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-working-with-known-json-schemas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll practice working with JSON files whose schema you know beforehand.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the \u003ccode\u003ejson\u003c/code\u003e module to load and parse JSON documents\u003c/li\u003e\n\u003cli\u003eExtract data using predefined JSON schemas\u003c/li\u003e\n\u003cli\u003eConvert JSON to a pandas dataframe\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gbf5a923d347522f919e93620881c0252"},{"id":440241,"title":"Exploring and Transforming JSON Schemas","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-exploring-and-transforming-json-schemas\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-exploring-and-transforming-json-schemas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-exploring-and-transforming-json-schemas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll formalize your knowledge for how to explore a JSON file whose structure and schema is unknown to you. This often happens in practice when you are handed a file or stumble upon one with little documentation.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the JSON module to load and parse JSON documents\u003c/li\u003e\n\u003cli\u003eExplore and extract data using unknown JSON schemas\u003c/li\u003e\n\u003cli\u003eConvert JSON to a pandas dataframe\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gb51784d7a69a0c8c29987cb96607eca0"},{"id":440246,"title":"Exploring and Transforming JSON Schemas - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-exploring-and-transforming-json-schemas-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-exploring-and-transforming-json-schemas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-exploring-and-transforming-json-schemas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\n\n\u003cp\u003eIn this lab, you'll practice exploring a JSON file whose structure and schema is unknown to you. We will provide you with limited information, and you will explore the dataset to answer the specified question.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the \u003ccode\u003ejson\u003c/code\u003e module to load and parse JSON documents\u003c/li\u003e\n\u003cli\u003eExplore and extract data using unknown JSON schemas\u003c/li\u003e\n\u003cli\u003eConvert JSON to a pandas dataframe\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g2e4f113fb8a929893f5dc33a077850cf"},{"id":440250,"title":"Quiz: Data Serialization Formats ","type":"Quizzes::Quiz","indent":2,"locked":false,"assignmentExportId":"g5d8c9cb706cfc5136854d3bdcd92cb7e","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"min_score","requiredPoints":3.0,"completed":false,"content":"","exportId":"g919915f93846219b96688242093bc527"},{"id":440261,"title":"Data Analysis with JSONs Exit Ticket ","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"ga68cd6ad71853f37986ebc6e5ffad717","questionCount":8,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"","exportId":"g92eed2d6e4f3c5b60a9abd3ec8aff16a"},{"id":440264,"title":"‚≠êÔ∏è Data Serialization Formats - Cumulative Lab","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"g77df2e3160db05dbd597830e669ef696","questionCount":1,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-serialization-lab\" target=\"_blank\"\u003e \u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e \u003c/a\u003e \u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-serialization-lab/issues/new\" target=\"_blank\"\u003e \u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e \u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eWork on this lab on your local computer. If you're not sure how to clone the source code, refer to the instructions in \u003ca title=\"Running Jupyter Notebooks Locally\" href=\"pages/running-jupyter-notebooks-locally\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/running-jupyter-notebooks-locally\" data-api-returntype=\"Page\"\u003eRunning Jupyter Notebooks Locally\u003c/a\u003e.\u003c/p\u003e\n\u003ch3\u003eSubmission Instructions\u003c/h3\u003e\n\u003cp\u003eWhen you are finished with the lab, complete the following steps to submit your work:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSave the changes to the notebook by clicking the Save icon, shown below highlighted in red \u003cbr\u003e\u003cimg src=\"viewer/files/Uploaded%20Media/Screen%20Shot%202021-07-28%20at%205.41.06%20PM.png\" alt=\"Screenshot of Data Serialization Formats Cumulative Lab with red box highlighting the save button\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/files/1863232\" data-api-returntype=\"File\"\u003e\u003c/li\u003e\n\u003cli\u003eClose the notebook browser tab(s)\u003c/li\u003e\n\u003cli\u003eShut down the notebook server by typing control-C in the terminal window where it is currently running\u003c/li\u003e\n\u003cli\u003eCommit your changes in Git by typing \u003cbr\u003e\u003ccode\u003egit commit -am \"Finished lab\"\u003c/code\u003e \u003cbr\u003ein the terminal and hitting Enter\u003c/li\u003e\n\u003cli\u003ePush your changes to GitHub by typing \u003cbr\u003e\u003ccode\u003egit push origin master\u003c/code\u003e \u003cbr\u003ein the terminal and hitting Enter\u003c/li\u003e\n\u003cli\u003eOpen the GitHub view of your fork of the lab in the browser. For example, if your username were \u003ccode\u003ehoffm386\u003c/code\u003e, you would go to \u003ca href=\"https://github.com/hoffm386/dsc-data-serialization-lab\" target=\"_blank\"\u003ehttps://github.com/hoffm386/dsc-data-serialization-lab\u003c/a\u003e in the browser for this particular lab. Click on \u003ccode\u003eindex.ipynb\u003c/code\u003e and double-check that your code updates are there. (The updates will not be in the README, only in the \u003ccode\u003e.ipynb\u003c/code\u003e file.)\u003c/li\u003e\n\u003cli\u003eSubmit the link to your fork of the lab in the textbox on Canvas\u003cbr\u003e\u0026nbsp;\u003cimg src=\"viewer/files/Uploaded%20Media/Screen%20Shot%202021-08-24%20at%206.42.54%20PM.png\" alt=\"Screenshot of \u0026quot;Question 1\u0026quot;, which should appear below the instructions\" width=\"319\" height=\"320\"\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3\u003eTroubleshooting\u003c/h3\u003e\n\u003cp\u003e\u003cspan style=\"background-color: #fbeeb8;\"\u003eIf you are able to submit the URL successfully, you do not need to follow the below steps!\u003c/span\u003e\u003c/p\u003e\n\u003ch4\u003eNot a Git Repository\u003c/h4\u003e\n\u003cp\u003eIf you try to run \u003ccode\u003egit commit -am \"Finished lab\"\u003c/code\u003e and get the error message \u003ccode\u003efatal: not a git repository\u003c/code\u003e, double-check that you are running the code from the correct directory. If you type \u003ccode\u003epwd\u003c/code\u003e in the terminal and hit Enter, the path that is printed out should include the directory of the lab ‚Äî in this case, \u003ccode\u003edsc-data-serialization-lab\u003c/code\u003e. For example, a valid path would be \u003ccode\u003e/Users/myname/Development/DS/dsc-data-serialization-lab\u003c/code\u003e, since that ends with the lab directory, whereas \u003ccode\u003e/Users/myname/Development/DS/\u003c/code\u003e would not be a valid path. Use commands like \u003ccode\u003els\u003c/code\u003e and \u003ccode\u003ecd\u003c/code\u003e to navigate to the appropriate directory, then continue with the steps above, starting with step 4.\u003c/p\u003e\n\u003cp\u003ePermission Denied\u003c/p\u003e\n\u003cp\u003eIf you try to run \u003ccode\u003egit push origin master\u003c/code\u003e and get a \u003ccode\u003ePermission denied\u003c/code\u003e error message, you are likely trying to push to the curriculum version of the lab, not your personal fork. Follow these steps to fix this:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eIn the browser, go to the curriculum repository for this lab by clicking the \u003cimg id=\"1513121\" src=\"viewer/files/Uploaded%20Media/GitHub-Mark-32px.png\" alt=\"GitHub-Mark-32px.png\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/files/1513121\" data-api-returntype=\"File\"\u003e icon above\u003c/li\u003e\n\u003cli\u003eClick the Fork button. If you already have a fork, this will take you to it. If you haven't made a fork yet, this will make the fork and take you to it\u003c/li\u003e\n\u003cli\u003eOn the page of your fork, copy the clone link. For example, \u003ca href=\"https://github.com/hoffm386/dsc-data-serialization-lab.git\" target=\"_blank\"\u003ehttps://github.com/hoffm386/dsc-data-serialization-lab.git\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eBack in the terminal where you were trying to run \u003ccode\u003egit push\u003c/code\u003e, type \u003cbr\u003e\u003ccode\u003egit remote add myfork \u0026lt;URL\u0026gt;\u003c/code\u003e \u003cbr\u003eWhere \u003ccode\u003e\u0026lt;URL\u0026gt;\u003c/code\u003e is replaced with the clone link you copied. For example, \u003ccode\u003egit remote add myfork https://github.com/hoffm386/dsc-data-serialization-lab.git\u003c/code\u003e. Then hit Enter. This means you have created a connection between your local repository and your fork\u003c/li\u003e\n\u003cli\u003eNow, push your code to your fork by typing \u003cbr\u003e\u003ccode\u003egit push myfork master\u003c/code\u003e \u003cbr\u003ein the terminal and hitting Enter\u003c/li\u003e\n\u003cli\u003eProceed with the steps above, starting with step 6\u003c/li\u003e\n\u003c/ol\u003e","exportId":"gd382b571f354991be10756bfc79dd939"},{"id":440267,"title":"Data Analysis in Base Python - Recap","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-analysis-python-recap\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-analysis-python-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-analysis-python-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this section, you started by learning about how Python code interacts with files, and how to use the \u003ccode\u003eopen\u003c/code\u003e built-in function to read data from files on disk into Python objects in memory. Then you learned about the CSV and JSON formats for serializing data, and how to use the built-in \u003ccode\u003ecsv\u003c/code\u003e and \u003ccode\u003ejson\u003c/code\u003e Python modules to parse and extract data from files using those formats.\u003c/p\u003e\n\u003ch2\u003eKey Takeaways\u003c/h2\u003e\n\u003ch3\u003eBase Python\u003c/h3\u003e\n\u003cp\u003eWhile there are many popular third-party libraries used for data analysis with Python, you can create simple, powerful analyses with just the built-in language data types and modules. When working with data in base Python:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eData is stored in familiar data structures such as lists and dictionaries, which are often nested\u003c/li\u003e\n\u003cli\u003eAnalysis is performed using familiar control structures such as \u003ccode\u003efor\u003c/code\u003e loops and \u003ccode\u003eif\u003c/code\u003e statements\u003c/li\u003e\n\u003cli\u003eFiles are opened using the \u003ccode\u003eopen\u003c/code\u003e built-in function, and CSV or JSON files are parsed using the built-in \u003ccode\u003ecsv\u003c/code\u003e or \u003ccode\u003ejson\u003c/code\u003e modules\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLoading Data from Files\u003c/h3\u003e\n\u003cp\u003eAs you were initially learning to work with Python, you often used Python variables that were declared in the code of a Jupyter Notebook, manipulated using that code, then never existed again after that notebook was shut down. These are variables \"in memory\". In many cases data scientists will want to work with larger data files that are saved after the code is finished running. This is data \"on disk\". Python has built-in functionality to facilitate communication between variables in memory and files on disk.\u003c/p\u003e\n\u003cp\u003eKey takeaways:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eVariables \u003cstrong\u003ein memory\u003c/strong\u003e are the current active variables in your code, which go away if you shut down the kernel or shut down your computer\u003c/li\u003e\n\u003cli\u003eFiles \u003cstrong\u003eon disk\u003c/strong\u003e are the things you see printed out when you type \u003ccode\u003els\u003c/code\u003e in the terminal, which persist when you shut down the kernel or shut down your computer\u003c/li\u003e\n\u003cli\u003eThere is no concept like \"editing\" when working with files in Python. You are either reading from the first line to the last line of the file (sometimes all at once), or writing lines one after another\u003c/li\u003e\n\u003cli\u003eIn Python, the typical way to interact with these files is to use the \u003ccode\u003eopen\u003c/code\u003e built-in function\n\u003cul\u003e\n\u003cli\u003eThe first step is identifying the path to the file, which is a string and represents the relative path from the current code execution context to the location of the file on the computer. It is represented as \u003ccode\u003epath_to_file\u003c/code\u003e in the examples below\u003c/li\u003e\n\u003cli\u003eTo open a file for reading, that looks like:\u003cbr\u003e\u003ccode\u003ewith open(path_to_file) as f:\u003c/code\u003e\u003cbr\u003e\u0026nbsp; \u0026nbsp;\u0026nbsp;\u003ccode\u003e# Read data from file object f\n\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eTo open a file for writing, that looks like:\u003cbr\u003e\u003ccode\u003ewith open(path_to_file, \"w\") as f:\u003cbr\u003e\u0026nbsp; \u0026nbsp; # Write data to the file object f\n\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003ewith...:\u003c/code\u003e syntax means that the file is automatically closed after the \u003ccode\u003ewith\u003c/code\u003e block ends. If you use the syntax \u003ccode\u003ef = open(path_to_file)\u003c/code\u003e instead, you also need to call \u003ccode\u003ef.close()\u003c/code\u003e when you are finished working with the file\u003c/li\u003e\n\u003cli\u003eYou will find that some third-party libraries handle opening and closing the files for you. In this case, you only need to identify the file path and do not need to call \u003ccode\u003eopen\u003c/code\u003e and \u003ccode\u003e.close\u003c/code\u003e yourself\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eopen\u003c/code\u003e function assumes that you are working with a file encoded as plain text, such as an unstructured \u003ccode\u003e.txt\u003c/code\u003e file, CSV file, or JSON file. If you are working with a file encoded as bytes, such as a JPEG image, you need to specify a mode of \u003ccode\u003e\"rb\"\u003c/code\u003e to read or \u003ccode\u003e\"wb\"\u003c/code\u003e to write when you call \u003ccode\u003eopen\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eCSV\u003c/h3\u003e\n\u003cp\u003eThe CSV format stands for \"comma-separated values\". It is possibly the most common data serialization format used by data scientists, and we will use it very frequently in this course.\u003c/p\u003e\n\u003cp\u003eKey takeaways:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCSV is a file format. The file names typically end with the extension \u003ccode\u003e.csv\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eCSV is a \u003cstrong\u003eplain text\u003c/strong\u003e format. This means that it is encoded as text that is readable without specialized software, and you can explore the contents using VS Code, Vim, or any other general-purpose editor\u003c/li\u003e\n\u003cli\u003eCSV is a \u003cstrong\u003edelimited\u003c/strong\u003e format. This means that there are characters in the text of the file that are intended to separate the pieces of data from one another\n\u003cul\u003e\n\u003cli\u003eAs you might assume from the name, the most common delimiter is a comma. A line of comma-delimited CSV content representing four pieces of data might look like: \u003ccode\u003e\n10,2,1.5,\"Firstname Lastname\"\n\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eIt is also possible to use some other delimiter. One of the most common is a tab \u003ccode\u003e\\t\u003c/code\u003e, to the extent that there is a name \"TSV\" (tab-separated values) for that specific kind of file. You could also use a pipe \u003ccode\u003e|\u003c/code\u003e, semicolon \u003ccode\u003e;\u003c/code\u003e, or really any other character as long as the markup is consistent and the code knows how to interpret it. Technically all of these files would still be referred to as CSVs, even though the delimiter is not a comma\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIn Python, we can use the \u003ccode\u003ecsv\u003c/code\u003e module to parse data from CSV files (\u003ca href=\"https://docs.python.org/3/library/csv.html\"\u003edocumentation here\u003c/a\u003e)\n\u003cul\u003e\n\u003cli\u003eIf the data file does not contain headings, the \u003ccode\u003ecsv.reader\u003c/code\u003e function works well. It will return a reader iterable that produces a Python list for each row of the file. There is a matching \u003ccode\u003ecsv.writer\u003c/code\u003e option for writing data to files rather than reading data from files\u003c/li\u003e\n\u003cli\u003eIf the data file does contain headings, the \u003ccode\u003ecsv.DictReader\u003c/code\u003e class works well. It will use a reader iterable that produces a Python dictionary for each row of the file. There is a matching \u003ccode\u003ecsv.DictWriter\u003c/code\u003e option\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJSON\u003c/h3\u003e\n\u003cp\u003eThe JSON format stands for \"JavaScript object notation\". It is a widely-adopted format for storing and transferring data between applications, particularly on the web.\u003c/p\u003e\n\u003cp\u003eKey takeaways:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eJSON is a file format. The file names typically end with the extension \u003ccode\u003e.json\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eJSON is a \u003cstrong\u003eplain text\u003c/strong\u003e format, like CSV\u003c/li\u003e\n\u003cli\u003eThe markup of JSON is more complex than CSV. While it typically does contain comma delimiters, it can also contain square brackets (\u003ccode\u003e[\u003c/code\u003e and \u003ccode\u003e]\u003c/code\u003e) and curly braces (\u003ccode\u003e{\u003c/code\u003e and \u003ccode\u003e}\u003c/code\u003e).\n\u003cul\u003e\n\u003cli\u003eFor example, the same line represented as CSV above might look like this in JSON: \u003ccode\u003e\n[10, 2, 1.5, \"Firstname Lastname\"]\n\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eUnlike CSV (which mainly works for \"flat\" tabular data) it is also possible to store nested data with JSON. For example, this comes from the \u003ccode\u003ejson\u003c/code\u003e docs: \u003ccode\u003e\n[\"foo\", {\"bar\": [\"baz\", null, 1.0, 2]}]\n\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIn Python, we can use the \u003ccode\u003ejson\u003c/code\u003e module to parse data from JSON files (\u003ca href=\"https://docs.python.org/3/library/json.html\"\u003edocumentation here\u003c/a\u003e)\n\u003cul\u003e\n\u003cli\u003eTypically you will want to load the entire file contents at once using \u003ccode\u003ejson.load\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eYou can also use \u003ccode\u003ejson.dump\u003c/code\u003e to serialize an object in memory and write it to a file on disk\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eA major part of data science is loading the data, and you just learned the fundamental building blocks of how to do this with Python! In future sections we will cover additional libraries and data formats, but you already have the knowledge to dig up interesting data sets and use Python to answer questions about the data.\u003c/p\u003e","exportId":"data-analysis-in-base-python-recap"}]},{"id":45646,"name":"Topic 4: Data Analysis in Pandas","status":"started","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g8c2df3870940e917de3c16b2e88376b7","items":[{"id":440275,"title":"Topic 4 Lesson Priorities (Live)","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 85.3754%; height: 412px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete Before \u003cem\u003ePandas DataFrames\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 28px;\"\u003e\n\u003cth style=\"width: 53.5903%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.53687%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Data Analysis in Pandas - Introduction\" href=\"pages/data-analysis-in-pandas-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/data-analysis-in-pandas-introduction\" data-api-returntype=\"Page\"\u003eData Analysis in Pandas - Introduction\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Introducing Python Libraries\" href=\"pages/introducing-python-libraries\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/introducing-python-libraries\" data-api-returntype=\"Page\"\u003eIntroducing Python Libraries\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Accessing Data within Pandas\" href=\"assignments/g0a64daf9497a06e8b498a063e05c799c\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186708\" data-api-returntype=\"Assignment\"\u003eAccessing Data within Pandas\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003ca title=\"Accessing Data within Pandas - Lab\" href=\"assignments/g33625ac3776e3bcf751370d9fc3b1723\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186709\" data-api-returntype=\"Assignment\"\u003eAccessing Data within Pandas - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 53.5903%;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: Pandas Fundamentals\" href=\"quizzes/ge4ebebf95dee70ef95a317eb200a8bbc\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30592\" data-api-returntype=\"Quiz\"\u003eQuiz: Pandas Fundamentals\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Importing Data Using Pandas\" href=\"assignments/g6ba2152a25eb0ea3ca4aeb2ddc8d42e4\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186740\" data-api-returntype=\"Assignment\"\u003eImporting Data Using Pandas\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003ca title=\"Importing Data Using Pandas - Lab\" href=\"assignments/gd69ca565852456f473df35aa1070740b\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186741\" data-api-returntype=\"Assignment\"\u003eImporting Data Using Pandas - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 33px;\"\u003e\u003cstrong\u003e\u003ca title=\"Understanding Pandas Series and DataFrames\" href=\"assignments/g340e2dc031191ea636e890ed22a10dc8\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186780\" data-api-returntype=\"Assignment\"\u003eUnderstanding Pandas Series and DataFrames\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 33px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003ca title=\"Understanding Pandas Series and DataFrames - Lab\" href=\"assignments/ga351a61f8d4fc357cea294ffd6742dd7\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186781\" data-api-returntype=\"Assignment\"\u003eUnderstanding Pandas Series and DataFrames - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Statistical Methods in Pandas\" href=\"pages/statistical-methods-in-pandas-2\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/statistical-methods-in-pandas-2\" data-api-returntype=\"Page\"\u003eStatistical Methods in Pandas\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003ca title=\"Statistical Methods in Pandas - Lab\" href=\"assignments/g1e22660ff8e0c256c1c8bd0b38286da1\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186778\" data-api-returntype=\"Assignment\"\u003eStatistical Methods in Pandas - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 28px;\"\u003e\u003ca title=\"Kaggle and The Ames Housing Dataset\" href=\"pages/kaggle-and-the-ames-housing-dataset\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/kaggle-and-the-ames-housing-dataset\" data-api-returntype=\"Page\"\u003eKaggle and The Ames Housing Dataset\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 85.3754%; height: 75px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003ePandas DataFrames\u003c/em\u003e Lecture, Before\u0026nbsp;\u003cem\u003eData Visualization\u0026nbsp;\u003c/em\u003eLecture\u003c/caption\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 28px;\"\u003e\n\u003cth style=\"width: 53.5903%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.53687%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 17px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 17px;\"\u003e\u003cstrong\u003e\u003ca title=\"Pandas DataFrames Exit Ticket\" href=\"quizzes/gc4aa66be11cc73395c3fcdd4e70da7b2\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30569\" data-api-returntype=\"Quiz\"\u003ePandas DataFrames Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center; height: 17px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 17px;\"\u003e\u003ca title=\"Data Visualization with Pandas\" href=\"assignments/g8563fda27ea892529bdc75d88463655b\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186723\" data-api-returntype=\"Assignment\"\u003eData Visualization with Pandas\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 17px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 53.5903%;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: Data Analysis with Pandas\" href=\"quizzes/gcd66c3b1b8dab1f536ef606cdf62ee0b\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30587\" data-api-returntype=\"Quiz\"\u003eQuiz: Data Analysis with Pandas\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 85.3754%; height: 75px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eData Visualization\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 28px;\"\u003e\n\u003cth style=\"width: 53.5903%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.53687%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 12px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 12px;\"\u003e\u003ca title=\"Short Video: Basic Plotting with MatPlotLib\" href=\"pages/short-video-basic-plotting-with-matplotlib\" data-api-endpoint=\"pages/short-video-basic-plotting-with-matplotlib\" data-api-returntype=\"Quiz\"\u003eShort Video: Basic Plotting with MatPlotLib\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center; height: 12px;\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 12px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 12px;\"\u003e\u003cstrong\u003e\u003ca title=\"Data Visualization Exit Ticket\" href=\"quizzes/gd400f6657b84e8ef084f199e3e1fdbc6\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30591\" data-api-returntype=\"Quiz\"\u003eData Visualization Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center; height: 12px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 17px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 17px;\"\u003e\u003cstrong\u003e\u003ca title=\"‚≠êÔ∏è EDA with Pandas - Cumulative Lab\" href=\"quizzes/g82c8665ac84c8238cf8996a60e998020\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30586\" data-api-returntype=\"Quiz\"\u003e‚≠êÔ∏è EDA with Pandas - Cumulative Lab\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center; height: 17px;\"\u003e\u003cstrong\u003e1st*\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 17px;\"\u003e\u003ca title=\"Data Analysis in Pandas - Recap\" href=\"pages/data-analysis-in-pandas-recap\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/data-analysis-in-pandas-recap\" data-api-returntype=\"Page\"\u003eData Analysis in Pandas - Recap\u003c/a\u003e\u0026nbsp;\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 17px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e*Cumulative labs may be used for pairing exercises and might not be published yet; contact your instructor if you have questions\u003c/strong\u003e\u003c/p\u003e","exportId":"topic-4-lesson-priorities-live"},{"id":440278,"title":"Data Analysis in Pandas - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-analysis-pandas-intro\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-analysis-pandas-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-analysis-pandas-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this section, you'll be introduced to pandas, one of the most powerful and widely used libraries for data analysis in Python.\u003c/p\u003e  \u003ch2\u003ePython Libraries\u003c/h2\u003e  \u003cp\u003eIn some cases, such as opening a JSON file to extract a single value, base Python has all of the functionality you need. Other times when the task is more complex, writing your own code to do it can get overwhelming pretty quickly.\u003c/p\u003e  \u003cp\u003eLuckily one of the great benefits of the Python language is that it has a very active open-source community, which means tons of great libraries and frameworks we can use to do the heavy lifting. One of the main reasons that Python is such a great choice for data science is that the scientific community has written plenty of great packages for various advanced purposes. This means that when we use Python, we have access to a wealth of robust, effective tools written and maintained by an army of volunteers and professionals.\u003c/p\u003e  \u003ch2\u003ePandas\u003c/h2\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-analysis-pandas-intro/master/pandas.png\" alt=\"pandas logo\"\u003e\u003c/p\u003e  \u003cp\u003eThe pandas library will likely be your most-used library over the course of this program. It is a flexible, powerful data analysis library that is especially well-suited to handling tabular data (meaning data that is represented as rows and columns). The name is reminiscent of the term \"panel data\" as well as \"Python data analysis\".\u003c/p\u003e  \u003ch3\u003e\u003ccode\u003ecsv.DictReader\u003c/code\u003e to Pandas\u003c/h3\u003e  \u003cp\u003eThe central pandas library feature we will use is the \u003cstrong\u003edataframe\u003c/strong\u003e (also styled DataFrame). A dataframe represents tabular data with an integrated index, so data can be selected an manipulated using rows or columns. For some tasks, this means that the syntax can be significantly simpler and more efficient than the equivalent base Python syntax.\u003c/p\u003e  \u003cp\u003eLet's go over a quick comparison of using pandas vs. the built-in \u003ccode\u003ecsv\u003c/code\u003e module.\u003c/p\u003e  \u003cp\u003eWe'll use this dataset about Olympic track and field medal-winners from \u003ca href=\"https://www.kaggle.com/jayrav13/olympic-track-field-results\"\u003ekaggle\u003c/a\u003e. The first five rows look like this:\u003c/p\u003e  \u003ctable\u003e\u003cthead\u003e \u003ctr\u003e \u003cth\u003eGender\u003c/th\u003e \u003cth\u003eEvent\u003c/th\u003e \u003cth\u003eLocation\u003c/th\u003e \u003cth\u003eYear\u003c/th\u003e \u003cth\u003eMedal\u003c/th\u003e \u003cth\u003eName\u003c/th\u003e \u003cth\u003eNationality\u003c/th\u003e \u003cth\u003eResult\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e\u003ctbody\u003e \u003ctr\u003e \u003ctd\u003eM\u003c/td\u003e \u003ctd\u003e10000M Men\u003c/td\u003e \u003ctd\u003eRio\u003c/td\u003e \u003ctd\u003e2016\u003c/td\u003e \u003ctd\u003eG\u003c/td\u003e \u003ctd\u003eMohamed FARAH\u003c/td\u003e \u003ctd\u003eGBR\u003c/td\u003e \u003ctd\u003e25:05.17\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eM\u003c/td\u003e \u003ctd\u003e10000M Men\u003c/td\u003e \u003ctd\u003eRio\u003c/td\u003e \u003ctd\u003e2016\u003c/td\u003e \u003ctd\u003eS\u003c/td\u003e \u003ctd\u003ePaul Kipngetich TANUI\u003c/td\u003e \u003ctd\u003eKEN\u003c/td\u003e \u003ctd\u003e27:05.64\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eM\u003c/td\u003e \u003ctd\u003e10000M Men\u003c/td\u003e \u003ctd\u003eRio\u003c/td\u003e \u003ctd\u003e2016\u003c/td\u003e \u003ctd\u003eB\u003c/td\u003e \u003ctd\u003eTamirat TOLA\u003c/td\u003e \u003ctd\u003eETH\u003c/td\u003e \u003ctd\u003e27:06.26\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eM\u003c/td\u003e \u003ctd\u003e10000M Men\u003c/td\u003e \u003ctd\u003eBeijing\u003c/td\u003e \u003ctd\u003e2008\u003c/td\u003e \u003ctd\u003eG\u003c/td\u003e \u003ctd\u003eKenenisa BEKELE\u003c/td\u003e \u003ctd\u003eETH\u003c/td\u003e \u003ctd\u003e27:01.17\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eM\u003c/td\u003e \u003ctd\u003e10000M Men\u003c/td\u003e \u003ctd\u003eBeijing\u003c/td\u003e \u003ctd\u003e2008\u003c/td\u003e \u003ctd\u003eS\u003c/td\u003e \u003ctd\u003eSileshi SIHINE\u003c/td\u003e \u003ctd\u003eETH\u003c/td\u003e \u003ctd\u003e27:02.77\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e\u003c/table\u003e  \u003cp\u003eTo open and read the first 5 lines with the \u003ccode\u003ecsv\u003c/code\u003e module, that would look like this:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eimport csv\u003cbr\u003e\u003cbr\u003ewith open(\"olympic_medals.csv\") as f:\u003cbr\u003e    reader = csv.DictReader(f)\u003cbr\u003e    olympics_data = list(reader)\u003cbr\u003e\u003cbr\u003e# Print the first 5 rows of data\u003cbr\u003efor index in range(5):\u003cbr\u003e    print(olympics_data[index]) \u003c/code\u003e\u003c/pre\u003e\u003cpre\u003e\u003ccode\u003e{'Gender': 'M', 'Event': '10000M Men', 'Location': 'Rio', 'Year': '2016', 'Medal': 'G', 'Name': 'Mohamed FARAH', 'Nationality': 'GBR', 'Result': '25:05.17'}\u003cbr\u003e{'Gender': 'M', 'Event': '10000M Men', 'Location': 'Rio', 'Year': '2016', 'Medal': 'S', 'Name': 'Paul Kipngetich TANUI', 'Nationality': 'KEN', 'Result': '27:05.64'}\u003cbr\u003e{'Gender': 'M', 'Event': '10000M Men', 'Location': 'Rio', 'Year': '2016', 'Medal': 'B', 'Name': 'Tamirat TOLA', 'Nationality': 'ETH', 'Result': '27:06.26'}\u003cbr\u003e{'Gender': 'M', 'Event': '10000M Men', 'Location': 'Beijing', 'Year': '2008', 'Medal': 'G', 'Name': 'Kenenisa BEKELE', 'Nationality': 'ETH', 'Result': '27:01.17'}\u003cbr\u003e{'Gender': 'M', 'Event': '10000M Men', 'Location': 'Beijing', 'Year': '2008', 'Medal': 'S', 'Name': 'Sileshi SIHINE', 'Nationality': 'ETH', 'Result': '27:02.77'} \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eWe have a list of dictionaries, where every dictionary has the same keys.\u003c/p\u003e  \u003cp\u003eLet's say we want to select all data for the 3rd \u003cstrong\u003erow\u003c/strong\u003e (record). That's simple enough ‚Äî we can just use list indexing:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eolympics_data[2] \u003c/code\u003e\u003c/pre\u003e\u003cpre\u003e\u003ccode\u003e{'Gender': 'M',\u003cbr\u003e 'Event': '10000M Men',\u003cbr\u003e 'Location': 'Rio',\u003cbr\u003e 'Year': '2016',\u003cbr\u003e 'Medal': 'B',\u003cbr\u003e 'Name': 'Tamirat TOLA',\u003cbr\u003e 'Nationality': 'ETH',\u003cbr\u003e 'Result': '27:06.26'} \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eNow, what if we want to select all data for the 3rd \u003cstrong\u003ecolumn\u003c/strong\u003e (i.e. the values associated with the \u003ccode\u003e'Location'\u003c/code\u003e keys)? That's not impossible, but it will require some kind of loop or list comprehension. Something like this:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e# Cutting it off at 100 for readability\u003cbr\u003eprint([row['Location'] for row in olympics_data][:100]) \u003c/code\u003e\u003c/pre\u003e\u003cpre\u003e\u003ccode\u003e['Rio', 'Rio', 'Rio', 'Beijing', 'Beijing', 'Beijing', 'Sydney', 'Sydney', 'Sydney', 'Barcelona', 'Barcelona', 'Barcelona', 'Los Angeles', 'Los Angeles', 'Los Angeles', 'Montreal', 'Montreal', 'Montreal', 'Mexico', 'Mexico', 'Mexico', 'Rome', 'Rome', 'Rome', 'Helsinki', 'Helsinki', 'Helsinki', 'Berlin', 'Berlin', 'Berlin', 'Amsterdam', 'Amsterdam', 'Amsterdam', 'Antwerp', 'Antwerp', 'Antwerp', 'London', 'London', 'London', 'Athens', 'Athens', 'Athens', 'Atlanta', 'Atlanta', 'Atlanta', 'Moscow', 'Moscow', 'Moscow', 'Munich', 'Munich', 'Munich', 'Tokyo', 'Tokyo', 'Tokyo', 'Melbourne / Stockholm', 'Melbourne / Stockholm', 'Melbourne / Stockholm', 'London', 'London', 'London', 'Los Angeles', 'Los Angeles', 'Los Angeles', 'Paris', 'Paris', 'Paris', 'Stockholm', 'Stockholm', 'Stockholm', 'Rio', 'Rio', 'Rio', 'Beijing', 'Beijing', 'Beijing', 'Sydney', 'Sydney', 'Sydney', 'Barcelona', 'Barcelona', 'Barcelona', 'Los Angeles', 'Los Angeles', 'Los Angeles', 'Montreal', 'Montreal', 'Montreal', 'Mexico', 'Mexico', 'Mexico', 'Rome', 'Rome', 'Rome', 'Helsinki', 'Helsinki', 'Helsinki', 'Berlin', 'Berlin', 'Berlin', 'Amsterdam'] \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eWith pandas, accessing columns is just as simple as accessing rows. For example, if we convert \u003ccode\u003eolympics_data\u003c/code\u003e (a list of dictionaries) in a dataframe, then view the first five rows:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eimport pandas as pd\u003cbr\u003e\u003cbr\u003edf = pd.DataFrame(olympics_data)\u003cbr\u003edf.head() \u003c/code\u003e\u003c/pre\u003e \u003cdiv\u003e \u003cstyle\u003e     .dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     } \u003c/style\u003e \u003ctable border=\"1\" class=\"dataframe\"\u003e   \u003cthead\u003e     \u003ctr style=\"text-align: right;\"\u003e       \u003cth\u003e\u003c/th\u003e       \u003cth\u003eGender\u003c/th\u003e       \u003cth\u003eEvent\u003c/th\u003e       \u003cth\u003eLocation\u003c/th\u003e       \u003cth\u003eYear\u003c/th\u003e       \u003cth\u003eMedal\u003c/th\u003e       \u003cth\u003eName\u003c/th\u003e       \u003cth\u003eNationality\u003c/th\u003e       \u003cth\u003eResult\u003c/th\u003e     \u003c/tr\u003e   \u003c/thead\u003e   \u003ctbody\u003e     \u003ctr\u003e       \u003cth\u003e0\u003c/th\u003e       \u003ctd\u003eM\u003c/td\u003e       \u003ctd\u003e10000M Men\u003c/td\u003e       \u003ctd\u003eRio\u003c/td\u003e       \u003ctd\u003e2016\u003c/td\u003e       \u003ctd\u003eG\u003c/td\u003e       \u003ctd\u003eMohamed FARAH\u003c/td\u003e       \u003ctd\u003eGBR\u003c/td\u003e       \u003ctd\u003e25:05.17\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e1\u003c/th\u003e       \u003ctd\u003eM\u003c/td\u003e       \u003ctd\u003e10000M Men\u003c/td\u003e       \u003ctd\u003eRio\u003c/td\u003e       \u003ctd\u003e2016\u003c/td\u003e       \u003ctd\u003eS\u003c/td\u003e       \u003ctd\u003ePaul Kipngetich TANUI\u003c/td\u003e       \u003ctd\u003eKEN\u003c/td\u003e       \u003ctd\u003e27:05.64\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2\u003c/th\u003e       \u003ctd\u003eM\u003c/td\u003e       \u003ctd\u003e10000M Men\u003c/td\u003e       \u003ctd\u003eRio\u003c/td\u003e       \u003ctd\u003e2016\u003c/td\u003e       \u003ctd\u003eB\u003c/td\u003e       \u003ctd\u003eTamirat TOLA\u003c/td\u003e       \u003ctd\u003eETH\u003c/td\u003e       \u003ctd\u003e27:06.26\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e3\u003c/th\u003e       \u003ctd\u003eM\u003c/td\u003e       \u003ctd\u003e10000M Men\u003c/td\u003e       \u003ctd\u003eBeijing\u003c/td\u003e       \u003ctd\u003e2008\u003c/td\u003e       \u003ctd\u003eG\u003c/td\u003e       \u003ctd\u003eKenenisa BEKELE\u003c/td\u003e       \u003ctd\u003eETH\u003c/td\u003e       \u003ctd\u003e27:01.17\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e4\u003c/th\u003e       \u003ctd\u003eM\u003c/td\u003e       \u003ctd\u003e10000M Men\u003c/td\u003e       \u003ctd\u003eBeijing\u003c/td\u003e       \u003ctd\u003e2008\u003c/td\u003e       \u003ctd\u003eS\u003c/td\u003e       \u003ctd\u003eSileshi SIHINE\u003c/td\u003e       \u003ctd\u003eETH\u003c/td\u003e       \u003ctd\u003e27:02.77\u003c/td\u003e     \u003c/tr\u003e   \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e  \u003cp\u003eWe just imported the pandas library as \u003ccode\u003epd\u003c/code\u003e, the standard alias, then used the \u003ccode\u003eDataFrame\u003c/code\u003e constructor to make a dataframe out of our existing list of dictionaries.\u003c/p\u003e  \u003cp\u003eNow we can extract all of the information from the 3rd column with a simpler syntax:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003edf['Location'] \u003c/code\u003e\u003c/pre\u003e\u003cpre\u003e\u003ccode\u003e0           Rio\u003cbr\u003e1           Rio\u003cbr\u003e2           Rio\u003cbr\u003e3       Beijing\u003cbr\u003e4       Beijing\u003cbr\u003e         ...   \u003cbr\u003e2389     Athens\u003cbr\u003e2390     Athens\u003cbr\u003e2391    Atlanta\u003cbr\u003e2392    Atlanta\u003cbr\u003e2393    Atlanta\u003cbr\u003eName: Location, Length: 2394, dtype: object \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eBut it's also very easy to extract information by row, just like it was with the list of dictionaries:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003edf.iloc[2] \u003c/code\u003e\u003c/pre\u003e\u003cpre\u003e\u003ccode\u003eGender                    M\u003cbr\u003eEvent            10000M Men\u003cbr\u003eLocation                Rio\u003cbr\u003eYear                   2016\u003cbr\u003eMedal                     B\u003cbr\u003eName           Tamirat TOLA\u003cbr\u003eNationality             ETH\u003cbr\u003eResult             27:06.26\u003cbr\u003eName: 2, dtype: object \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eWe can also skip the \u003ccode\u003ecsv\u003c/code\u003e module and \u003ccode\u003eolympics_data\u003c/code\u003e variable altogether, and just read the data from the CSV file directly. All you need to do is specify the file path:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003edf = pd.read_csv(\"olympic_medals.csv\")\u003cbr\u003edf \u003c/code\u003e\u003c/pre\u003e \u003cdiv\u003e \u003cstyle\u003e     .dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     } \u003c/style\u003e \u003ctable border=\"1\" class=\"dataframe\"\u003e   \u003cthead\u003e     \u003ctr style=\"text-align: right;\"\u003e       \u003cth\u003e\u003c/th\u003e       \u003cth\u003eGender\u003c/th\u003e       \u003cth\u003eEvent\u003c/th\u003e       \u003cth\u003eLocation\u003c/th\u003e       \u003cth\u003eYear\u003c/th\u003e       \u003cth\u003eMedal\u003c/th\u003e       \u003cth\u003eName\u003c/th\u003e       \u003cth\u003eNationality\u003c/th\u003e       \u003cth\u003eResult\u003c/th\u003e     \u003c/tr\u003e   \u003c/thead\u003e   \u003ctbody\u003e     \u003ctr\u003e       \u003cth\u003e0\u003c/th\u003e       \u003ctd\u003eM\u003c/td\u003e       \u003ctd\u003e10000M Men\u003c/td\u003e       \u003ctd\u003eRio\u003c/td\u003e       \u003ctd\u003e2016\u003c/td\u003e       \u003ctd\u003eG\u003c/td\u003e       \u003ctd\u003eMohamed FARAH\u003c/td\u003e       \u003ctd\u003eGBR\u003c/td\u003e       \u003ctd\u003e25:05.17\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e1\u003c/th\u003e       \u003ctd\u003eM\u003c/td\u003e       \u003ctd\u003e10000M Men\u003c/td\u003e       \u003ctd\u003eRio\u003c/td\u003e       \u003ctd\u003e2016\u003c/td\u003e       \u003ctd\u003eS\u003c/td\u003e       \u003ctd\u003ePaul Kipngetich TANUI\u003c/td\u003e       \u003ctd\u003eKEN\u003c/td\u003e       \u003ctd\u003e27:05.64\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2\u003c/th\u003e       \u003ctd\u003eM\u003c/td\u003e       \u003ctd\u003e10000M Men\u003c/td\u003e       \u003ctd\u003eRio\u003c/td\u003e       \u003ctd\u003e2016\u003c/td\u003e       \u003ctd\u003eB\u003c/td\u003e       \u003ctd\u003eTamirat TOLA\u003c/td\u003e       \u003ctd\u003eETH\u003c/td\u003e       \u003ctd\u003e27:06.26\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e3\u003c/th\u003e       \u003ctd\u003eM\u003c/td\u003e       \u003ctd\u003e10000M Men\u003c/td\u003e       \u003ctd\u003eBeijing\u003c/td\u003e       \u003ctd\u003e2008\u003c/td\u003e       \u003ctd\u003eG\u003c/td\u003e       \u003ctd\u003eKenenisa BEKELE\u003c/td\u003e       \u003ctd\u003eETH\u003c/td\u003e       \u003ctd\u003e27:01.17\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e4\u003c/th\u003e       \u003ctd\u003eM\u003c/td\u003e       \u003ctd\u003e10000M Men\u003c/td\u003e       \u003ctd\u003eBeijing\u003c/td\u003e       \u003ctd\u003e2008\u003c/td\u003e       \u003ctd\u003eS\u003c/td\u003e       \u003ctd\u003eSileshi SIHINE\u003c/td\u003e       \u003ctd\u003eETH\u003c/td\u003e       \u003ctd\u003e27:02.77\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e...\u003c/th\u003e       \u003ctd\u003e...\u003c/td\u003e       \u003ctd\u003e...\u003c/td\u003e       \u003ctd\u003e...\u003c/td\u003e       \u003ctd\u003e...\u003c/td\u003e       \u003ctd\u003e...\u003c/td\u003e       \u003ctd\u003e...\u003c/td\u003e       \u003ctd\u003e...\u003c/td\u003e       \u003ctd\u003e...\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2389\u003c/th\u003e       \u003ctd\u003eW\u003c/td\u003e       \u003ctd\u003eTriple Jump Women\u003c/td\u003e       \u003ctd\u003eAthens\u003c/td\u003e       \u003ctd\u003e2004\u003c/td\u003e       \u003ctd\u003eS\u003c/td\u003e       \u003ctd\u003eHrysopiyi DEVETZI\u003c/td\u003e       \u003ctd\u003eGRE\u003c/td\u003e       \u003ctd\u003e15.25\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2390\u003c/th\u003e       \u003ctd\u003eW\u003c/td\u003e       \u003ctd\u003eTriple Jump Women\u003c/td\u003e       \u003ctd\u003eAthens\u003c/td\u003e       \u003ctd\u003e2004\u003c/td\u003e       \u003ctd\u003eB\u003c/td\u003e       \u003ctd\u003eTatyana LEBEDEVA\u003c/td\u003e       \u003ctd\u003eRUS\u003c/td\u003e       \u003ctd\u003e15.14\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2391\u003c/th\u003e       \u003ctd\u003eW\u003c/td\u003e       \u003ctd\u003eTriple Jump Women\u003c/td\u003e       \u003ctd\u003eAtlanta\u003c/td\u003e       \u003ctd\u003e1996\u003c/td\u003e       \u003ctd\u003eG\u003c/td\u003e       \u003ctd\u003eInessa KRAVETS\u003c/td\u003e       \u003ctd\u003eUKR\u003c/td\u003e       \u003ctd\u003e15.33\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2392\u003c/th\u003e       \u003ctd\u003eW\u003c/td\u003e       \u003ctd\u003eTriple Jump Women\u003c/td\u003e       \u003ctd\u003eAtlanta\u003c/td\u003e       \u003ctd\u003e1996\u003c/td\u003e       \u003ctd\u003eS\u003c/td\u003e       \u003ctd\u003eInna LASOVSKAYA\u003c/td\u003e       \u003ctd\u003eRUS\u003c/td\u003e       \u003ctd\u003e14.98\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2393\u003c/th\u003e       \u003ctd\u003eW\u003c/td\u003e       \u003ctd\u003eTriple Jump Women\u003c/td\u003e       \u003ctd\u003eAtlanta\u003c/td\u003e       \u003ctd\u003e1996\u003c/td\u003e       \u003ctd\u003eB\u003c/td\u003e       \u003ctd\u003eSarka KASPARKOVA\u003c/td\u003e       \u003ctd\u003eCZE\u003c/td\u003e       \u003ctd\u003e14.98\u003c/td\u003e     \u003c/tr\u003e   \u003c/tbody\u003e \u003c/table\u003e \u003cp\u003e2394 rows √ó 8 columns\u003c/p\u003e \u003c/div\u003e  \u003ch3\u003eFeatures of Pandas\u003c/h3\u003e  \u003cp\u003eThe code snippets above demonstrate two of the library highlights from the pandas \u003ca href=\"https://pandas.pydata.org/about/\"\u003eabout page\u003c/a\u003e:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eA fast and efficient \u003cstrong\u003eDataFrame\u003c/strong\u003e object for data manipulation with integrated indexing;\u003c/li\u003e \u003cli\u003eTools for \u003cstrong\u003ereading and writing data between in-memory data structures and different formats\u003c/strong\u003e: CSV and text files, Microsoft Excel, SQL databases, and the fast HDF5 format;\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eOther highlights include:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eIntelligent data alignment and integrated \u003cstrong\u003ehandling of missing data\u003c/strong\u003e: gain automatic label-based alignment in computations and easily manipulate messy data into an orderly form;\u003c/li\u003e \u003cli\u003eFlexible \u003cstrong\u003ereshaping and pivoting\u003c/strong\u003e of data sets;\u003c/li\u003e \u003cli\u003eIntelligent label-based \u003cstrong\u003eslicing\u003c/strong\u003e, fancy indexing, and \u003cstrong\u003esubsetting\u003c/strong\u003e of large data sets;\u003c/li\u003e \u003cli\u003eAggregating or transforming data with a powerful \u003cstrong\u003egroup by\u003c/strong\u003e engine allowing split-apply-combine operations on data sets;\u003c/li\u003e \u003cli\u003eHigh performance \u003cstrong\u003emerging and joining\u003c/strong\u003e of data sets;\u003c/li\u003e \u003cli\u003e\u003cstrong\u003eTime series\u003c/strong\u003e-functionality: date range generation and frequency conversion, moving window statistics, date shifting and lagging. Even create domain-specific time offsets and join time series without losing data;\u003c/li\u003e \u003cli\u003eHighly \u003cstrong\u003eoptimized for performance\u003c/strong\u003e, with critical code paths written in Cython or C.\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eWe will begin to dive into these features in this section!\u003c/p\u003e","exportId":"data-analysis-in-pandas-introduction"},{"id":440282,"title":"Introducing Python Libraries","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eA library (or a module/package) is a pre-written piece of software that you can re-use rather than having to write that functionality yourself. So instead of having to write the code from scratch to plot a bar chart, you can use the Matplotlib library.\u003c/p\u003e\n\u003cp\u003eIn this lesson, we will look at some of the key libraries used in Python for Data Science.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eExplain the purpose of common Python libraries in the data science toolkit\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003ePython Libraries for Data Science\u003c/h2\u003e\n\u003ch3\u003eScientific Computation\u003c/h3\u003e\n\u003cp\u003eOne of the key requirements for a Data Scientist is to be able to convert data into an easy-to-process format. Data, represented inside a computer, may become too large to be processed efficiently by Python's native lists and dictionaries and using Python's built-in methods. The following libraries add scientific computation abilities to Python for working efficiently with larger data sets.\u003c/p\u003e\n\u003ch3\u003eNumPy\u003c/h3\u003e\n\u003cp\u003eIn Python, the most fundamental package used for scientific computation is \u003cstrong\u003eNumPy\u003c/strong\u003e (Numerical Python). It provides lots of useful functionality for mathematical operations on vectors and matrices in Python. Matrix computation is the primary strength of NumPy.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/numpy.jpeg\" width=\"250\"\u003e\u003c/p\u003e\n\u003cp\u003eThe library provides these mathematical operations using the NumPy \u003cstrong\u003earray\u003c/strong\u003e data type, which enhances performance and speeds up execution when compared to Python's default methods and data types. It contains among other things:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA powerful N-dimensional array object\u003c/li\u003e\n\u003cli\u003eSophisticated (broadcasting) functions\u003c/li\u003e\n\u003cli\u003eTools for integrating C/C++ and Fortran code\u003c/li\u003e\n\u003cli\u003eUseful linear algebra, Fourier transform, and random number capabilities\u003c/li\u003e\n\u003cli\u003eBesides its obvious scientific uses, NumPy can also be used as an efficient multi-dimensional container of generic data. Arbitrary data-types can be defined. This allows NumPy to seamlessly and speedily integrate with a wide variety of databases.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNumpy is also used as a foundation for other, more advanced, libraries as we shall see below.\u003c/p\u003e\n\u003ch3\u003eSciPy\u003c/h3\u003e\n\u003cp\u003eIn the Data Science domain, Python‚Äôs SciPy stack (a collection of software specifically designed for scientific computing) is used heavily for conducting scientific experiments. The SciPy library is as an integral part of this stack.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/scipy.png\" width=\"150\"\u003e\u003c/p\u003e\n\u003cp\u003eSciPy is a library of software for engineering and science applications and contains functions for \u003cstrong\u003elinear algebra\u003c/strong\u003e, \u003cstrong\u003eoptimization\u003c/strong\u003e, \u003cstrong\u003eintegration\u003c/strong\u003e, and \u003cstrong\u003estatistics\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eThe functionality of the SciPy library is built on top of NumPy, and its data structures make heavy use of NumPy. It provides efficient numerical computational routines and comes packaged with a number of specific submodules. The following are a few modules from this library which are very commonly applied to Data Science experiments:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003estats\u003c/code\u003e: Statistical functions\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003elinalg\u003c/code\u003e: Linear algebra routines\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003efftpack\u003c/code\u003e: Discrete Fourier transform algorithms\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003esignal\u003c/code\u003e: Signal processing tools\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eoptimize\u003c/code\u003e: Optimization algorithms including linear programming\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eStatsmodels\u003c/h3\u003e\n\u003cp\u003eStatsmodels is a library for Python that enables its users to conduct data exploration via the use of various methods of estimation of statistical models and performing statistical assertions and analysis.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/statsmodels-logo-300.png\" width=\"250\"\u003e\u003c/p\u003e\n\u003cp\u003eOne of the many useful features it provides is a comprehensive set of descriptive statistics. The library provides insights when diagnosing issues with linear regression models, generalized linear models, discrete choice models, robust linear models, and time series analysis models with various estimators.\u003c/p\u003e\n\u003cp\u003eThe library also provides extensive plotting functions that are designed specifically for statistical analysis and are optimized for good performance with large data sets.\u003c/p\u003e\n\u003ch3\u003ePandas\u003c/h3\u003e\n\u003cp\u003ePandas is a Python package designed to work with ‚Äúrelational‚Äù data and helps replicates the functionality of relational databases in a simple and intuitive way. Pandas is a great tool for data wrangling. It is designed for quick and easy data cleansing, manipulation, aggregation, and visualization.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/pandas-300x300.jpg\" width=\"200\"\u003e\u003c/p\u003e\n\u003cp\u003eThere are two main data structures in the library:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e‚ÄúSeries‚Äù - one-dimensional\u003c/li\u003e\n\u003cli\u003e‚ÄúDataFrames‚Äù - two-dimensional\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThese data types can be manipulated in a number of ways for analytical needs. Here are a few ways in which Pandas may come in handy:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eEasily delete and add columns from DataFrame\u003c/li\u003e\n\u003cli\u003eConvert data structures to DataFrame objects\u003c/li\u003e\n\u003cli\u003eHandle missing data and outliers\u003c/li\u003e\n\u003cli\u003ePowerful grouping and aggregation functionality\u003c/li\u003e\n\u003cli\u003eOffers visualization functionality to plot complex statistical visualizations on the go\u003c/li\u003e\n\u003cli\u003eThe data structures in Pandas are highly compatible with most of the other libraries\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eData Visualization\u003c/h2\u003e\n\u003cp\u003eData visualization is one of the most common tasks that Data Scientists have to perform. Traditionally, drawing visualizations would involve providing pixel level details and complex mathematical functions to create the plots. Luckily, Python has good library support for data visualization from plotting routine visualizations in Matplotlib, to developing graphical dashboards in Plotly and Bokeh. In this course, we will cover the following graphical packages:\u003c/p\u003e\n\u003ch3\u003eMatplotLib\u003c/h3\u003e\n\u003cp\u003eMatplotlib is another SciPy stack package and a library that is tailored for the generation of simple and powerful visualizations. It is a sophisticated package which is making Python (with the help of NumPy, SciPy, and Pandas) an industry standard analytics tool.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/matplotlib.png\" width=\"300\"\u003e\u003c/p\u003e\n\u003cp\u003eMatplotlib is a flexible plotting library for creating interactive 2D and 3D plots that can also be saved as manuscript-quality figures. The API in many ways reflects that of MATLAB, easing the transition of MATLAB users to Python. Many examples, along with the source code to re-create them, are available in the Matplotlib gallery. With a bit of effort you can make just about any visualization, including:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eLine plots\nScatter plots\nBar charts and Histograms\nPie charts\nStem plots\nContour plots\nQuiver plots\nSpectrograms\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThere are also facilities for creating labels, grids, legends, and many other formatting entities with Matplotlib. Basically, everything is customizable.\u003c/p\u003e\n\u003cp\u003eThe library, however, is pretty low-level which means that you will need to write more code for advanced visualizations and will generally need more effort.\u003c/p\u003e\n\u003ch3\u003eSeaborn\u003c/h3\u003e\n\u003cp\u003eSeaborn is complementary to Matplotlib and it specifically targets statistical data visualizations, which may be more time-consuming to implement using Matplotlib. Seaborn extends the functionality of Matplotlib and that‚Äôs why it can address the two biggest issues with Matplotlib - the quality of plots and parameter defaults. A full overview of Seaborn's capabilities (as the image below) can be found \u003ca href=\"https://seaborn.pydata.org/examples/index.html\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/seaborn_2.png\" width=\"500\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf Matplotlib \"tries to make easy things easy and hard things possible,\" then Seaborn tries to make a well-defined set of hard things easy too.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSince Seaborn complements and extends Matplotlib, if you know Matplotlib, you‚Äôll already have most of Seaborn down. Your plots with Seaborn will be more attractive, need less time to create, and will reveal more information.\u003c/p\u003e\n\u003ch2\u003eMachine Learning\u003c/h2\u003e\n\u003ch3\u003eScikit-Learn\u003c/h3\u003e\n\u003cp\u003eScikits are Scientific \"kits\" on top of the SciPy stack. These are designed to add specific functionality to SciPy like image processing and machine learning facilitation. For machine learning, one of the most heavily used packages is \u003cstrong\u003escikit-learn\u003c/strong\u003e. The package makes heavy use of its mathematical operations to model and test complex computational algorithms.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/sklearn.png\" width=\"200\"\u003e\u003c/p\u003e\n\u003cp\u003eScikit-learn (sometimes abbreviated to sklearn) offers a consistent interface to common Machine Learning (ML) algorithms, making it simple to bring ML into production systems. The library combines quality code and good documentation, ease of use and high performance, and has become industry standard for machine learning with Python. The image below highlights the key machine learning algorithms that come packaged with sklearn for problems in classification, regression, clustering, and dimensionality reduction. You can find an interactive version of the machine learning map below \u003ca href=\"https://scikit-learn.org/stable/tutorial/machine_learning_map/index.html\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/drop_shadows_background.png\" width=\"850\"\u003e\u003c/p\u003e\n\u003ch2\u003eDeep Learning‚Ää (Keras / TensorFlow)\u003c/h2\u003e\n\u003cp\u003eFor Deep Learning, one of the most popular and convenient libraries for Python is Keras, which builds on top of TensorFlow.\u003c/p\u003e\n\u003ch3\u003eTensorFlow\u003c/h3\u003e\n\u003cp\u003eDeveloped by a team of ML experts at Google, TensorFlow is an open-source library of data flow graph computations, which are fine-tuned for heavy duty Machine Learning. TensorFlow was designed to meet the performance requirements of Google for training Deep Neural Networks in order to analyze visual and textual data. However, TensorFlow isn't limited to scientific use - it is general enough to use in a variety of real-world applications.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/tf.png\" width=\"320\"\u003e\u003c/p\u003e\n\u003cp\u003eThe key feature of TensorFlow is its multi-layered nodes system that enables quick training of artificial neural networks on big data. This is the library that powers Google‚Äôs voice recognition and object recognition in real time.\u003c/p\u003e\n\u003ch3\u003eKeras\u003c/h3\u003e\n\u003cp\u003eKeras is an open-source library for building Neural Networks with a high-level of interface abstraction. The Keras library is written in Python so Python developers find it much easier to start coding for deep networks in Keras than Tensorflow, which demands a deeper understanding of graph computation. Keras is much more minimalistic and straightforward while still being highly extensible. Under the hood, it can use either Theano (another deep learning library) or TensorFlow.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/keras.jpg\" width=\"320\"\u003e\u003c/p\u003e\n\u003cp\u003eKeras is really easy to get started with and for quick prototyping, it is highly modular and extensible. Notwithstanding its ease, simplicity, and high-level orientation, Keras is still deep and powerful enough for serious modeling. In the deep learning section of our course, we will introduce you to Keras to help you dive into deep neural networks.\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eA big part of your journey as a Data Scientist will be building comfort and familiarity with the key Python Data Science libraries that we've outlined in this lesson. As the course progresses, you'll get plenty of hands-on experience with each one of them!\u003c/p\u003e","exportId":"introducing-python-libraries"},{"id":440286,"title":"Accessing Data within Pandas","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-accessing-data-with-pandas\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-accessing-data-with-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-accessing-data-with-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we're going to dig into various methods for accessing data from our Pandas Series and DataFrames.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse pandas methods and attributes to access information about a dataset\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eIndex pandas dataframes with .loc, .iloc, and column names\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eUse a boolean mask to index pandas series and dataframes \u003c/li\u003e\n\u003c/ul\u003e","exportId":"g0a64daf9497a06e8b498a063e05c799c"},{"id":440291,"title":"Accessing Data within Pandas - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-accessing-data-with-pandas-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-accessing-data-with-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-accessing-data-with-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll look at a dataset which contains information on World Cup matches. Let's use the pandas commands learned in the previous lesson to learn more about our data!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse pandas methods and attributes to access information about a dataset \u003c/li\u003e\n\u003cli\u003eIndex pandas dataframes with .loc, .iloc, and column names \u003c/li\u003e\n\u003cli\u003eUse a boolean mask to index pandas series and dataframes\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g33625ac3776e3bcf751370d9fc3b1723"},{"id":440294,"title":"Quiz: Pandas Fundamentals","type":"Quizzes::Quiz","indent":2,"locked":false,"assignmentExportId":"gb7786a7f42e192c1b3faa970583b0afe","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"min_score","requiredPoints":3.0,"completed":true,"content":"","exportId":"ge4ebebf95dee70ef95a317eb200a8bbc"},{"id":440298,"title":"Importing Data Using Pandas","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-importing-data-using-pandas\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-importing-data-using-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-importing-data-using-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003ePandas is a popular library for efficiently wrangling data. It is particularly optimized to work with two-dimensional tabular data that is organized in rows and columns. In this lesson, you will learn how to import tabular data as a Pandas DataFrame object, how to access and manipulate the data in DataFrame objects, and how to export DataFrames to some common file formats. \u003c/p\u003e\n\n\u003cp\u003eFor more information on Pandas, refer to \u003ca href=\"https://pandas.pydata.org/pandas-docs/stable/\"\u003ehttps://pandas.pydata.org/pandas-docs/stable/\u003c/a\u003e .\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse pandas to import data from a CSV and and an Excel spreadsheet\u003c/li\u003e\n\u003cli\u003eUse pandas to export a DataFrame to a file\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g6ba2152a25eb0ea3ca4aeb2ddc8d42e4"},{"id":440302,"title":"Importing Data Using Pandas - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-importing-data-using-pandas-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-importing-data-using-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-importing-data-using-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll get some practice with loading files with summary or metadata, and if you find that easy, the optional \"level up\" content covers loading data from a corrupted csv file!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse pandas to import data from a CSV and and an Excel spreadsheet\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gd69ca565852456f473df35aa1070740b"},{"id":440305,"title":"Understanding Pandas Series and DataFrames","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-pandas-series-and-dataframes\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-series-and-dataframes\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-series-and-dataframes/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we're digging into \u003ccode\u003eSeries\u003c/code\u003e and \u003ccode\u003eDataFrames\u003c/code\u003e, the two main data types you'll work with in the pandas library.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the \u003ccode\u003e.map()\u003c/code\u003e and \u003ccode\u003e.apply()\u003c/code\u003e methods to apply a function to a pandas Series or DataFrame \u003c/li\u003e\n\u003cli\u003ePerform operations to change the structure of pandas DataFrames \u003c/li\u003e\n\u003cli\u003eChange the index of a pandas DataFrame \u003c/li\u003e\n\u003cli\u003eChange data types of columns in pandas DataFrames \u003c/li\u003e\n\u003c/ul\u003e","exportId":"g340e2dc031191ea636e890ed22a10dc8"},{"id":440309,"title":"Understanding Pandas Series and DataFrames - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-pandas-series-and-dataframes-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-series-and-dataframes-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-series-and-dataframes-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, let's get some hands-on practice working with data cleanup using Pandas.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the \u003ccode\u003e.map()\u003c/code\u003e and \u003ccode\u003e.apply()\u003c/code\u003e methods to apply a function to a pandas Series or DataFrame \u003c/li\u003e\n\u003cli\u003ePerform operations to change the structure of pandas DataFrames \u003c/li\u003e\n\u003cli\u003eChange the index of a pandas DataFrame \u003c/li\u003e\n\u003cli\u003eChange data types of columns in pandas DataFrames \u003c/li\u003e\n\u003c/ul\u003e","exportId":"ga351a61f8d4fc357cea294ffd6742dd7"},{"id":440312,"title":"Statistical Methods in Pandas","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-statistical-methods-in-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-statistical-methods-in-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll learn how to use some of the key summary statistics methods in Pandas.\u003c/p\u003e\n\n\u003ch2\u003eObjectives:\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCalculate summary statistics for a series and DataFrame \u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003e.apply()\u003c/code\u003e or \u003ccode\u003e.applymap()\u003c/code\u003e methods to apply a function to a pandas series or DataFrame\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eGetting DataFrame-Level Summary Statistics\u003c/h2\u003e\n\n\u003cp\u003eWhen working with a new dataset, the first step is always to begin to understand what makes up that dataset. The Pandas DataFrame class contains two built-in methods that make this very easy for us. \u003c/p\u003e\n\n\u003ch3\u003eUsing \u003ccode\u003edf.info()\u003c/code\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eThe \u003ccode\u003edf.info()\u003c/code\u003e method provides us with summary \u003cstrong\u003e\u003cem\u003emetadata\u003c/em\u003e\u003c/strong\u003e about our DataFrame -- that is, it gives us data about our dataset, such as how many rows and columns it contains, and what data types they are stored as.  Let's demonstrate this by reading in the Titanic dataset and calling the \u003ccode\u003e.info()\u003c/code\u003e method on the DataFrame. \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003eimport pandas as pd\ndf = pd.read_csv('titanic.csv', index_col=0)\ndf.info()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e\u0026lt;class 'pandas.core.frame.DataFrame'\u0026gt;\nInt64Index: 891 entries, 0 to 890\nData columns (total 12 columns):\nPassengerId    891 non-null int64\nSurvived       891 non-null int64\nPclass         891 non-null object\nName           891 non-null object\nSex            891 non-null object\nAge            714 non-null float64\nSibSp          891 non-null int64\nParch          891 non-null int64\nTicket         891 non-null object\nFare           891 non-null float64\nCabin          204 non-null object\nEmbarked       889 non-null object\ndtypes: float64(2), int64(4), object(6)\nmemory usage: 90.5+ KB\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eAs we can see from the output above, the \u003ccode\u003e.info()\u003c/code\u003e method provides us with great information about the characteristics of the DataFrame, without telling us anything about the data it actually contains. \u003c/p\u003e\n\n\u003cp\u003eExamine the output above, and take note of the important things it tells us about the DataFrame, such as:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe number of columns and rows in the DataFrame\u003c/li\u003e\n\u003cli\u003eThe data type of the data each column contains\u003c/li\u003e\n\u003cli\u003eHow many values each column contains (NaNs are not counted)\u003c/li\u003e\n\u003cli\u003eThe memory footprint of the DataFrame\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThis sort of information about a dataset is called \u003cstrong\u003e\u003cem\u003emetadata\u003c/em\u003e\u003c/strong\u003e, since it's data about our data. \u003c/p\u003e\n\n\u003ch3\u003eUsing \u003ccode\u003e.describe()\u003c/code\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eThe next step in Exploratory Data Analysis (EDA) is usually to dig into the summary statistics of the dataset, and get a feel for the data each column contains.  Rather than force us to deal with the tedium of doing this individually for every column, Pandas DataFrames provide the handy \u003ccode\u003edf.describe()\u003c/code\u003e method which calculates the basic summary statistics for each column for us automatically. \u003c/p\u003e\n\n\u003cp\u003eSee the example in the cell below.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.describe()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cdiv\u003e\n\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003ePassengerId\u003c/th\u003e\n      \u003cth\u003eSurvived\u003c/th\u003e\n      \u003cth\u003eAge\u003c/th\u003e\n      \u003cth\u003eSibSp\u003c/th\u003e\n      \u003cth\u003eParch\u003c/th\u003e\n      \u003cth\u003eFare\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003ecount\u003c/th\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n      \u003ctd\u003e714.000000\u003c/td\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003emean\u003c/th\u003e\n      \u003ctd\u003e446.000000\u003c/td\u003e\n      \u003ctd\u003e0.383838\u003c/td\u003e\n      \u003ctd\u003e29.699118\u003c/td\u003e\n      \u003ctd\u003e0.523008\u003c/td\u003e\n      \u003ctd\u003e0.381594\u003c/td\u003e\n      \u003ctd\u003e32.204208\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003estd\u003c/th\u003e\n      \u003ctd\u003e257.353842\u003c/td\u003e\n      \u003ctd\u003e0.486592\u003c/td\u003e\n      \u003ctd\u003e14.526497\u003c/td\u003e\n      \u003ctd\u003e1.102743\u003c/td\u003e\n      \u003ctd\u003e0.806057\u003c/td\u003e\n      \u003ctd\u003e49.693429\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003emin\u003c/th\u003e\n      \u003ctd\u003e1.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e0.420000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e25%\u003c/th\u003e\n      \u003ctd\u003e223.500000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e20.125000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e7.910400\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e50%\u003c/th\u003e\n      \u003ctd\u003e446.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e28.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e14.454200\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e75%\u003c/th\u003e\n      \u003ctd\u003e668.500000\u003c/td\u003e\n      \u003ctd\u003e1.000000\u003c/td\u003e\n      \u003ctd\u003e38.000000\u003c/td\u003e\n      \u003ctd\u003e1.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e31.000000\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003emax\u003c/th\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n      \u003ctd\u003e1.000000\u003c/td\u003e\n      \u003ctd\u003e80.000000\u003c/td\u003e\n      \u003ctd\u003e8.000000\u003c/td\u003e\n      \u003ctd\u003e6.000000\u003c/td\u003e\n      \u003ctd\u003e512.329200\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\n\u003cp\u003eAs we can see, the output of the \u003ccode\u003e.describe()\u003c/code\u003e method is very handy, and gives us relevant information such as:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ea \u003ccode\u003ecount\u003c/code\u003e of the number of values in each column, making it identify columns with missing values\u003c/li\u003e\n\u003cli\u003eThe mean and standard deviation of each column\u003c/li\u003e\n\u003cli\u003eThe minimum and maximum values found in each column\u003c/li\u003e\n\u003cli\u003eThe median (50%) and quartile values (25% \u0026amp; 75%) for each column\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eUse the \u003ccode\u003e.describe()\u003c/code\u003e method to quickly help you get a feel for your datasets when you start the Exploratory Data Analysis process. \u003c/p\u003e\n\n\u003ch2\u003eCalculating Individual Column Statistics\u003c/h2\u003e\n\n\u003cp\u003eIf we need to calculate individual statistics about a column, we can also do this easily.  Pandas DataFrames and Series objects come with a plethora of built-in methods to instantly calculate summary statistics for us. \u003c/p\u003e\n\n\u003cp\u003eSee the code blocks below for examples:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.mean()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003ePassengerId    446.000000\nSurvived         0.383838\nAge             29.699118\nSibSp            0.523008\nParch            0.381594\nFare            32.204208\ndtype: float64\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Fare'].mean()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e32.2042079685746\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Age'].quantile(.9)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e50.0\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Age'].median()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e28.0\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThere are many different statistical methods built into Pandas DataFrames -- these are just a few! We will not list all of them, but here are some common ones you'll probably make use of early and often:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003e.mode()\u003c/code\u003e -- the mode of the column\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.count()\u003c/code\u003e -- the count of the total number of entries in a column\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.std()\u003c/code\u003e --  the standard deviation for the column\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.var()\u003c/code\u003e -- the variance for the column\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.sum()\u003c/code\u003e -- the sum of all values in the column\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.cumsum()\u003c/code\u003e -- the cumulative sum, where each cell index contains the sum of all indices lower than, and including, itself.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eSummary Statistics for Categorical Columns\u003c/h3\u003e\n\n\u003cp\u003eObviously, we cannot calculate most summary statistics on columns that contain non-numeric data -- there's no way for us to find the mean of the letters in the \u003ccode\u003eEmbarked\u003c/code\u003e column, for instance.  However, there are some summary statistics we can use to help us better understand our categorical columns. \u003c/p\u003e\n\n\u003cp\u003eSee the examples in the cell below:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Embarked'].unique()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003earray(['S', 'C', 'Q', nan], dtype=object)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Embarked'].value_counts()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003eS    644\nC    168\nQ     77\nName: Embarked, dtype: int64\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThese methods are extremely useful when dealing with categorical data! \u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e.unique()\u003c/code\u003e shows us all the unique values contained in the column. \u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e.value_counts()\u003c/code\u003e shows us a count for how many times each unique value is present in a dataset, giving us a feel for the distribution of values in the column. \u003c/p\u003e\n\n\u003ch3\u003eCalculating on the Fly with \u003ccode\u003e.apply()\u003c/code\u003e and \u003ccode\u003e.applymap()\u003c/code\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eSometimes, we'll need to make changes to our dataset, or to compute functions on our data that aren't built-in to Pandas.  We can do this by passing lambda values into the \u003ccode\u003eapply()\u003c/code\u003e method when working with Pandas series, and the \u003ccode\u003e.applymap()\u003c/code\u003e method when working with Pandas DataFrames. \u003c/p\u003e\n\n\u003cp\u003eNote that both of these do not mutate the original dataset -- instead, they return a copy of the Series or DataFrame containing the result. \u003c/p\u003e\n\n\u003cp\u003eSee the example in the cell below:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003estring_df = df.applymap(lambda x: str(x))\nstring_df.info()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e\u0026lt;class 'pandas.core.frame.DataFrame'\u0026gt;\nInt64Index: 891 entries, 0 to 890\nData columns (total 12 columns):\nPassengerId    891 non-null object\nSurvived       891 non-null object\nPclass         891 non-null object\nName           891 non-null object\nSex            891 non-null object\nAge            891 non-null object\nSibSp          891 non-null object\nParch          891 non-null object\nTicket         891 non-null object\nFare           891 non-null object\nCabin          891 non-null object\nEmbarked       891 non-null object\ndtypes: object(12)\nmemory usage: 90.5+ KB\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edisplay(df['Age'].apply(lambda x: x**2).head())\n\ndf['Age'].head()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e0     484.0\n1    1444.0\n2     676.0\n3    1225.0\n4    1225.0\nName: Age, dtype: float64\n\n\n\n\n\n0    22.0\n1    38.0\n2    26.0\n3    35.0\n4    35.0\nName: Age, dtype: float64\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you learned how to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand and use the \u003ccode\u003edf.describe()\u003c/code\u003e and \u003ccode\u003edf.info()\u003c/code\u003e summary statistics methods \u003c/li\u003e\n\u003cli\u003eUse built-in Pandas methods for calculating summary statistics \u003c/li\u003e\n\u003cli\u003eApply a function to every element in a Series or DataFrame using \u003ccode\u003es.apply()\u003c/code\u003e and \u003ccode\u003edf.applymap()\u003c/code\u003e \u003c/li\u003e\n\u003c/ul\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-statistical-methods-in-pandas\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-statistical-methods-in-pandas\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-statistical-methods-in-pandas/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"statistical-methods-in-pandas-2"},{"id":440316,"title":"Statistical Methods in Pandas - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-statistical-methods-in-pandas-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-statistical-methods-in-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-statistical-methods-in-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab you'll get some hands-on experience using some of the key summary statistics methods in Pandas.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCalculate summary statistics for a series and DataFrame \u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003e.apply()\u003c/code\u003e or \u003ccode\u003e.applymap()\u003c/code\u003e methods to apply a function to a pandas series or DataFrame\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g1e22660ff8e0c256c1c8bd0b38286da1"},{"id":440319,"title":"Kaggle and The Ames Housing Dataset","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eKaggle hosts numerous Data Science competitions where you can grab datasets and practice your skills at creating machine learning algorithms to answer useful questions. Here we'll sign up for an account and begin investigating a classic Data Science problem using the Ames housing dataset.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a Kaggle account and download a dataset \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSign up\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eNavigate to \u003ca href=\"https://www.kaggle.com\"\u003ekaggle.com\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset/master/images/kagglehome.png\" width=\"800\"\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eClick \"Sign in\" and then \u003c/li\u003e\n\u003cli\u003eClick \"Create one\" to make a new account\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset/master/images/kagglelogin1.png\" width=\"300\"\u003e\n\u003c/li\u003e\n\u003cli\u003eFill out the basic information\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset/master/images/kagglelogin2.png\" width=\"300\"\u003e\n\u003c/li\u003e\n\u003cli\u003eAccept the Privacy and Terms agreement\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCongratulations!\u003c/h2\u003e\n\n\u003cp\u003eYou should now be signed up for Kaggle where you'll have access to a range of datasets, competitions, and other Data Science resources! Welcome to the community!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn our upcoming lab, you'll then be working with this dataset: \u003ca href=\"https://www.kaggle.com/c/house-prices-advanced-regression-techniques\"\u003ehttps://www.kaggle.com/c/house-prices-advanced-regression-techniques\u003c/a\u003e. To download it, click on the \"data\" tab and then click the \"download all\" to get a copy of the data.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-kaggle-and-boston-housing-dataset\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-kaggle-and-boston-housing-dataset\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"kaggle-and-the-ames-housing-dataset"},{"id":440331,"title":"Pandas DataFrames Exit Ticket","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"g01519c7d66d759b3429a1e9deb8982d4","questionCount":8,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"","exportId":"gc4aa66be11cc73395c3fcdd4e70da7b2"},{"id":440335,"title":"Data Visualization with Pandas","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-visualization-with-pandas\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-visualization-with-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-visualization-with-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we will be looking at data visualization using pandas and Matplotlib - modules that we have already seen and used. Pandas uses Matplotlib under the hood for data visualization, and provides some handy yet efficient methods for visualizing data from DataFrames.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eMake visualizations using pandas built-in methods \u003c/li\u003e\n\u003c/ul\u003e","exportId":"g8563fda27ea892529bdc75d88463655b"},{"id":440338,"title":"Quiz: Data Analysis with Pandas","type":"Quizzes::Quiz","indent":2,"locked":false,"assignmentExportId":"ga543d322836323630da1c9756c6d394e","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"min_score","requiredPoints":3.0,"completed":false,"content":"","exportId":"gcd66c3b1b8dab1f536ef606cdf62ee0b"},{"id":440347,"title":"Short Video: Basic Plotting with MatPlotLib","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv style=\"padding:62.5% 0 0 0;position:relative;\"\u003e\u003ciframe src=\"https://player.vimeo.com/video/713398853?h=ddf33ca9a0\u0026amp;badge=0\u0026amp;autopause=0\u0026amp;player_id=0\u0026amp;app_id=58479\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen=\"\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;\" title=\"atplotlib_phase1_gd\"\u003e\u003c/iframe\u003e\u003c/div\u003e","exportId":"short-video-basic-plotting-with-matplotlib"},{"id":440354,"title":"‚≠êÔ∏è EDA with Pandas - Cumulative Lab","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"g71279af1f9c90c8163cc88ed81341f3d","questionCount":1,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-eda-lab\" target=\"_blank\"\u003e \u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e \u003c/a\u003e \u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-eda-lab/issues/new\" target=\"_blank\"\u003e \u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e \u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eWork on this lab on your local computer. If you're not sure how to clone the source code, refer to the instructions in \u003ca title=\"Running Jupyter Notebooks Locally\" href=\"pages/running-jupyter-notebooks-locally\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/running-jupyter-notebooks-locally\" data-api-returntype=\"Page\"\u003eRunning Jupyter Notebooks Locally\u003c/a\u003e. If you're not sure how to submit the link, refer to the instructions in \u003ca title=\"‚≠êÔ∏è Data Serialization Formats - Cumulative Lab\" href=\"quizzes/gd382b571f354991be10756bfc79dd939\"\u003e‚≠êÔ∏è Data Serialization Formats - Cumulative Lab\u003c/a\u003e.\u003c/p\u003e","exportId":"g82c8665ac84c8238cf8996a60e998020"},{"id":440358,"title":"Data Analysis in Pandas - Recap","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-analysis-pandas-recap\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-analysis-pandas-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-analysis-pandas-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003cp\u003eThis short lesson summarizes the topics we covered in this section and why they'll be important to you as a data scientist.\u003c/p\u003e  \u003ch2\u003eKey Takeaways\u003c/h2\u003e  \u003cp\u003eIn this section, we spent time getting comfortable with pandas and getting some more practice with exploratory data analysis. Some of the key takeaways:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eFor non-trivial datasets you'll usually want to store your data in pandas data structures rather than native Python lists and dictionaries \u003c/li\u003e \u003cli\u003ePandas has a range of great features for easily importing data from anything from a CSV, an Excel file, JSON, SQL, or a Python dictionary\u003cbr\u003e\u003c/li\u003e \u003cli\u003ePandas \u003ccode\u003eSeries\u003c/code\u003e and \u003ccode\u003eDataFrame\u003c/code\u003e classes have a bunch of powerful methods for munging data \u003c/li\u003e \u003cli\u003ePandas also has a range of methods for applying descriptive statistics to Series and DataFrames \u003c/li\u003e \u003cli\u003eFinally, by wrapping Matplotlib, Pandas also provides some very convenient plotting capabilities for quickly visualizing data \u003c/li\u003e \u003cli\u003eWe also got some experience working with the Ames Housing dataset, and set up accounts on Kaggle - a really useful resource for practicing data scientists.\u003c/li\u003e \u003c/ul\u003e","exportId":"data-analysis-in-pandas-recap"}]},{"id":45650,"name":"Topic 5: Data Cleaning in Pandas","status":"started","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"gb253ee1696bdd9cce223fed5e589a630","items":[{"id":440365,"title":"Topic 5 Lesson Priorities (Live)","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 85.469%; height: 243px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete Before \u003cem\u003ePandas Data Cleaning\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 28px;\"\u003e\n\u003cth style=\"width: 53.5903%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.53687%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 30px;\"\u003e\u003ca title=\"Data Cleaning in Pandas - Introduction\" href=\"pages/data-cleaning-in-pandas-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/data-cleaning-in-pandas-introduction\" data-api-returntype=\"Page\"\u003e\u003cstrong\u003eData Cleaning in Pandas - Introduction\u003c/strong\u003e\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 30px; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Lambda Functions\" href=\"assignments/gd6d4e0c786c87244d6921427f55c08c4\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186746\" data-api-returntype=\"Assignment\"\u003eLambda Functions\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003ca title=\"Lambda Functions - Lab\" href=\"assignments/gd3689c7e14e78885d849191b09bd3a2d\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186747\" data-api-returntype=\"Assignment\"\u003eLambda Functions - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Dealing with Missing Data\" href=\"pages/dealing-with-missing-data\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/dealing-with-missing-data\" data-api-returntype=\"Page\"\u003eDealing with Missing Data\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003ca title=\"Dealing with Missing Data - Lab\" href=\"assignments/gf5f34dde719812cc47fa22f4b23a2b39\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186724\" data-api-returntype=\"Assignment\"\u003eDealing with Missing Data - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"More on missing data\" href=\"assignments/g90331b557510c3edfebb291368728f55\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186750\" data-api-returntype=\"Assignment\"\u003eMore on Missing Data\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003ca title=\"More on missing data - Lab\" href=\"assignments/g6e8159c5e97542fc6e498b96f3983647\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186751\" data-api-returntype=\"Assignment\"\u003eMore on Missing Data - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 10px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 10px;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: Dealing with Missing Data\" href=\"quizzes/g212414a665f29e1ec4a5f5c3b6a55400\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30557\" data-api-returntype=\"Quiz\"\u003eQuiz: Dealing with Missing Data\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center; height: 10px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 85.469%; height: 231px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003ePandas Data Cleaning\u003c/em\u003e Lecture, Before \u003cem\u003eAggregating and Combining DataFrames\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 28px;\"\u003e\n\u003cth style=\"width: 53.5903%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.53687%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 25px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 25px;\"\u003e\u003cstrong\u003e\u003ca title=\"Pandas Data Cleaning Exit Ticket\" href=\"quizzes/g42901c242a191446780fab69d267afce\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30561\" data-api-returntype=\"Quiz\"\u003ePandas Data Cleaning Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center; height: 25px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Pandas Groupby\" href=\"pages/pandas-groupby\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/pandas-groupby\" data-api-returntype=\"Page\"\u003ePandas Groupby\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Combining DataFrames With Pandas\" href=\"pages/combining-dataframes-with-pandas\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/combining-dataframes-with-pandas\" data-api-returntype=\"Page\"\u003eCombining DataFrames With Pandas\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 36px;\"\u003e\u003ca title=\"Combining DataFrames with Pandas - Lab\" href=\"assignments/g40b6e66c6ac8b27b60c89364c1716c87\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186713\" data-api-returntype=\"Assignment\"\u003eCombining DataFrames with Pandas - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 36px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Pivot Tables with Pandas\" href=\"assignments/g9711a839a76ceeaa2cf9d6a1c5d580ca\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186764\" data-api-returntype=\"Assignment\"\u003ePivot Tables with Pandas\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003ca title=\"Pivot Tables with Pandas - Lab\" href=\"assignments/g25a675bd128d1200bf205aa7d6423c6e\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186765\" data-api-returntype=\"Assignment\"\u003ePivot Tables with Pandas - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 25px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 25px;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: Aggregating and Reshaping with Pandas\" href=\"quizzes/gbb274ab685bca70f3b0cf4db4df8d524\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30550\" data-api-returntype=\"Quiz\"\u003eQuiz: Aggregating and Reshaping with Pandas\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center; height: 25px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 85.469%; height: 39px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eAggregating and Combining DataFrames\u003c/em\u003e Lecture, Before \u003cem\u003eDescriptive Analysis\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 28px;\"\u003e\n\u003cth style=\"width: 53.5903%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.53687%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 10px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 10px;\"\u003e\u003ca title=\"Short Video: Pandas GroupBy\" href=\"pages/short-video-pandas-groupby\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/short-video-pandas-groupby\" data-api-returntype=\"Page\"\u003eShort Video: Pandas GroupBy\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center; height: 10px;\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 10px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 10px;\"\u003e\u003cstrong\u003e\u003ca title=\"Aggregating and Combining DataFrames Exit Ticket\" href=\"quizzes/g59977d542efdb84dde70b1e3bc1a671f\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30560\" data-api-returntype=\"Quiz\"\u003eAggregating and Combining DataFrames Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center; height: 10px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 85.469%; height: 78px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eDescriptive Analysis\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 28px;\"\u003e\n\u003cth style=\"width: 53.5903%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.53687%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 20px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 20px;\"\u003e\u003cstrong\u003e\u003ca title=\"Descriptive Analysis Exit Ticket\" href=\"quizzes/g7fa50505224c8ed215a2e2ecfe57ab7e\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30582\" data-api-returntype=\"Quiz\"\u003eDescriptive Analysis Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center; height: 20px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 53.5903%;\"\u003e\u003cstrong\u003e\u003ca title=\"‚≠êÔ∏è Pandas Data Cleaning - Cumulative Lab\" href=\"quizzes/g1be6f06d4a1dcfca22a12139749b5105\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30588\" data-api-returntype=\"Quiz\"\u003e‚≠êÔ∏è Pandas Data Cleaning - Cumulative Lab\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center;\"\u003e\u003cstrong\u003e1st*\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003ca title=\"Data Cleaning in Pandas - Recap\" href=\"pages/data-cleaning-in-pandas-recap\"\u003eData Cleaning in Pandas - Recap\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003e*Cumulative labs may be used for pairing exercises and might not be published yet; contact your instructor if you have questions\u003c/strong\u003e\u003c/p\u003e","exportId":"topic-5-lesson-priorities-live"},{"id":451440,"title":"Data Cleaning in Pandas - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-introduction-pandas-etl\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-pandas-etl\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-pandas-etl/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you will learn invaluable skills that will form the foundation of your data processing work. Before you can apply machine learning algorithms or do interesting analyses, you often must clean and transform your data into a suitable format. Such initial data wrangling processes are often referred to as Extract Transform Load (ETL). Our primary tool of choice for performing ETL and basic analyses will be the Pandas package.\u003c/p\u003e\n\n\u003ch2\u003eWhy ETL?\u003c/h2\u003e\n\n\u003cp\u003eETL is an essential first step to data analysis and data science. It also will form the foundation for exploratory data analysis. Often, you will be thrown a dataset that you have little to no information about. In these cases, your first step is to explore the data and get familiar with it. What are the columns? How many observations do you have? Are there missing values? Any outliers? If we have user-level data, how can we explore aggregate trends along features like gender, race, or geography? All of these can be answered by applying ETL to transform raw datasets into alternative useful views.\u003c/p\u003e\n\n\u003ch2\u003eQuick ETL Example\u003c/h2\u003e\n\n\u003cp\u003eWhile you'll see complete examples and explanations for all of these techniques (and more), here's a quick preview of some ETL techniques covered in this section! For more details, continue on to future lessons!\u003c/p\u003e\n\n\u003ch3\u003eImport data\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003epandas\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003epd\u003c/span\u003e\n\u003cspan class=\"n\"\u003edf\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epd\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread_csv\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e'Yelp_Reviews.csv'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eindex_col\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cstyle\u003e\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\u003c/style\u003e\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003ebusiness_id\u003c/th\u003e\n      \u003cth\u003ecool\u003c/th\u003e\n      \u003cth\u003edate\u003c/th\u003e\n      \u003cth\u003efunny\u003c/th\u003e\n      \u003cth\u003ereview_id\u003c/th\u003e\n      \u003cth\u003estars\u003c/th\u003e\n      \u003cth\u003etext\u003c/th\u003e\n      \u003cth\u003euseful\u003c/th\u003e\n      \u003cth\u003euser_id\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1\u003c/th\u003e\n      \u003ctd\u003epomGBqfbxcqPv14c3XH-ZQ\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2012-11-13\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003edDl8zu1vWPdKGihJrwQbpw\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eI love this place! My fiance And I go here atl...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003emsQe1u7Z_XuqjGoqhB0J5g\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2\u003c/th\u003e\n      \u003ctd\u003ejtQARsP6P-LbkyjbO1qNGg\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003e2014-10-23\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003eLZp4UX5zK3e-c5ZGSeo3kA\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003eTerrible. Dry corn bread. Rib tips were all fa...\u003c/td\u003e\n      \u003ctd\u003e3\u003c/td\u003e\n      \u003ctd\u003emsQe1u7Z_XuqjGoqhB0J5g\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e4\u003c/th\u003e\n      \u003ctd\u003eUms3gaP2qM3W1XcA5r6SsQ\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2014-09-05\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003ejsDu6QEJHbwP2Blom1PLCA\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eDelicious healthy food. The steak is amazing. ...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003emsQe1u7Z_XuqjGoqhB0J5g\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e5\u003c/th\u003e\n      \u003ctd\u003evgfcTvK81oD4r50NMjU2Ag\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2011-02-25\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003epfavA0hr3nyqO61oupj-lA\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003eThis place sucks. The customer service is horr...\u003c/td\u003e\n      \u003ctd\u003e2\u003c/td\u003e\n      \u003ctd\u003emsQe1u7Z_XuqjGoqhB0J5g\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e10\u003c/th\u003e\n      \u003ctd\u003eyFumR3CWzpfvTH2FCthvVw\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2016-06-15\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eSTiFMww2z31siPY7BWNC2g\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eI have been an Emerald Club member for a numbe...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eTlvV-xJhmh7LCwJYXkV-cg\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eshape\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e(2610, 9)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eApply lambda functions\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e'Review_Word_Length'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e'text'\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003elambda\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e()))\u003c/span\u003e\n\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cstyle\u003e\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\u003c/style\u003e\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003ebusiness_id\u003c/th\u003e\n      \u003cth\u003ecool\u003c/th\u003e\n      \u003cth\u003edate\u003c/th\u003e\n      \u003cth\u003efunny\u003c/th\u003e\n      \u003cth\u003ereview_id\u003c/th\u003e\n      \u003cth\u003estars\u003c/th\u003e\n      \u003cth\u003etext\u003c/th\u003e\n      \u003cth\u003euseful\u003c/th\u003e\n      \u003cth\u003euser_id\u003c/th\u003e\n      \u003cth\u003eReview_Word_Length\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1\u003c/th\u003e\n      \u003ctd\u003epomGBqfbxcqPv14c3XH-ZQ\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2012-11-13\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003edDl8zu1vWPdKGihJrwQbpw\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eI love this place! My fiance And I go here atl...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003emsQe1u7Z_XuqjGoqhB0J5g\u003c/td\u003e\n      \u003ctd\u003e58\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2\u003c/th\u003e\n      \u003ctd\u003ejtQARsP6P-LbkyjbO1qNGg\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003e2014-10-23\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003eLZp4UX5zK3e-c5ZGSeo3kA\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003eTerrible. Dry corn bread. Rib tips were all fa...\u003c/td\u003e\n      \u003ctd\u003e3\u003c/td\u003e\n      \u003ctd\u003emsQe1u7Z_XuqjGoqhB0J5g\u003c/td\u003e\n      \u003ctd\u003e30\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e4\u003c/th\u003e\n      \u003ctd\u003eUms3gaP2qM3W1XcA5r6SsQ\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2014-09-05\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003ejsDu6QEJHbwP2Blom1PLCA\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eDelicious healthy food. The steak is amazing. ...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003emsQe1u7Z_XuqjGoqhB0J5g\u003c/td\u003e\n      \u003ctd\u003e30\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e5\u003c/th\u003e\n      \u003ctd\u003evgfcTvK81oD4r50NMjU2Ag\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2011-02-25\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003epfavA0hr3nyqO61oupj-lA\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003eThis place sucks. The customer service is horr...\u003c/td\u003e\n      \u003ctd\u003e2\u003c/td\u003e\n      \u003ctd\u003emsQe1u7Z_XuqjGoqhB0J5g\u003c/td\u003e\n      \u003ctd\u003e82\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e10\u003c/th\u003e\n      \u003ctd\u003eyFumR3CWzpfvTH2FCthvVw\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2016-06-15\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eSTiFMww2z31siPY7BWNC2g\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eI have been an Emerald Club member for a numbe...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eTlvV-xJhmh7LCwJYXkV-cg\u003c/td\u003e\n      \u003ctd\u003e32\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eshape\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Previously this was (2610, 9), now we have added a column\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e(2610, 10)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eGroup data\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egroupby\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e'business_id'\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"s\"\u003e'stars'\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003emean\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ebusiness_id\n-050d_XIor1NpCuWkbIVaQ    5.0\n-0qht1roIqleKiQkBLDkbw    1.0\n-3zffZUHoY8bQjGfPSoBKQ    5.0\n-6tvduBzjLI1ISfs3F_qTg    5.0\n-9nai28tnoylwViuJVrYEQ    5.0\nName: stars, dtype: float64\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eCheck for duplicates\u003c/h3\u003e\n\n\u003cp\u003eCheck how many we have:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eduplicated\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003evalue_counts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eFalse    2277\nTrue      333\ndtype: int64\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eVisually inspect them:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Use keep=False to keep all duplicates and sort_values to put duplicates next to each other\n\u003c/span\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eduplicated\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ekeep\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"bp\"\u003eFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)].\u003c/span\u003e\u003cspan class=\"n\"\u003esort_values\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eby\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e'business_id'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cstyle\u003e\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\u003c/style\u003e\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003ebusiness_id\u003c/th\u003e\n      \u003cth\u003ecool\u003c/th\u003e\n      \u003cth\u003edate\u003c/th\u003e\n      \u003cth\u003efunny\u003c/th\u003e\n      \u003cth\u003ereview_id\u003c/th\u003e\n      \u003cth\u003estars\u003c/th\u003e\n      \u003cth\u003etext\u003c/th\u003e\n      \u003cth\u003euseful\u003c/th\u003e\n      \u003cth\u003euser_id\u003c/th\u003e\n      \u003cth\u003eReview_Word_Length\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1729\u003c/th\u003e\n      \u003ctd\u003e-GY2fx-8udXPY8qn2HVBCg\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2016-08-30\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eyQ6P1_CvM94wMLYw1T0UWA\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eJust opened a new account today.  So far I am ...\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003esZfZGrI592euyacKUcwQYg\u003c/td\u003e\n      \u003ctd\u003e55\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1729\u003c/th\u003e\n      \u003ctd\u003e-GY2fx-8udXPY8qn2HVBCg\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2016-08-30\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eyQ6P1_CvM94wMLYw1T0UWA\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eJust opened a new account today.  So far I am ...\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003esZfZGrI592euyacKUcwQYg\u003c/td\u003e\n      \u003ctd\u003e55\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e754\u003c/th\u003e\n      \u003ctd\u003e-LRlx2j9_LB3evsRRcC9MA\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2017-10-07\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003ekUqPsZmWwLIMSstGHhWssA\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eThe vet took the time to explain what was poss...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eVgaYZ7004pTwEDSDWR6u4Q\u003c/td\u003e\n      \u003ctd\u003e33\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e754\u003c/th\u003e\n      \u003ctd\u003e-LRlx2j9_LB3evsRRcC9MA\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2017-10-07\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003ekUqPsZmWwLIMSstGHhWssA\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eThe vet took the time to explain what was poss...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eVgaYZ7004pTwEDSDWR6u4Q\u003c/td\u003e\n      \u003ctd\u003e33\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2767\u003c/th\u003e\n      \u003ctd\u003e-MKWJZnMjSit406AUKf7Pg\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2015-01-03\u003c/td\u003e\n      \u003ctd\u003e2\u003c/td\u003e\n      \u003ctd\u003erJhrQD3-b9GjTso0dxIkwg\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003eDrove 37 miles on a Saturday at 12:30pm for lu...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003ekzP96uX8TUMmmvLtd-I3RQ\u003c/td\u003e\n      \u003ctd\u003e18\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e...\u003c/th\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2193\u003c/th\u003e\n      \u003ctd\u003ezKw09ftu1730wEIZBZPoFg\u003c/td\u003e\n      \u003ctd\u003e3\u003c/td\u003e\n      \u003ctd\u003e2015-01-04\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eJV-yxKxMFp-d0rLDc_2_6w\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eSo relaxing combined with the meditation  and ...\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003e3mZFkwfa6XV0BBazRTva9w\u003c/td\u003e\n      \u003ctd\u003e31\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e496\u003c/th\u003e\n      \u003ctd\u003ezg5rJfgT4jhzg1d6r2twnA\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2014-06-21\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eZbj0HgdN3AT4l-mbH-EfjA\u003c/td\u003e\n      \u003ctd\u003e3\u003c/td\u003e\n      \u003ctd\u003eBurger week\\r\\n\\r\\n1. Blazing Pineapple Burger...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eUGW-9bbBEB3eP1o6mWD_WA\u003c/td\u003e\n      \u003ctd\u003e62\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e496\u003c/th\u003e\n      \u003ctd\u003ezg5rJfgT4jhzg1d6r2twnA\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2014-06-21\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eZbj0HgdN3AT4l-mbH-EfjA\u003c/td\u003e\n      \u003ctd\u003e3\u003c/td\u003e\n      \u003ctd\u003eBurger week\\r\\n\\r\\n1. Blazing Pineapple Burger...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eUGW-9bbBEB3eP1o6mWD_WA\u003c/td\u003e\n      \u003ctd\u003e62\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e988\u003c/th\u003e\n      \u003ctd\u003eziv21pDfyrgdhlrlNIgDfg\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2016-08-11\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003efus9odxu9bjE2lSxfwNfdw\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eGet this!!!  Wow Karlo is amazing and best cus...\u003c/td\u003e\n      \u003ctd\u003e2\u003c/td\u003e\n      \u003ctd\u003eywjqPgnMrDZKOhA33v92Cw\u003c/td\u003e\n      \u003ctd\u003e62\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e988\u003c/th\u003e\n      \u003ctd\u003eziv21pDfyrgdhlrlNIgDfg\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2016-08-11\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003efus9odxu9bjE2lSxfwNfdw\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eGet this!!!  Wow Karlo is amazing and best cus...\u003c/td\u003e\n      \u003ctd\u003e2\u003c/td\u003e\n      \u003ctd\u003eywjqPgnMrDZKOhA33v92Cw\u003c/td\u003e\n      \u003ctd\u003e62\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e666 rows √ó 10 columns\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch3\u003eRemove duplicates\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edrop_duplicates\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eshape\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Previously this was (2610, 10), now we have dropped duplicate rows\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e(2277, 10)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eRecheck for duplicates\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eduplicated\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003evalue_counts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eFalse    2277\ndtype: int64\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Duplicates should no longer exist\n\u003c/span\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eduplicated\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ekeep\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"bp\"\u003eFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)].\u003c/span\u003e\u003cspan class=\"n\"\u003esort_values\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eby\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e'business_id'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cstyle\u003e\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\u003c/style\u003e\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003ebusiness_id\u003c/th\u003e\n      \u003cth\u003ecool\u003c/th\u003e\n      \u003cth\u003edate\u003c/th\u003e\n      \u003cth\u003efunny\u003c/th\u003e\n      \u003cth\u003ereview_id\u003c/th\u003e\n      \u003cth\u003estars\u003c/th\u003e\n      \u003cth\u003etext\u003c/th\u003e\n      \u003cth\u003euseful\u003c/th\u003e\n      \u003cth\u003euser_id\u003c/th\u003e\n      \u003cth\u003eReview_Word_Length\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\n\u003ch3\u003eCreate pivot tables\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# This transforms the data into a person by person spreadsheet and what stars they gave various restaurants\n# Most values are NaN (null or missing) because people only review a few restaurants of those that exist\n\u003c/span\u003e\u003cspan class=\"n\"\u003eusr_reviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epivot\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eindex\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e'user_id'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecolumns\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e'business_id'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalues\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e'stars'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003eusr_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cstyle\u003e\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\u003c/style\u003e\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003ebusiness_id\u003c/th\u003e\n      \u003cth\u003e-050d_XIor1NpCuWkbIVaQ\u003c/th\u003e\n      \u003cth\u003e-0qht1roIqleKiQkBLDkbw\u003c/th\u003e\n      \u003cth\u003e-3zffZUHoY8bQjGfPSoBKQ\u003c/th\u003e\n      \u003cth\u003e-6tvduBzjLI1ISfs3F_qTg\u003c/th\u003e\n      \u003cth\u003e-9nai28tnoylwViuJVrYEQ\u003c/th\u003e\n      \u003cth\u003e-C8sSrFqaCxp51pyo-fQLQ\u003c/th\u003e\n      \u003cth\u003e-Dnh48f029YNugtMKkkI-Q\u003c/th\u003e\n      \u003cth\u003e-FLnsWAa4AGEW4NgE8Fqew\u003c/th\u003e\n      \u003cth\u003e-G7MPSNBpxRJmtrJxdwt7A\u003c/th\u003e\n      \u003cth\u003e-GY2fx-8udXPY8qn2HVBCg\u003c/th\u003e\n      \u003cth\u003e...\u003c/th\u003e\n      \u003cth\u003ezdE82PiD6wquvjYLyhOJNA\u003c/th\u003e\n      \u003cth\u003ezdd3hyxB8ylYV6RcNe347Q\u003c/th\u003e\n      \u003cth\u003ezg5rJfgT4jhzg1d6r2twnA\u003c/th\u003e\n      \u003cth\u003eziv21pDfyrgdhlrlNIgDfg\u003c/th\u003e\n      \u003cth\u003ezkhBU5qW_zCy0q4OEtIrsA\u003c/th\u003e\n      \u003cth\u003eztP466jMUMtqLwwHqXbk9w\u003c/th\u003e\n      \u003cth\u003ezw9_mqWBn1QCfZg88w0Exg\u003c/th\u003e\n      \u003cth\u003ezwNLJ2VglfEvGu7DDZjJ4g\u003c/th\u003e\n      \u003cth\u003ezzYaAiC0rLNSDiFQlMKOEQ\u003c/th\u003e\n      \u003cth\u003ezzgSiOnuUjnBnmfR-ZG4ww\u003c/th\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003euser_id\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003e-0biHfjE0soSptbU5G3nug\u003c/th\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e-2K0yp7lBT_JUOzGkpdJ_g\u003c/th\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e-Opvc9hAWllZSSPDUsD7NA\u003c/th\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e-Zdxj4wuj4D_899B7tPE3g\u003c/th\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e-_iULENf28RbqL2k0ja5Xw\u003c/th\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e5 rows √ó 2192 columns\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this brief introduction, you learned the acronym ETL and got to preview a few examples of ETL processes using pandas. In the upcoming lessons you'll get a much richer understanding of these and other techniques for wrangling your data!\u003c/p\u003e","exportId":"data-cleaning-in-pandas-introduction"},{"id":440373,"title":"Lambda Functions","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-lambda-functions\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lambda-functions\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lambda-functions/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eLambda functions are often a convenient way to write \u003cem\u003ethrow-away\u003c/em\u003e functions on the fly. If you need to write a more complicated function you may still need to use the more formal \u003ccode\u003edef\u003c/code\u003e method, but lambda functions provide a quick and concise way to write functions.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the purpose of lambda functions, when they should be employed, and their limitations\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate lambda functions to use as arguments of other functions\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003e.map()\u003c/code\u003e or \u003ccode\u003e.apply()\u003c/code\u003e method to apply a function to a pandas series or DataFrame\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gd6d4e0c786c87244d6921427f55c08c4"},{"id":440377,"title":"Lambda Functions - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-lambda-functions-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lambda-functions-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lambda-functions-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll get some hands-on practice creating and using lambda functions.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eIn this lab you will:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate lambda functions to use as arguments of other functions\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003e.map()\u003c/code\u003e or \u003ccode\u003e.apply()\u003c/code\u003e method to apply a function to a pandas series or DataFrame\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gd3689c7e14e78885d849191b09bd3a2d"},{"id":440380,"title":"Dealing with Missing Data","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dealing-missing-data\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dealing-missing-data/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn about various strategies for detecting and dealing with missing data using Pandas.  \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIdentify missing values in a dataframe using built-in methods \u003c/li\u003e\n\u003cli\u003eExplain why missing values are a problem in data science \u003c/li\u003e\n\u003cli\u003eEvaluate and execute the best strategy for dealing with missing, duplicate, and erroneous values for a given dataset \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy is missing data a problem?\u003c/h2\u003e\n\n\u003cp\u003eMissing data can be problematic during the Data Science process because \u003ccode\u003eNaN\u003c/code\u003e values in the dataset limit our ability to do important things like:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eConvert data types\u003c/li\u003e\n\u003cli\u003eCalculate summary statistics\u003c/li\u003e\n\u003cli\u003eVisualize data\u003c/li\u003e\n\u003cli\u003eBuild models\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eDetecting missing data\u003c/h2\u003e\n\n\u003cp\u003eThere are two main ways missing data is often represented in datasets.\u003c/p\u003e\n\n\u003ch3\u003e\n\u003ccode\u003eNaN\u003c/code\u003es\u003c/h3\u003e\n\n\u003cp\u003eBy default, pandas represents null values with \u003ccode\u003eNaN\u003c/code\u003e, which is short for \u003cstrong\u003e\u003cem\u003eNot a Number\u003c/em\u003e\u003c/strong\u003e.  Pandas provides many great ways for checking for null values, built right into DataFrames and Series objects.\u003c/p\u003e\n\n\u003ch4\u003eDetecting \u003ccode\u003eNaN\u003c/code\u003es\u003c/h4\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.isna()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eReturns a matrix of boolean values, where all cells containing \u003ccode\u003eNaN\u003c/code\u003e are converted to \u003ccode\u003eTrue\u003c/code\u003e, and all cells containing valid data are converted to \u003ccode\u003eFalse\u003c/code\u003e. \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.isna().sum()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSince \u003ccode\u003eTrue\u003c/code\u003e is equivalent to \u003ccode\u003e1\u003c/code\u003e and \u003ccode\u003eFalse\u003c/code\u003e is equivalent to \u003ccode\u003e0\u003c/code\u003e in Python, taking the \u003ccode\u003e.sum()\u003c/code\u003e of the DataFrame (or Series) will return the total number of \u003ccode\u003eNaN\u003c/code\u003e values in the dataset.  Pandas even breaks this down by column -- see the example output below.\u003c/p\u003e\n\n\u003ch1\u003eNumber of NaNs the in Titanic dataset by column\u003c/h1\u003e\n\n\u003cp\u003ePassengerId      0\nSurvived         0\nPclass           0\nName             0\nSex              0\nAge            177\nSibSp            0\nParch            0\nTicket           0\nFare             0\nCabin          687\nEmbarked         2\u003c/p\u003e\n\n\u003ch3\u003ePlaceholder values\u003c/h3\u003e\n\n\u003cp\u003eOften, datasets will contain missing values that are denoted by a value that seems valid to pandas.  This is very common in real-world datasets -- often, people entering the data are required to enter values that they don't actually have, so they enter an agreed-upon placeholder value.  \u003c/p\u003e\n\n\u003cp\u003eThe easiest way to deal with these is to familiarize yourself with the data dictionary that corresponds to your dataset -- any placeholder values meant to denote a \u003ccode\u003eNaN\u003c/code\u003e value will be specified here. \u003c/p\u003e\n\n\u003cp\u003eHowever, you'll encounter plenty of datasets in the real world that don't come with a data dictionary, or that fail to mention placeholder values.  \u003c/p\u003e\n\n\u003cp\u003eFollow these strategies for detecting placeholder values in your data. \u003c/p\u003e\n\n\u003ch4\u003eNumerical data\u003c/h4\u003e\n\n\u003cp\u003eNumerical columns will often represent missing values with a value that is nonsensical to the column in question.  For instance, in healthcare data, missing values in a \u003ccode\u003eWeight\u003c/code\u003e column may be using impossible values such as \u003ccode\u003e0\u003c/code\u003e or \u003ccode\u003e9999\u003c/code\u003e.  These are valid to the computer, since they are real-numbered, but are obvious to anyone analyzing the data as placeholder values.  \u003c/p\u003e\n\n\u003cp\u003eThese are the most difficult to check for, since this requires getting decently familiar with the column in question enough to notice values that are technically valid but pragmatically impossible. \u003c/p\u003e\n\n\u003cp\u003eTo detect these sorts of placeholder values, start by checking for outliers -- they are often encoded as very large numbers, or as 0 (when 0 isn't a realistic value for the column in question).  Any good placeholder value will be a value that couldn't show up in the real world.  \u003c/p\u003e\n\n\u003cp\u003eHowever, you may also find actual outliers (values that are \u003cem\u003enot impossible\u003c/em\u003e, but \u003cem\u003eoccur rarely\u003c/em\u003e). Outliers, like missing or corrupt data, can adversely effect your Machine Learning models. Some of the ways in which you can identify outliers are: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eStandard deviation\u003c/strong\u003e: If the data is normally distributed (or nearly normal), you can use three standard deviations as a cutoff point. In a normal distribution, three standard devations from the mean in both the directions cover 99.7% of the data, so any values outside this range are highly improbable, and can be safely discarded as outliers. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-dealing-missing-data/master/images/normal_sd_new.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eYou will learn more about normal distribution in a later lesson. \u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eInterquartile range (IQR)\u003c/strong\u003e: If the data is not normally distribued, you can use the same method boxplots use to determine the outliers -- all observations that lie 1.5 times the IQR (difference between the 75th and the 25th percentiles of the data) away from the median in either direction are treated as outliers. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-dealing-missing-data/master/images/new_boxplot.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIf you need a refresher on IQR, refer to the lesson on \u003cem\u003eMeasures of Dispersion\u003c/em\u003e in the \u003cem\u003eImporting and Statistical Analysis of Data\u003c/em\u003e section of Module 1.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAnother way to confirm these values is to check the \u003ccode\u003e.value_counts()\u003c/code\u003e of a column.  In a continuously-valued column, it is probably rare for one specific value to overwhelm all the others.  If, for instance, you see the same numerical value showing up a statistically improbable number of times, double-check that this value is real -- placeholder values have the potential to show up many times, but it's much less likely for real-valued numbers.  \u003c/p\u003e\n\n\u003ch4\u003eCategorical data\u003c/h4\u003e\n\n\u003cp\u003eTo detect placeholder values in categorical data, get the unique values in the column and see if there are any values that don't match up with your expectations.  Pandas provides a built-in method for this.  For instance, in the titanic dataset, we can check the unique values of the \u003ccode\u003eEmbarked\u003c/code\u003e column by typing:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Embarked'].unique()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis will return an array containing all the unique values in the dataset.  \u003c/p\u003e\n\n\u003cp\u003eNote that for categorical columns, it is much more likely to have a data dictionary to work with, since it is common to have categorical values that aren't readily understandable without a data dictionary to help us figure out what each potential category means.  \u003c/p\u003e\n\n\u003ch2\u003eStrategies for dealing with missing data\u003c/h2\u003e\n\n\u003cp\u003eDetecting missing values isn't enough -- we need to deal with them in order to move forward! We have three options for dealing with missing values -- removing them from the dataset, keeping them, or replacing them with another value. \u003c/p\u003e\n\n\u003ch3\u003eRemove\u003c/h3\u003e\n\n\u003cp\u003eThe easiest way to deal with missing values is to drop the offending rows and/or columns.  The downside to this is that we lose data in the process.  This is a valid strategy on very large datasets -- however, on smaller datasets, throwing away data may be unacceptable.  \u003c/p\u003e\n\n\u003cp\u003eThe two main strategies for dealing with missing values are to drop columns or to drop rows. For this strategy, it does not matter if we are dealing with continuous or categorical data.  \u003c/p\u003e\n\n\u003ch4\u003eDropping columns\u003c/h4\u003e\n\n\u003cp\u003eConsider the output from the titanic dataset shown previously.  The \u003ccode\u003eCabins\u003c/code\u003e column contains 687 missing values. The entire dataset only contains around 900 rows of data.  In this case, it makes more sense to just remove the \u003ccode\u003eCabins\u003c/code\u003e  column from the dataset entirely.  \u003c/p\u003e\n\n\u003cp\u003eNote that while this makes sense for the \u003ccode\u003eCabins\u003c/code\u003e column, this is not a good idea for dealing with the null values contained within the \u003ccode\u003eAge\u003c/code\u003e column. Although the \u003ccode\u003eAge\u003c/code\u003e column contains 75 missing values, the vast majority of the items in this dataset contain perfectly good information for the age column.  If we dropped this column, we would be throwing out all that information just to deal with a small subset of missing values in that column!\u003c/p\u003e\n\n\u003ch4\u003eDropping rows\u003c/h4\u003e\n\n\u003cp\u003eIn the above example, dropping all rows that contain a null value would be a very bad idea, because we would 3/4 of our data! Dropping rows makes more sense when the proportion of rows with missing values is very small compared to the size of the overall dataset -- it's okay to just throw out the missing values as long as it's not too many observations. There's no hard rule for exactly how many missing values is the right amount to throw out, and will vary project by project.  Think critically, and use your best judgment!\u003c/p\u003e\n\n\u003cp\u003eTo drop all rows containing missing values in a DataFrame, use \u003ccode\u003edataframe.dropna()\u003c/code\u003e.  Note that this returns a copy of the dataframe with the rows in question dropped -- however, you can mutate the DataFrame in place by passing in \u003ccode\u003einplace=True\u003c/code\u003e as a parameter to the method call. \u003c/p\u003e\n\n\u003ch3\u003eReplace\u003c/h3\u003e\n\n\u003cp\u003eWe can also deal with missing values by replacing them with a common value. The downside of this method is that this can introduce noise into our dataset. \u003c/p\u003e\n\n\u003ch4\u003eContinuous data\u003c/h4\u003e\n\n\u003cp\u003eFor continuous data, the best solution is to replace the missing values with the median value for that column. The median value is a good choice because it is least likely to influence the distribution of the dataset overall. If the dataset is symmetric, then the mean and the median will be the same value. If the dataset is not symmetric, then the mean is more likely to be skewed by outlier values, so the median is a better choice.  \u003c/p\u003e\n\n\u003cp\u003ePandas provides an easy way for us to replace null values. For instance, if we wanted to replace all null values in the \u003ccode\u003eFare\u003c/code\u003e column with the column median, we would type:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Fare'].fillna(df['Fare'].median())\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch4\u003eCategorical data\u003c/h4\u003e\n\n\u003cp\u003eWith categorical data, this is harder, since we don't have summary statistics to lean on such as the median or the mean. In this case, if one categorical value is much more common than others, it is a valid strategy to replace missing values with this common value. However, make sure to examine your data first! If all the categorical values are equally common, picking one to replace all the missing values may do more harm than good by skewing the distribution and introducing some false signal into your dataset.\u003c/p\u003e\n\n\u003ch3\u003eKeep\u003c/h3\u003e\n\n\u003cp\u003eSometimes, the knowledge that a value is missing can itself be informative for us.  If knowing that a value is missing tells you something, then it is often worth keeping the missing values using the following strategies. \u003c/p\u003e\n\n\u003ch4\u003eCategorical data\u003c/h4\u003e\n\n\u003cp\u003eThis one is the easiest -- just treat missing values as its own category! This may require replacing missing values with a string to denote this, as your model will still likely throw errors if the actual \u003ccode\u003eNaN\u003c/code\u003e values are not replaced. In that case, just replace the \u003ccode\u003eNaN\u003c/code\u003e values with the string \u003ccode\u003e'NaN'\u003c/code\u003e, or another string that makes it obvious that this value is \u003ccode\u003e'missing'\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch4\u003eNumerical data\u003c/h4\u003e\n\n\u003cp\u003eOften, missing values inside a continuously-valued column will cause all sorts of havoc in your models, so leaving the \u003ccode\u003eNaN\u003c/code\u003es alone isn't usually an option here.  Instead, consider using \u003cstrong\u003e\u003cem\u003eCoarse Classification\u003c/em\u003e\u003c/strong\u003e, also referred to as \u003cstrong\u003e\u003cem\u003eBinning\u003c/em\u003e\u003c/strong\u003e.  This allows us to convert the entire column from a numerical column to a categorical column by binning our data into categories. For instance, we could deal with the missing values in the \u003ccode\u003eAge\u003c/code\u003e column by creating a categorical column that separates each person into 10-year age ranges. Anybody between the ages of 0 and 10 would be a \u003ccode\u003e1\u003c/code\u003e, 11 to 20 would be a \u003ccode\u003e2\u003c/code\u003e, and so on.  \u003c/p\u003e\n\n\u003cp\u003eOnce we have binned the data in a new column, we can throw out the numerical version of the column, and just leave the missing values as one more valid category inside our new categorical column!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this section, we learned:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eStrategies for detecting \u003ccode\u003eNaN\u003c/code\u003e values in pandas\u003c/li\u003e\n\u003cli\u003eStrategies for detecting missing data denoted by place holder values\u003c/li\u003e\n\u003cli\u003eHow to deal with missing values by \u003cem\u003eRemoving\u003c/em\u003e, \u003cem\u003eReplacing\u003c/em\u003e, or \u003cem\u003eKeeping\u003c/em\u003e them!\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-dealing-missing-data\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-dealing-missing-data\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-dealing-missing-data/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"dealing-with-missing-data"},{"id":440384,"title":"Dealing with Missing Data - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-dealing-missing-data-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dealing-missing-data-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dealing-missing-data-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll work through strategies for data cleaning and dealing with missing values (\u003ccode\u003eNaN\u003c/code\u003es).\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eIn this lab you will:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIdentify missing values in a dataframe using built-in methods \u003c/li\u003e\n\u003cli\u003eExplain why missing values are a problem in data science \u003c/li\u003e\n\u003c/ul\u003e","exportId":"gf5f34dde719812cc47fa22f4b23a2b39"},{"id":440392,"title":"More on Missing Data","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-more-on-missing-data\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-on-missing-data\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-on-missing-data/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you've seen various methods of how to deal with missing data, its time to further discuss how to choose an appropriate methodology given a particular scenario. Commonly, many people will immediately turn to imputing the mean or median of a feature with missing values. This can be a valid and effective methodology, hence why it is standard, but does have caveats. For example, doing so will reduce the overall variance of your dataset which should be taken into account when performing subsequent analyses or training a machine learning algorithm on the dataset.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eEvaluate and execute the best strategy for dealing with missing, duplicate, and erroneous values for a given dataset\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDetermine how the distribution of data is affected by imputing values\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eInspect data for duplicates or extraneous values and remove them\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g90331b557510c3edfebb291368728f55"},{"id":440396,"title":"More on Missing Data - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-more-on-missing-data-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-on-missing-data-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-on-missing-data-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll continue to practice techniques for dealing with missing data. Moreover, you'll observe the impact on distributions of your data produced by various techniques for dealing with missing data.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eIn this lab you will: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eEvaluate and execute the best strategy for dealing with missing, duplicate, and erroneous values for a given dataset\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDetermine how the distribution of data is affected by imputing values \u003c/li\u003e\n\u003c/ul\u003e","exportId":"g6e8159c5e97542fc6e498b96f3983647"},{"id":440399,"title":"Quiz: Dealing with Missing Data","type":"Quizzes::Quiz","indent":2,"locked":false,"assignmentExportId":"ga3636571b40831c51a260c9ae5f29ba7","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"min_score","requiredPoints":3.0,"completed":false,"content":"","exportId":"g212414a665f29e1ec4a5f5c3b6a55400"},{"id":440411,"title":"Pandas Data Cleaning Exit Ticket","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"g0fce46c20958f0f08cc5c561b5dee4cf","questionCount":8,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"","exportId":"g42901c242a191446780fab69d267afce"},{"id":440416,"title":"Pandas Groupby","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-groupby\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-groupby/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll learn how to use the \u003ccode\u003e.groupby()\u003c/code\u003e method in Pandas to summarize datasets.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse groupby methods to aggregate different groups in a dataframe\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eUsing \u003ccode\u003e.groupby()\u003c/code\u003e\n\u003c/h2\u003e\n\n\u003cp\u003eConsider an example of the titanic DataFrame:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-pandas-groupby/master/images/titanic_1.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eDuring the Exploratory Data Analysis phase, one of the most common tasks you'll want to do is split the dataset into subgroups and compare them to see if you can notice any trends.  For instance, you may want to group the passengers together by gender or age. You can do this by using the \u003ccode\u003e.groupby()\u003c/code\u003e method built-in to pandas DataFrames. \u003c/p\u003e\n\n\u003cp\u003eTo group passengers by gender, you would type:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.groupby('Sex')\n\ndf.groupby(df['Sex'])\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that this alone will not display a result -- although you have split the dataset into groups, you don't have a meaningful way to display information until you chain an \u003cstrong\u003e\u003cem\u003eAggregation Function\u003c/em\u003e\u003c/strong\u003e onto the groupby.  This allows you to compute summary statistics!\u003c/p\u003e\n\n\u003cp\u003eYou can quickly use an aggregation function by chaining the call to the end of the \u003ccode\u003e.groupby()\u003c/code\u003e method.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.groupby('Sex').sum()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe code above returns displays the following DataFrame:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-pandas-groupby/master/images/titanic_2.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can use aggregation functions to quickly help us compare subsets of our data.  For example, the aggregate statistics displayed above allow you to quickly notice that there were more female survivors overall than male survivors.\u003c/p\u003e\n\n\u003ch2\u003eAggregation functions\u003c/h2\u003e\n\n\u003cp\u003eThere are many built-in aggregate methods provided for you in the \u003ccode\u003epandas\u003c/code\u003e package, and you can even write and apply your own. Some of the most common aggregate methods you may want to use are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003e.min()\u003c/code\u003e: returns the minimum value for each column by group\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.max()\u003c/code\u003e: returns the maximum value for each column by group\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.mean()\u003c/code\u003e: returns the average value for each column by group\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.median()\u003c/code\u003e: returns the median value for each column by group\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.count()\u003c/code\u003e: returns the count of each column by group\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eYou can also see a list of all of the built-in aggregation methods by creating a grouped object and then using tab completion to inspect the available methods:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003egrouped_df = df.groupby('Sex')\ngrouped_df.\u0026lt;TAB\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis will display the following output:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eIn [26]: grouped_df.\u0026lt;TAB\u0026gt;\ngb.agg        gb.boxplot    gb.cummin     gb.describe   gb.filter     gb.get_group  gb.height     gb.last       gb.median     gb.ngroups    gb.plot       gb.rank       gb.std        gb.transform\ngb.aggregate  gb.count      gb.cumprod    gb.dtype      gb.first      gb.groups     gb.hist       gb.max        gb.min        gb.nth        gb.prod       gb.resample   gb.sum        gb.var\ngb.apply      gb.cummax     gb.cumsum     gb.fillna     gb.gender     gb.head       gb.indices    gb.mean       gb.name       gb.ohlc       gb.quantile   gb.size       gb.tail       gb.weight\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis is a comprehensive list of all built-in methods available to grouped objects. Note that some are aggregation methods, while others, such as \u003ccode\u003egb.fillna()\u003c/code\u003e, allow us to fill missing values to individual groups independently.  \u003c/p\u003e\n\n\u003ch2\u003eMultiple groups\u003c/h2\u003e\n\n\u003cp\u003eYou can also split data into multiple different levels of groups by passing in an array containing the name of every column you want to group by -- for instance, by every combination of both \u003ccode\u003eSex\u003c/code\u003e and \u003ccode\u003ePclass\u003c/code\u003e.    \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.groupby(['Sex', 'Pclass']).mean()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe code above would return the following DataFrame:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-pandas-groupby/master/images/titanic_3.png\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eSelecting information from grouped objects\u003c/h2\u003e\n\n\u003cp\u003eSince the resulting object returned is a DataFrame, you can also slice a selection of columns you're interested in from the DataFrame returned. \u003c/p\u003e\n\n\u003cp\u003eThe example below demonstrates the syntax for returning the mean of the \u003ccode\u003eSurvived\u003c/code\u003e class for every combination of \u003ccode\u003eSex\u003c/code\u003e and \u003ccode\u003ePclass\u003c/code\u003e:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.groupby(['Sex', 'Pclass'])['Survived'].mean()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe code above returns the following DataFrame:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-pandas-groupby/master/images/titanic_4.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe above example slices by column, but you can also slice by index. Take a look:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003egrouped = df.groupby(['Sex', 'Pclass'])['Survived'].mean()\nprint(grouped['female'])\n\nprint(grouped['female'][1])\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that you need to provide only the value \u003ccode\u003efemale\u003c/code\u003e as the index, and are returned all the groups where the passenger is female, regardless of the \u003ccode\u003ePclass\u003c/code\u003e value. The second example shows the results for female passengers with a 1st-class ticket. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you learned about how to split a DataFrame into subgroups using the \u003ccode\u003e.groupby()\u003c/code\u003e method. You also learned to generate aggregate views of these groups by applying built-in methods to a groupby object.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-pandas-groupby\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-pandas-groupby\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-pandas-groupby/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"pandas-groupby"},{"id":440419,"title":"Combining DataFrames With Pandas","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-combining-dataframes-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-combining-dataframes-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll learn how to combine DataFrames with concatenation. You'll also learn how to read in tables from SQL databases and store them in DataFrames, as well as the various types of joins that exist and how you can perform them in Pandas.  \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse concatenation to combine DataFrames\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDetermine which type of join is preferred for two tables of data and a task\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eUse different types of joins to merge dataframes\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eConcatenating DataFrames\u003c/h2\u003e\n\n\u003cp\u003eRecall that \"concatenation\" means adding the contents of a second collection on to the end of the first collection.  You learned how to do this when working with strings.  For instance:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003eprint('Data ' + 'Science!')\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSince strings are a form of collections in Python, you can concatenate them as above.  \u003c/p\u003e\n\n\u003cp\u003eDataFrames are also collections, so it stands to reason that pandas provides an easy way to concatenate them.  Examine the following diagram from the pandas documentation on concatenation:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-combining-dataframes-pandas/master/images/Image_197_concat.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn this example, three DataFrames have been concatenated, resulting in one larger DataFrame containing the contents in the order they were concatenated.  \u003c/p\u003e\n\n\u003cp\u003eTo perform a concatenation between two or more DataFrames, you pass in an array of the objects to concatenate to the \u003ccode\u003epd.concat()\u003c/code\u003e function, as demonstrated below:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003eto_concat = [df1, df2, df3]\nbig_df = pd.concat(to_concat)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that there are many different optional keyword arguments you can set with \u003ccode\u003epd.concat()\u003c/code\u003e -- for a full breakdown of all the ways you can use this function, take a look at the \u003ca href=\"http://pandas.pydata.org/pandas-docs/stable/merging.html\"\u003epandas documentation\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003eKeys and Indexes\u003c/h3\u003e\n\n\u003cp\u003eEvery table in a database has a column that serves as the \u003cstrong\u003e\u003cem\u003ePrimary Key\u003c/em\u003e\u003c/strong\u003e. In pandas, the index is the primary key for that table. You'll use these keys, along with the \u003cstrong\u003e\u003cem\u003eForeign Key\u003c/em\u003e\u003c/strong\u003e, which points to a primary key value in another table, to execute \u003cstrong\u003e\u003cem\u003eJoins\u003c/em\u003e\u003c/strong\u003e. This allows us to \"line up\" information from multiple tables and combine them into one table. You'll learn more about primary keys and foreign keys in the future when you'll dive into SQL and relational databases, so don't worry too much about these concepts now. That said, you can use similar functionality in Pandas.\u003c/p\u003e\n\n\u003cp\u003eOften, it is useful for us to set a column to act as the index for a DataFrame.  To do this, you would type:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003esome_dataframe.set_index('name_of_index_column', inplace=True)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that this will mutate the dataset in place and set the column with the specified name as the index column of the DataFrame.  If \u003ccode\u003einplace\u003c/code\u003e is not specified it will default to False, meaning that a copy of the DataFrame with the requested changes will be returned, but the original object will remain unchanged. \u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eNOTE:\u003c/em\u003e\u003c/strong\u003e Running cells that make an \u003ccode\u003einplace\u003c/code\u003e change more than once will often cause pandas to throw an error.  If this happens, just restart the kernel.\u003c/p\u003e\n\n\u003cp\u003eBy setting the index columns on DataFrames, you make it easy to join DataFrames later on. Note that this is not always feasible, but it's a useful step when possible.  \u003c/p\u003e\n\n\u003ch3\u003eTypes of Joins\u003c/h3\u003e\n\n\u003cp\u003eJoins are always executed between a \u003cstrong\u003e\u003cem\u003eLeft Table\u003c/em\u003e\u003c/strong\u003e and a \u003cstrong\u003e\u003cem\u003eRight Table\u003c/em\u003e\u003c/strong\u003e.  There are four different types of joins you can execute. Consider the following Venn diagrams:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-combining-dataframes-pandas/master/images/Image_198_joins.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen thinking about joins, it is easy to conceptualize them as Venn diagrams.  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAn \u003cstrong\u003e\u003cem\u003eOuter Join\u003c/em\u003e\u003c/strong\u003e returns all records from both tables \u003c/li\u003e\n\u003cli\u003eAn \u003cstrong\u003e\u003cem\u003eInner Join\u003c/em\u003e\u003c/strong\u003e returns only the records with matching keys in both tables \u003c/li\u003e\n\u003cli\u003eA \u003cstrong\u003e\u003cem\u003eLeft Join\u003c/em\u003e\u003c/strong\u003e returns all the records from the left table, as well as any records from the right table that have a matching key with a record from the left table\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eA \u003cstrong\u003e\u003cem\u003eRight Join\u003c/em\u003e\u003c/strong\u003e returns all the records from the right table, as well as any records from the left table that have a matching key with a record from the right table\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eDataFrames contain a built-in \u003ccode\u003e.join()\u003c/code\u003e method. By default, the table calling the \u003ccode\u003e.join()\u003c/code\u003e method is always the left table.  The following code snippet demonstrates how to execute a join in pandas:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003ejoined_df = df1.join(df2, how='inner')\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that to call \u003ccode\u003e.join()\u003c/code\u003e, you must pass in the right table.  You can also set the type of join to perform with the \u003ccode\u003ehow\u003c/code\u003e parameter.  The options are \u003ccode\u003e'left'\u003c/code\u003e, \u003ccode\u003e'right'\u003c/code\u003e, \u003ccode\u003e'inner'\u003c/code\u003e, and \u003ccode\u003e'outer'\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eIf\u003c/strong\u003e \u003ccode\u003ehow=\u003c/code\u003e \u003cstrong\u003eis not specified, it defaults to \u003ccode\u003e'left'\u003c/code\u003e.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eNOTE:\u003c/em\u003e\u003c/strong\u003e If both tables contain columns with the same name, the join will throw an error due to a naming collision, since the resulting table would have multiple columns with the same name.  To solve this, pass in a value to \u003ccode\u003elsuffix=\u003c/code\u003e or \u003ccode\u003ersuffix=\u003c/code\u003e, which will append this suffix to the offending columns to resolve the naming collisions. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you learned how to use concatenation to join together multiple DataFrames in Pandas.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-combining-dataframes-pandas\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-combining-dataframes-pandas\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-combining-dataframes-pandas/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"combining-dataframes-with-pandas"},{"id":440423,"title":"Combining DataFrames With Pandas - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-combining-dataframes-pandas-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-combining-dataframes-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-combining-dataframes-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll gain practice combining DataFrames through concatenation.  You'll also practice executing various types of joins to selectively combine the information stored in the tables!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eIn this lab you will:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse concatenation to combine DataFrames\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDetermine which type of join is preferred for two tables of data and a task\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eUse different types of joins to merge dataframes\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g40b6e66c6ac8b27b60c89364c1716c87"},{"id":440426,"title":"Pivot Tables With Pandas","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-pivot-tables-pandas\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pivot-tables-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pivot-tables-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn about the various ways we can index and structure our data sets to make it easier to process or understand.  We start by learning about the difference between the \u003cstrong\u003e\u003cem\u003eWide\u003c/em\u003e\u003c/strong\u003e format and the \u003cstrong\u003e\u003cem\u003eLong\u003c/em\u003e\u003c/strong\u003e format, compare basic flattened index structures with multi-hierarchical index structures, and then create them ourselves using aggregation functions and pivot tables!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe what is meant by long and wide format data \u003c/li\u003e\n\u003cli\u003eUse multi-hierarchical indexing to access aggregated data \u003c/li\u003e\n\u003cli\u003eUse pivot to create a more organized aggregated DataFrame \u003c/li\u003e\n\u003cli\u003eUse stack and unstack to move between different level of multi-indexing \u003c/li\u003e\n\u003c/ul\u003e","exportId":"g9711a839a76ceeaa2cf9d6a1c5d580ca"},{"id":440431,"title":"Pivot Tables with Pandas - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-pivot-tables-pandas-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pivot-tables-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pivot-tables-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll learn how to make use of our newfound knowledge of pivot tables to work with real-world data.  \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eIn this lab you will:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe what is meant by long and wide format data \u003c/li\u003e\n\u003cli\u003eUse multi-hierarchical indexing to access aggregated data \u003c/li\u003e\n\u003cli\u003eUse pivot to create a more organized aggregated DataFrame \u003c/li\u003e\n\u003cli\u003eUse stack and unstack to move between different level of multi-indexing \u003c/li\u003e\n\u003c/ul\u003e","exportId":"g25a675bd128d1200bf205aa7d6423c6e"},{"id":440435,"title":"üîÑ Quiz: Aggregating and Reshaping with Pandas","type":"Quizzes::Quiz","indent":2,"locked":false,"assignmentExportId":"g60fa6bf791eeb37ffd6775ac54205729","questionCount":10,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":10.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"min_score","requiredPoints":6.0,"completed":false,"content":"","exportId":"gbb274ab685bca70f3b0cf4db4df8d524"},{"id":440447,"title":"Short Video: Pandas GroupBy","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv style=\"padding:62.5% 0 0 0;position:relative;\"\u003e\u003ciframe src=\"https://player.vimeo.com/video/713399088?h=71fdbf7fc8\u0026amp;badge=0\u0026amp;autopause=0\u0026amp;player_id=0\u0026amp;app_id=58479\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen=\"\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;\" title=\"Pandas GroupBy Function\"\u003e\u003c/iframe\u003e\u003c/div\u003e","exportId":"short-video-pandas-groupby"},{"id":440451,"title":"Aggregating and Combining DataFrames Exit Ticket","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"g221b5c6e2b52e2e672ff976345bf5ccb","questionCount":8,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"","exportId":"g59977d542efdb84dde70b1e3bc1a671f"},{"id":440461,"title":"Descriptive Analysis Exit Ticket","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"g25055c04d787a50e60ad8f422df6de7c","questionCount":7,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"","exportId":"g7fa50505224c8ed215a2e2ecfe57ab7e"},{"id":440465,"title":"‚≠êÔ∏è Pandas Data Cleaning - Cumulative Lab","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"g5a60789d395ad51a0e238bcb4149a574","questionCount":1,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-data-cleaning-lab\" target=\"_blank\"\u003e \u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e \u003c/a\u003e \u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-data-cleaning-lab/issues/new\" target=\"_blank\"\u003e \u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e \u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eWork on this lab on your local computer. If you're not sure how to clone the source code, refer to the instructions in \u003ca title=\"Running Jupyter Notebooks Locally\" href=\"pages/running-jupyter-notebooks-locally\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/running-jupyter-notebooks-locally\" data-api-returntype=\"Page\"\u003eRunning Jupyter Notebooks Locally\u003c/a\u003e. If you're not sure how to submit the link, refer to the instructions in \u003ca title=\"‚≠êÔ∏è Data Serialization Formats - Cumulative Lab\" href=\"quizzes/gd382b571f354991be10756bfc79dd939\"\u003e‚≠êÔ∏è Data Serialization Formats - Cumulative Lab\u003c/a\u003e\u003c/p\u003e","exportId":"g1be6f06d4a1dcfca22a12139749b5105"},{"id":451444,"title":"Data Cleaning in Pandas - Recap","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-summary-data-cleaning-pandas\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-summary-data-cleaning-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-summary-data-cleaning-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section you saw how to wrangle and clean data in Pandas! This will be a baseline skill that you will use consistently in your work whether it's doing sanity checks, cleaning messy data or transforming raw datasets into useful aggregates and views. Having an understanding of the format of your data is essential to critically thinking about how you can manipulate and shape it into new and interesting forms.\u003c/p\u003e\n\n\u003ch2\u003eLambda functions\u003c/h2\u003e\n\n\u003cp\u003eWe started out by introducing lambda functions. These are quick throw away functions that you can write on the fly. They're very useful for transforming a column feature. For example, you might want to extract the day from a date.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003epandas\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003epd\u003c/span\u003e\n\u003cspan class=\"n\"\u003edates\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epd\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSeries\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"s\"\u003e'12-01-2017'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e'12-02-2017'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e'12-03-2017'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e'12-04-2017'\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"n\"\u003edates\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003elambda\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e'-'\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e0    01\n1    02\n2    03\n3    04\ndtype: object\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eCombining DataFrames\u003c/h2\u003e\n\n\u003cp\u003eYou can combine dataframes by merging them (joining data by a common field) or concatenating them (appending data at the beginning or end).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003edf1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epd\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDataFrame\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edates\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003edf2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epd\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDataFrame\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"s\"\u003e'12-05-2017'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e'12-06-2017'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e'12-07-2017'\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"n\"\u003epd\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econcat\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"n\"\u003edf1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edf2\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cstyle\u003e\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\u003c/style\u003e\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e0\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003e0\u003c/th\u003e\n      \u003ctd\u003e12-01-2017\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1\u003c/th\u003e\n      \u003ctd\u003e12-02-2017\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2\u003c/th\u003e\n      \u003ctd\u003e12-03-2017\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e3\u003c/th\u003e\n      \u003ctd\u003e12-04-2017\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e0\u003c/th\u003e\n      \u003ctd\u003e12-05-2017\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1\u003c/th\u003e\n      \u003ctd\u003e12-06-2017\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2\u003c/th\u003e\n      \u003ctd\u003e12-07-2017\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\n\u003ch2\u003eGrouping and aggregating\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epd\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread_csv\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e'titanic.csv'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cstyle\u003e\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\u003c/style\u003e\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003ePassengerId\u003c/th\u003e\n      \u003cth\u003eSurvived\u003c/th\u003e\n      \u003cth\u003ePclass\u003c/th\u003e\n      \u003cth\u003eName\u003c/th\u003e\n      \u003cth\u003eSex\u003c/th\u003e\n      \u003cth\u003eAge\u003c/th\u003e\n      \u003cth\u003eSibSp\u003c/th\u003e\n      \u003cth\u003eParch\u003c/th\u003e\n      \u003cth\u003eTicket\u003c/th\u003e\n      \u003cth\u003eFare\u003c/th\u003e\n      \u003cth\u003eCabin\u003c/th\u003e\n      \u003cth\u003eEmbarked\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003e0\u003c/th\u003e\n      \u003ctd\u003e1.0\u003c/td\u003e\n      \u003ctd\u003e0.0\u003c/td\u003e\n      \u003ctd\u003e3\u003c/td\u003e\n      \u003ctd\u003eBraund, Mr. Owen Harris\u003c/td\u003e\n      \u003ctd\u003emale\u003c/td\u003e\n      \u003ctd\u003e22.0\u003c/td\u003e\n      \u003ctd\u003e1.0\u003c/td\u003e\n      \u003ctd\u003e0.0\u003c/td\u003e\n      \u003ctd\u003eA/5 21171\u003c/td\u003e\n      \u003ctd\u003e7.2500\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eS\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1\u003c/th\u003e\n      \u003ctd\u003e2.0\u003c/td\u003e\n      \u003ctd\u003e1.0\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003eCumings, Mrs. John Bradley (Florence Briggs Th...\u003c/td\u003e\n      \u003ctd\u003efemale\u003c/td\u003e\n      \u003ctd\u003e38.0\u003c/td\u003e\n      \u003ctd\u003e1.0\u003c/td\u003e\n      \u003ctd\u003e0.0\u003c/td\u003e\n      \u003ctd\u003ePC 17599\u003c/td\u003e\n      \u003ctd\u003e71.2833\u003c/td\u003e\n      \u003ctd\u003eC85\u003c/td\u003e\n      \u003ctd\u003eC\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2\u003c/th\u003e\n      \u003ctd\u003e3.0\u003c/td\u003e\n      \u003ctd\u003e1.0\u003c/td\u003e\n      \u003ctd\u003e3\u003c/td\u003e\n      \u003ctd\u003eHeikkinen, Miss. Laina\u003c/td\u003e\n      \u003ctd\u003efemale\u003c/td\u003e\n      \u003ctd\u003e26.0\u003c/td\u003e\n      \u003ctd\u003e0.0\u003c/td\u003e\n      \u003ctd\u003e0.0\u003c/td\u003e\n      \u003ctd\u003eSTON/O2. 3101282\u003c/td\u003e\n      \u003ctd\u003e7.9250\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eS\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e3\u003c/th\u003e\n      \u003ctd\u003e4.0\u003c/td\u003e\n      \u003ctd\u003e1.0\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003eFutrelle, Mrs. Jacques Heath (Lily May Peel)\u003c/td\u003e\n      \u003ctd\u003efemale\u003c/td\u003e\n      \u003ctd\u003e35.0\u003c/td\u003e\n      \u003ctd\u003e1.0\u003c/td\u003e\n      \u003ctd\u003e0.0\u003c/td\u003e\n      \u003ctd\u003e113803\u003c/td\u003e\n      \u003ctd\u003e53.1000\u003c/td\u003e\n      \u003ctd\u003eC123\u003c/td\u003e\n      \u003ctd\u003eS\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e4\u003c/th\u003e\n      \u003ctd\u003e5.0\u003c/td\u003e\n      \u003ctd\u003e0.0\u003c/td\u003e\n      \u003ctd\u003e3\u003c/td\u003e\n      \u003ctd\u003eAllen, Mr. William Henry\u003c/td\u003e\n      \u003ctd\u003emale\u003c/td\u003e\n      \u003ctd\u003e35.0\u003c/td\u003e\n      \u003ctd\u003e0.0\u003c/td\u003e\n      \u003ctd\u003e0.0\u003c/td\u003e\n      \u003ctd\u003e373450\u003c/td\u003e\n      \u003ctd\u003e8.0500\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eS\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003egrouped\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egroupby\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"s\"\u003e'Pclass'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e'Sex'\u003c/span\u003e\u003cspan class=\"p\"\u003e])[\u003c/span\u003e\u003cspan class=\"s\"\u003e'Age'\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003emean\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003ereset_index\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"n\"\u003egrouped\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cstyle\u003e\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\u003c/style\u003e\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003ePclass\u003c/th\u003e\n      \u003cth\u003eSex\u003c/th\u003e\n      \u003cth\u003eAge\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003e0\u003c/th\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003efemale\u003c/td\u003e\n      \u003ctd\u003e34.098291\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1\u003c/th\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003emale\u003c/td\u003e\n      \u003ctd\u003e38.287799\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2\u003c/th\u003e\n      \u003ctd\u003e2\u003c/td\u003e\n      \u003ctd\u003efemale\u003c/td\u003e\n      \u003ctd\u003e26.338992\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e3\u003c/th\u003e\n      \u003ctd\u003e2\u003c/td\u003e\n      \u003ctd\u003emale\u003c/td\u003e\n      \u003ctd\u003e31.630340\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e4\u003c/th\u003e\n      \u003ctd\u003e3\u003c/td\u003e\n      \u003ctd\u003efemale\u003c/td\u003e\n      \u003ctd\u003e25.677973\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\n\u003ch2\u003ePivot tables\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003epivoted\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egrouped\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epivot\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eindex\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e'Pclass'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecolumns\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e'Sex'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalues\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e'Age'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003epivoted\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cstyle\u003e\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\u003c/style\u003e\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003eSex\u003c/th\u003e\n      \u003cth\u003efemale\u003c/th\u003e\n      \u003cth\u003emale\u003c/th\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003ePclass\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1\u003c/th\u003e\n      \u003ctd\u003e34.098291\u003c/td\u003e\n      \u003ctd\u003e38.287799\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2\u003c/th\u003e\n      \u003ctd\u003e26.338992\u003c/td\u003e\n      \u003ctd\u003e31.630340\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e3\u003c/th\u003e\n      \u003ctd\u003e25.677973\u003c/td\u003e\n      \u003ctd\u003e25.757624\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e?\u003c/th\u003e\n      \u003ctd\u003e32.011356\u003c/td\u003e\n      \u003ctd\u003e32.862597\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\n\u003ch2\u003eGraphing\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003ematplotlib.pyplot\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003eplt\u003c/span\u003e\n\u003cspan class=\"o\"\u003e%\u003c/span\u003e\u003cspan class=\"n\"\u003ematplotlib\u003c/span\u003e \u003cspan class=\"n\"\u003einline\u003c/span\u003e\n\u003cspan class=\"n\"\u003epivoted\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eplot\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ekind\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e'barh'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\u0026lt;matplotlib.axes._subplots.AxesSubplot at 0x121802828\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cimg src=\"index_files/index_11_1.png\" alt=\"png\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eMissing data\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e'Top 5 Values before:\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e'Cabin'\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003evalue_counts\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enormalize\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003ereset_index\u003c/span\u003e\u003cspan class=\"p\"\u003e()[:\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Not a useful means of imputing in most cases, but a simple example to recap\n\u003c/span\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCabin\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e'Cabin'\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003efillna\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e'?'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e'Top 5 Values after:\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCabin\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalue_counts\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enormalize\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003ereset_index\u003c/span\u003e\u003cspan class=\"p\"\u003e()[:\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eTop 5 Values before:\n          index     Cabin\n0         E121  0.013289\n1          A20  0.013289\n2          B41  0.013289\n3  C23 C25 C27  0.011628\n4          E38  0.011628\nTop 5 Values after:\n   index     Cabin\n0     ?  0.567218\n1   B41  0.005751\n2  E121  0.005751\n3   A20  0.005751\n4   E38  0.005032\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you started practicing essential ETL skills that you will use throughout your data work to transform and wrangle data into useful forms.\u003c/p\u003e","exportId":"data-cleaning-in-pandas-recap"}]},{"id":45657,"name":"Topic 6: Getting Started with SQL","status":"started","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g98b53f0f86b445c61c8446066aa60910","items":[{"id":440481,"title":"Topic 6 Lesson Priorities (Live)","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 91.5433%; height: 415px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete Before \u003cem\u003eSQL Queries\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 52.2353%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.72432%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003cstrong\u003e\u003ca title=\"Getting Started with SQL - Introduction\" href=\"pages/getting-started-with-sql-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/getting-started-with-sql-introduction\" data-api-returntype=\"Page\"\u003eGetting Started with SQL - Introduction\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 29px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 29px;\"\u003e\u003ca title=\"Connecting to SQL Databases\" href=\"assignments/g1add67b78281ae2a2eb3f75501c424c3\"\u003eConnecting to SQL Databases\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center; height: 29px;\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 29px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Selecting Data with SQL\" href=\"assignments/ge031f1ae87298d0a98f8e73c6b53640b\"\u003eSelecting Data with SQL\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center; height: 29px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 29px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: Getting Started with SQL\" href=\"quizzes/g3870afccc1c53ad18c76df204a41f4fd\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/quizzes/21549\" data-api-returntype=\"Quiz\"\u003eQuiz: Getting Started with SQL\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center; height: 29px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003cstrong\u003e\u003ca title=\"Filtering Data with SQL\" href=\"assignments/g055514bc26de5d911bf7626fff266d7b\"\u003eFiltering Data with SQL\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"Filtering Data with SQL - Lab\" href=\"assignments/gd45c31c98f6c1a9458d872d0b982e0aa\"\u003eFiltering Data with SQL - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 29px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Ordering and Limiting Data with SQL\" href=\"assignments/g094287fd7ad527253aaf69cfe63613d9\"\u003eOrdering and Limiting Data with SQL\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center; height: 29px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 29px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 29px;\"\u003e\u003ca title=\"Filtering, Ordering, and Limiting Data with SQL - Lab\" href=\"assignments/g75f6e7009ad15d0846d2826775cb78b4\"\u003eFiltering, Ordering, and Limiting Data with SQL - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center; height: 29px;\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003cstrong\u003e \u003ca title=\"Grouping Data with SQL\" href=\"assignments/ge21d8bf641243230e5a6e1bd29bfc0f5\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9175\" data-api-returntype=\"Assignment\"\u003eGrouping Data with SQL\u003c/a\u003e \u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"Grouping Data with SQL - Lab\" href=\"assignments/gfe1ba86c5b9da7fdee1d1c620a9527d9\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9176\" data-api-returntype=\"Assignment\"\u003eGrouping Data with SQL - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"Database Admin 101\" href=\"assignments/g9f939ac2496cd23a9d2236b40858d109\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9185\" data-api-returntype=\"Assignment\"\u003eDatabase Admin 101\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"Database Admin 101 - Lab\" href=\"assignments/g31949e3e33b48d18e70e6c57f6bebb96\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9186\" data-api-returntype=\"Assignment\"\u003eDatabase Admin 101 - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;Low priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003cstrong\u003e \u003ca class=\"inline_disabled\" title=\"SQL Database Data Types\" href=\"pages/sql-database-data-types\" target=\"_blank\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/sql-database-data-types\" data-api-returntype=\"Page\"\u003eSQL Database Data Types\u003c/a\u003e \u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"Quiz: SQL Filtering and Database Management\" href=\"quizzes/gcbfca6c57f956e3e24e228e00d2ff65d\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/quizzes/21550\" data-api-returntype=\"Quiz\"\u003eQuiz: SQL Filtering and Database Management\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 91.3561%; height: 58px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eSQL Queries\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 52.2353%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.72432%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 52.2353%;\"\u003e\u003cstrong\u003e\u003ca title=\"SQL Queries Exit Ticket\" href=\"quizzes/g48b48a569b57fd9cecaaeee99eba2db5\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/quizzes/11256\" data-api-returntype=\"Quiz\"\u003eSQL Queries Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"Getting Started with SQL - Recap\" href=\"pages/getting-started-with-sql-recap\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/getting-started-with-sql-recap\" data-api-returntype=\"Page\"\u003eGetting Started with SQL - Recap\u003c/a\u003e\u0026nbsp;\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e","exportId":"topic-6-lesson-priorities-live"},{"id":440484,"title":"Getting Started with SQL - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-getting-started-sql-intro\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-sql-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-sql-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you'll learn about SQL, which stands for Structured Query Language. It has been around since the 1970s and there are many different dialects of the language including MySQL, SQLite, and PostgreSQL, to name a few.\u003c/p\u003e\n\n\u003cp\u003eEach of these dialects has particularities such as specific functions or keywords for that specific implementation. All of them, however, have the same basic structures including keywords like \u003ccode\u003eSELECT\u003c/code\u003e for querying databases, and the same general database architecture.\u003c/p\u003e\n\n\u003ch2\u003eThe Structure of SQL Databases\u003c/h2\u003e\n\n\u003cp\u003eA SQL \u003cstrong\u003e\u003cem\u003edatabase\u003c/em\u003e\u003c/strong\u003e is a high-level container containing one or more \u003cstrong\u003e\u003cem\u003etables\u003c/em\u003e\u003c/strong\u003e. The database can be a continuously-running server that receives requests and returns responses (MySQL, PostgreSQL) or it can be a specially-formatted file on disk (SQLite). We will primarily use SQLite in these lessons because it is lightweight and portable (and therefore useful for educational purposes), but it's important to be aware that other more \"heavy duty\" types of databases are available and are used more often in industry settings.\u003c/p\u003e\n\n\u003cp\u003eA SQL table contains tabular data (data stored in rows and columns), similar to a CSV. Every table has a defined set of columns, and then we store any number of what we refer to as 'records' as rows in our database. A record is just information referring to one specific entity. For instance, if you had a table called \"people\" you could imagine a structure like this:\u003c/p\u003e\n\n\u003ctable border=\"1\" cellpadding=\"4\" cellspacing=\"0\"\u003e\n  \u003ctbody\u003e\u003ctr\u003e\n    \u003cth\u003eid\u003c/th\u003e\n    \u003cth\u003ename\u003c/th\u003e\n    \u003cth\u003eage\u003c/th\u003e\n    \u003cth\u003eemail\u003c/th\u003e\n  \u003c/tr\u003e\n\n  \u003ctr\u003e\n    \u003ctd\u003e1\u003c/td\u003e\n    \u003ctd\u003eBob\u003c/td\u003e\n    \u003ctd\u003e29\u003c/td\u003e\n    \u003ctd\u003ebob@flatironschool.com\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003e2\u003c/td\u003e\n    \u003ctd\u003eJames\u003c/td\u003e\n    \u003ctd\u003e28\u003c/td\u003e\n    \u003ctd\u003ejames@flatironschool.com\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003e3\u003c/td\u003e\n    \u003ctd\u003eJohn\u003c/td\u003e\n    \u003ctd\u003e28\u003c/td\u003e\n    \u003ctd\u003ejohn@flatironschool.com\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\n\u003cp\u003eEach column has a name, and each row contains the corresponding information about a person. Unlike a CSV, a SQL table can also enforce the data types of the columns, which are described in the table \u003cstrong\u003e\u003cem\u003eschema\u003c/em\u003e\u003c/strong\u003e. The schema for this table might look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eCREATE TABLE people (\n  id INTEGER PRIMARY KEY,\n  name TEXT,\n  age INTEGER,\n  email TEXT\n);\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eConnecting to and Querying SQL Databases\u003c/h2\u003e\n\n\u003cp\u003eAs a data scientist, your primary use case of SQL will be querying data stored within databases. To do this, you connect to the database with some sort of tool.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eMost SQL databases have an associated \u003cstrong\u003ecommand-line interface\u003c/strong\u003e where you can write SQL queries without any additional languages or tools. For SQLite, this is called \u003ccode\u003esqlite3\u003c/code\u003e (\u003ca href=\"https://sqlite.org/cli.html\"\u003edocumentation here\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eYou can also connect through a different \u003cstrong\u003ecoding language such as Python\u003c/strong\u003e. For SQLite, the Python module is called \u003ccode\u003esqlite3\u003c/code\u003e (\u003ca href=\"https://docs.python.org/3/library/sqlite3.html\"\u003edocumentation here\u003c/a\u003e). (Yes, the command-line interface and Python module have the same name.)\u003c/li\u003e\n\u003cli\u003eOne other approach is using a \u003cstrong\u003eGUI (graphical user interface)\u003c/strong\u003e tool. For SQLite, a good one is DB Browser for SQLite (\u003ca href=\"https://sqlitebrowser.org/\"\u003edocumentation here\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eOnce you're connected to the database, you can then read, write, update, and delete data from its tables. These commands are called \u003cstrong\u003e\u003cem\u003equeries\u003c/em\u003e\u003c/strong\u003e and are written using the SQL language.\u003c/p\u003e\n\n\u003cp\u003e(Similar to other kinds of file permissions, you might only have the ability to perform some of these actions but not others, e.g. read information from the database but not delete information.)\u003c/p\u003e\n\n\u003cp\u003eTo retrieve data from one or more tables you usually use a \u003ccode\u003eSELECT\u003c/code\u003e statement in your query.\u003c/p\u003e\n\n\u003cp\u003eA simple query would look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight sql\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e \u003cspan class=\"n\"\u003ecol1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecol2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecol3\u003c/span\u003e\n\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e \u003cspan class=\"k\"\u003etable\u003c/span\u003e\n\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e \u003cspan class=\"n\"\u003erecords\u003c/span\u003e \u003cspan class=\"k\"\u003ematch\u003c/span\u003e \u003cspan class=\"n\"\u003ecriteria\u003c/span\u003e\n\u003cspan class=\"k\"\u003eLIMIT\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eDon't worry if this is confusing now, you'll soon learn what each line does. For now, just notice that:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eQueries start with the \u003ccode\u003eSELECT\u003c/code\u003e clause, followed by what you want to select. If selecting multiple columns, you separate them with a comma.\u003c/li\u003e\n\u003cli\u003eThen you specify where that data is being retrieved from the using the FROM clause followed by the table name.\u003c/li\u003e\n\u003cli\u003eAfterward, you can provide conditions such as filters or limits on the amount of data returned.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eRelational Data\u003c/h2\u003e\n\n\u003cp\u003eAlso unlike a CSV, a SQL database can contain multiple related SQL tables. To demonstrate, here is an outline of a database structure:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://github.com/learn-co-curriculum/dsc-getting-started-sql-intro/raw/master/Database-Schema.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThis kind of diagram is called an \u003cstrong\u003e\u003cem\u003eentity relationship diagram (ERD)\u003c/em\u003e\u003c/strong\u003e because it shows the relationships between tables. It does not give us any information about the specific data stored in the database, but rather the metadata.\u003c/p\u003e\n\n\u003cp\u003eIn the diagram, each rectangle is a table, with the table name listed at the top. In this case, we have 8 tables:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003ccode\u003eproductlines\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eproducts\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eorderdetails\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eemployees\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eoffices\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecustomers\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eorders\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003epayments\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eBelow each of the table names, we have a list of the various column names associated with that table. So for example, the \u003ccode\u003eproductlines\u003c/code\u003e table has four columns: \u003ccode\u003eproductLine\u003c/code\u003e, \u003ccode\u003etextDescription\u003c/code\u003e, \u003ccode\u003ehtmlDescription\u003c/code\u003e and \u003ccode\u003eimage\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eIn addition to the names of the tables and their column names, we have an indication of relationships. For example, data in the employees table has some relationship to data on the offices table, indicating that an employee may be associated with a specific office location. Likewise, certain orders are associated with certain customers. Lots of real world data is inherently related. For example, students have an association to a course, or ingredients are related to a recipe.\u003c/p\u003e\n\n\u003ch3\u003ePrimary Keys and Foreign Keys\u003c/h3\u003e\n\n\u003cp\u003eYou may also note that some of these column names are preceded by an asterix (\u003ccode\u003e*\u003c/code\u003e). This indicates that this is the \u003cstrong\u003e\u003cem\u003eprimary key\u003c/em\u003e\u003c/strong\u003e for the table. A primary key is a unique identifier for a table. That is, there can only be unique values for this column entry. \u003ccode\u003elastName\u003c/code\u003e would not be a good choice for a primary key as it's common for people to have the same last names or even \u003ccode\u003efirstName + lastName\u003c/code\u003e pairings. For this reason it is typical for a primary key to have a name reflecting some kind of \"number\", \"code\", or \"id\" ‚Äî something that is truly unique to that record, which may or may not have any meaning beyond the database itself.\u003c/p\u003e\n\n\u003cp\u003eIf you look closely, you'll see that the columns that are the primary key for one table can also appear on other tables. This is known as a \u003cstrong\u003e\u003cem\u003eforeign key\u003c/em\u003e\u003c/strong\u003e aka the primary key from a different (\"foreign\") table. This is the core idea of how data on different tables is associated in a relational database. If you were told a specific \u003ccode\u003ecustomerNumber\u003c/code\u003e, and then given a list of order data that included the \u003ccode\u003ecustomerNumber\u003c/code\u003e, you could determine which orders were placed by that customer by matching up the primary and foreign keys.\u003c/p\u003e\n\n\u003cp\u003eThe lines, circles, arrows, and tick marks are showing different categorizations on exactly how this data is linked.\u003c/p\u003e\n\n\u003ch2\u003eTechnical Interview Practice\u003c/h2\u003e\n\n\u003cp\u003eData retrieval is the most foundational and arguably most important skill in a data scientist's toolbox. You can know all the Python and machine learning and statistics in the world, but they're useless if you don't have data to aim those skills at!\u003c/p\u003e\n\n\u003cp\u003eEspecially for junior data scientists, employers tend to evaluate candidates' data retrieval abilities by asking SQL questions. Keep this in mind as you go through our SQL content, and consider getting additional practice with platforms such as \u003ca href=\"https://www.hackerrank.com/domains/sql\"\u003eHackerRank\u003c/a\u003e to keep your skills up.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you got a quick overview of what SQL is and saw an example SQL \u003ccode\u003eSELECT\u003c/code\u003e query and ERD! Remember that there are multiple SQL dialects all with particular differences, but the overall language is generally fairly similar and interchangeable. You also learned that knowledge of SQL is important for job interviews since data retrieval is a foundational part of the data science process.\u003c/p\u003e","exportId":"getting-started-with-sql-introduction"},{"id":440487,"title":"Connecting to SQL Databases","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-intro-to-sqlite\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-intro-to-sqlite\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-intro-to-sqlite/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you've gotten a brief introduction to SQL, its time to get some hands-on practice connecting to a database and executing some queries.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eConnect to a SQLite database through the \u003ccode\u003esqlite3\u003c/code\u003e command-line interface\u003c/li\u003e\n\u003cli\u003eConnect to a SQLite database through the \u003ccode\u003esqlite3\u003c/code\u003e Python library\u003c/li\u003e\n\u003cli\u003eView information about database tables and column names\u003c/li\u003e\n\u003cli\u003eRetrieve all information from a SQL table\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g1add67b78281ae2a2eb3f75501c424c3"},{"id":440490,"title":"Selecting Data with SQL","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-selecting-data-v2-4\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-selecting-data-v2-4\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-selecting-data-v2-4/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eAs a data scientist, the SQL query you'll likely use most often is \u003ccode\u003eSELECT\u003c/code\u003e. This lesson introduces how to use \u003ccode\u003eSELECT\u003c/code\u003e to subset and transform the columns of a database table.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRetrieve a subset of columns from a table\u003c/li\u003e\n\u003cli\u003eCreate an alias in a SQL query\u003c/li\u003e\n\u003cli\u003eUse SQL CASE statements to transform selected columns\u003c/li\u003e\n\u003cli\u003eUse built-in SQL functions to transform selected columns\u003c/li\u003e\n\u003c/ul\u003e","exportId":"ge031f1ae87298d0a98f8e73c6b53640b"},{"id":440496,"title":"Quiz: Getting Started with SQL","type":"Quizzes::Quiz","indent":2,"locked":false,"assignmentExportId":"g8e33c0615cca39ace3adec973d9cd44a","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"min_score","requiredPoints":3.0,"completed":false,"content":"","exportId":"g3870afccc1c53ad18c76df204a41f4fd"},{"id":440500,"title":"Filtering Data with SQL","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-filtering-v2-4\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-filtering-v2-4\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-filtering-v2-4/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eAfter \u003ccode\u003eSELECT\u003c/code\u003e and \u003ccode\u003eFROM\u003c/code\u003e, the next SQL clause you're most likely to use as a data scientist is \u003ccode\u003eWHERE\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWith just a \u003ccode\u003eSELECT\u003c/code\u003e expression, we can specify which \u003cstrong\u003ecolumns\u003c/strong\u003e we want to select, as well as transform the column values using aliases, built-in functions, and other expressions.\u003c/p\u003e\n\n\u003cp\u003eHowever if we want to filter the \u003cstrong\u003erows\u003c/strong\u003e that we want to select, we also need to include a \u003ccode\u003eWHERE\u003c/code\u003e clause.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRetrieve a subset of records from a table using a \u003ccode\u003eWHERE\u003c/code\u003e clause\u003c/li\u003e\n\u003cli\u003eFilter results using conditional operators such as \u003ccode\u003eBETWEEN\u003c/code\u003e, \u003ccode\u003eIS NULL\u003c/code\u003e, and \u003ccode\u003eLIKE\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eApply an aggregate function to the result of a filtered query\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g055514bc26de5d911bf7626fff266d7b"},{"id":440505,"title":"Filtering Data with SQL - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-filtering-lab-v2-4\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-filtering-lab-v2-4\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-filtering-lab-v2-4/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNASA wants to go to Mars! Before they build their rocket, NASA needs to track information about all of the planets in the Solar System. In this lab, you'll practice querying the database with various \u003ccode\u003eSELECT\u003c/code\u003e statements. This will include selecting different columns and implementing other SQL clauses like \u003ccode\u003eWHERE\u003c/code\u003e to return the data desired.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-filtering-lab-v2-4/master/images/planets.png\" alt=\"image of solar system\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will practice the following:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRetrieve a subset of records from a table using a \u003ccode\u003eWHERE\u003c/code\u003e clause\u003c/li\u003e\n\u003cli\u003eFilter results using conditional operators such as \u003ccode\u003eBETWEEN\u003c/code\u003e, \u003ccode\u003eIS NULL\u003c/code\u003e, and \u003ccode\u003eLIKE\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eApply an aggregate function to the result of a filtered query\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gd45c31c98f6c1a9458d872d0b982e0aa"},{"id":440508,"title":"Ordering and Limiting Data with SQL","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-ordering-and-limiting\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-ordering-and-limiting\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-ordering-and-limiting/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll learn how to sort your query results using an \u003ccode\u003eORDER BY\u003c/code\u003e clause, and an additional technique for filtering the results of your SQL queries using the \u003ccode\u003eORDER BY\u003c/code\u003e clause combined with the \u003ccode\u003eLIMIT\u003c/code\u003e clause.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eOrder the results of your queries by using \u003ccode\u003eORDER BY\u003c/code\u003e (\u003ccode\u003eASC\u003c/code\u003e \u0026amp; \u003ccode\u003eDESC\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003eLimit the number of records returned by a query using \u003ccode\u003eLIMIT\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eWrite SQL queries to filter and order results\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g094287fd7ad527253aaf69cfe63613d9"},{"id":440514,"title":"Filtering, Ordering, and Limiting Data with SQL - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-filtering-and-ordering-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-filtering-and-ordering-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-filtering-and-ordering-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you will practice writing SQL \u003ccode\u003eSELECT\u003c/code\u003e queries that limit results based on conditions, using \u003ccode\u003eWHERE\u003c/code\u003e, \u003ccode\u003eORDER BY\u003c/code\u003e, and \u003ccode\u003eLIMIT\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will practice the following:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eOrder the results of your queries by using \u003ccode\u003eORDER BY\u003c/code\u003e (\u003ccode\u003eASC\u003c/code\u003e \u0026amp; \u003ccode\u003eDESC\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003eLimit the number of records returned by a query using \u003ccode\u003eLIMIT\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eWrite SQL queries to filter and order results\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g75f6e7009ad15d0846d2826775cb78b4"},{"id":440517,"title":"Grouping Data with SQL","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-grouping-data-with-sql\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-grouping-data-with-sql\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-grouping-data-with-sql/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSometimes you may wish to find the mean, median, min, or max of a column feature. For example, there could be a customer relational database that you've been working with and you may wonder if there are differences in overall sales across offices or regions. We can use aggregate functions in SQL to assist with performing these analyses.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the relationship between aggregate functions and \u003ccode\u003eGROUP BY\u003c/code\u003e statements\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003eGROUP BY\u003c/code\u003e statements in SQL to apply aggregate functions like: \u003ccode\u003eCOUNT\u003c/code\u003e, \u003ccode\u003eMAX\u003c/code\u003e, \u003ccode\u003eMIN\u003c/code\u003e, and \u003ccode\u003eSUM\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate an alias in a SQL query\u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003eHAVING\u003c/code\u003e clause to compare different aggregates\u003c/li\u003e\n\u003cli\u003eCompare the difference between the \u003ccode\u003eWHERE\u003c/code\u003e and \u003ccode\u003eHAVING\u003c/code\u003e clause\u003c/li\u003e\n\u003c/ul\u003e","exportId":"ge21d8bf641243230e5a6e1bd29bfc0f5"},{"id":440521,"title":"Grouping Data with SQL - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-grouping-data-with-sql-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-grouping-data-with-sql-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-grouping-data-with-sql-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll query data from a table populated with Babe Ruth's career hitting statistics.  Then you'll use aggregate functions to pull interesting information from the table that basic queries cannot track. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the relationship between aggregate functions and \u003ccode\u003eGROUP BY\u003c/code\u003e statements\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003eGroup BY\u003c/code\u003e statements in SQL to apply aggregate functions like: \u003ccode\u003eCOUNT\u003c/code\u003e, \u003ccode\u003eMAX\u003c/code\u003e, \u003ccode\u003eMIN\u003c/code\u003e, and \u003ccode\u003eSUM\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate an alias in a SQL query\u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003eHAVING\u003c/code\u003e clause to compare different aggregates\u003c/li\u003e\n\u003cli\u003eCompare the difference between the \u003ccode\u003eWHERE\u003c/code\u003e and \u003ccode\u003eHAVING\u003c/code\u003e clause\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gfe1ba86c5b9da7fdee1d1c620a9527d9"},{"id":440525,"title":"Database Admin 101","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-database-admin-101\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-database-admin-101\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-database-admin-101/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you've seen how to access and retrieve information from a SQL database, let's investigate how you could create or alter an existing database. Although there is still much to learn, this will lead you into the realm of database administration.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a SQL database\u003c/li\u003e\n\u003cli\u003eCreate a SQL table\u003c/li\u003e\n\u003cli\u003eCreate rows in a SQL table\u003c/li\u003e\n\u003cli\u003eAlter entries in a SQL table\u003c/li\u003e\n\u003cli\u003eDelete entries in a SQL table\u003c/li\u003e\n\u003cli\u003eDetermine when it is necessary to commit changes to a database\u003c/li\u003e\n\u003cli\u003eCommit changes via \u003ccode\u003esqlite3\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g9f939ac2496cd23a9d2236b40858d109"},{"id":440529,"title":"Database Admin 101 - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-database-admin-101-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-database-admin-101-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-database-admin-101-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll go through the process of designing and creating a database. From there, you'll begin to populate this table with mock data provided to you.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse knowledge of the structure of databases to create a database and populate it\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g31949e3e33b48d18e70e6c57f6bebb96"},{"id":440532,"title":"SQL Database Data Types","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-sql-database-data-types\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-database-data-types\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-database-data-types/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this lesson, you'll cover the importance of specifying data types, and the different types of data you can store in a SQLite database.\u003c/p\u003e  \u003ch2\u003eObjectives\u003c/h2\u003e  \u003cp\u003eYou will be able to:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eDescribe how data types operate within databases and explain why they are necessary\u003c/li\u003e \u003cli\u003eCompare the 4 different types of data you can store in a SQLite database\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eWhy Do Data Types Matter?\u003c/h2\u003e  \u003cp\u003eYou've seen that when you create a table, you need to include a name for it as well as define at least one column. You define columns in a \u003ccode\u003eCREATE\u003c/code\u003e statement by including a name and a data type to let SQLite know the kind of data you will be storing there. The practice of explicitly declaring a type is known as \"typing.\" \u003c/p\u003e  \u003cp\u003eWhy is it important that you use typing in our database? Simply put, typing allows us to exercise some level of control over our data. Typing not only informs our database of the kind of data you plan to store in a column but it also restricts it. For instance, look at the age column below in our cats table. What do you mean by age? What if you had this:\u003c/p\u003e  \u003ctable\u003e\u003cthead\u003e \u003ctr\u003e \u003cth\u003ename\u003c/th\u003e \u003cth\u003ebreed\u003c/th\u003e \u003cth\u003eage\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e\u003ctbody\u003e \u003ctr\u003e \u003ctd\u003eMaru\u003c/td\u003e \u003ctd\u003eScottish Fold\u003c/td\u003e \u003ctd\u003e3\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eHannah\u003c/td\u003e \u003ctd\u003eTabby\u003c/td\u003e \u003ctd\u003etwo\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eLil' Bub\u003c/td\u003e \u003ctd\u003eAmerican Shorthair\u003c/td\u003e \u003ctd\u003e5.5\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e\u003c/table\u003e  \u003cp\u003eDid you intend age to be represented as a whole-number, a word, or a decimal? If you were asked to add up the ages of all the cats you could simply convert the \u003ccode\u003e'two'\u003c/code\u003e to \u003ccode\u003e2\u003c/code\u003e in your head, but your database can't do that. It doesn't have that ability because the logic involved in converting a word into a number would be dense and inefficient. What about different languages? What about different spellings? Capitalization, typos, or different hyphenation conventions? These are just some reasons this might start to get overwhelming. In other words, because databases are designed to store large amounts of data, they are very concerned with storing, accessing, and acting upon that data as efficiently as possible, which requires typing of columns.\u003c/p\u003e  \u003cp\u003eTyping gives us the ability to perform all kinds of operations with predictable results. For instance, the ability to perform math operations like \u003ccode\u003eSUM\u003c/code\u003e (i.e. summing integers). If you tried, for example,  to \u003ccode\u003eSUM\u003c/code\u003e all of the cats in the above table, SQLite would actually attempt to convert, or cast, their type to something it can \u003ccode\u003eSUM\u003c/code\u003e. It would try to convert anything it can to an \u003ccode\u003eINTEGER\u003c/code\u003e and ignore alpha characters. This can lead to real problems. Without typing, our data might get complicated and messy, and it would be difficult to ask the database questions about large sets of data.\u003c/p\u003e  \u003cp\u003eSimply put, it's important to adhere strictly to only storing data that fits with the data type you have given to a particular column. Once you have assigned a data type, most databases will actually throw errors rather than allowing the invalid data to be inserted.\u003c/p\u003e  \u003ch2\u003eData Types\u003c/h2\u003e  \u003cp\u003eDifferent database systems also have different data types available, which are important and useful to know whenever you are dealing with those systems. SQLite is a good starting point to learn about data types because it only has four basic categories of data types; they are:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eTEXT\u003cbr\u003eINTEGER\u003cbr\u003eREAL\u003cbr\u003eBLOB \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eLet's explore each category in more detail.\u003c/p\u003e  \u003ch3\u003eTEXT\u003c/h3\u003e  \u003cp\u003eAny alphanumeric characters which you want to represent as plain text. The body of this paragraph is text. Your name is text. Your email address is a piece of text. Your height, weight, and age, however, are probably not.\u003c/p\u003e  \u003cp\u003eThis SQL data type roughly corresponds to the \u003ccode\u003estr\u003c/code\u003e data type in Python.\u003c/p\u003e  \u003ch3\u003eINTEGER\u003c/h3\u003e  \u003cp\u003eAnything you want to represent as a whole number. If it's a number and contains no letter or special characters or decimal points then you should store it as an integer. If you use it to perform math or create a comparison between two different rows in our database, then you definitely want to store it as an integer.\u003c/p\u003e  \u003cp\u003eIf it's a number that doesn't represent a quantity (e.g. an ID number or zip code), it depends on the context whether you should store it as an integer. You might never add two house address numbers together, but you might want to sort them numerically. On the other hand, if you have meaningful leading zeroes (e.g. \u003ccode\u003e02134\u003c/code\u003e, which you don't want to treat as equivalent to \u003ccode\u003e2134\u003c/code\u003e), then it's better to store it as text.\u003c/p\u003e  \u003cp\u003eThis SQL data type roughly corresponds to the \u003ccode\u003eint\u003c/code\u003e data type in Python.\u003c/p\u003e  \u003ch3\u003eREAL\u003c/h3\u003e  \u003cp\u003eAnything that's a plain old decimal like 1.3 or 2.25. SQLite will store decimals up to 15 characters long. You can store 1.2345678912345 or 1234.5678912345, but 1.23456789123456789 would only store 1.2345678912345. In other database systems this is called 'double precision.'\u003c/p\u003e  \u003cp\u003eThis SQL data type roughly corresponds to the \u003ccode\u003efloat\u003c/code\u003e data type in Python.\u003c/p\u003e  \u003ch3\u003eBLOB\u003c/h3\u003e  \u003cp\u003eYou may encounter the \u003ccode\u003eBLOB\u003c/code\u003e data type while you're Googling or doing any further reading on SQLite. For now, you will not use \u003ccode\u003eBLOB\u003c/code\u003e. It stands for \"binary large object\" and is generally used for holding binary data such as images or audio files. When we use those kinds of files in this course, we will generally just store them using the computer's file storage system (hard drive), rather than using databases.\u003c/p\u003e  \u003ch2\u003eSQLite and Other SQL Implementations\u003c/h2\u003e  \u003cp\u003eTo increase its compatibility with other database engines (e.g. mySQL or PostgreSQL), SQLite allows the programmer to use other common data types outside of the four mentioned above. This is why we are referring to \u003ccode\u003eTEXT\u003c/code\u003e, \u003ccode\u003eINTEGER\u003c/code\u003e, \u003ccode\u003eREAL\u003c/code\u003e, and \u003ccode\u003eBLOB\u003c/code\u003e as data type \"categories\". All other common data types are lumped into one of the four existing data types recognized by SQLite. \u003c/p\u003e  \u003cp\u003eFor example, \u003ccode\u003eINT\u003c/code\u003e is a common data type used outside of SQLite. SQLite won't complain if you define a column as an \u003ccode\u003eINT\u003c/code\u003e data type. It will simply lump it into the \u003ccode\u003eINTEGER\u003c/code\u003e category and store it as such. Similarly, if something is declared as \u003ccode\u003eVARCHAR\u003c/code\u003e, SQLite will treat it as \u003ccode\u003eTEXT\u003c/code\u003e.\u003c/p\u003e  \u003cp\u003eTo accommodate this, SQLite has a pretty complicated system of categorizing data types that involves \u003cem\u003eStorage Classes\u003c/em\u003e, \u003cem\u003eType Affinities\u003c/em\u003e, and \u003cem\u003eDatatypes\u003c/em\u003e. There is also a fifth data type category called \u003ccode\u003eNUMERIC\u003c/code\u003e that can actually contain any of \u003ccode\u003eTEXT\u003c/code\u003e, \u003ccode\u003eINTEGER\u003c/code\u003e, \u003ccode\u003eREAL\u003c/code\u003e, and \u003ccode\u003eBLOB\u003c/code\u003e types. This one mainly comes up for Python developers when you are working with \u003ccode\u003eBOOLEAN\u003c/code\u003e data (like \u003ccode\u003eTrue\u003c/code\u003e or \u003ccode\u003eFalse\u003c/code\u003e in Python), which becomes a \u003ccode\u003eNUMERIC\u003c/code\u003e column containing 0s and 1s rather than some separate boolean data type.\u003c/p\u003e  \u003cp\u003eFor a deeper dive, check out the \u003ca href=\"http://www.sqlite.org/datatype3.html\"\u003eSQLite3 Documentation on Datatypes\u003c/a\u003e\u003c/p\u003e  \u003ch2\u003eSummary\u003c/h2\u003e  \u003cp\u003eGreat! Now that you've finished this lesson you know why it is important to specify data types, and you know about the different types of data you can store in a SQLite database.\u003c/p\u003e","exportId":"sql-database-data-types"},{"id":440537,"title":"Quiz: SQL Filtering and Database Management","type":"Quizzes::Quiz","indent":2,"locked":false,"assignmentExportId":"gc1901e768e31ebbcfd72d58338119bce","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"min_score","requiredPoints":3.0,"completed":false,"content":"","exportId":"gcbfca6c57f956e3e24e228e00d2ff65d"},{"id":440548,"title":"SQL Queries Exit Ticket","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"gba5cdde9895f9bdcacbec08a73936190","questionCount":8,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"","exportId":"g48b48a569b57fd9cecaaeee99eba2db5"},{"id":440551,"title":"Getting Started with SQL - Recap","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-getting-started-sql-recap\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-sql-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-sql-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this section, you were introduced to SQL databases and learned the basics of writing \u003ccode\u003eSELECT\u003c/code\u003e queries as well as some introductory database administration queries.\u003c/p\u003e  \u003ch2\u003eKey Takeaways\u003c/h2\u003e  \u003ch3\u003eSQL Format\u003c/h3\u003e  \u003cp\u003eWhile you may end up primarily using tools such as pandas to do a lot of your exploratory analysis and data manipulation, databases provide a much more powerful data storage option than flat files like CSVs or spreadsheets.\u003c/p\u003e  \u003cp\u003eSQL is short for \"structured query language\". SQL \u003cem\u003edatabases\u003c/em\u003e are containers that can contain multiple \u003cem\u003etables\u003c/em\u003e. Each table has a \u003cem\u003eschema\u003c/em\u003e that describes its columns (and their data types), and an \u003cem\u003eentity relationship diagram\u003c/em\u003e (or ERD) is a visual representation of all tables and their relationships.\u003c/p\u003e  \u003cp\u003eInteracting with SQL databases requires that you write queries using SQL syntax. Then you can execute the queries using tools such as a command-line interface or a Python library.\u003c/p\u003e  \u003cp\u003eMost database software is actually a type of server, but we mainly use SQLite in this course because it is lightweight and portable. SQLite databases are files located on the computer's file system, similar to CSV or JSON files. We used the \u003ccode\u003esqlite3\u003c/code\u003e Python library to open connections to these databases.\u003c/p\u003e  \u003ch3\u003e\u003ccode\u003eSELECT\u003c/code\u003e Queries\u003c/h3\u003e  \u003cp\u003eAs a data scientist, typically you are interacting with a database because you want to extract some data for analysis. To do this, you write SQL queries that start with \u003ccode\u003eSELECT\u003c/code\u003e. This allows you to read specific columns by name, or read all columns using \u003ccode\u003eSELECT *\u003c/code\u003e.\u003c/p\u003e  \u003cp\u003eIf you want to \u003cstrong\u003efilter\u003c/strong\u003e your selection so it only contains rows that meet certain criteria, you can use the \u003ccode\u003eWHERE\u003c/code\u003e clause.\u003c/p\u003e  \u003cp\u003eIf you want to \u003cstrong\u003eorder\u003c/strong\u003e your selection, you can use the \u003ccode\u003eORDER BY\u003c/code\u003e clause. Remember that the default behavior is to return results in ascending order (smallest to largest). You can verbosely specify this with the \u003ccode\u003eASC\u003c/code\u003e keyword, or, more commonly, modify the behavior to sort in descending order (largest to smallest) with the \u003ccode\u003eDESC\u003c/code\u003e keyword.\u003c/p\u003e  \u003cp\u003eIf you want to \u003cstrong\u003elimit\u003c/strong\u003e the number of results, you can use the \u003ccode\u003eLIMIT\u003c/code\u003e clause. This is frequently used with \u003ccode\u003eORDER BY\u003c/code\u003e to select the largest or smallest N results.\u003c/p\u003e  \u003ch3\u003eGrouping\u003c/h3\u003e  \u003cp\u003eThe unit of analysis of a SQL table is whatever is represented by a row. Sometimes you want to use a different unit of analysis that is less granular than the original. Maybe a row represents a city, but you want analysis that is by country. This is a good use case for \u003cstrong\u003egrouping\u003c/strong\u003e data using the \u003ccode\u003eGROUP BY\u003c/code\u003e clause.\u003c/p\u003e  \u003cp\u003eOften you also want to use an \u003cstrong\u003eaggregate function\u003c/strong\u003e when grouping, so that you can summarize the grouped data in some meaningful way. Examples of these aggregate functions include \u003ccode\u003eCOUNT()\u003c/code\u003e, \u003ccode\u003eMAX()\u003c/code\u003e, \u003ccode\u003eMIN()\u003c/code\u003e, and \u003ccode\u003eAVG()\u003c/code\u003e. You can also use those aggregate functions without grouping, and they will return a single record for the table overall (or all rows selected based on your filters).\u003c/p\u003e  \u003cp\u003eIf you want to \u003cstrong\u003efilter based on the result of an aggregate function\u003c/strong\u003e, you need to use \u003ccode\u003eHAVING\u003c/code\u003e rather than \u003ccode\u003eWHERE\u003c/code\u003e. \u003ccode\u003eWHERE\u003c/code\u003e applies to the original rows of the table, whereas \u003ccode\u003eHAVING\u003c/code\u003e applies to the rows created by \u003ccode\u003eGROUP BY\u003c/code\u003e. Both can be used in the same query if needed, applied to different features.\u003c/p\u003e  \u003ch3\u003eDatabase Administration\u003c/h3\u003e  \u003cp\u003eAs a data scientist, your responsibilities will typically be limited to writing \u003ccode\u003eSELECT\u003c/code\u003e queries. However it is useful to be familiar with the other queries used for managing data using databases, including commands for creating tables (specifying the data types in their schemas) and inserting, updating, and deleting data. Understanding the basics will help you collaborate with the team members who are responsible for these tasks, as well as occasional ad hoc work needed for your data analysis tasks.\u003c/p\u003e  \u003ch2\u003eSummary\u003c/h2\u003e  \u003cp\u003eIn this section, you were introduced to some foundational concepts in SQL. Next you'll expand your skills to more complex queries that integrate information from multiple tables!\u003c/p\u003e","exportId":"getting-started-with-sql-recap"}]},{"id":45661,"name":"Topic 7: SQL Table Relations","status":"started","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"ge332ce73dc486a92a4d89647893f0efa","items":[{"id":440560,"title":"Topic 7 Lesson Priorities (Live)","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 91.5433%; height: 145px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete Before \u003cem\u003eSQL Joins and Aggregation\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 52.2353%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.72432%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 10px;\"\u003e\u003cstrong\u003e\u003ca title=\"SQL Table Relations - Introduction\" href=\"pages/sql-table-relations-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/sql-table-relations-introduction\" data-api-returntype=\"Page\"\u003eSQL Table Relations - Introduction\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 10px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003cstrong\u003e \u003ca title=\"Join Statements\" href=\"assignments/g068864ff26d451d4ee5eb2c38e036d08\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186742\" data-api-returntype=\"Assignment\"\u003eJoin Statements\u003c/a\u003e \u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"Join Statements - Lab\" href=\"assignments/g3903fbfed2a41d934018cbbdd7ed0d01\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186743\" data-api-returntype=\"Assignment\"\u003eJoin Statements - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003cstrong\u003e \u003ca title=\"One-to-Many and Many-to-Many Joins\" href=\"assignments/gda56bffb0076e22354c1e1de83af6491\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186752\" data-api-returntype=\"Assignment\"\u003eOne-to-Many and Many-to-Many Joins\u003c/a\u003e \u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"One-to-Many and Many-to-Many Joins - Lab\" href=\"assignments/g57bf8c29cc7b86618b6ce63c9d3c09a5\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186753\" data-api-returntype=\"Assignment\"\u003eOne-to-Many and Many-to-Many Joins - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 91.5433%; height: 268px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eSQL Joins and Aggregation\u003c/em\u003e Lecture, Before \u003cem\u003eSQL Subqueries and Dialects\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 52.2353%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.72432%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 20px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 20px;\"\u003e\u003ca title=\"Short Video: SQL JOINs\" href=\"pages/short-video-sql-joins\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/short-video-sql-joins\" data-api-returntype=\"Page\"\u003eShort Video: SQL JOINs\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center; height: 20px;\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 20px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 20px;\"\u003e\u003cstrong\u003e\u003ca title=\"SQL Joins and Aggregation Exit Ticket\" href=\"quizzes/g223bea81a50067215af661997b0f3584\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30584\" data-api-returntype=\"Quiz\"\u003eSQL Joins and Aggregation Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center; height: 20px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003cstrong\u003e \u003ca title=\"SQL Subqueries\" href=\"assignments/g1ac9bd640ae6ab4ec8058467021e64b9\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186776\" data-api-returntype=\"Assignment\"\u003eSQL Subqueries\u003c/a\u003e \u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"SQL Subqueries - Lab\" href=\"assignments/g8eda097a51ee87a8709e3c1bd003519a\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186777\" data-api-returntype=\"Assignment\"\u003eSQL Subqueries - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"Using SQL with Pandas\" href=\"pages/using-sql-with-pandas\"\u003e\u003cstrong\u003e Using SQL with Pandas \u003c/strong\u003e\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"Using SQL with Pandas - Lab\" href=\"assignments/gdfea68ebb0233e75a6778f72fdc58e5f\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186784\" data-api-returntype=\"Assignment\"\u003eUsing SQL with Pandas - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 30px;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: SQL Table Relations\" href=\"quizzes/g6ef98c02cfbd946adcbcb05c06b14ea4\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30566\" data-api-returntype=\"Quiz\"\u003eQuiz: SQL Table Relations\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center; height: 30px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"SQL Interview Questions - Lab\" href=\"assignments/gfd2719f1fe4b1f4a4269b6a18ab80d51\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186775\" data-api-returntype=\"Assignment\"\u003eSQL Interview Questions - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 91.5433%; height: 64px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eSQL Subqueries and Dialects\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 52.2353%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.72432%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 20px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 10px;\"\u003e\u003cstrong\u003e\u003ca title=\"SQL Subqueries and Implementations Exit Ticket\" href=\"quizzes/gc5eeecddc4f0a940430321c456354a46\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30558\" data-api-returntype=\"Quiz\"\u003eSQL Subqueries and Implementations Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center; height: 10px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 52.2353%;\"\u003e\u003cstrong\u003e\u003ca title=\"‚≠êÔ∏è SQL - Cumulative Lab\" href=\"quizzes/gf4a06fa591eddfefef12f253ccb5564c\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30573\" data-api-returntype=\"Quiz\"\u003e‚≠êÔ∏è SQL - Cumulative Lab\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center;\"\u003e\u003cstrong\u003e1st*\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 52.2353%;\"\u003e\u003ca title=\"Quiz: SQL Interview Questions\" href=\"quizzes/g026c693c452a47d4d76973d6b77d8923\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30555\" data-api-returntype=\"Quiz\"\u003eQuiz: SQL Interview Questions\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center;\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"SQL Table Relations - Recap\" href=\"pages/sql-table-relations-recap\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/sql-table-relations-recap\" data-api-returntype=\"Page\"\u003eSQL Table Relations - Recap\u003c/a\u003e\u0026nbsp;\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003e*Cumulative labs may be used for pairing exercises and might not be published yet; contact your instructor if you have questions\u003c/strong\u003e\u003c/p\u003e","exportId":"topic-7-lesson-priorities-live"},{"id":440564,"title":"SQL Table Relations - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-sql-relations-intro\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-relations-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-relations-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eNow that you've learned the fundamentals of writing SQL queries, it's time to level up! One of the most powerful aspects of SQL is their \u003cem\u003erelational\u003c/em\u003e nature, meaning that they not only store data, they store relationships between different tables of data. In this section you will learn to use the \u003ccode\u003eJOIN\u003c/code\u003e clause and \u003cem\u003esubquery\u003c/em\u003e concept to write queries that span multiple tables. Then at the end you will complete some SQL practice specifically intended to prepare you for the kinds of SQL questions you're likely to see in technical interviews.\u003c/p\u003e  \u003ch2\u003eRelational Databases\u003c/h2\u003e  \u003cp\u003eYou have already seen this image several times:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-sql-relations-intro/master/Database-Schema.png\" alt=\"database ERD\"\u003e\u003c/p\u003e  \u003cp\u003eWe also previously described the idea that each table has a \u003cstrong\u003eprimary key\u003c/strong\u003e (indicated in the diagram above using \u003ccode\u003e*\u003c/code\u003e) and many tables have one or more \u003cstrong\u003eforeign keys\u003c/strong\u003e that link records in these tables to records in other tables.\u003c/p\u003e  \u003cp\u003eBut, why is it set up that way? What problem is it solving?\u003c/p\u003e  \u003cp\u003eLet's walk through a case study to understand this better.\u003c/p\u003e  \u003ch3\u003eRelational Databases - Payroll Case Study\u003c/h3\u003e  \u003cp\u003eLet's say that you've been hired by a big and important company to handle the payroll for all of their employees. Every two weeks, you need to look up each and every employee and how much they get paid. You need to send them a check \u003cem\u003eand\u003c/em\u003e send a notice of that check to their manager. (They have a very flat hierarchy, where everyone is either a manager or a regular employee. Managers do not have managers and regular employees do not manage anyone.)\u003c/p\u003e  \u003cp\u003eIn addition, let's say that managers get paid every month, instead of every two weeks. So, once a month we need to go through the list of employees again, find just the managers, and send them their checks.\u003c/p\u003e  \u003cp\u003eIn such a situation, we would need a place to store information about all of the managers and employees. Using a spreadsheet, your storage system might look something like this:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-sql-relations-intro/master/spreadsheet_1.png\" alt=\"spreadsheet with columns, name, pay, manager\"\u003e\u003c/p\u003e  \u003cp\u003eThis tells you \u003cem\u003ealmost\u003c/em\u003e everything you need, since it would allow you to filter who is a manager and who isn't, plus the payment amounts. But it doesn't have enough information for you to be able to send notices to employees' managers, since it just says who is an employee and who is a manager, but not the relationships.\u003c/p\u003e  \u003cp\u003eOne idea we might have is to add another column, so that every employee record also lists the name of their manager:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-sql-relations-intro/master/spreadsheet_2.png\" alt=\"spreadsheet with four columns, name, pay, manager, manager name\"\u003e\u003c/p\u003e  \u003cp\u003eNow we technically have all of the information we need, but we can think of a few issues:\u003c/p\u003e  \u003col\u003e \u003cli\u003eThere is some redundancy and wasted space. We don't actually need the \u003ccode\u003eManager?\u003c/code\u003e column, since we can just check whether there is a name in the \u003ccode\u003eManager Name\u003c/code\u003e column...but maybe we don't want to remove that since accidentally putting a manager name in the wrong place could mark someone as a regular employee when they're actually a manager.\u003c/li\u003e \u003cli\u003eThis is not a very robust system if anything changes. What if we get another manager who is also named Steve? Maybe you could enter the new Steve as \"Steve H.\", and you would just need to remember that \"Steve\" refers to the one who was there first.\u003c/li\u003e \u003cli\u003eOr, what if Steve decides he wants to rebrand himself and start going by Steven instead? (You can also think of other reasons why someone would change their legal name.) Then you would need to find all places in the spreadsheet that say \"Steve\" and replace them with \"Steven\".\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003eIf you really only had 5 total employees, it would be manageable to do this work \"by hand\" and just remember what you did. But if you had hundreds or thousands of employees, or you were working with a team of payroll professionals instead of by yourself, you can imagine how this system could get unmanageable pretty quickly!\u003c/p\u003e  \u003ch4\u003eThe Relational Database Solution\u003c/h4\u003e  \u003cp\u003eWe can use SQL to manage this information more effectively. First, we set up a managers table and an employees table with the following schemas:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-sql-relations-intro/master/managers_schema.png\" alt=\"managers schema\"\u003e\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-sql-relations-intro/master/employees_schema.png\" alt=\"employees schema\"\u003e\u003c/p\u003e  \u003cp\u003eBoth the managers table and the employees table have primary keys (indicated by the key icon here) called \u003ccode\u003eid\u003c/code\u003e. Then employees have a foreign key called \u003ccode\u003emanager_id\u003c/code\u003e that links to a record in the managers table.\u003c/p\u003e  \u003cp\u003eThe same data shown above is entered in like this:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-sql-relations-intro/master/managers_data.png\" alt=\"managers data\"\u003e\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-sql-relations-intro/master/employees_data.png\" alt=\"employees data\"\u003e\u003c/p\u003e  \u003cp\u003eNow, the issues described before are no longer issues:\u003c/p\u003e  \u003col\u003e \u003cli\u003eThere is no redundancy or extra space. You know whether someone is a regular employee or a manager based on which table they are in, and managers don't have an extra empty field for a manager name.\u003c/li\u003e \u003cli\u003eIf we get another manager named Steve, we can just add another record to the managers table. It will have an \u003ccode\u003eid\u003c/code\u003e of 3 and will not be confused with this Steve, who has an \u003ccode\u003eid\u003c/code\u003e of 1.\u003c/li\u003e \u003cli\u003eIf Steve changes his name to Steven, you only need to change one value in one place: the \u003ccode\u003ename\u003c/code\u003e column in Steve's record in the managers table. No need to hunt down the same information stored in multiple places in order to edit it!\u003c/li\u003e \u003c/ol\u003e  \u003ch2\u003eSQL \u003ccode\u003eJOIN\u003c/code\u003e\u003c/h2\u003e  \u003cp\u003eThe SQL \u003ccode\u003eJOIN\u003c/code\u003e clause is the main way that you will write queries that combine data from multiple tables.\u003c/p\u003e  \u003cp\u003eContinuing with the example above, let's say we want to handle payroll for all regular employees. To do that, we need to know their name, pay, and manager name.\u003c/p\u003e  \u003cp\u003eIf we just \u003ccode\u003eSELECT *\u003c/code\u003e from the employees table, it will look like this:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eimport pandas as pd\u003cbr\u003eimport sqlite3\u003cbr\u003e\u003cbr\u003econn = sqlite3.connect(\"payroll.db\")\u003cbr\u003epd.read_sql(\"\"\"SELECT * FROM employees;\"\"\", conn) \u003c/code\u003e\u003c/pre\u003e \u003cdiv\u003e \u003cstyle\u003e     .dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     } \u003c/style\u003e \u003ctable border=\"1\" class=\"dataframe\"\u003e   \u003cthead\u003e     \u003ctr style=\"text-align: right;\"\u003e       \u003cth\u003e\u003c/th\u003e       \u003cth\u003eid\u003c/th\u003e       \u003cth\u003ename\u003c/th\u003e       \u003cth\u003epay\u003c/th\u003e       \u003cth\u003emanager_id\u003c/th\u003e     \u003c/tr\u003e   \u003c/thead\u003e   \u003ctbody\u003e     \u003ctr\u003e       \u003cth\u003e0\u003c/th\u003e       \u003ctd\u003e1\u003c/td\u003e       \u003ctd\u003eBob\u003c/td\u003e       \u003ctd\u003e3000.0\u003c/td\u003e       \u003ctd\u003e1\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e1\u003c/th\u003e       \u003ctd\u003e2\u003c/td\u003e       \u003ctd\u003eKaren\u003c/td\u003e       \u003ctd\u003e4000.0\u003c/td\u003e       \u003ctd\u003e1\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2\u003c/th\u003e       \u003ctd\u003e3\u003c/td\u003e       \u003ctd\u003ePatrick\u003c/td\u003e       \u003ctd\u003e4000.0\u003c/td\u003e       \u003ctd\u003e2\u003c/td\u003e     \u003c/tr\u003e   \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e  \u003cp\u003eThen we could manually query for each manager \u003ccode\u003eid\u003c/code\u003e:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003epd.read_sql(\"\"\"SELECT name FROM managers WHERE id = 1;\"\"\", conn) \u003c/code\u003e\u003c/pre\u003e \u003cdiv\u003e \u003cstyle\u003e     .dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     } \u003c/style\u003e \u003ctable border=\"1\" class=\"dataframe\"\u003e   \u003cthead\u003e     \u003ctr style=\"text-align: right;\"\u003e       \u003cth\u003e\u003c/th\u003e       \u003cth\u003ename\u003c/th\u003e     \u003c/tr\u003e   \u003c/thead\u003e   \u003ctbody\u003e     \u003ctr\u003e       \u003cth\u003e0\u003c/th\u003e       \u003ctd\u003eSteve\u003c/td\u003e     \u003c/tr\u003e   \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e \u003cpre\u003e\u003ccode\u003epd.read_sql(\"\"\"SELECT name FROM managers WHERE id = 2;\"\"\", conn) \u003c/code\u003e\u003c/pre\u003e \u003cdiv\u003e \u003cstyle\u003e     .dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     } \u003c/style\u003e \u003ctable border=\"1\" class=\"dataframe\"\u003e   \u003cthead\u003e     \u003ctr style=\"text-align: right;\"\u003e       \u003cth\u003e\u003c/th\u003e       \u003cth\u003ename\u003c/th\u003e     \u003c/tr\u003e   \u003c/thead\u003e   \u003ctbody\u003e     \u003ctr\u003e       \u003cth\u003e0\u003c/th\u003e       \u003ctd\u003eSpongebob\u003c/td\u003e     \u003c/tr\u003e   \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e  \u003cp\u003eThat works, but it's annoying. Again, you can imagine that not scaling well to hundreds or thousands of employees.\u003c/p\u003e  \u003cp\u003eWith a SQL join, we can do it all at once:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eq = \"\"\"\u003cbr\u003eSELECT *\u003cbr\u003eFROM employees\u003cbr\u003eJOIN managers\u003cbr\u003e    ON employees.manager_id = managers.id\u003cbr\u003e;\u003cbr\u003e\"\"\"\u003cbr\u003epd.read_sql(q, conn) \u003c/code\u003e\u003c/pre\u003e \u003cdiv\u003e \u003cstyle\u003e     .dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     } \u003c/style\u003e \u003ctable border=\"1\" class=\"dataframe\"\u003e   \u003cthead\u003e     \u003ctr style=\"text-align: right;\"\u003e       \u003cth\u003e\u003c/th\u003e       \u003cth\u003eid\u003c/th\u003e       \u003cth\u003ename\u003c/th\u003e       \u003cth\u003epay\u003c/th\u003e       \u003cth\u003emanager_id\u003c/th\u003e       \u003cth\u003eid\u003c/th\u003e       \u003cth\u003ename\u003c/th\u003e       \u003cth\u003epay\u003c/th\u003e     \u003c/tr\u003e   \u003c/thead\u003e   \u003ctbody\u003e     \u003ctr\u003e       \u003cth\u003e0\u003c/th\u003e       \u003ctd\u003e1\u003c/td\u003e       \u003ctd\u003eBob\u003c/td\u003e       \u003ctd\u003e3000.0\u003c/td\u003e       \u003ctd\u003e1\u003c/td\u003e       \u003ctd\u003e1\u003c/td\u003e       \u003ctd\u003eSteve\u003c/td\u003e       \u003ctd\u003e7000.0\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e1\u003c/th\u003e       \u003ctd\u003e2\u003c/td\u003e       \u003ctd\u003eKaren\u003c/td\u003e       \u003ctd\u003e4000.0\u003c/td\u003e       \u003ctd\u003e1\u003c/td\u003e       \u003ctd\u003e1\u003c/td\u003e       \u003ctd\u003eSteve\u003c/td\u003e       \u003ctd\u003e7000.0\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2\u003c/th\u003e       \u003ctd\u003e3\u003c/td\u003e       \u003ctd\u003ePatrick\u003c/td\u003e       \u003ctd\u003e4000.0\u003c/td\u003e       \u003ctd\u003e2\u003c/td\u003e       \u003ctd\u003e2\u003c/td\u003e       \u003ctd\u003eSpongebob\u003c/td\u003e       \u003ctd\u003e10000.0\u003c/td\u003e     \u003c/tr\u003e   \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e  \u003cp\u003eGreat, all of the information in one table!\u003c/p\u003e  \u003cp\u003eWell, that has everything we want, plus some extra information. It's confusing that we have \u003ccode\u003ename\u003c/code\u003e and \u003ccode\u003epay\u003c/code\u003e in there twice. Since we are trying to manage regular employee payroll, we probably only want the pay for those employees, and we should figure out a way to distinguish between the employee's name and the manager's name.\u003c/p\u003e  \u003cp\u003eMost of the time when you have a \u003ccode\u003eJOIN\u003c/code\u003e, you want to specify which columns you actually want, instead of \u003ccode\u003eSELECT *\u003c/code\u003e. Something like this, using aliases to make everything really clear:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eq = \"\"\"\u003cbr\u003eSELECT\u003cbr\u003e    employees.name AS employee_name,\u003cbr\u003e    employees.pay AS employee_pay,\u003cbr\u003e    managers.name AS manager_name\u003cbr\u003eFROM employees\u003cbr\u003eJOIN managers\u003cbr\u003e    ON employees.manager_id = managers.id\u003cbr\u003e;\u003cbr\u003e\"\"\"\u003cbr\u003epd.read_sql(q, conn) \u003c/code\u003e\u003c/pre\u003e \u003cdiv\u003e \u003cstyle\u003e     .dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     } \u003c/style\u003e \u003ctable border=\"1\" class=\"dataframe\"\u003e   \u003cthead\u003e     \u003ctr style=\"text-align: right;\"\u003e       \u003cth\u003e\u003c/th\u003e       \u003cth\u003eemployee_name\u003c/th\u003e       \u003cth\u003eemployee_pay\u003c/th\u003e       \u003cth\u003emanager_name\u003c/th\u003e     \u003c/tr\u003e   \u003c/thead\u003e   \u003ctbody\u003e     \u003ctr\u003e       \u003cth\u003e0\u003c/th\u003e       \u003ctd\u003eBob\u003c/td\u003e       \u003ctd\u003e3000.0\u003c/td\u003e       \u003ctd\u003eSteve\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e1\u003c/th\u003e       \u003ctd\u003eKaren\u003c/td\u003e       \u003ctd\u003e4000.0\u003c/td\u003e       \u003ctd\u003eSteve\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2\u003c/th\u003e       \u003ctd\u003ePatrick\u003c/td\u003e       \u003ctd\u003e4000.0\u003c/td\u003e       \u003ctd\u003eSpongebob\u003c/td\u003e     \u003c/tr\u003e   \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e  \u003cp\u003ePerfect! Now we have a nice, maintainable system, \u003cem\u003eand\u003c/em\u003e we are able to pull exactly the data needed for this task.\u003c/p\u003e  \u003ch2\u003eSQL Subqueries\u003c/h2\u003e  \u003cp\u003eAnother more-advanced technique we will introduce in this section is a SQL subquery. The above query, rewritten to use a subquery instead of \u003ccode\u003eJOIN\u003c/code\u003e, would be:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eq = \"\"\"\u003cbr\u003eSELECT\u003cbr\u003e    name AS employee_name,\u003cbr\u003e    pay AS employee_pay,\u003cbr\u003e    (\u003cbr\u003e        SELECT name\u003cbr\u003e        FROM managers\u003cbr\u003e        WHERE managers.id = employees.manager_id\u003cbr\u003e    ) AS manager_name\u003cbr\u003eFROM employees\u003cbr\u003e;\u003cbr\u003e\"\"\"\u003cbr\u003epd.read_sql(q, conn) \u003c/code\u003e\u003c/pre\u003e \u003cdiv\u003e \u003cstyle\u003e     .dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     } \u003c/style\u003e \u003ctable border=\"1\" class=\"dataframe\"\u003e   \u003cthead\u003e     \u003ctr style=\"text-align: right;\"\u003e       \u003cth\u003e\u003c/th\u003e       \u003cth\u003eemployee_name\u003c/th\u003e       \u003cth\u003eemployee_pay\u003c/th\u003e       \u003cth\u003emanager_name\u003c/th\u003e     \u003c/tr\u003e   \u003c/thead\u003e   \u003ctbody\u003e     \u003ctr\u003e       \u003cth\u003e0\u003c/th\u003e       \u003ctd\u003eBob\u003c/td\u003e       \u003ctd\u003e3000.0\u003c/td\u003e       \u003ctd\u003eSteve\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e1\u003c/th\u003e       \u003ctd\u003eKaren\u003c/td\u003e       \u003ctd\u003e4000.0\u003c/td\u003e       \u003ctd\u003eSteve\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2\u003c/th\u003e       \u003ctd\u003ePatrick\u003c/td\u003e       \u003ctd\u003e4000.0\u003c/td\u003e       \u003ctd\u003eSpongebob\u003c/td\u003e     \u003c/tr\u003e   \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e  \u003cp\u003eWe will go over more details of both \u003ccode\u003eJOIN\u003c/code\u003e and subqueries in the following lessons.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003econn.close() \u003c/code\u003e\u003c/pre\u003e \u003ch2\u003eInterview Practice\u003c/h2\u003e  \u003cp\u003eAs mentioned previously, SQL is a very common topic in the technical interviews you will encounter as a junior data scientist. After introducing \u003ccode\u003eJOIN\u003c/code\u003e clauses and subqueries, this section will include a quiz covering SQL interview questions and a lab that features real-world interview questions pertaining to SQL and relational databases from major companies such as Facebook and Google!\u003c/p\u003e  \u003ch2\u003eSummary\u003c/h2\u003e  \u003cp\u003eIn the previous section, you learned about SQL fundamentals. In this section you will begin to dig into the \u003cem\u003erelational\u003c/em\u003e aspect of SQL databases, and practice retrieving data from multiple tables at once. Then you will get some practice with the kinds of SQL questions that frequently appear in technical interviews.\u003c/p\u003e","exportId":"sql-table-relations-introduction"},{"id":440566,"title":"Join Statements","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-join-statements\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-join-statements\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-join-statements/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you will learn about several types of \u003ccode\u003eJOIN\u003c/code\u003e statements.  Joins are the primary mechanism for combining data from multiple tables. In order to do this, you define the common attribute(s) between tables in order for them to be combined.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWrite SQL queries that make use of various types of joins\u003c/li\u003e\n\u003cli\u003eCompare and contrast the various types of joins\u003c/li\u003e\n\u003cli\u003eDiscuss how primary and foreign keys are used in SQL\u003c/li\u003e\n\u003cli\u003eDecide and perform whichever type of join is best for retrieving desired data\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g068864ff26d451d4ee5eb2c38e036d08"},{"id":440568,"title":"Join Statements - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-join-statements-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-join-statements-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-join-statements-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll practice your knowledge of \u003ccode\u003eJOIN\u003c/code\u003e statements, using various types of joins and various methods for specifying the links between them.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWrite SQL queries that make use of various types of joins\u003c/li\u003e\n\u003cli\u003eCompare and contrast the various types of joins\u003c/li\u003e\n\u003cli\u003eDiscuss how primary and foreign keys are used in SQL\u003c/li\u003e\n\u003cli\u003eDecide and perform whichever type of join is best for retrieving desired data\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g3903fbfed2a41d934018cbbdd7ed0d01"},{"id":440570,"title":"One-to-Many and Many-to-Many Joins","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-one-to-many-and-many-to-many-joins\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-one-to-many-and-many-to-many-joins\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-one-to-many-and-many-to-many-joins/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003ePreviously, you learned about the typical case where one joins on a primary or foreign key. In this section, you'll explore other types of joins using one-to-many and many-to-many relationships!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain one-to-many and many-to-many joins as well as implications for the size of query results\u003c/li\u003e\n\u003cli\u003eQuery data using one-to-many and many-to-many joins\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gda56bffb0076e22354c1e1de83af6491"},{"id":440574,"title":"One-to-Many and Many-to-Many Joins - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-one-to-many-and-many-to-many-joins-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-one-to-many-and-many-to-many-joins-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-one-to-many-and-many-to-many-joins-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll practice your knowledge of one-to-many and many-to-many relationships!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain one-to-many and many-to-many joins as well as implications for the size of query results\u003c/li\u003e\n\u003cli\u003eQuery data using one-to-many and many-to-many joins\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g57bf8c29cc7b86618b6ce63c9d3c09a5"},{"id":440582,"title":"Short Video: SQL JOINs","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv style=\"padding:62.5% 0 0 0;position:relative;\"\u003e\u003ciframe src=\"https://player.vimeo.com/video/713398696?h=4694958b31\u0026amp;badge=0\u0026amp;autopause=0\u0026amp;player_id=0\u0026amp;app_id=58479\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen=\"\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;\" title=\"sql_joins_phase1_gd\"\u003e\u003c/iframe\u003e\u003c/div\u003e","exportId":"short-video-sql-joins"},{"id":440584,"title":"SQL Joins and Aggregation Exit Ticket","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"g11be8ae182047d3d8a85ab62ce377771","questionCount":8,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"","exportId":"g223bea81a50067215af661997b0f3584"},{"id":440586,"title":"SQL Subqueries","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-sql-subqueries\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-subqueries\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-subqueries/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSQL queries can get complex. For example, you might have been a little thrown off by the many to many join in the last lab. There, you had to join four tables. This is just the tip of the iceberg. Depending on how your database is set up, you might have to join subset views of multiple tables. When queries get complex like this, it is often useful to use the concept of subqueries to help break the problem into smaller, more digestible tasks.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWrite subqueries to decompose complex queries\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g1ac9bd640ae6ab4ec8058467021e64b9"},{"id":440589,"title":"SQL Subqueries - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-sql-subqueries-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-subqueries-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-subqueries-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you've seen how subqueries work, it's time to get some practice writing them! Not all of the queries will require subqueries, but all will be a bit more complex and require some thought and review about aggregates, grouping, ordering, filtering, joins and subqueries. Good luck!  \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWrite subqueries to decompose complex queries\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g8eda097a51ee87a8709e3c1bd003519a"},{"id":451448,"title":"Using SQL with Pandas","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-using-sql-with-pandas\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-sql-with-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-sql-with-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eConsider the structure of a \u003cstrong\u003e\u003cem\u003ePandas DataFrame\u003c/em\u003e\u003c/strong\u003e.  \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-using-sql-with-pandas/master/images/df_example2.png\" alt=\"dataframe where each row represents a type of wine\" width=\"850\"\u003e\u003c/p\u003e\n\n\u003cp\u003eNow, let's consider the structure of a table from a \u003cstrong\u003e\u003cem\u003eSQL database\u003c/em\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-using-sql-with-pandas/master/images/sql_example2.png\" alt=\"SQL table where each record represents an employee\"\u003e\u003c/p\u003e\n\n\u003cp\u003eYou've probably noticed by now that they're essentially the same--a table of values, with each row having a unique index and each column having a unique name.  This allows us to quickly and easily access information when using SQL.  In this section, we'll learn how we can use SQL-style queries to query pandas DataFrames!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCompare accessing data in a DataFrame using query methods and conditional logic\u003c/li\u003e\n\u003cli\u003eQuery DataFrames with SQL using the \u003ccode\u003epandasql\u003c/code\u003e library\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eUsing \u003ccode\u003e.query()\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003ePandas DataFrames come with a built-in query method, which allows you to get information from DataFrames quickly without using the cumbersome slicing syntax.  \u003c/p\u003e\n\n\u003cp\u003eSee the following examples:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Getting Data using slicing syntax\n\u003c/span\u003e\u003cspan class=\"n\"\u003efoo_df\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebar_df\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ebar_df\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ebar_df\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e'Col_1'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ebar_df\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e'Col_2'\u003c/span\u003e\u003cspan class=\"p\"\u003e]]]\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# Using The query method\n\u003c/span\u003e\u003cspan class=\"n\"\u003efoo_df\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebar_df\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Col_1 \u0026gt; Col_2\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# These two lines are equivalent!\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNote that if you want to use \u003ccode\u003eand\u003c/code\u003e and \u003ccode\u003eor\u003c/code\u003e statements with the \u003ccode\u003e.query()\u003c/code\u003e method, you'll need to use \u003ccode\u003e\"\u0026amp;\"\u003c/code\u003e and \u003ccode\u003e\"|\"\u003c/code\u003e instead.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003efoo_df\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebar_df\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Col_1 \u0026gt; Col_2 \u0026amp; Col_2 \u0026lt;= Col_3\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eUsing SQL syntax with \u003ccode\u003epandasql\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eSince SQL is such a powerful, comfortable tool for Data Scientists, some people had the bright idea of creating a library that lets users query DataFrames using SQL-style syntax.  This library is called \u003ca href=\"https://pypi.org/project/pandasql/\"\u003epandasql\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eWe can install \u003ccode\u003epandasql\u003c/code\u003e using the bash command \u003ccode\u003epip install pandasql\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3\u003eImporting pandasql\u003c/h3\u003e\n\n\u003cp\u003eIn order to use \u003ccode\u003epandasql\u003c/code\u003e, we need to start by importing a \u003ccode\u003esqldf\u003c/code\u003e object from \u003ccode\u003epandasql\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003epandasql\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003esqldf\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, it's helpful to write a lambda function that will make it quicker and easier to write queries.  Normally, you would have to pass in the global variables every time we use an object.  In order to avoid doing this every time, here's how to write a lambda that does this for you:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003epysqldf\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003elambda\u003c/span\u003e \u003cspan class=\"n\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esqldf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eglobals\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, when you pass a query into \u003ccode\u003epysqldf\u003c/code\u003e, the lambda will also pass along the globals, saving you that repetitive task. \u003c/p\u003e\n\n\u003ch3\u003eWriting Queries\u003c/h3\u003e\n\n\u003cp\u003eTo write a query, you just format it as a multi-line string!\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"\"\"SELECT\n        m.date, m.beef, b.births\n     FROM\n        meats m\n     INNER JOIN\n        births b\n           ON m.date = b.date;\"\"\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn order to query DataFrames, you can just pass in the query string you've created to our \u003ccode\u003esqldf\u003c/code\u003e object that you stored in \u003ccode\u003epysqldf\u003c/code\u003e.  This will return a DataFrame.  \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eresults\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epysqldf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eThese advanced methods for querying DataFrames can make your life a lot easier by simplifying the syntax and allowing us to make use of SQL--use them to save yourself time and give keep your SQL skills strong!\u003c/p\u003e","exportId":"using-sql-with-pandas"},{"id":440595,"title":"Using SQL with Pandas - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-using-sql-with-pandas-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-sql-with-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-sql-with-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you will practice using SQL statements and the \u003ccode\u003e.query()\u003c/code\u003e method provided by Pandas to manipulate datasets.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCompare accessing data in a DataFrame using query methods and conditional logic\u003c/li\u003e\n\u003cli\u003eQuery DataFrames with SQL using the \u003ccode\u003epandasql\u003c/code\u003e library\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gdfea68ebb0233e75a6778f72fdc58e5f"},{"id":440597,"title":"Quiz: SQL Table Relations","type":"Quizzes::Quiz","indent":2,"locked":false,"assignmentExportId":"g226fa36b3f67c8b288a2588dff97ba20","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"min_score","requiredPoints":3.0,"completed":false,"content":"","exportId":"g6ef98c02cfbd946adcbcb05c06b14ea4"},{"id":440598,"title":"SQL Interview Questions - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-sql-interview-questions-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-interview-questions-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-interview-questions-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll test our SQL skills against some real-world interview questions from major companies!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWrite SQL queries to filter and order results\u003c/li\u003e\n\u003cli\u003eDecide and perform whichever type of join is best for retrieving desired data\u003c/li\u003e\n\u003cli\u003eWrite subqueries to decompose complex queries\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gfd2719f1fe4b1f4a4269b6a18ab80d51"},{"id":440605,"title":"SQL Subqueries and Implementations Exit Ticket","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"g1d74e1c02abbe5c91b77cef5236dc4bd","questionCount":7,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"","exportId":"gc5eeecddc4f0a940430321c456354a46"},{"id":440609,"title":"‚≠êÔ∏è SQL - Cumulative Lab","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"g8c33dc074f6d22c3918b7f0eac7a55e2","questionCount":1,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-lab\" target=\"_blank\"\u003e \u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e \u003c/a\u003e \u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-lab/issues/new\" target=\"_blank\"\u003e \u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e \u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eWork on this lab on your local computer. If you're not sure how to clone the source code, refer to the instructions in \u003ca title=\"Running Jupyter Notebooks Locally\" href=\"pages/running-jupyter-notebooks-locally\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/running-jupyter-notebooks-locally\" data-api-returntype=\"Page\"\u003eRunning Jupyter Notebooks Locally\u003c/a\u003e. If you're not sure how to submit the link, refer to the instructions in \u003ca title=\"‚≠êÔ∏è Data Serialization Formats - Cumulative Lab\" href=\"quizzes/gd382b571f354991be10756bfc79dd939\"\u003e‚≠êÔ∏è Data Serialization Formats - Cumulative Lab\u003c/a\u003e\u003c/p\u003e","exportId":"gf4a06fa591eddfefef12f253ccb5564c"},{"id":440612,"title":"Quiz: SQL Interview Questions","type":"Quizzes::Quiz","indent":2,"locked":false,"assignmentExportId":"gd41d8cd98f00b204e9800998ecf8427e","questionCount":6,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":6.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cp\u003eThis quiz contains questions on topics you can expect to see in an interview pertaining to SQL and Relational Databases. Some of them are multiple choice, while some are short answer. For these short answer questions, double click on the Jupyter Notebook and type your answer below the line.\u003c/p\u003e\n\u003ch2\u003e\u003ca id=\"user-content-question-1\" class=\"anchor\" href=\"https://github.com/learn-co-curriculum/dsc-sql-interview-questions-quiz#question-1\" aria-hidden=\"true\"\u003e\u003c/a\u003e\u003c/h2\u003e","exportId":"g026c693c452a47d4d76973d6b77d8923"},{"id":440614,"title":"SQL Table Relations - Recap","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-sql-relations-recap\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-relations-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-relations-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eAnother section down, great job! In this section you learned about SQL queries that use \u003ccode\u003eJOIN\u003c/code\u003e clauses and subqueries to return data from multiple tables at once. You also got some additional SQL practice resembling what you might need to do in a technical interview.\u003c/p\u003e  \u003ch2\u003eKey Takeaways\u003c/h2\u003e  \u003ch3\u003eRelational Data\u003c/h3\u003e  \u003cp\u003eOne of the powerful aspects of SQL is that \u003cstrong\u003ea given database can contain multiple, related tables\u003c/strong\u003e. Records across tables can be connected based on \u003cstrong\u003eforeign keys\u003c/strong\u003e ‚Äî values in one table that reference a unique identifier in another table.\u003c/p\u003e  \u003cp\u003eRelational data means that you don't need to store multiple copies of the same information, and that updates can be made more easily and efficiently.\u003c/p\u003e  \u003cp\u003eSometimes multiple tables must be joined together to answer a single question, based on how the various tables are related to each other.\u003c/p\u003e  \u003ch3\u003e\u003ccode\u003eJOIN\u003c/code\u003e Clause\u003c/h3\u003e  \u003cp\u003eThe \u003ccode\u003eJOIN\u003c/code\u003e clause is typically used to \u003cstrong\u003econnect records from multiple tables\u003c/strong\u003e. SQL will not automatically understand how the tables are related, so you need to specify this using either the \u003ccode\u003eON\u003c/code\u003e clause (e.g. \u003ccode\u003eON employees.office_id = offices.id\u003c/code\u003e), or, if the column names are identical in both tables, using the \u003ccode\u003eUSING\u003c/code\u003e clause (e.g. \u003ccode\u003eUSING(office_id)\u003c/code\u003e).\u003c/p\u003e  \u003cp\u003eOften it is useful to \u003cstrong\u003ealias\u003c/strong\u003e table names (e.g. \u003ccode\u003eJOIN orderdetails AS od\u003c/code\u003e) when you are using \u003ccode\u003eJOIN\u003c/code\u003e clauses in order to shorten the syntax. Similar to aliases for columns, the \u003ccode\u003eAS\u003c/code\u003e is optional when using SQLite (and may be required or not allowed in other contexts).\u003c/p\u003e  \u003ch3\u003eSubqueries\u003c/h3\u003e  \u003cp\u003eIn some cases \u003cstrong\u003esubqueries can be used for the same tasks as \u003ccode\u003eJOIN\u003c/code\u003e clauses\u003c/strong\u003e. To do that, you don't use \u003ccode\u003eJOIN\u003c/code\u003e, and instead add a nested \u003ccode\u003eSELECT\u003c/code\u003e query inside of your main \u003ccode\u003eSELECT\u003c/code\u003e query, which selects from another table.\u003c/p\u003e  \u003cp\u003eSubqueries are also useful \u003cstrong\u003eif you want to filter or order by an aggregate, but not select an aggregate\u003c/strong\u003e. For example, if you had a database of guest appearances on a late night show, and you wanted to select the dates of appearances of guests who had been on the show 10 or more times (maybe you're theorizing that repeat guests are more frequent on Mondays), you couldn't just use \u003ccode\u003eGROUP BY\u003c/code\u003e and \u003ccode\u003eHAVING\u003c/code\u003e because that would return \u003cem\u003eguests\u003c/em\u003e (all appearance dates grouped together) and you want the actual appearance dates.\u003c/p\u003e  \u003cp\u003eAs you can see from the example above, subqueries can be useful even if you are only working with a single table, if you want to use an aggregate in your analysis but not have your query return an aggregate.\u003c/p\u003e  \u003ch3\u003eTechnical Interview Prep\u003c/h3\u003e  \u003cp\u003eYou can expect to run into SQL questions in job interviews. Often times when asked to write a query, you'll be given a hypothetical situation and asked to write a query, without having an ERD or tables to look at. When working through these questions, it's important to clarify your assumptions, and to ask questions to make sure that your assumptions are actually correct!\u003c/p\u003e  \u003cp\u003eOnce you have the information you need, be sure to write clean, well-structured SQL code. This includes things like:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eCapitalizing SQL keywords (technically \u003ccode\u003eselect\u003c/code\u003e and \u003ccode\u003eSELECT\u003c/code\u003e both work the same, but it's easier to read if you use capitalization consistently)\u003c/li\u003e \u003cli\u003eUsing whitespace consistently (unlike Python, whitespace is not important in SQL ‚Äî try your best to use new lines and indentation to spread out your code and help you spot errors)\u003c/li\u003e \u003cli\u003eUsing semantic variable names (renaming things like \u003ccode\u003eCOUNT(*)\u003c/code\u003e to something readable, and using sensible names for foreign keys such as \u003ccode\u003eoffice_id\u003c/code\u003e for a foreign key that links to the \u003ccode\u003eoffices\u003c/code\u003e table)\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eThis is also a situation where thinking out loud and engaging your interviewer is a great strategy. They're likely trying to evaluate how you would work on a team, just as much as they're trying to evaluate your technical knowledge or your ability to get data from a relational database.\u003c/p\u003e  \u003ch4\u003eOpen-ended Questions in Interviews\u003c/h4\u003e  \u003cp\u003eYou may also encounter open-ended SQL questions where there is no single correct solution. When faced with these sorts of interview questions, have an opinion, and be ready to back it up with your rationale! For these sorts of questions, interviewers are often trying to evaluate \u003cem\u003ehow\u003c/em\u003e you approach problems and evaluate your thought process, so helping them understand your thought process is very important!\u003c/p\u003e  \u003ch4\u003eThe Internet Is Your Friend\u003c/h4\u003e  \u003cp\u003eAll of the real-world interview questions you worked through in this section came from popular interview sites such as Glassdoor. If you still feel a bit shaky about your ability to answer SQL/relational database questions in an interview, that's okay ‚Äî practice makes perfect! Don't be afraid to peruse sites like Glassdoor and others to look for the types of SQL questions you can expect to see during the interview process. Just make sure that when you look at the questions, you try to answer them yourself first before looking at the answers that others have posted!\u003c/p\u003e  \u003ch2\u003eSummary\u003c/h2\u003e  \u003cp\u003eCongratulations! You should have a good amount of SQL skills by now. The more practice you get, the more comfortable you will be when you're actually interviewing!\u003c/p\u003e","exportId":"sql-table-relations-recap"}]},{"id":45672,"name":"Topic 8: Other Database Structures","status":"completed","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"gc534a61f2b9a11056437f449a1fcdd9f","items":[{"id":440619,"title":"Topic 8 Lesson Priorities (Live)","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cp\u003eIn the Live program, there is no scheduled lecture on Topic 8; instead there is a recorded video lecture. NoSQL databases are especially useful for storing and querying JSON data, and you might find these lessons more useful closer to Capstone if you intend to use JSON data.\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 71.8829%; height: 165px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 51.0308%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.17192%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 51.0308%; height: 29px;\"\u003e\u003ca title=\"NoSQL Databases - Introduction\" href=\"pages/nosql-databases-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/nosql-databases-introduction\" data-api-returntype=\"Page\"\u003eNoSQL Databases - Introduction\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.17192%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 51.0308%; height: 29px;\"\u003e\u003ca title=\"NoSQL Databases: Document Stores\" href=\"pages/nosql-databases-document-stores\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/nosql-databases-document-stores\" data-api-returntype=\"Page\"\u003eNoSQL Databases: Document Stores\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.17192%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 51.0308%; height: 29px;\"\u003e\u003ca title=\"MongoDB\" href=\"assignments/gf6c6c749bcd0e8319c495a160a859682\"\u003eMongoDB\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.17192%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 51.0308%; height: 29px;\"\u003e\u003ca title=\"MongoDB - Lab\" href=\"assignments/gfa8f25d1005d166d0c7ca504d8790728\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9028\" data-api-returntype=\"Assignment\"\u003eMongoDB - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.17192%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 51.0308%;\"\u003e\u003ca title=\"Quiz: NoSQL Interview Questions\" href=\"quizzes/gd3ad2db29d6e944fc35b8af150599e62\"\u003eQuiz: NoSQL Interview Questions\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.17192%; text-align: center;\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 51.0308%;\"\u003e\u003ca title=\"üé¨ Lecture: NoSQL\" href=\"pages/lecture-nosql\"\u003eüé¨ Lecture: NoSQL\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.17192%; text-align: center;\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 51.0308%; height: 29px;\"\u003e\u003ca title=\"NoSQL Databases - Summary\" href=\"pages/nosql-databases-summary\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/nosql-databases-summary\" data-api-returntype=\"Page\"\u003eNoSQL Databases - Summary\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.17192%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e","exportId":"topic-8-lesson-priorities-live"},{"id":440621,"title":"NoSQL Databases - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eBy now, you've dug pretty deep into SQL and relational databases. In this lesson, we'll learn about NoSQL databases, which have become increasingly popular because they can store data that don't fit the traditional \"tabular\" views. \u003c/p\u003e\n\n\u003ch2\u003eNoSQL Databases\u003c/h2\u003e\n\n\u003cp\u003eYou're now familiar with relational databases, how they work, and how to use them to store and retrieve data. However, relational databases and SQL are only part of the picture when it comes to databases -- while their structure and organization is great for tabular data (data that fits in a table), there are plenty of situations where data just doesnt work well as a table. We'll begin this section by exploring some of those situations, and look at some of options out there for databases that don't use a relational format. \u003c/p\u003e\n\n\u003ch2\u003eMongoDB\u003c/h2\u003e\n\n\u003cp\u003eOnce we've gotten the lay of the land, we'll get some hands on experience with one of the most popular NoSQL variants on the market today, MongoDB! We'll start by installing MongoDB on our machine, and then we'll add some data to it, so that we can learn to store data and write queries using MongoDB. By the end of this section, you'll be able to do all the same things in MongoDB as you can in SQLite3!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eGet ready! In addition to querying SQL databases; by the end of this section, you will be able to create, update, and retrieve data from a popular NoSQL database, \u003cstrong\u003eMongoDB\u003c/strong\u003e! \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-nosql-databases-section-intro\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-nosql-databases-section-intro\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-intro/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"nosql-databases-introduction"},{"id":440623,"title":"NoSQL Databases: Document Stores","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-document-stores-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-document-stores-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn more about NoSQL databases, and a specific NoSQL category, \u003cem\u003eDocument Stores\u003c/em\u003e. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:     \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe why NoSQL is useful\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDescribe situations when one would use NoSQL databases\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eList different NoSQL databases \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy NoSQL?\u003c/h2\u003e\n\n\u003cp\u003eRelational databases are a cornerstone of a modern technology. They're reliable, dependable, and they seem to be pretty much everywhere. Since their invention at IBM by Edgar Codd in 1970, they've rapidly grown to be used all over the place. Their creation allowed companies to track, store, and analyze data in ways that simply couldn't be done before. For the majority of situations, they're a great choice. However, as technology has progressed into the era of internet and smartphones, we've run into many different sorts of data that aren't a natural fit for a relational format. Let's examine a few of these situations, and see why NoSQL might be a better choice. \u003c/p\u003e\n\n\u003cp\u003eLet's assume that we need to store chat logs between customer service and customers through a web interface. These chats could be very short, or very long -- some chats may only be 2 or 3 messages, while others may conceivably be in the hundreds or thousands. For each message in the chat, we want to store metadata associated with the message, so that we can know things like which party sent the message, the time it was sent, the time the other party read the message, etc. This is a great use case for a NoSQL database, because it would be a very poor fit for a relational database. For starters, each chat can be any size, meaning that we can't just clearly define a table that links which messages belong to which chat. If every chat had only five messages, we might be able to make it work, with a column for \"message 1\", \"message 2\", and so on -- but we can't, because a chat has no set size, and can always grow larger in the future. A relational database would also waste a lot of space storing redundant information, and getting all the messages in a chat could result in some nasty runtimes for our SQL query if this data was stored in separate tables in something like the third normal format. \u003c/p\u003e\n\n\u003cp\u003eThere are several variants of NoSQL databases. They can be categorized into: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDocument Stores\u003c/li\u003e\n\u003cli\u003eKey-Value Stores\u003c/li\u003e\n\u003cli\u003eColumn Stores\u003c/li\u003e\n\u003cli\u003eGraph Databases\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIn this lesson, we will explore \u003cem\u003eDocument Stores\u003c/em\u003e. \u003c/p\u003e\n\n\u003ch2\u003eDocument Stores\u003c/h2\u003e\n\n\u003cp\u003eA \u003cstrong\u003e\u003cem\u003eDocument Store\u003c/em\u003e\u003c/strong\u003e is a database that stores records as unique documents in the database. These documents can be arbitrarily long, and can even contain other documents inside of them! The chat log example we saw above is a prime use case for a document store. In a document store, we could store each message and its accompanying metadata as a document, and then embed each of those documents in order in a chat document. In this way, we can easily access the data as needed. \u003c/p\u003e\n\n\u003cp\u003eIn these Document Stores, each document contains key-value pairs, with the actual data being stored in as the value. This makes Document Stores incredibly flexible, because each document can be unique. There is no constraint saying each document must have the same keys! This makes it great for working with data where we don't know what shape it will take (as we saw above, with chat logs that can be arbitrarily long or short), or perhaps when we don't know what data will be stored at all. This would be a problem in a relational database, because we would need to know what column the data belongs in before we could store it. With a Document Store, we can just create a key on the fly for the data that matters to us!\u003c/p\u003e\n\n\u003cp\u003eNote that while this flexibility makes it easy for us to store data on the fly, this also makes it harder for us to query data and get exactly what we need. Since each different document can potentially have its own \u003cstrong\u003e\u003cem\u003eSchema\u003c/em\u003e\u003c/strong\u003e, this means that we have to know what we are looking for. This also means that we have to be diligent in our naming conventions, because \u003ccode\u003echatLog\u003c/code\u003e is different than \u003ccode\u003eChatLog\u003c/code\u003e. This means that if we run a query across all documents to get all data with the key \u003ccode\u003echatLog\u003c/code\u003e, we'll completely miss any data where they key is written as \u003ccode\u003eChatLog\u003c/code\u003e!\u003c/p\u003e\n\n\u003ch5\u003ePopular  Document Store Databases: MongoDB and Couchbase\u003c/h5\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-document-stores-v2-1/master/images/mongo-db-logo.png\" height=\"60%\" width=\"60%\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-document-stores-v2-1/master/images/couchbase-logo.png\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned about the various sorts of NoSQL Databases in the market today. We dug into the similarities and differences between them all, and also looked at a few examples where a NoSQL Database is a more natural fit for storing data than a traditional relational database. \u003c/p\u003e\n\n\u003cp\u003eIn this lesson, we looked at examples where a NoSQL database is a more natural fit for storing data than a traditional relational database. We also looked at \u003cem\u003eDocument Stores\u003c/em\u003e, one of the few types of NoSQL databases. \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-nosql-document-stores-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-nosql-document-stores-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-nosql-document-stores-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"nosql-databases-document-stores"},{"id":440626,"title":"MongoDB","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-mongodb\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-mongodb\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-mongodb/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn about the popular NoSQL database \u003cstrong\u003e\u003cem\u003eMongoDB\u003c/em\u003e\u003c/strong\u003e, including how to install it on our machine, connect to a mongo database, add how to use it to \u003cstrong\u003e\u003cem\u003eC\u003c/em\u003e\u003c/strong\u003ereate / \u003cstrong\u003e\u003cem\u003eR\u003c/em\u003e\u003c/strong\u003eead / \u003cstrong\u003e\u003cem\u003eU\u003c/em\u003e\u003c/strong\u003epdate / \u003cstrong\u003e\u003cem\u003eD\u003c/em\u003e\u003c/strong\u003eelete (\u003cstrong\u003eCRUD\u003c/strong\u003e) data!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a MongoDB database\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eInsert data into a MongoDB database\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eRead data from a MongoDB database\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eUpdate data in a MongoDB database\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gf6c6c749bcd0e8319c495a160a859682"},{"id":440629,"title":"MongoDB - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-mongodb-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-mongodb-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-mongodb-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll get some hands-on experience with MongoDB!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a MongoDB database\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eInsert data into a MongoDB database\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eRead data from a MongoDB database\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eUpdate data in a MongoDB database\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gfa8f25d1005d166d0c7ca504d8790728"},{"id":440632,"title":"Quiz: NoSQL Interview Questions","type":"Quizzes::Quiz","indent":2,"locked":false,"assignmentExportId":"g88eac4e66a98d24890615280f201432d","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"","exportId":"gd3ad2db29d6e944fc35b8af150599e62"},{"id":440634,"title":"üé¨ Lecture: NoSQL","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv style=\"padding:56.25% 0 0 0;position:relative;\"\u003e\u003ciframe src=\"https://player.vimeo.com/video/681643492?h=aa35b284b4\u0026amp;badge=0\u0026amp;autopause=0\u0026amp;player_id=0\u0026amp;app_id=58479\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen=\"\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;\" title=\"NoSQL\"\u003e\u003c/iframe\u003e\u003c/div\u003e\n\u003cp\u003eIn this lesson Greg Damico introduces NoSQL along with a popular tool for these databases called MongoDB. In this lesson you will learn what NoSQL is, what MongoDB is, how to use MongoDB from the command line, inside a Jupyter notebook using PyMongo, and from the web using MongoDB Atlas. Greg introduces some useful key words and talks a little about the benefits of MongoDB.\u003c/p\u003e\n\u003cp\u003eThe repository for this lecture can be found here - \u003ca class=\"inline_disabled\" href=\"https://github.com/flatiron-school/ds-nosql-bqs32\" target=\"_blank\"\u003e \u003cspan style=\"color: #236fa1;\"\u003eNoSQL\u003c/span\u003e \u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e#nosql #mongodb #nonrelational #pymongo #database #json #crud #mongoterminology #schemaless #mongoqueries #find #findone #mongodemo #find #deleteone #update #updatemany #insertone #insertmany #mongodbatlas #mongointhecloud\u003c/p\u003e","exportId":"lecture-nosql"},{"id":440636,"title":"NoSQL Databases - Summary","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-recap-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-recap-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe began this section by comparing and contrasting relational/SQL databases with the NoSQL databases. The four different kinds of NoSQL databases are: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDocument Stores\u003c/li\u003e\n\u003cli\u003eKey-Value Stores\u003c/li\u003e\n\u003cli\u003eColumn Stores\u003c/li\u003e\n\u003cli\u003eGraph Databases\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eMongoDB\u003c/h2\u003e\n\n\u003cp\u003eNext, we explored how to install \u003cstrong\u003e\u003cem\u003eMongoDB\u003c/em\u003e\u003c/strong\u003e and get the \u003cstrong\u003e\u003cem\u003eMongoDB Server\u003c/em\u003e\u003c/strong\u003e up and running. We learned some commands that we could use to interact with mongo right there in the server shell, and then focused on connecting to our MongoDB server with Python. \u003c/p\u003e\n\n\u003cp\u003eYou should remember the following high-level takeaways from MongoDB:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eYou use the \u003ccode\u003epymongo\u003c/code\u003e library and a little boilerplate code to connect to the MongoDB database. \u003c/li\u003e\n\u003cli\u003eIn MongoDB, records are referred to as \u003cstrong\u003e\u003cem\u003eDocuments\u003c/em\u003e\u003c/strong\u003e. \u003c/li\u003e\n\u003cli\u003eWe can create groups of documents called \u003cstrong\u003e\u003cem\u003eCollections\u003c/em\u003e\u003c/strong\u003e. \u003c/li\u003e\n\u003cli\u003eRecords are inserted by passing in our data as Python dictionaries. \n\n\u003cul\u003e\n\u003cli\u003eWe can insert a single record with our collection object's \u003ccode\u003e.insert_one()\u003c/code\u003e method. \u003c/li\u003e\n\u003cli\u003eWe can insert many records by creating a list of dictionaries and passing the entire list to the collection object's \u003ccode\u003e.insert_many()\u003c/code\u003e method. \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWe can write queries by using the collection object's \u003ccode\u003e.find()\u003c/code\u003e method. \u003c/li\u003e\n\u003cli\u003eWe can \u003cstrong\u003e\u003cem\u003efilter\u003c/em\u003e\u003c/strong\u003e our queries by passing in the key-value pairs to filter by. \u003c/li\u003e\n\u003cli\u003eWe can also use logic on our filters by making use of \u003cstrong\u003e\u003cem\u003emodifiers\u003c/em\u003e\u003c/strong\u003e. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eCongrats! You are now a (No)SQL wizard! It doesn't matter whether the data you want is stored in a SQL or a NoSQL database, you can access it with ease. \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-nosql-databases-section-recap-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-nosql-databases-section-recap-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-recap-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"nosql-databases-summary"}]},{"id":45674,"name":"Topic 9: APIs","status":"started","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g2d8a046e995c851ade19d8a750ecbe48","items":[{"id":440639,"title":"Topic 9 Lesson Priorities (Live)","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 74.067%; height: 213px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete Before \u003cem\u003eAPIs\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 49.864%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.63563%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 49.864%; height: 10px;\"\u003e\u003cstrong\u003e\u003ca title=\"APIs - Introduction\" href=\"pages/apis-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/apis-introduction\" data-api-returntype=\"Page\"\u003eAPIs - Introduction\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; height: 10px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 49.864%; height: 29px;\"\u003e\u003ca title=\"Introduction to APIs\" href=\"pages/introduction-to-apis\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/introduction-to-apis\" data-api-returntype=\"Page\"\u003eIntroduction to APIs\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 49.864%; height: 29px;\"\u003e\u003ca title=\"The Client Server Model\" href=\"pages/the-client-server-model\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/the-client-server-model\" data-api-returntype=\"Page\"\u003eThe Client Server Model\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 49.864%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"HTTP Request/Response Cycle - Codealong\" href=\"assignments/gae87562a923e0917e0f34cc7f8b5bf9f\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9202\" data-api-returntype=\"Assignment\"\u003eHTTP Request/Response Cycle - Codealong\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 49.864%; height: 29px;\"\u003e\u003ca title=\"HTTP Request/Response Cycle - Lab\" href=\"assignments/g545d29befb66ab7e5ce40d116a4cdb97\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9203\" data-api-returntype=\"Assignment\"\u003eHTTP Request/Response Cycle - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 49.864%; height: 29px;\"\u003e\u003ca title=\"OAuth - Open Authorization\" href=\"pages/oauth-open-authorization\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/oauth-open-authorization\" data-api-returntype=\"Page\"\u003eOAuth - Open Authorization\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 49.864%; height: 29px;\"\u003e\u003ca title=\"Using the Yelp API - Codealong\" href=\"assignments/g3f286a96febb061ba6be14ac7fb869c1\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9205\" data-api-returntype=\"Assignment\"\u003eUsing the Yelp API - Codealong\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 74.067%; height: 97px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eAPIs\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 49.864%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.63563%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 49.864%;\"\u003e\u003cstrong\u003e\u003ca title=\"APIs Exit Ticket\" href=\"quizzes/ge3317592072b310e053474d59dcd3911\"\u003eAPIs Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 49.864%; height: 10px;\"\u003e\u003ca title=\"Reading API Documentation\" href=\"assignments/g388c452759978dc3090f0b74c219f9a5\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9206\" data-api-returntype=\"Assignment\"\u003eReading API Documentation\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; height: 10px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 49.864%; height: 29px;\"\u003e\u003ca title=\"Folium - Codealong\" href=\"assignments/gb193e466f0f425b1ac898b5b831c0918\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9207\" data-api-returntype=\"Assignment\"\u003eFolium - Codealong\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 49.864%;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: APIs\" href=\"quizzes/gb62403a6223131d89f1a2dd2aeb96708\"\u003eQuiz: APIs\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 49.864%;\"\u003e\u003cstrong\u003e\u003ca title=\"‚≠êÔ∏è APIs - Cumulative Lab\" href=\"quizzes/g40c88c59236cfd29c6f374ec2743d46d\"\u003e‚≠êÔ∏è APIs - Cumulative Lab\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; text-align: center;\"\u003e\u003cstrong\u003e1st*\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 49.864%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"APIs - Recap\" href=\"pages/apis-recap\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/apis-recap\" data-api-returntype=\"Page\"\u003eAPIs - Recap\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003e*Cumulative labs may be used for pairing exercises and might not be published yet; contact your instructor if you have questions\u003c/strong\u003e\u003c/p\u003e","exportId":"topic-9-lesson-priorities-live"},{"id":440640,"title":"APIs - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-apis-intro\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-apis-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-apis-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003cp\u003eOne of the many ways you'll find yourself accessing data as a professional data scientist is via APIs (Application Programming Interfaces). Typically, you'll send a request and get some data back, often in JSON or XML format. In this section, you'll get some hands-on experience retrieving and working with data provided by a range of different APIs.\u003c/p\u003e  \u003ch2\u003eIntroduction to APIs\u003c/h2\u003e  \u003cp\u003eIn this section, we'll provide a conceptual introduction to various kinds of APIs and some of the reasons that businesses create them. \u003c/p\u003e  \u003ch3\u003eThe Client Server Model\u003c/h3\u003e  \u003cp\u003eWe then look at the basic model of \"clients\" and \"servers\" to provide a framework for thinking about how your \"client\" retrieves information from an API \"server\". \u003c/p\u003e  \u003ch3\u003eThe Request/Response Cycle\u003c/h3\u003e  \u003cp\u003eNext, we'll look at the fundamental mechanism by which web-based APIs are typically accessed - sending an HTTP request and then processing the response provided by the server. We'll also get a little experience working with HTTP requests using the Python \u003ccode\u003e.get()\u003c/code\u003e method within the \u003ccode\u003erequests\u003c/code\u003e package. We also get some hands-on experience retrieving information from NASA using \u003ca href=\"http://open-notify.org/\"\u003eOpen Notify\u003c/a\u003e.\u003c/p\u003e  \u003ch3\u003eAPIs and OAuth\u003c/h3\u003e  \u003cp\u003eUsually, access to a given API is limited to avoid abuse. One of the most common mechanisms for identifying your API requests to make sure they fit within acceptable usage guidelines is OAuth - Open Authorization - a standard for authorizing clients across web requests. In this section, we'll provide an overview of what OAuth is and how it works by looking at how it is implemented by Dropbox. \u003c/p\u003e  \u003ch3\u003eWorking with the Yelp API\u003c/h3\u003e  \u003cp\u003eNext, we'll get some practice working with a real API, retrieving information from the Yelp API. \u003c/p\u003e  \u003ch3\u003eCreating Interactive Maps with Folium\u003c/h3\u003e  \u003cp\u003eWe wrap up the section by creating interactive maps with Folium. In the cumulative lab, you will obtain data from the Yelp API to display it on an interactive map.\u003c/p\u003e  \u003ch2\u003eSummary\u003c/h2\u003e  \u003cp\u003eMany companies provide access to their data via an API, so being able to connect to and work with data provided via an API is a critical skill as a professional data scientist!\u003c/p\u003e","exportId":"apis-introduction"},{"id":440643,"title":"Introduction to APIs","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-to-apis\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-to-apis/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eAPIs\u003c/em\u003e\u003c/strong\u003e (short for \u003cstrong\u003e\u003cem\u003eApplication Programming Interfaces\u003c/em\u003e\u003c/strong\u003e) are an important aspect of the modern internet. APIs are what allows everything on the internet to play nicely with each other and work together. In this lesson, we'll learn all about what APIs are, what they are used for, and how they work. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to : \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain what an API is\u003c/li\u003e\n\u003cli\u003eList use cases for different types of APIs\u003c/li\u003e\n\u003cli\u003eSummarize why companies build APIs\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eApplication Programming Interface (API)\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAPI stands for \u003cstrong\u003eApplication Programming Interface\u003c/strong\u003e. \u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAn API is a communication protocol between 2 software systems. It describes the mechanism through which if one system \u003cstrong\u003erequests\u003c/strong\u003e some information using a predefined format, a remote system \u003cstrong\u003eresponds\u003c/strong\u003e with an outcome that gets sent back to the first system. \u003c/p\u003e\n\n\u003cp\u003eAPIs are a way of allowing 2 applications to interact with each other. This is an incredibly common task in modern web-based programs. For instance, if you've ever connected your facebook profile to another service such as Spotify or Instagram, this is done through APIs. An API represents a way for 2 pieces of software to interact with one another. Under the hood, the actual request and response is done as an \u003cstrong\u003e\u003cem\u003eHTTP Request\u003c/em\u003e\u003c/strong\u003e. The following diagram shows the \u003cstrong\u003e\u003cem\u003eHTTP Request/Response Cycle\u003c/em\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introduction-to-apis/master/images/new_client-server-illustration.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAPIs are a way of standardizing interactions with software. From the provider's standpoint, it makes sure that everyone will interact with their software in a way that they are expecting. From the user's standpoint, it provides easy instructions and methods for working with 3rd party software, which opens up a ton of useful benefits by allowing us to get data from other sources, or add functionality by incorporating services from 3rd party software!\u003c/p\u003e\n\n\u003ch3\u003eAn Example\u003c/h3\u003e\n\n\u003cp\u003ePokemon Go has been one of the most popular smartphone games, which requires a large ecosystem with complete information of routes and roads across the globe. Developers of the Pokemon could not have possibly coded such a complete world map. Instead, they used Google maps API and built their app on top of it. The following image shows the complete architecture that allows players of pokemon go to play a game which, in turn, responds by making geographical information related API calls to google maps.\u003cbr\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introduction-to-apis/master/images/new_api4.png\" width=\"750\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eWhat is an API made of ?\u003c/h3\u003e\n\n\u003cp\u003eAPIs are very common in the tech world, which means that are many, many different kinds that you're going to run into. While each API you work with will be unique in some way, there are some common traits you can expect to see overall. An API has three main components as listed below:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eAccess Permissions:\u003c/strong\u003e Is the user allowed to ask for data or services?\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eRequest:\u003c/strong\u003e The service being asked for (e.g., if I give you current location using GPS, tell me the map around that place - as we see in Pokemon Go).  A Request has two main parts:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eMethods:\u003c/strong\u003e Once the access is permitted, what questions can be asked.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eParameters:\u003c/strong\u003e Additional details that can be sent with requests or responses\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eResponse:\u003c/strong\u003e The data or service as a result of the request.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWe'll look more deeply at how to use these components in the upcoming lessons for this section. For now, our goal is to understand that APIs:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eProvide a standardized way of letting us interact with 3rd party software/services\u003c/li\u003e\n\u003cli\u003eConsist of a \u003cstrong\u003e\u003cem\u003eRequest\u003c/em\u003e\u003c/strong\u003e and a \u003cstrong\u003e\u003cem\u003eResponse\u003c/em\u003e\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003eCan have special \u003cstrong\u003e\u003cem\u003eAccess Permissions\u003c/em\u003e\u003c/strong\u003e depending on the API and the user making the request. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we looked at an introduction to APIs, their basic understanding and main types of APIs.  In the following lessons, we dig into this in a bit more detail and see how to make API calls in Python. \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-introduction-to-apis\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-introduction-to-apis\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-introduction-to-apis/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"introduction-to-apis"},{"id":440644,"title":"The Client Server Model","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-the-client-server-model\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-the-client-server-model/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll look at the relationship between clients and servers.  The Client/server architecture offers an unlimited number of communication possibilities, and it is what makes the Internet \u003cstrong\u003epossible\u003c/strong\u003e. We'll cover a basic understanding of the client/server model which will later be used for calling an API. It is beyond the scope of this lesson to cover an exhaustive resource for client/server architecture--instead, we'll focus on the primary principles of client/server communication.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eMap the client server model process\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eThe Client Server Model\u003c/h2\u003e\n\n\u003cp\u003eThe client server model of communication technologies is a set of distributed application architecture and network operations that manages the workloads between the providers of a service, called \u003cstrong\u003eservers\u003c/strong\u003e, and service requester, called \u003cstrong\u003eclients\u003c/strong\u003e. \u003c/p\u003e\n\n\u003cp\u003eAlthough the client server model can be used by programs within an individual computer, we'll focus on the aspect that deals with networked environments. In this case, the client set up a connection to the server over a local area network (LAN), a wide-area network (WAN) such as the Internet. Have you ever played Xbox Live or used the PlayStation Network? Your Xbox One is the client, and when it logs into the network, it contacts the Xbox Live servers to retrieve gaming resources like updates, video, and game demos.\u003c/p\u003e\n\n\u003cp\u003eA typical multi-layered client server architecture that most of us use in everyday life can be shown as below. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-client-server-model/master/images/new_cs3.png\" width=\"400\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eWhat is a Client?\u003c/h3\u003e\n\n\u003cp\u003eA client is a computer hardware device or software that requests a service made available by a server. The server is often (but not always) located on a separate physical computer.\u003c/p\u003e\n\n\u003ch3\u003eWhat is a Server?\u003c/h3\u003e\n\n\u003cp\u003eA server is a physical computer dedicated to run services to serve the needs of clients. Depending on the service that is running, it could be a file server, database server, home media server, print server, email server or a \u003cstrong\u003eweb server\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch2\u003eClient/Server Model on the Web\u003c/h2\u003e\n\n\u003cp\u003eThe idea of a Client and Server communicating over a network is what makes viewing websites  and interacting with Web applications (like Gmail, Facebook, LinkedIn) possible. This model is a way to describe the give-and-take relationship between the client and server in a Web application and governs how information passes between computers. \u003c/p\u003e\n\n\u003cp\u003eLet's see what a basic web application looks like that takes in a request from a web client and serves accordingly. \u003c/p\u003e\n\n\u003ch2\u003eWeb Applications\u003c/h2\u003e\n\n\u003cp\u003eA Web application (Web app) is an application program that is stored on a remote server and delivered over the Internet through a browser interface. Web services are Web apps by definition and many, although not all, websites contain Web apps. Any website component that performs some function for the user qualifies as a Web app. Google‚Äôs search engine is a web app, yet its root concept is hardly different from a phone directory that enables you to search for names or numbers. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-client-server-model/master/images/new_apps.png\" width=\"400\"\u003e\u003c/p\u003e\n\n\u003cp\u003eMost web apps actually use a browser interface for interaction, i.e. end users request access and request information/service from these applications through a modern web browser interface. There are hundreds of ways to build and configure a Web application but most of them follow the same basic structure: a web client, a web server, and a database.\u003c/p\u003e\n\n\u003ch3\u003eThe Web client\u003c/h3\u003e\n\n\u003cp\u003eThe client is what the end user interacts with. \"Client-side\" code is actually responsible for most of what a user actually sees. For requesting some information as a web page, the client side may be responsible for: includes:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e Defining the structure of the Web page \u003c/li\u003e\n\u003cli\u003e Setting the look and feel of the Web page \u003c/li\u003e\n\u003cli\u003e Implementing a mechanism for responding to user interactions (clicking buttons, entering text, etc.)\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eMost of these tasks are managed by HTML/CSS/JavaScript-like technologies to structure the information, style of the page and provide interactive objects for navigation and focus. \n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-client-server-model/master/images/new_clientserver.png\" width=\"400\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eThe Web Server\u003c/h3\u003e\n\n\u003cp\u003eA web server in a Web application is what listens to requests coming in from the clients. When you set up an HTTP (HyperText Transfer Protocol - Language of the internet) server, we set it up to listen to a port number. A port number is always associated with the IP address of a computer. You can think of ports as separate channels on a computer that we can use to perform different tasks: one port could be surfing \u003ca href=\"http://www.facebook.com\"\u003ewww.facebook.com\u003c/a\u003e while another fetches your email. This is possible because each of the applications (the Web browser and the email client) use different port numbers.\u003c/p\u003e\n\n\u003cp\u003eOnce you've set up an HTTP server to listen to a specific port, the server waits for client requests coming to that specific port. After authenticating the client, the server performs any actions stated by the request and sends any requested data via an HTTP response.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-client-server-model/master/./images/new_server.png\" width=\"800\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eThe Database\u003c/h3\u003e\n\n\u003cp\u003eDatabases are the foundations of Web architecture. An SQL/NoSQL or a similar type of database is a place to store information so that it can easily be accessed, managed, and updated. If you're building a social media site, for example, you might use a database to store information about your users, posts, comments, etc. When a visitor requests a page, the data inserted into the page comes from the site's database, allowing real-time user interactions with sites like Facebook or apps like Gmail.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-client-server-model/master/images/new_CSModes.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn the example image above, we can see the above-mentioned setup in action. A browser sends a request to a web server by calling its domain i.e. \u003ca href=\"http://www.google.com\"\u003ewww.google.com\u003c/a\u003e. Based on who the requester is, the server collects necessary information for an SQL database. This information is wrapped as HTML code and sent back to the client. The web browser reads the structuring and styling information embedded within HTML and displays the page to the user accordingly. \u003c/p\u003e\n\n\u003cp\u003eThere is a lot of details on client/server architectures and how they manifest themselves on the Internet. We'll focus a bit more on the ideas highlighted in this section by setting up a client and making requests in Python. These skills will help us request data from the servers for our analytical experiments. here are some extra resources for you if you want to dig deeper into the client server model and how it is set up for many different architectures. \u003c/p\u003e\n\n\u003ch2\u003eFurther Reading\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.lifewire.com/introduction-to-client-server-networks-817420\"\u003eIntroduction to Client Server Networks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.researchgate.net/publication/271295146_Client-Server_Model\"\u003eClient Server Model\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://spin.atomicobject.com/2015/04/06/web-app-client-side-server-side/\"\u003eWeb Application Architecture\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we looked at the basics of the client server model and focused on how this model is implemented for web-based applications. We looked at the role of web clients, web servers, and databases that carry client information. In the following lessons, we'll see how to implement these ideas using Python! \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-the-client-server-model\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-the-client-server-model\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-the-client-server-model/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"the-client-server-model"},{"id":440647,"title":"HTTP Request/Response Cycle - Codealong","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-http-request-response-codealong\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-http-request-response-codealong\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-http-request-response-codealong/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWhen developing a Web application, as we saw in the previous lesson, the request/response cycle is a useful guide to see how all the components of the app fit together. The request/response cycle traces how a user's request flows through the app. Understanding the request/response cycle is helpful to figure out which files to edit when developing an app (and where to look when things aren't working). This lesson will show how this setup works using python. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the HTTP request/response cycle\u003c/li\u003e\n\u003cli\u003eList the status codes of responses and their meanings\u003c/li\u003e\n\u003cli\u003eObtain and interpret status codes from responses\u003c/li\u003e\n\u003cli\u003eMake HTTP GET and POST requests in python using the \u003ccode\u003erequests\u003c/code\u003e library\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gae87562a923e0917e0f34cc7f8b5bf9f"},{"id":440649,"title":"HTTP Request/Response Cycle - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-http-request-response-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-http-request-response-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-http-request-response-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll make use of the \u003ccode\u003erequests\u003c/code\u003e module commands and properties seen in the previous lesson, to extract information for a web service called \u003cstrong\u003e\"Open Notify\"\u003c/strong\u003e to access NASA's space data. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the HTTP request/response cycle\u003c/li\u003e\n\u003cli\u003eList the status codes of responses and their meanings\u003c/li\u003e\n\u003cli\u003eObtain and interpret status codes from responses\u003c/li\u003e\n\u003cli\u003eMake HTTP GET and POST requests in python using the \u003ccode\u003erequests\u003c/code\u003e library\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g545d29befb66ab7e5ce40d116a4cdb97"},{"id":440651,"title":"OAuth - Open Authorization","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-oauth-open-authorization\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-oauth-open-authorization/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003ePerhaps the most common thread among all APIs available on the web is the need to \u003cstrong\u003e\u003cem\u003eauthenticate\u003c/em\u003e\u003c/strong\u003e yourself to prove you are who you say are. This is a major security point for web APIs, and it's no surprise that a standard protocol has evolved to help make authenticating users simple and safe. This authentication protocol is called \u003cstrong\u003e\u003cem\u003eOAuth\u003c/em\u003e\u003c/strong\u003e, and it provides a simple, easy integration for multi-user applications, such as web APIs, so that they can add authentication capabilities to their API in a simple, streamlined way. From our side, this makes life easy because it standardizes the authentication process so that we don't have to worry about many different authentication protocols for every different service. In this lesson, we'll look into OAuth, learn a little about how it works, and explore the benefits OAuth offers. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the role OAuth plays when working with a 3rd party API\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhat is OAuth?\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eOAuth stands for Open Authorization.\u003c/strong\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eOAuth\u003c/em\u003e\u003c/strong\u003e is an open-source protocol created to allow the creators of APIs and other online services to easily let them share private data or assets with users. One of the biggest challenges of building multi-user applications is making sure that you only give people access to the data and functionality they're supposed to have. OAuth provides a framework for allowing authenticated access, but without the risk of having to share the original login credentials such as a password.  The OAuth protocol was created in 2010 and was the brainchild of major tech companies such as Google and Twitter. It's now the most popular open standard for user authentication, is used by almost all of the major players in the tech world, such as Netflix, Amazon, Facebook, and more!\u003c/p\u003e\n\n\u003ch3\u003eThe Steps of OAuth\u003c/h3\u003e\n\n\u003cp\u003ePrior to using OAuth, we must also register our application with the authorizer and get our \u003cstrong\u003ecredentials\u003c/strong\u003e to use during the process. We need to set up some information about the application, like the app's name or website, and most importantly,‚Ää\u003cstrong\u003ea redirect URI\u003c/strong\u003e. The authorizer later uses this to contact the requesting app and tell them that the user said yes. \u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eA URI (Uniform Resource Identifier) is a string that refers to a resource. The most common are URLs, which identify the resource by giving its location on the Web.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAfter registration, The first step is the \u003cstrong\u003eauthorization\u003c/strong\u003e. Here, we send our users to the authorization server to ask for some permissions with our scope (permissions) that we would like to have. The user can see everything being requested on his behalf and confirm that they would like to grant our application access for those permissions.\u003c/p\u003e\n\n\u003cp\u003eThe second step is the \u003cstrong\u003eredirect\u003c/strong\u003e. Redirect URIs are a critical part of the OAuth flow. After a user successfully authorizes their application, the authorization server then redirects the user back to the app with an \u003cstrong\u003eauthorization code\u003c/strong\u003e in the URL. Because the redirect URL will contain sensitive information, it is critical that the service doesn‚Äôt redirect the user to arbitrary locations. The authorization code is used by our application in the final act of getting the access token. \u003c/p\u003e\n\n\u003cp\u003eThe final step is \u003cstrong\u003eacquisition\u003c/strong\u003e. This is where we finally receive our \u003cstrong\u003eaccess token\u003c/strong\u003e from the service provider so we can process API requests for our user. We use the authorization code we received in the redirect to our redirect url and our own application secret (which is acquired during initial registration) in order to get our user‚Äôs access token. The access token can then be used to make API calls on behalf of our user.\u003c/p\u003e\n\n\u003cp\u003eThis architecture is summarized in the image below:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-oauth-open-authorization/master/images/new_oa3.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe following example shows a scenario where you may want to access a user's Dropbox account for storing photo/media as a part of the service you provide. \u003c/p\u003e\n\n\u003ch2\u003eOAuth with DropBox for Single-Sign-On (SSO)\u003c/h2\u003e\n\n\u003cp\u003eIf you've ever used your Facebook or Google account to log in to a 3rd party website or app, then you've used OAuth--OAuth is what makes this sort of \u003cstrong\u003e\u003cem\u003eSingle-Sign-On\u003c/em\u003e\u003c/strong\u003e or \u003cstrong\u003e\u003cem\u003eSSO\u003c/em\u003e\u003c/strong\u003e ability possible. To get a feel for how OAuth makes this possible, let's look at a real-world example--giving Dropbox access to the photos app on your phone or computer!\u003c/p\u003e\n\n\u003ch3\u003eRegistering with OAuth and Using SDKs\u003c/h3\u003e\n\n\u003cp\u003eBefore an application can be used with OAuth, that application must first be \u003cem\u003eregistered\u003c/em\u003e with OAuth. This is a process handled by the team creating the Application itself, and not something we need to worry about as users. For instance, in order for the Photo Gallery app on our Macbook to have access to Dropbox, the team behind this software at Apple will have taken the time to register their app, provide the name of it, set the permissions it will need, and other things like that. The good news is that in most cases, we don't need to write the actual code that allows our application to interface with the service we're connecting to--major companies usually create \u003cstrong\u003e\u003cem\u003eSoftware Development Kits\u003c/em\u003e\u003c/strong\u003e or \u003cstrong\u003e\u003cem\u003eSDKs\u003c/em\u003e\u003c/strong\u003e that we can drop into our application and use as a library to add functionality like SSO with our Facebook account or the ability to access files in our Dropbox account. \u003c/p\u003e\n\n\u003ch3\u003eThe OAuth Process\u003c/h3\u003e\n\n\u003cp\u003eIn order for our app to access our users' Dropbox accounts, the following steps need to happen:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eA user must authenticate with Dropbox, verifying their identity. \u003c/li\u003e\n\u003cli\u003eThe user must explicitly give app permission to access their Dropbox (you've probably seen these sorts of popups before when connecting apps to one another on your phone).\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eOne quick technical note: Dropbox (and most other online services) actually use \u003cstrong\u003eOAuth 2\u003c/strong\u003e specifications. \u003ca href=\"https://oauth.net/2/\"\u003eDetails on OAuth2 can be viewed at the official website\u003c/a\u003e. In practice, most people just call it OAuth for short, but there is technically a difference between OAuth and OAuth 2 in terms of how they work and what they can do. \u003c/p\u003e\n\n\u003cp\u003eOnce the user has completed signing in and verifying permissions, the OAuth process returns an \u003cstrong\u003e\u003cem\u003eAccess Token\u003c/em\u003e\u003c/strong\u003e to our application. \u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eAn access token is a special string generated by authorizer that we need to send with \neach subsequent API request to uniquely identify both the app and the  user.\u003c/strong\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eYou can think of an access token as a secret code that identifies our HTTP requests as coming from the actual user that has signed in and authenticated themselves. \u003c/p\u003e\n\n\u003cp\u003eFor the remainder of this lesson, we'll borrow some example graphics and explanations from Dropbox's amazing \u003ca href=\"https://www.dropbox.com/developers/reference/oauth-guide\"\u003eOAuth Guide\u003c/a\u003e, which provides a detailed explanation of exactly how OAuth works with Dropbox. We're only interested in the broad strokes of this as an example of how it all works, but if you have time, take a look at the full guide--it's quite informative and very easy to understand! \u003c/p\u003e\n\n\u003cp\u003eHave a look at an example scenario for an Image/gallery app that wants to access its users' Dropbox accounts for accessing or storing new images.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-oauth-open-authorization/master/images/oa1.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe key benefit of this approach is that our app doesn't need to store or transmit the user's Dropbox password. The user will be redirected to Dropbox to authorize our app to access their Dropbox data. After the user has approved our app, they'll be sent back to the app with an authorization code. At this point, our app will exchange the authorization code for an access token which can be used to make subsequent requests to the Dropbox API for downloading/uploading contents, etc. OAuth also allows the user to authorize only a limited set of permissions and the user may choose to stop access at any time. This makes OAuth a safer and more secure form of API authorization for end users.\u003c/p\u003e\n\n\u003ch2\u003eDropbox access for web apps\u003c/h2\u003e\n\n\u003cp\u003eIf you've used SSO features before or connected apps to other apps on your smartphone, then you're probably familiar with the overall workflow of how OAuth takes users through the process of authenticating. \u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eThe application redirects the user to a page to sign in to the account they're using, such as redirecting to the Facebook login page when you click \"Login with Facebook\" in a 3rd party app or game. \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe User signs in, and explicitly provides permissions to the application or game to connect to their account--in our example, this would mean giving the Photo Gallery app on our Macbook explicit permission to access our Dropbox account. \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe user is given an access code and redirected back to the original application. The application then signs in, and exchanges the access code for a more permanent \u003cstrong\u003e\u003cem\u003eAccess Token\u003c/em\u003e\u003c/strong\u003e that it can store for all subsequent connections to the service that it has authenticated with--this is the reason why our 3rd party apps can stay signed in and connected with things like our Facebook or Dropbox accounts, so that we don't have to reauthenticate every time we sign into the app!\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eNote that this request to exchange the authorization code for an access token takes place behind-the-scenes with a call to the /token API endpoint and is not visible to your end users. This setup is shown in the image below, which comes from the Dropbox OAuth Guide linked above.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-oauth-open-authorization/master/images/oa2.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eThe Benefits of Using OAuth\u003c/h2\u003e\n\n\u003cp\u003eNow that we understand how OAuth works, let's think about why it's useful.  Before OAuth, authentication meant \u003cstrong\u003e\u003cem\u003eDirect Authentication\u003c/em\u003e\u003c/strong\u003e through an HTTP request, where the user is prompted for a username and password. This sort of Basic Authentication is still used in plenty of places, as a primitive kind of API authentication for server-side applications: instead of sending a username and password to the server with each request, the user sends an API key ID and secret. Before OAuth, sites prompted users to enter their username and password directly into a form and sites would log into the user account.\u003c/p\u003e\n\n\u003cp\u003eWhat makes OAuth so special and so effective is that it is a \u003cstrong\u003e\u003cem\u003eDelegated\u003c/em\u003e\u003c/strong\u003e authorization framework for RESTful APIs.  This means that it allows apps to obtain limited access (scopes) to a user‚Äôs data without giving away a user‚Äôs password--think about every HTTP request an app makes when it needs information from a connected Facebook account. It would be a major security risk if each of these HTTP requests still had to contain a username and password to verify that the HTTP request should have access to a certain account. By using an OAuth access token,  it allows us to decouple authentication (proving we are who we say we are) and authorization (getting permissions for all we need to do). \u003c/p\u003e\n\n\u003ch2\u003eFurther reading\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://oauth.net/2/\"\u003eOAuth 2.0\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://medium.freecodecamp.org/how-to-dance-the-oauth-a-step-by-step-lesson-fd2364d89742\"\u003eHow to dance the OAuth: a step-by-step lesson\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://medium.com/square-corner-blog/oauth-wherefore-art-thou-b7034098a0fd\"\u003eOAuth, wherefore art thou?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we looked at the OAuth process for gaining access to user-owned resources. We saw how we authorize our apps to access resources with a high level of confidentiality and security that OAuth offers. We looked at an example of how this might work with the Dropbox API and also some extra reading to see more examples of this process. Next, we'll put this into practice by seeing how this process works with the Yelp API.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-oauth-open-authorization\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-oauth-open-authorization\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-oauth-open-authorization/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"oauth-open-authorization"},{"id":440653,"title":"Using the Yelp API - Codealong","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-using-yelp-api-codealong\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-yelp-api-codealong\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-yelp-api-codealong/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that we've discussed HTTP requests and OAuth, it's time to practice applying those skills to a production level API. In this codealong, we'll take you through the process of signing up for an OAuth token and then using that to make requests to the Yelp API!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eMake requests using OAuth\u003c/li\u003e\n\u003cli\u003eUse the JSON module to load and parse JSON documents\u003c/li\u003e\n\u003cli\u003eConvert JSON to a pandas dataframe\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g3f286a96febb061ba6be14ac7fb869c1"},{"id":440661,"title":"Reading API Documentation","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-reading-api-documentation\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-reading-api-documentation\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-reading-api-documentation/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe've now covered an example API request, but how on Earth would you know how to do that on your own? The answer is through documentation! All APIs will have associated documentation, and while there are substantial similarities, all will be different to one degree or another. The best way to get more comfortable is to practice! So with that, let's take a look at the yelp documentation associated with our previous example.  \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eInterpret API documentation into Python code\u003c/li\u003e\n\u003cli\u003eMake requests using OAuth\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g388c452759978dc3090f0b74c219f9a5"},{"id":440663,"title":"Folium - Codealong","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-folium-codealong\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-folium-codealong\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-folium-codealong/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this codealong, we'll take a look at how to create an interactive map using the Folium package. From there, we'll return to APIs in the final lab for the day where you'll make an interactive map from your requests to the API!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate maps using Folium\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gb193e466f0f425b1ac898b5b831c0918"},{"id":440665,"title":"Quiz: APIs","type":"Quizzes::Quiz","indent":2,"locked":false,"assignmentExportId":"g0c53b6a28b96dface74f0ee0ff4e8041","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"min_score","requiredPoints":3.0,"completed":false,"content":"","exportId":"gb62403a6223131d89f1a2dd2aeb96708"},{"id":440668,"title":"‚≠êÔ∏è APIs - Cumulative Lab","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"g601d0a191f59d1af487bb824f05d46fd","questionCount":1,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-apis-lab\" target=\"_blank\"\u003e \u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e \u003c/a\u003e \u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-apis-lab/issues/new\" target=\"_blank\"\u003e \u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e \u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eWork on this lab on your local computer. If you're not sure how to clone the source code, refer to the instructions in \u003ca title=\"Running Jupyter Notebooks Locally\" href=\"pages/running-jupyter-notebooks-locally\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/running-jupyter-notebooks-locally\" data-api-returntype=\"Page\"\u003eRunning Jupyter Notebooks Locally\u003c/a\u003e. If you're not sure how to submit the link, refer to the instructions in \u003ca title=\"‚≠êÔ∏è Data Serialization Formats - Cumulative Lab\" href=\"quizzes/gd382b571f354991be10756bfc79dd939\"\u003e‚≠êÔ∏è Data Serialization Formats - Cumulative Lab\u003c/a\u003e\u003c/p\u003e","exportId":"g40c88c59236cfd29c6f374ec2743d46d"},{"id":440670,"title":"APIs - Recap","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-apis-recap\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-apis-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-apis-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this section, you learned about the HTTP request/response cycle and using APIs. APIs are critical to software development, and they can be powerful tools for gathering data for data scientists.\u003c/p\u003e  \u003ch2\u003eKey Takeaways\u003c/h2\u003e  \u003cp\u003eAPIs can provide access to a wide range of data that you might need as a data scientist.\u003c/p\u003e  \u003cp\u003eKey takeaways include:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eWhile there are many other kinds of APIs, as a data scientist, you'll typically be working with web APIs.\u003c/li\u003e \u003cli\u003eThe \u003ccode\u003erequests\u003c/code\u003e library in Python is a great starting point for making HTTP requests to APIs.\u003c/li\u003e \u003cli\u003eMost APIs you encounter will return results in JSON format.\u003c/li\u003e \u003cli\u003eThe two most common HTTP methods you'll use when accessing APIs are \u003ccode\u003eGET\u003c/code\u003e (to retrieve information) and \u003ccode\u003ePOST\u003c/code\u003e (to send information).\u003c/li\u003e \u003cli\u003eTypically, you'll need to authenticate in some manner to gain access to most APIs - one common method for doing so is using OAuth. \u003c/li\u003e \u003c/ul\u003e","exportId":"apis-recap"}]},{"id":45676,"name":"Topic 10: HTML, CSS and Web Scraping","status":"started","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g6a3aa465bf267289b3b5c32435c69db0","items":[{"id":440674,"title":"Topic 10 Lesson Priorities (Live)","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 84.4976%; height: 365px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete Before \u003cem\u003eWeb Scraping\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 42.5917%; text-align: center; height: 36px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 8.4431%; text-align: center; height: 36px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 30px;\"\u003e\u003ca title=\"HTML, CSS and Web Scraping - Introduction\" href=\"pages/html-css-and-web-scraping-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/html-css-and-web-scraping-introduction\" data-api-returntype=\"Page\"\u003eHTML, CSS and Web Scraping - Introduction\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 30px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;Low priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003cstrong\u003e \u003ca title=\"HTML Introduction\" href=\"pages/html-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/html-introduction\" data-api-returntype=\"Page\"\u003eHTML Introduction\u003c/a\u003e \u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003ca title=\"Researching HTML Elements\" href=\"pages/researching-html-elements\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/researching-html-elements\" data-api-returntype=\"Page\"\u003eResearching HTML Elements\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003ca title=\"Separating Content and Presentation\" href=\"pages/separating-content-and-presentation\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/separating-content-and-presentation\" data-api-returntype=\"Page\"\u003eSeparating Content and Presentation\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;Low priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003ca title=\"Intro to CSS\" href=\"pages/intro-to-css\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/intro-to-css\" data-api-returntype=\"Page\"\u003eIntro to CSS\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 19px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 19px;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: HTML and CSS\" href=\"quizzes/g3aaa2419a0e91e48f5519efee68b4ad8\"\u003eQuiz: HTML and CSS\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; text-align: center; height: 19px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003ca title=\"CSS Code Along\" href=\"pages/css-code-along\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/css-code-along\" data-api-returntype=\"Page\"\u003eCSS Code Along\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003ca title=\"My Little Rainbow\" href=\"pages/my-little-rainbow\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/my-little-rainbow\" data-api-returntype=\"Page\"\u003eMy Little Rainbow\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003cstrong\u003e \u003ca title=\"An Introduction to Web Scraping and Beautiful Soup\" href=\"assignments/g929713dd1af9fc2b9f950bea74bfed91\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9212\" data-api-returntype=\"Assignment\"\u003eAn Introduction to Web Scraping and Beautiful Soup\u003c/a\u003e \u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003ca title=\"Web Scraping in Practice\" href=\"assignments/g1189239c8242ab899aef150f3a38ad91\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9213\" data-api-returntype=\"Assignment\"\u003eWeb Scraping in Practice\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003ca title=\"Web Scraping - Lab\" href=\"assignments/g68ba82ad814827072a596a16f5a23162\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9214\" data-api-returntype=\"Assignment\"\u003eWeb Scraping - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 19px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 19px;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: CSS and Web Scraping\" href=\"quizzes/g579c15aeb78a7b141ee969ff3c3fb8d7\"\u003eQuiz: CSS and Web Scraping\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; text-align: center; height: 19px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 84.4976%; height: 133px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eWeb Scraping\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 42.5917%; text-align: center; height: 36px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 8.4431%; text-align: center; height: 36px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 42.5917%;\"\u003e\u003cstrong\u003e\u003ca title=\"Web Scraping Exit Ticket\" href=\"quizzes/gd38d10bad4771160acf5dbb6f783526a\"\u003eWeb Scraping Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 10px;\"\u003e\u003ca title=\"Scraping Images\" href=\"assignments/g0f436701a06fd6779fe89c2c2e38d605\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9215\" data-api-returntype=\"Assignment\"\u003eScraping Images\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 10px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003ca title=\"Scraping Concerts - Lab\" href=\"assignments/gdba3a83b7a603fbad59a3cb201a527f5\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9228\" data-api-returntype=\"Assignment\"\u003eScraping Concerts - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003cstrong\u003e \u003ca title=\"HTML, CSS and Web Scraping -  Recap\" href=\"pages/html-css-and-web-scraping-recap-2\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/html-css-and-web-scraping-recap-2\" data-api-returntype=\"Page\"\u003eHTML, CSS and Web Scraping - Recap\u003c/a\u003e \u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e","exportId":"topic-10-lesson-priorities-live"},{"id":440675,"title":"HTML, CSS and Web Scraping - Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-intro-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-intro-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you'll begin to investigate content from the web. You'll start by learning a bit of HTML and CSS, the foundations for the web, and from there you'll take a look at how to scrape information from the web in order to systematically create and build datasets that may not be otherwise available to you.\u003c/p\u003e\n\n\u003ch2\u003eHTML, CSS and Web Scraping\u003c/h2\u003e\n\n\u003cp\u003eWhile many companies provide access to information via APIs, sometimes you have to scrape the information that you need for your analysis from web pages designed to be read by people. \u003c/p\u003e\n\n\u003ch3\u003eHTML\u003c/h3\u003e\n\n\u003cp\u003eHTML stands for HyperText Markup Language - the \"language of the web\". You'll start by learning HTML syntax and practice exploring HTML documents. After that, you'll look into the process for handling new HTML elements that you might not have encountered before.\u003c/p\u003e\n\n\u003ch3\u003eCSS\u003c/h3\u003e\n\n\u003cp\u003eCSS or Cascading Style Sheets is how you make web pages look snazzy. You'll see more about how proper web development workflows separate content from presentation.\u003c/p\u003e\n\n\u003ch3\u003eWeb Scraping\u003c/h3\u003e\n\n\u003cp\u003eFinally, you'll practice using Beautiful Soup - a package for scraping websites.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eYou will often find that the information you want to retrieve isn't available via an API. When that's the case, it's incredibly important to be proficient with web scraping so that you can retrieve the information you need for your analysis.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-html-css-scraping-intro-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-html-css-scraping-intro-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-intro-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"html-css-and-web-scraping-introduction"},{"id":440676,"title":"HTML Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-introduction\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-introduction/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eHTML, or HyperText Markup Language, is a markup language that describes the\nstructure and semantic meaning of web pages. Web browsers, such as Mozilla\nFirefox, Internet Explorer, and Google Chrome interpret the HTML code and use\nit to render output. Unlike Python, JavaScript and other programming languages,\nmarkup languages like HTML don't have any logic behind them. Instead, they\nsimply surround the content to convey structure and meaning.\u003c/p\u003e\n\n\u003cp\u003eEvery web page you've ever visited is structured using HTML code. Being able to\nread and understand an HTML document is an incredibly useful tool in a\ndata scientist's toolbox.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain what HTML is and why it's important in the context of web development\u003c/li\u003e\n\u003cli\u003eCompare and contrast HTML tags\u003c/li\u003e\n\u003cli\u003eCreate an HTML document with appropriate tags\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eHTML Syntax\u003c/h2\u003e\n\n\u003cp\u003eHTML makes use of \u003cstrong\u003etags\u003c/strong\u003e which are interpreted by web browsers to affect how content is displayed. The \u003ccode\u003ep\u003c/code\u003e tag to define a paragraph is shown below:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;p\u0026gt;Hello World\u0026lt;/p\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eElements, like the \u003ccode\u003ep\u003c/code\u003e tags above, won't be displayed in the browser. Technologists might say that\nthe tags \"affect how the content is rendered by the browser.\" \u003c/p\u003e\n\n\u003cp\u003eYou can also alter any number of attributes inside of the opening tags. For\nexample, the \u003ccode\u003ea\u003c/code\u003e element, which is used for links, has an \u003ccode\u003ehref\u003c/code\u003e attribute to\nspecify the destination address of the link. If you wanted to link to\n\u003ca href=\"http://www.flatironschool.com\"\u003ewww.flatironschool.com\u003c/a\u003e, you could do so as follows:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;a href=\"http://www.flatironschool.com\"\u0026gt;Flatiron School\u0026lt;/a\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis would render as:\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://www.flatironschool.com\"\u003eFlatiron School\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can also nest elements inside of each other. To have a link displayed as a\nseparate paragraph, we could nest an \u003ccode\u003ea\u003c/code\u003e element inside of a \u003ccode\u003ep\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;p\u0026gt;This \u0026lt;a href=\"http://www.google.com\"\u0026gt;link\u0026lt;/a\u0026gt; will be a part of a separate paragraph.\u0026lt;/p\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eBasic HTML Document Structure\u003c/h2\u003e\n\n\u003cp\u003eAll HTML documents begin with a \"doctype declaration\" tag, which tells the web\nbrowser which version of HTML to use. HTML is a language that is currently\nevolving ‚Äî just like English. When you open a novel such as \"Romeo and Juliet,\" your\nexpectation is that the \"doctype\" is \"Elizabethan English.\" In the same way\n\"Elizabethan English\" has changed to a more modern form, HTML 1.0 was\n\u003cem\u003eessentially\u003c/em\u003e the same as modern HTML5 but had some tags that are no longer used\nand was lacking some tags often used today.\u003c/p\u003e\n\n\u003cp\u003eSince it's not wrapping any content, the doctype declaration doesn't require a\nclosing tag. To use HTML5, the current up-to-date version, you can simply\ndeclare \u003ccode\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNext, you add an opening and closing \u003ccode\u003ehtml\u003c/code\u003e tag. This tells the web browser to\ninterpret everything inside the tags as HTML code.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\n\u0026lt;html\u0026gt;\n\n\n\u0026lt;/html\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eEvery HTML page is made up of two primary sections: a \u003ccode\u003ehead\u003c/code\u003e and a \u003ccode\u003ebody\u003c/code\u003e. The\n\u003ccode\u003ehead\u003c/code\u003e element contains metadata about the HTML document and other information\nfor the browser, while the \u003ccode\u003ebody\u003c/code\u003e element contains the actual content.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\n\u0026lt;html\u0026gt;\n    \u0026lt;head\u0026gt;\n        \u0026lt;!-- metadata about the HTML document as a whole --\u0026gt;\n\n    \u0026lt;/head\u0026gt;\n\n    \u0026lt;body\u0026gt;\n        \u0026lt;!-- content of our page will be here! --\u0026gt;\n\n    \u0026lt;/body\u0026gt;\n\u0026lt;/html\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eComments\u003c/h2\u003e\n\n\u003cp\u003eLet's also take a brief moment to recognize how to add comments into an HTML\ndocument.  These won't get rendered to the browser at all: they're just helpful\nnotes for the author.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;!-- NYC Pizza is world-famous, cheap, and loved by both vermin and human-like! --\u0026gt;\n\u0026lt;p\u0026gt;Top 5 Pizza Places in NYC\u0026lt;/p\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eCommon HTML Elements\u003c/h2\u003e\n\n\u003cp\u003eYou've already looked at some common HTML elements, such as \u003ccode\u003ea\u003c/code\u003e and \u003ccode\u003ep\u003c/code\u003e. Let's\ntake a look at some more HTML elements.\u003c/p\u003e\n\n\u003ch2\u003eHeaders\u003c/h2\u003e\n\n\u003cp\u003eHTML gives us access to different header elements, ranging from \u003ccode\u003eh1\u003c/code\u003e to \u003ccode\u003eh6\u003c/code\u003e,\nwith \u003ccode\u003eh1\u003c/code\u003e being the largest and \u003ccode\u003eh6\u003c/code\u003e being the smallest.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;h1\u0026gt;Dogs!\u0026lt;/h1\u0026gt;\n\u0026lt;h3\u0026gt;Why Dogs are Great\u0026lt;/h3\u0026gt;\n\n\u0026lt;h6\u0026gt;Different Breeds\u0026lt;/h6\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn addition to changing how the text is displayed, search engines use headers\nto help determine what a web page is about. Remember when\nyou provide \u003cem\u003esemantic\u003c/em\u003e markup, machines can infer the \"main points\" of a page. A\nwell structured article will generally have its principal arguments bracketed\nby low-number header tags -- this very document does exactly that!\u003c/p\u003e\n\n\u003ch2\u003eImages\u003c/h2\u003e\n\n\u003cp\u003eYou can embed images on our web pages using the \u003ccode\u003eimg\u003c/code\u003e element. The \u003ccode\u003eimg\u003c/code\u003e element\ndoesn't have a closing tag. The \u003ccode\u003esrc\u003c/code\u003e attribute tells the browser where to find\nthe image. The \u003ccode\u003ealt\u003c/code\u003e attribute will be displayed if an image can't be loaded,\nand also describes the image to search engines.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003ealt\u003c/code\u003e tag presents a moment to talk about an important principle behind \u003ca href=\"https://webfoundation.org/about/vision/history-of-the-web/\"\u003eTim\nBerners-Lee's vision for the Web\u003c/a\u003e: it is \u003cem\u003einclusive\u003c/em\u003e. If you're using assistive\ntechnologies because you have a sight impairment, it's helpful to know what's\nbeing displayed. If you're in a remote community where internet access is\nexpensive, you might choose to disable images and only pay to download those\nwhich you \u003cem\u003eabsolutely need\u003c/em\u003e. So while an \u003ccode\u003eimg\u003c/code\u003e will inject an image and \"work,\"\nhonoring the Web's vision for openness and inclusivity requires that you provide\nthe \u003ccode\u003ealt\u003c/code\u003e tag as well.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e\u0026lt;img src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-html-introduction/master/URL_TO_IMAGE\" alt=\"Picture of a Dog\"\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2\u003eLists\u003c/h2\u003e\n\n\u003cp\u003eSome other useful HTML elements are lists. You can make bulleted, or unordered\nlists, using opening and closing \u003ccode\u003eul\u003c/code\u003e tags. Inside, you can nest a \u003ccode\u003eli\u003c/code\u003e, or\n\"list item\" element for each item on our list.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;h5\u0026gt;My Favorite Things in No Particular Order\u0026lt;/h5\u0026gt;\n\u0026lt;ul\u0026gt;\n    \u0026lt;li\u0026gt;Coffee\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Vinyl Records\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Pickling\u0026lt;/li\u0026gt;\n\u0026lt;/ul\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis would render as:\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch5\u003eMy Favorite Things in No Particular Order\u003c/h5\u003e\n\n\u003cul\u003e\n    \u003cli\u003eCoffee\u003c/li\u003e\n    \u003cli\u003eVinyl Records\u003c/li\u003e\n    \u003cli\u003ePickling\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr\u003e\n\n\u003cp\u003eYou can also make a numbered, or ordered list, using an \u003ccode\u003eol\u003c/code\u003e tag.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;h5\u0026gt;Top 5 Pizza Places in NYC\u0026lt;/h5\u0026gt;\n\u0026lt;ol\u0026gt;\n    \u0026lt;li\u0026gt;DiFara Pizza\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Lucali's\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Sal and Carmine's\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Juliana's\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Joe's\u0026lt;/li\u0026gt;\n\u0026lt;/ol\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWould render as:\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch5\u003eTop 5 Pizza Places in NYC\u003c/h5\u003e\n\n\u003col\u003e\n    \u003cli\u003eDiFara Pizza\u003c/li\u003e\n    \u003cli\u003eLucali's\u003c/li\u003e\n    \u003cli\u003eSal and Carmine's\u003c/li\u003e\n    \u003cli\u003eJuliana's\u003c/li\u003e\n    \u003cli\u003eJoe's\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003chr\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWelcome to the world of the web! In this lesson, you learned about HTML, why it's important in web development, and how web pages are structured. You also compared and contrasted a few common HTML tags as well as saw how tags can be used to construct HTML documents.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-html-introduction\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-html-introduction\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-html-introduction/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"html-introduction"},{"id":440677,"title":"Researching HTML Elements","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-researching-html-elements\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-researching-html-elements/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWhen writing HTML you might encounter tags that are new to you. When searching for technical help, you have to be careful about which sources you trust. This is a skill you will build over time but you'll get an overview of some good practices here.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse search engines as resources to find information\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eCompare multiple resources to find the best source\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eUse Search Engines as Resources to Find Information\u003c/h2\u003e\n\n\u003cp\u003eLet's say in your research, you come across an unfamiliar HTML element like\n\u003ccode\u003e\u0026lt;samp\u0026gt;\u003c/code\u003e. You can google \u003ccode\u003esamp html element,\u003c/code\u003e and you will find an endless list\nof results to choose from. Sometimes resources can be outdated, biased, or\ninaccurate. It's important to filter through the results to find the best one.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/web-development/html-element-search.png\" width=\"850\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eObserve And Identify Relevant Information\u003c/h2\u003e\n\n\u003cp\u003eYour instinct might be to open the first result. You should be pickier.\nSometimes the result has \"gamed\" the search engine and unfairly influenced the ranking.\nIt's recommended that you open the top \u003cstrong\u003efive\u003c/strong\u003e results and review them critically.\u003c/p\u003e\n\n\u003cp\u003eIt's also advisable to trust sites that are affiliated with building or\ndefining the technologies more than blogs or other resources. In the HTML\nworld, the Mozilla Developer Network (MDN) is an extremely trustworthy site.\nIn fact, it's likely the best HTML and CSS documentation source on the\ninternet.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/web-development/samp-mdn-page.png\" width=\"850\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eCompare Multiple Resources To Find The Best Source\u003c/h2\u003e\n\n\u003cp\u003eIf you go back to the search results, you'll see that the first result, in this\ncase, is \u003ccode\u003eW3schools\u003c/code\u003e. A site, like W3schools, for example, can be used as an\nadditional resource for garnering understanding. It even includes interactive\nexamples, creating a sandbox environment for experimentation.\u003c/p\u003e\n\n\u003cp\u003eIn this case, between MDN and W3schools, you should get a good sense of how to\nuse the \u003ccode\u003e\u0026lt;samp\u0026gt;\u003c/code\u003e element.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eThe web is a constantly evolving entity. As we build more ambitious products or\nlearn from our collective needs and mistakes, the industry will continually\nupdate the HTML specifications.\u003c/p\u003e\n\n\u003cp\u003eResearching referencing documentation\ncan be scary at first, but it's a primary skill for data scientists. Don't be afraid to\npractice technical searches. It's a \u003cem\u003eskill\u003c/em\u003e that you will get better at with practice.\u003c/p\u003e\n\n\u003cp\u003eMost importantly, don't feel like \u003cem\u003enot knowing everything by heart\u003c/em\u003e means you can't\nbe a data scientist. The greatest data scientists we know are constantly admitting what they\ndon't know, finding the latest news, using the answer they found and moving on.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-researching-html-elements\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-researching-html-elements\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-researching-html-elements/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"researching-html-elements"},{"id":440678,"title":"Separating Content and Presentation","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-separating-content-and-presentation\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-separating-content-and-presentation/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou now know what HTML is and have explored a properly-formatted HTML document. That said, if you look at the HTML pages thus far, you can't help but notice that they look a little plain. To make them more attractive (and responsive), you can use Cascading Style Sheets or CSS!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIdentify the separation of content and presentation\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eExplain the role of CSS\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIdentify the Separation of Content and Presentation\u003c/h2\u003e\n\n\u003cp\u003eHTML lets you mark-up your content with semantic \u003cem\u003estructure\u003c/em\u003e. It forms the skeleton of your web page. It would be great to be able to say, \"Browser, when you see a \u003ccode\u003ep\u003c/code\u003e tag with \u003ccode\u003eid\u003c/code\u003e of \u003ccode\u003emy-name\u003c/code\u003e, make the first letter be huge!\" Or, to get your readers' attention, you might say, \"Browser, if you see \u003cem\u003eany\u003c/em\u003e tag with a \u003ccode\u003eclass\u003c/code\u003e of \u003ccode\u003ewarning\u003c/code\u003e surround it with a red box!\" HTML authors believe that \u003cem\u003ecreating\u003c/em\u003e marked-up documents and \u003cem\u003estyling\u003c/em\u003e marked-up documents are entirely separate tasks. They see a difference between writing \u003cem\u003econtent\u003c/em\u003e (the data within the HTML document) and specifying \u003cem\u003epresentation\u003c/em\u003e, the rules for displaying the rendered elements.\u003c/p\u003e\n\n\u003ch2\u003eExplain the Role of CSS\u003c/h2\u003e\n\n\u003cp\u003eCSS, or \"Cascading Style Sheets,\" tells you how to write rules that define how browsers will present HTML. Rules in CSS won't look like HTML and they usually live in a file apart from our HTML file.\u003c/p\u003e\n\n\u003cp\u003eCSS handles all of the ways you want to customize your content's look and feel from margins and colors, to column-based layout!\u003c/p\u003e\n\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cssguidelin.es/#the-separation-of-concerns\"\u003eCSS Guidelines: The Separation of Concerns\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.csszengarden.com/\"\u003eCSS Zen Garden\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWeb developers separate the content of our HTML pages from their presentation, which they style with CSS. By keeping the two separate, you not only utilize the best tools for each job, but you can change code for one without disturbing the code for the other.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-separating-content-and-presentation\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-separating-content-and-presentation\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-separating-content-and-presentation/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"separating-content-and-presentation"},{"id":440681,"title":"Intro to CSS","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-intro-to-css\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-intro-to-css/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eBrowsers combine the content (HTML) and presentation (CSS) layers to\ndisplay web pages.  CSS is the language for \u003cem\u003estyling\u003c/em\u003e web pages.\u003c/p\u003e\n\n\u003cp\u003eCSS instructions live apart from the HTML elements and have a different\nlook and feel (\"syntax\"). CSS directives give web pages their specific look and\nfeel.  If you have ever been impressed by how a website can be displayed on a\ndesktop browser while the same content looks great on a mobile device, you have\nCSS to thank for it!\u003c/p\u003e\n\n\u003cp\u003eOne of the most amazing displays of the power of CSS is the\n\u003ca href=\"http://www.csszengarden.com/\"\u003eCSS Zen Garden\u003c/a\u003e where people take the \u003cem\u003eexact\nsame\u003c/em\u003e HTML page and use CSS to create \u003cem\u003ewildly\u003c/em\u003e different pages. Take a look!\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-intro-to-css/canvas/images/zengarden1.png\" alt=\"CSS Zen Garden 1\" title=\"A long-scrolling single-page CSS Zen Garden design\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-intro-to-css/canvas/images/zengarden2.png\" alt=\"CSS Zen Garden 2\" title=\"An animated CSS, full-screen browser single-page style Zen Garden design\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-intro-to-css/canvas/images/zengarden3.png\" alt=\"CSS Zen Garden 3\" title=\"Blog-like CSS Zen Garden designs\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAll of the differences you see are due to CSS!\nAstounding, right!?\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eList the components of CSS\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDeclare CSS properties and values\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eRecognize The Differences Between HTML And CSS\u003c/h2\u003e\n\n\u003cp\u003eHTML and CSS play two different roles. When you write HTML, it's important to focus on structure, hierarchy, and meaning ‚Äî the \"marking-up\" of content. Questions in the mind of an HTML author are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIs it best to list these members' names with numbers or bullets?\u003c/li\u003e\n\u003cli\u003eDoes this menu belong in the navigation in the header?\u003c/li\u003e\n\u003cli\u003eShould this additional reference be an aside or a separate section?\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThese questions deal with structure, hierarchy, and meaning, which are concerns of the content layer (HTML).\u003c/p\u003e\n\n\u003cp\u003eWhen defining the presentation layer (CSS), here are the questions to ask\nyourself:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDo I want the header menu to be stationary or do I want it to scroll with the\nbrowser window?\u003c/li\u003e\n\u003cli\u003eHow do I want the content to display inside of a container? For example,\ndoes it fill the whole area, edge-to-edge? Is there white space around the content and/or the container?\u003c/li\u003e\n\u003cli\u003eHow large should an \u003ccode\u003eH1\u003c/code\u003e be relative to an \u003ccode\u003eH2\u003c/code\u003e? What about an \u003ccode\u003eH3\u003c/code\u003e?\u003c/li\u003e\n\u003cli\u003eWhat properties should links have? Underline or no underline?\nWhich color for the normal state versus the hover state? Should the visited link state be different?\u003c/li\u003e\n\u003cli\u003eHow should the content appear when on a desktop machine versus a\nmobile device?\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAs you ask yourself these questions, your focus is on the \u003cem\u003eaesthetic\u003c/em\u003e quality\nof the page. For each bit of \u003cem\u003econtent\u003c/em\u003e, we can define a \u003cstrong\u003epresentation rule\u003c/strong\u003e\nthat will change the way the HTML is displayed.\u003c/p\u003e\n\n\u003ch2\u003eList the Components of CSS\u003c/h2\u003e\n\n\u003cp\u003eFor each \u003cstrong\u003epresentation rule\u003c/strong\u003e, there are 3 things to keep in mind:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat is the specific HTML we want to style?\u003c/li\u003e\n\u003cli\u003eWhat are the qualities we want to modify (e.g. the properties of text\nin a paragraph)?\u003c/li\u003e\n\u003cli\u003e\n\u003cem\u003eHow\u003c/em\u003e do we want to modify the qualities of the element (e.g. font\nfamily, font color, font size, line height, letter spacing, etc.)?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eOnce you've decided what to modify and how we can start writing CSS rules.\u003c/p\u003e\n\n\u003cp\u003eCSS \u003cstrong\u003eselectors\u003c/strong\u003e are a way of declaring which HTML elements you wish to style.\nSelectors can appear a few different ways:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe type of HTML element(\u003ccode\u003eh1\u003c/code\u003e, \u003ccode\u003ep\u003c/code\u003e, \u003ccode\u003ediv\u003c/code\u003e, etc.)\u003c/li\u003e\n\u003cli\u003eThe value of an element's \u003ccode\u003eid\u003c/code\u003e or \u003ccode\u003eclass\u003c/code\u003e (\u003ccode\u003e\u0026lt;p id='idvalue'\u0026gt;\u0026lt;/p\u0026gt;\u003c/code\u003e, \u003ccode\u003e\u0026lt;p class='classname'\u0026gt;\u0026lt;/p\u0026gt;\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003eThe value of an element's attributes (\u003ccode\u003evalue=\"hello\"\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003eThe element's relationship with surrounding elements (a \u003ccode\u003ep\u003c/code\u003e within an element\nwith class of \u003ccode\u003e.infobox\u003c/code\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFor example, if you want the body of the page to have a black background, your\nselector syntax may be \u003ccode\u003ehtml\u003c/code\u003e or \u003ccode\u003ebody\u003c/code\u003e. For anchors, your selector would be\n\u003ccode\u003ea\u003c/code\u003e. A few more examples are listed below:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"css\"\u003e/*\nThe CSS comment syntax is text between \"slash-star\" and \"star-slash\"\n*/\n\n/*\nselects all anchor tag elements in the document (e.g. \u0026lt;a href=\"page-link.html\"\u0026gt;Page Link\u0026lt;/a\u0026gt;)\n*/\na\n\n/*\nselects all headers of type h3 in the document (e.g. \u0026lt;h3\u0026gt;Type selectors\u0026lt;/h3\u0026gt;)\n*/\nh3\n\n/*\nselects all paragraph elements in the document (e.g. \u0026lt;p\u0026gt;Type selectors are used\nto...\u0026lt;/p\u0026gt;)\n*/\np\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors\"\u003eType selectors documentation\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe element type \u003ccode\u003eclass\u003c/code\u003e is a commonly used selector. Class selectors are used\nto \u003cstrong\u003eselect all elements that share a given class name\u003c/strong\u003e. The class selector\nsyntax is: \u003ccode\u003e.classname\u003c/code\u003e. Prefix the class name with a '.'(period).\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"css\"\u003e/*\nselect all elements that have the 'important-topic' classname (e.g. \u0026lt;h1 class='important-topic'\u0026gt;\nand \u0026lt;h1 class='important-topic'\u0026gt;)\n*/\n.important-topic\n\n/*\nselect all elements that have the 'welcome-message' classname (e.g. \u0026lt;p class='helpful-hint'\u0026gt;\nand \u0026lt;p class='helpful-hint'\u0026gt;)\n*/\n.helpful-hint\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eYou can also use the \u003ccode\u003eid\u003c/code\u003e selector to style elements. However, \u003cstrong\u003ethere should\nbe only one element with a given id\u003c/strong\u003e in an HTML document. This can make\nstyling with the ID selector ideal for one-off styles. The \u003ccode\u003eid\u003c/code\u003e selector syntax\nis: \u003ccode\u003e#idvalue\u003c/code\u003e. Prefix the id attribute of an element with a \u003ccode\u003e#\u003c/code\u003e (which is\ncalled \"octothorpe,\" \"pound sign\", or \"hashtag\").\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"css\"\u003e/*\nselects the HTML element with the id 'main-header' (e.g. \u0026lt;h1 id='main-header'\u0026gt;)\n*/\n#main-header\n\n/*\nselects the HTML element with the id 'welcome-message' (e.g. \u0026lt;p id='welcome-message'\u0026gt;)\n*/\n#welcome-message\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/ID_selectors\"\u003eid selectors documentation\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003eDeclare CSS Properties and Values\u003c/h2\u003e\n\n\u003cp\u003eEach element has a list of qualities that can be styled.  CSS \"property\" names\nidentify those qualities. For text styling, examples of property names include\ntext \u003ccode\u003ecolor\u003c/code\u003e, \u003ccode\u003etext-align\u003c/code\u003e and \u003ccode\u003eline-height\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eCSS Property Values are directly related to property names. If you are working\nwith the \u003ccode\u003ecolor\u003c/code\u003e property, the value could be a named color such as \u003ccode\u003ered\u003c/code\u003e, or\n\u003ccode\u003e#660000\u003c/code\u003e. Some properties have their values set with words, others with\nnumbers, and some can take both.\u003c/p\u003e\n\n\u003cp\u003eA CSS property name with a CSS property value is a \u003cstrong\u003eCSS declaration\u003c/strong\u003e.\nTo apply a CSS declaration like \u003ccode\u003ecolor: blue\u003c/code\u003e to a specific HTML\nelement, you need to combine your CSS declaration with a CSS selector. The\nassociation between one or more CSS declarations and a CSS selector is called a\n\u003cstrong\u003eCSS declaration block\u003c/strong\u003e. CSS declarations (one or more) that applied to a\nspecific selector are wrapped by curly braces (\u003ccode\u003e{ }\u003c/code\u003e).  Each declaration inside\na declaration block \u003cstrong\u003emust\u003c/strong\u003e be separated by a semi-colon (\u003ccode\u003e;\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eBelow is a sample CSS declaration block.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"css\"\u003eselector {\n  color: blue;\n}\n/*\nThis is a css declaration for a selector\n'color' is a property name and 'blue' is a css property value\n!!!!! CSS declarations must end with a semi-colon (;) !!!!!\n*/\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eHere's a more complete example declaration block.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"css\"\u003e/*\nThe CSS declaration block below:\n* Will apply to all `h1` elements\n* Will change the text color to blue\n* Will set the font family to Georgia\n*/\nh1 {\n  color: blue;\n  font-family: Georgia;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWith the combination of HTML and CSS, you are able to define content, structure, and style for websites. In this lesson, you learned about the components of CSS and how to declare CSS properties and values in declaration blocks. For example, you can use a CSS selector like \u003ccode\u003eh1\u003c/code\u003e or \u003ccode\u003ep\u003c/code\u003e paired with a declaration block to change the display of that element.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-intro-to-css\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-intro-to-css\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-intro-to-css/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"intro-to-css"},{"id":440682,"title":"Quiz: HTML and CSS","type":"Quizzes::Quiz","indent":2,"locked":false,"assignmentExportId":"g30ba60ab4f0e0e44b209edf491e6c6e3","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"min_score","requiredPoints":3.0,"completed":false,"content":"","exportId":"g3aaa2419a0e91e48f5519efee68b4ad8"},{"id":440683,"title":"CSS Code Along","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-css-code-along\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-css-code-along/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIt's time to see some CSS code in action. \u003ca href=\"https://codepen.io/\"\u003eCodepen\u003c/a\u003e is a great tool to easily test HTML and CSS code that you'll see in practice here.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Codepen to preview and modify HTML and CSS files\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eComment and uncomment CSS and HTML\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCode Example HTML Structure\u003c/h2\u003e\n\n\u003cp\u003eThis \u003ca href=\"https://codepen.io/curiositypaths/pen/WddzQM?editors=1100\"\u003ePen\u003c/a\u003e (saved Codepen document) contains an HTML document with the following structure:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eA \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body\"\u003e\u003ccode\u003e\u0026lt;body\u0026gt;\u003c/code\u003e\u003c/a\u003e element (root of the html content. In Codepen you will not see a body tag, it's implicitly present and wraps all the HTML content)\u003c/li\u003e\n\u003cli\u003eAn \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article\"\u003e\u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e\u003c/a\u003e tag to define our content as self-contained unit (e.g. blog post, newspaper article)\u003c/li\u003e\n\u003cli\u003eAn \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements\"\u003e\u003ccode\u003e\u0026lt;h1\u0026gt;\u003c/code\u003e\u003c/a\u003e tag to wrap the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e's header text\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p\"\u003e\u003ccode\u003e\u0026lt;p\u0026gt;\u003c/code\u003e\u003c/a\u003e tags to wrap the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e's unstructured text\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul\"\u003e\u003ccode\u003e\u0026lt;ul\u0026gt;\u003c/code\u003e\u003c/a\u003e tags to represent unordered lists\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li\"\u003e\u003ccode\u003e\u0026lt;li\u0026gt;\u003c/code\u003e\u003c/a\u003e tags to wrap each list item\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCode Example CSS Structure\u003c/h2\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://codepen.io/curiositypaths/pen/WddzQM?editors=1100\"\u003ePen\u003c/a\u003e also includes commented-out CSS Code to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eSet the background of the \u003ccode\u003e\u0026lt;body\u0026gt;\u003c/code\u003e element (whole document) to \u003ccode\u003e#00b3e6\u003c/code\u003e (light blue)\u003c/li\u003e\n\u003cli\u003eSets the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e element width to \u003ccode\u003e700px\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eCenters the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e element\u003c/li\u003e\n\u003cli\u003eSets the font family of the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e element to \u003ccode\u003eHelvetica Neue\u003c/code\u003e. Alternative fonts are provided in the event \u003ccode\u003eHelvetica Neue\u003c/code\u003e is not available on your computer\u003c/li\u003e\n\u003cli\u003eSet the background of the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e element to \u003ccode\u003ewhite\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eAdd 30px of white space to the perimeter of the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eSet the \u003ccode\u003efont-size\u003c/code\u003e to \u003ccode\u003e22px\u003c/code\u003e for the element with \u003ccode\u003eid\u003c/code\u003e \u003ccode\u003emain-header\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eSet the \u003ccode\u003efont-style\u003c/code\u003e to \u003ccode\u003eitalic\u003c/code\u003e for elements containing the class \u003ccode\u003eperspective-questions\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCode Along Instructions\u003c/h2\u003e\n\n\u003cp\u003eOpen the \u003ca href=\"https://codepen.io/curiositypaths/pen/WddzQM?editors=1100\"\u003ePen\u003c/a\u003e in a separate browser tab to follow the code along instructions. \u003c/p\u003e\n\n\u003cp\u003eAll the CSS code you need to successfully modify the page is already included but commented out. All you need to do is uncomment all the \u003ccode\u003eCSS declarations\u003c/code\u003e (\u003ccode\u003eproperty-name\u003c/code\u003e:\u003ccode\u003evalue\u003c/code\u003e) one-by-one.\u003c/p\u003e\n\n\u003ch2\u003ePen Screenshot\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-css-code-along/master/images/codepen.jpeg\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eUnstyled HTML Document Screenshot\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-css-code-along/master/images/unstyled-codepen.jpeg\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eStyled HTML Document Screenshot\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-css-code-along/master/images/styled-codepen.jpeg\" width=\"1050\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eCSS Declarations Uncommenting Steps\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-css-code-along/master/images/css-code-codepen.jpg\" width=\"1050\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eAwesome! In this code along you got to preview and practice a standard web development environment and modify CSS code! Specifically, you used Codepen to modify HTML and CSS files. You also learned how commenting/uncommenting works in CSS and HTML!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-css-code-along\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-css-code-along\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-css-code-along/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"css-code-along"},{"id":440685,"title":"My Little Rainbow","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-my-little-rainbow-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-my-little-rainbow-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you're going to make a rainbow with HTML \u003ccode\u003e\u0026lt;div\u0026gt;\u003c/code\u003e elements. Through this process, you'll learn about HTML elements, CSS styling, CSS selectors, how color works in CSS and importing stylesheets.  That might sound like a lot but it isn't.\u003c/p\u003e\n\n\u003cp\u003eBefore you start, here's some basic info about HTML and CSS. Skip to \u003ca href=\"#making-a-rainbow\"\u003eMaking a Rainbow\u003c/a\u003e if you feel comfortable enough with HTML and CSS.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the purpose of IDs in HTML\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eAdd ID elements to HTML tags\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eSelect and style HTML elements with CSS\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eHTML Basics\u003c/h2\u003e\n\n\u003cp\u003eHyper Text Markup Language, or HTML, is a way to demarcate a document into different parts. Each part is \u003cem\u003emarked\u003c/em\u003e by elements (using tags). Each element has its own special connotation that the browser uses to \u003cem\u003erender\u003c/em\u003e the HTML document. Use this \u003ca href=\"https://web.stanford.edu/group/csp/cs21/htmlcheatsheet.pdf\"\u003echeat sheet\u003c/a\u003e on HTML elements for guidance.\u003c/p\u003e\n\n\u003ch2\u003eElements\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eAll begin with \u003ccode\u003e\u0026lt;\u003c/code\u003e and end with \u003ccode\u003e\u0026gt;\u003c/code\u003e, e.g., \u003ccode\u003e\u0026lt;div\u0026gt;\u003c/code\u003e (this last part is a tag).\u003c/li\u003e\n\u003cli\u003eMost have an opening tag such as \u003ccode\u003e\u0026lt;div\u0026gt;\u003c/code\u003e and a closing tag \u003ccode\u003e\u0026lt;/div\u0026gt;\u003c/code\u003e.\n\n\u003cul\u003e\n\u003cli\u003eThe \u003ccode\u003e/\u003c/code\u003e indicates to the browser that that tag is a closing tag.\u003c/li\u003e\n\u003cli\u003eThe element is everything between the tags and the tags themselves.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSome tags are self-closing like the line break element \u003ccode\u003e\u0026lt;br\u0026gt;\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eElements can have IDs and classes to aid the browser in finding specific tags.\n\n\u003cul\u003e\n\u003cli\u003eMust begin with a letter A-Z or a-z.\u003c/li\u003e\n\u003cli\u003eCan be followed by: letters (\u003ccode\u003eA-Za-z\u003c/code\u003e), digits (\u003ccode\u003e0-9\u003c/code\u003e), hyphens (\u003ccode\u003e-\u003c/code\u003e), and underscores (\u003ccode\u003e_\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003eIDs \u003cstrong\u003ecan\u003c/strong\u003e only be used once per page, e.g.: \u003ccode\u003e\u0026lt;div id=\"this-special-div\"\u0026gt;\u0026lt;/div\u0026gt;\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eClasses can be used as many times as you want, e.g.: \u003ccode\u003e\u0026lt;div class=\"a-less-special-div\"\u0026gt;\u0026lt;/div\u0026gt;\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eElements nested inside other elements are called children.\n\n\u003cul\u003e\n\u003cli\u003eChildren inherit attributes from their parents.\u003c/li\u003e\n\u003cli\u003eDon't nest everything. \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eElements next to one another are siblings.\n\n\u003cul\u003e\n\u003cli\u003eSiblings do not inherit from one another but are important for selecting in CSS.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHere is an example of element relations:\n\u003ccode\u003ehtml\n\u0026lt;div\u0026gt;  \u0026lt;!-- the parent element --\u0026gt;\n  \u0026lt;p\u0026gt;\u0026lt;/p\u0026gt;  \u0026lt;!-- the first sibling element/the first child--\u0026gt;\n  \u0026lt;p\u0026gt;\u0026lt;/p\u0026gt;  \u0026lt;!-- the second sibling element/the second child --\u0026gt;\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2\u003eCSS Basics\u003c/h2\u003e\n\n\u003cp\u003eCascading Style Sheets, or CSS, is a language created to style an HTML document by telling the browser how specific elements should look. CSS does this by selecting elements based on their tag, ids, classes, or all of the above. The reason for CSS is the separation of concerns. You want HTML only to be concerned with how it displays and demarcates information, and we let CSS worry about how to make that information look pretty.\u003c/p\u003e\n\n\u003ch2\u003eCSS selectors\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eThey select elements to assign them styles.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e*\u003c/code\u003e (wildcard) selects every element.\u003c/li\u003e\n\u003cli\u003eAn element, such as \u003ccode\u003ediv\u003c/code\u003e, will select all elements of that type.\u003c/li\u003e\n\u003cli\u003eThey select an id like \u003ccode\u003e#some-id\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eClasses are selected like this \u003ccode\u003e.some-class\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eTo select all children elements of a parent do something like this \u003ccode\u003ediv p\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eTo select multiple different elements separate them by commas like this \u003ccode\u003ediv, p, a\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHere's an example of CSS styling:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"CSS\"\u003e* {\n  color: red;  /* color in CSS refers to font color */\n}  /* all elements will have red font */\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eMaking a Rainbow\u003c/h2\u003e\n\n\u003cp\u003eFirst off make sure you have \u003ca href=\"https://github.com/learn-co-curriculum/dsc-my-little-rainbow-lab\"\u003eforked\u003c/a\u003e and cloned this repo. Next, create a new branch, and switch to it; it's \u003ccode\u003egit checkout -b your_solution_branch_name\u003c/code\u003e in case you forgot.\u003c/p\u003e\n\n\u003cp\u003eIn that directory, you'll see three files. \u003ccode\u003eindex.html\u003c/code\u003e, \u003ccode\u003emain.css\u003c/code\u003e, and this \u003ccode\u003eREADME.md\u003c/code\u003e.  Open them in your text editor via your command line.  Also, open \u003ccode\u003eindex.html\u003c/code\u003e in your browser; if everything is working correctly you should see a white page. Good job!\u003c/p\u003e\n\n\u003ch2\u003eMaking the Divs Visible\u003c/h2\u003e\n\n\u003cp\u003eIf you use the inspector or look at the file in your text editor, you'll see that the basic file structure is there.  So why can't we see anything?!?!?  That's because the divs have no styling on them right now.  And that's because we never told the browser to include a CSS file that would apply any styles. \u003c/p\u003e\n\n\u003cp\u003eLet's fix this by adding the stylesheet to the \u003ccode\u003ehead\u003c/code\u003e like so,\n\u003ccode\u003eHTML\n\u0026lt;head\u0026gt;\n... \n  \u0026lt;link rel=\"stylesheet\" type=\"text/css\" href=\"main.css\"\u0026gt;\n...\n\u0026lt;/head\u0026gt;\n\u003c/code\u003e\nThe link is a self-closing tag that will create a relative path with the \u003ccode\u003ehref\u003c/code\u003e attribute.  A relative path means the browser knows that the \u003ccode\u003emain.css\u003c/code\u003e file is in the same place as \u003ccode\u003eindex.html\u003c/code\u003e.  The \u003ccode\u003ehead\u003c/code\u003e is a hidden part of the page that tells the browser where to find any other files it needs to display the page correctly, the \u003ccode\u003etitle\u003c/code\u003e for the tab, and any other possible important information.\u003c/p\u003e\n\n\u003cp\u003eNow if you refresh the \u003ccode\u003eindex.html\u003c/code\u003e page in your browser you should see an ugly black rainbow.  Gerd Jerb!\u003c/p\u003e\n\n\u003cp\u003eOkay so you've got the basic outline because in the \u003ccode\u003emain.css\u003c/code\u003e all the \u003ccode\u003ediv\u003c/code\u003e elements were selected and styled, but the colors are wrong because the default border color is black.  To fix this we need to learn a little bit more about colors, because while we could just set \u003ccode\u003ecolor: red;\u003c/code\u003e we should learn how to make colors without words.  We should just use numbers and not just any set of numbers, but numbers with base pair of 16 rather than base pair of 10 like we use every day.  These numbers are called hexadecimal numbers and we can use them to make colors.\u003c/p\u003e\n\n\u003ch2\u003eSome Stuff You Should Know About Hex Colors (and Web Colors in General).\u003c/h2\u003e\n\n\u003cp\u003eHex colors begin with \u003ccode\u003e#\u003c/code\u003e and are followed by, generally, 6 numbers, but some of these numbers are actually letters.  The lowest single-digit number in hex is 0 and the highest single-digit number is f.  This table might help to visualize what we mean by this.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eDecimal Numbers:      0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16\nHexadecimal Numbers:  0, 1, 2, 3, 4, 5, 6, 7, 8, 9,  a,  b,  c,  d,  e,  f, 10\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eHex colors work by creating Red, Green, Blue (RGB) values.  Traditional RGB colors are on a scale of 0 to 255 for each of the three colors in the spectrum.  Hex colors are considered true colors since it can represent ~16 million colors, but your eye can only see 10 million of those.  So \u003ccode\u003e#000000\u003c/code\u003e translates to black since 0 reds, 0 green, 0 blues represents the absence of all colors, and \u003ccode\u003e#ffffff\u003c/code\u003e makes white since 255 reds, 255 greens, and 255 blues is the maximum of each of the colors.  \u003c/p\u003e\n\n\u003cp\u003eHex colors can be shortened to just three numbers when each RGB value is the same for each digit. So \u003ccode\u003e#11dd99\u003c/code\u003e can be written as \u003ccode\u003e#1d9\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eColoring the Rainbow\u003c/h2\u003e\n\n\u003cp\u003eTo get roygbiv onto our rainbow we'll need seven hex colors.\nRed: \u003ccode\u003e#f00\u003c/code\u003e; Orange: \u003ccode\u003e#ffa500\u003c/code\u003e; Yellow: \u003ccode\u003e#ff0\u003c/code\u003e; Green: \u003ccode\u003e#00bc3f\u003c/code\u003e; Blue: \u003ccode\u003e#06f\u003c/code\u003e; Indigo: \u003ccode\u003e#8a2be2\u003c/code\u003e; Violet: \u003ccode\u003e#d300c9\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eWith those colors, all we have to do next is select each div individually.  That is a perfect use for ids since they're meant to style one specific element only.  So that means we'll need to add an id for each div, so a logical name for each div would be the color that they have to be.  It could be something random, but good names make for semantic code. So let's give the outermost div the id red. We'll do this like so.\n\u003ccode\u003ehtml\n\u0026lt;div id=\"red\"\u0026gt;\n  ...\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd to give that id some CSS attributes we'll go into \u003ccode\u003emain.css\u003c/code\u003e, select the id, and mark its color as red like this.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e#red { /* this selects any elements with the red id */\n  border-top-color: #f00;\n}\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eSo to make sure the rainbow isn't so monochromatic you now need to repeat the above steps with the final six colors of the rainbow, and when you do you should have something like \u003ca href=\"http://i0.kym-cdn.com/photos/images/original/000/118/087/2468904593_6a7c692ab6.jpg\"\u003ethis\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWell done! In this lab, you independently modified HTML and CSS files in order to update a webpage. Specifically, you got some experience understanding and working with HTML IDs. You also used CSS to style HTML elements.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-my-little-rainbow-lab\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-my-little-rainbow-lab\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-my-little-rainbow-lab/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"my-little-rainbow"},{"id":440686,"title":"An Introduction to Web Scraping and Beautiful Soup","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-web-scraping-with-beautiful-soup\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-with-beautiful-soup\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-with-beautiful-soup/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you've gotten a taste of HTML and CSS, it's time to reverse engineer that knowledge to extract data from the web. In this lesson, you'll learn how to use Beautiful Soup, a Python package used for web scraping. You'll also get some hands-on scraping practice.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the DOM and its relationship to HTML\u003c/li\u003e\n\u003cli\u003eSelect specific elements from HTML using Beautiful Soup\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g929713dd1af9fc2b9f950bea74bfed91"},{"id":440687,"title":"Web Scraping In Practice","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-web-scraping-in-practice\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-in-practice\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-in-practice/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you've gotten a brief introduction to Beautiful Soup and how to select various elements from a web page, it's time to practice scraping a website. You'll start to see that scraping is a dynamic process that involves investigating the web page(s) at hand and developing scripts tailored to those structures.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eNavigate HTML documents using Beautiful Soup's children and sibling relations\u003c/li\u003e\n\u003cli\u003eSelect specific elements from HTML using Beautiful Soup\u003c/li\u003e\n\u003cli\u003eUse regular expressions to extract items with a certain pattern within Beautiful Soup\u003c/li\u003e\n\u003cli\u003eDetermine the pagination scheme of a website and scrape multiple pages\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g1189239c8242ab899aef150f3a38ad91"},{"id":440689,"title":"Web Scraping - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-web-scraping-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you've seen a more extensive example of developing a web scraping script, it's time to further practice and formalize that knowledge by writing functions to parse specific pieces of information from the web page and then synthesizing these into a larger loop that will iterate over successive web pages in order to build a complete dataset.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eNavigate HTML documents using Beautiful Soup's children and sibling relations\u003c/li\u003e\n\u003cli\u003eSelect specific elements from HTML using Beautiful Soup\u003c/li\u003e\n\u003cli\u003eUse regular expressions to extract items with a certain pattern within Beautiful Soup\u003c/li\u003e\n\u003cli\u003eDetermine the pagination scheme of a website and scrape multiple pages\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g68ba82ad814827072a596a16f5a23162"},{"id":440690,"title":"üîÑ Quiz: CSS and Web Scraping","type":"Quizzes::Quiz","indent":2,"locked":false,"assignmentExportId":"gf93649a5cfda90baeb0bcebe8a9fe157","questionCount":10,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":10.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"min_score","requiredPoints":6.0,"completed":false,"content":"","exportId":"g579c15aeb78a7b141ee969ff3c3fb8d7"},{"id":440696,"title":"Scraping Images","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-scraping-images\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-scraping-images\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-scraping-images/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou've definitely started to hone your skills at scraping now! With that, let's look at another data format you're apt to want to pull from the web: images! In this lesson, you'll see how to save images from the web as well as display them in a Pandas DataFrame for easy perusal!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eSelect specific elements from HTML using Beautiful Soup\u003c/li\u003e\n\u003cli\u003eIdentify and scrape images from a web page\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g0f436701a06fd6779fe89c2c2e38d605"},{"id":440697,"title":"Scraping Concerts - Lab","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-scraping-concerts-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-scraping-concerts-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-scraping-concerts-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you've seen how to scrape a simple website, it's time to again practice those skills on a full-fledged site!\u003c/p\u003e\n\n\u003cp\u003eIn this lab, you'll practice your scraping skills on an online music magazine and events website called Resident Advisor.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a full scraping pipeline that involves traversing over many pages of a website, dealing with errors and storing data\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gdba3a83b7a603fbad59a3cb201a527f5"},{"id":440699,"title":"HTML, CSS and Web Scraping -  Recap","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-recap-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-recap-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you learned a lot about web pages and how to exploit their structure for your own web scraping purposes. Take this opportunity to briefly review some of the key takeaways from the section.\u003c/p\u003e\n\n\u003ch2\u003eHTML\u003c/h2\u003e\n\n\u003cp\u003eTo start this section, you investigated the basic structure of an HTML page and saw both the nested structure as well as some of the basic tags that you later leveraged for web scraping. This included \u003ccode\u003ea\u003c/code\u003e tags for links and \u003ccode\u003ediv\u003c/code\u003e tags which act as general containers for other HTML code blocks.\u003c/p\u003e\n\n\u003cp\u003eIf you are interested in taking a deeper dive into the world of HTML, check out the additional HTML lessons in the Appendix which cover more advanced topics. \u003c/p\u003e\n\n\u003ch2\u003eCSS\u003c/h2\u003e\n\n\u003cp\u003eAfter taking an initial look at HTML, you then saw the role CSS plays in styling a web page. You learned that HTML deals with content while CSS deals with style. There is certainly more you could learn regarding CSS but an important take away is that CSS selectors can also be used while web scraping. For example, you can select a tag with \u003ccode\u003eid\u003c/code\u003e or \u003ccode\u003eclass\u003c/code\u003e selector.\u003c/p\u003e\n\n\u003ch2\u003eBeautiful Soup\u003c/h2\u003e\n\n\u003cp\u003eAfter an initial exploration into web development, you then returned to Python and used the requests and Beautiful Soup packages in order to extract data from the web. This was also a great chance for you to practice your data wrangling skills as you often will have to navigate nested data structures and clean messy data, removing spaces, using regular expressions and converting data types. \u003c/p\u003e\n\n\u003ch2\u003ePrecautions\u003c/h2\u003e\n\n\u003cp\u003eRemember to practice caution when scraping websites. Surfing the web at superhuman speeds will get you banned from many domains and may violate the terms \u0026amp; conditions of many websites that require you to login. As such, there are a few considerations you should take along your way.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAre there terms and conditions for using the website?\u003c/li\u003e\n\u003cli\u003eTest your scraping bot on in small samples to debug before scaling to hundreds, thousands or millions of requests.\u003c/li\u003e\n\u003cli\u003eStart thinking about your IP address: getting blacklisted from a website is no fun. Consider using a VPN.\u003c/li\u003e\n\u003cli\u003eSlow your bot down! Add delays along the way with the time package. Specifically, time.sleep(seconds) adds wait time in a program.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eOther Scraping Tools\u003c/h2\u003e\n\n\u003cp\u003eWhile Beautiful Soup is a powerful go-to tool for scraping the web, remember that there are other tools such as Selenium and Scrapy that have their own advantages and disadvantages. While Beautiful Soup is apt to be your primary scraping tool, for now, it is worth noting that there are other options should you feel like you need additional resources such as interacting with dynamic javascript-based websites.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eThis was an exciting section delving into the world of web scraping! There's always a plethora of information to be mined from the web so go out there and get scraping!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-html-css-scraping-recap-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-html-css-scraping-recap-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-recap-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"html-css-and-web-scraping-recap-2"}]},{"id":45619,"name":"üèÜ Milestones","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"g15c954d4a30ba76f0a45a01c4d263387","items":[{"id":439834,"title":"Practice Checkpoint","type":"Assignment","indent":1,"locked":true,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":"2022-08-10T10:30:00-04:00","lockAt":"2022-08-10T11:00:00-04:00","unlockAt":null,"requirement":null,"completed":false,"exportId":"g15ef25f2406bc6da2e03152a3372b621"},{"id":439837,"title":"Data Serialization Formats Checkpoint","type":"Assignment","indent":1,"locked":true,"submissionTypes":"an external tool","graded":true,"pointsPossible":5.0,"dueAt":"2022-08-12T10:30:00-04:00","lockAt":"2022-08-15T11:59:00-04:00","unlockAt":null,"requirement":null,"completed":false,"exportId":"g35575c470c44750e4f7950b33812e1dd"},{"id":439848,"title":"Data Cleaning with Pandas Checkpoint","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"","exportId":"g8f522c1d81e2ab4f41d7ae4e8fbeea45"},{"id":439853,"title":"SQL Checkpoint","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"","exportId":"g61496e3b4859571a2a4a6833958223a4"},{"id":439872,"title":"PHASE 1 PROJECT","type":"ContextModuleSubHeader","indent":0,"locked":false},{"id":439876,"title":"Project Overview","type":"ContextModuleSubHeader","indent":1,"locked":false},{"id":439886,"title":"Phase 1 Project Description","type":"WikiPage","indent":1,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-phase-1-project-v2-4\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-phase-1-project-v2-4\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-phase-1-project-v2-4/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eYou've made it all the way through the first phase of this course - take a minute to celebrate your awesomeness!\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-phase-1-project-v2-4/master/awesome.gif\" alt=\"awesome\"\u003e\u003c/p\u003e\n\u003cp\u003eNow you will put your new skills to use with a large end-of-Phase project!\u003c/p\u003e\n\u003cp\u003eIn this project description, we will cover:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#project-overview\"\u003e\u003cstrong\u003e\u003cem\u003eProject Overview:\u003c/em\u003e\u003c/strong\u003e\u003c/a\u003e the project goal, audience, and dataset\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#deliverables\"\u003e\u003cstrong\u003e\u003cem\u003eDeliverables:\u003c/em\u003e\u003c/strong\u003e\u003c/a\u003e the specific items you are required to produce for this project\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#grading\"\u003e\u003cstrong\u003e\u003cem\u003eGrading:\u003c/em\u003e\u003c/strong\u003e\u003c/a\u003e how your project will be scored\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#getting-started\"\u003e\u003cstrong\u003e\u003cem\u003eGetting Started:\u003c/em\u003e\u003c/strong\u003e\u003c/a\u003e guidance for how to begin your first project\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eProject Overview\u003c/h2\u003e\n\u003cp\u003eFor this project, you will use exploratory data analysis to generate insights for a business stakeholder.\u003c/p\u003e\n\u003ch3\u003eBusiness Problem\u003c/h3\u003e\n\u003cp\u003eMicrosoft sees all the big companies creating original video content and they want to get in on the fun. They have decided to create a new movie studio, but they don‚Äôt know anything about creating movies. You are charged with exploring what types of films are currently doing the best at the box office. You must then translate those findings into actionable insights that the head of Microsoft's new movie studio can use to help decide what type of films to create.\u003c/p\u003e\n\u003ch3\u003eThe Data\u003c/h3\u003e\n\u003cp\u003eIn the folder \u003ccode\u003ezippedData\u003c/code\u003e are movie datasets from:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.boxofficemojo.com/\"\u003eBox Office Mojo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.imdb.com/\"\u003eIMDB\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.rottentomatoes.com/\"\u003eRotten Tomatoes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.themoviedb.org/\"\u003eTheMovieDB\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.the-numbers.com/\"\u003eThe Numbers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eBecause it was collected from various locations, the different files have different formats. Some are compressed CSV (comma-separated values) or TSV (tab-separated values) files that can be opened using spreadsheet software or \u003ccode\u003epd.read_csv\u003c/code\u003e, while the data from IMDB is located in a SQLite database.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-phase-1-project-v2-4/master/movie_data_erd.jpeg\" alt=\"movie data erd\"\u003e\u003c/p\u003e\n\u003cp\u003eNote that the above diagram shows ONLY the IMDB data. You will need to look carefully at the features to figure out how the IMDB data relates to the other provided data files.\u003c/p\u003e\n\u003cp\u003eIt is up to you to decide what data from this to use and how to use it. If you want to make this more challenging, you can scrape websites or make API calls to get additional data. If you are feeling overwhelmed or behind, we recommend you use only the following data files:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eim.db.zip\u003c/code\u003e\n\u003cul\u003e\n\u003cli\u003eZipped SQLite database (you will need to unzip then query using SQLite)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003emovie_basics\u003c/code\u003e and \u003ccode\u003emovie_ratings\u003c/code\u003e tables are most relevant\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebom.movie_gross.csv.gz\u003c/code\u003e\n\u003cul\u003e\n\u003cli\u003eCompressed CSV file (you can open without expanding the file using \u003ccode\u003epd.read_csv\u003c/code\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eKey Points\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eYour analysis should yield three concrete business recommendations.\u003c/strong\u003e The ultimate purpose of exploratory analysis is not just to learn about the data, but to help an organization perform better. Explicitly relate your findings to business needs by recommending actions that you think the business (Microsoft) should take.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eCommunicating about your work well is extremely important.\u003c/strong\u003e Your ability to provide value to an organization - or to land a job there - is directly reliant on your ability to communicate with them about what you have done and why it is valuable. Create a storyline your audience (the head of Microsoft's new movie studio) can follow by walking them through the steps of your process, highlighting the most important points and skipping over the rest.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eUse plenty of visualizations.\u003c/strong\u003e Visualizations are invaluable for exploring your data and making your findings accessible to a non-technical audience. Spotlight visuals in your presentation, but only ones that relate directly to your recommendations. Simple visuals are usually best (e.g. bar charts and line graphs), and don't forget to format them well (e.g. labels, titles).\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eDeliverables\u003c/h2\u003e\n\u003cp\u003eThere are three deliverables for this project:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA \u003cstrong\u003enon-technical presentation\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eA \u003cstrong\u003eJupyter Notebook\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eA \u003cstrong\u003eGitHub repository\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eNon-Technical Presentation\u003c/h3\u003e\n\u003cp\u003eThe non-technical presentation is a slide deck presenting your analysis to business stakeholders.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e\u003cem\u003eNon-technical\u003c/em\u003e\u003c/strong\u003e does not mean that you should avoid mentioning the technologies or techniques that you used, it means that you should explain any mentions of these technologies and avoid assuming that your audience is already familiar with them.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003cem\u003eBusiness stakeholders\u003c/em\u003e\u003c/strong\u003e means that the audience for your presentation is Microsoft, not the class or teacher. Do not assume that they are already familiar with the specific business problem, but also do not explain to them what Microsoft is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe presentation describes the project \u003cstrong\u003e\u003cem\u003egoals, data, methods, and results\u003c/em\u003e\u003c/strong\u003e. It must include at least \u003cstrong\u003e\u003cem\u003ethree visualizations\u003c/em\u003e\u003c/strong\u003e which correspond to \u003cstrong\u003e\u003cem\u003ethree business recommendations\u003c/em\u003e\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWe recommend that you follow this structure, although the slide titles should be specific to your project:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eBeginning\n\u003cul\u003e\n\u003cli\u003eOverview\u003c/li\u003e\n\u003cli\u003eBusiness Understanding\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eMiddle\n\u003cul\u003e\n\u003cli\u003eData Understanding\u003c/li\u003e\n\u003cli\u003eData Analysis\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eEnd\n\u003cul\u003e\n\u003cli\u003eRecommendations\u003c/li\u003e\n\u003cli\u003eNext Steps\u003c/li\u003e\n\u003cli\u003eThank You\n\u003cul\u003e\n\u003cli\u003eThis slide should include a prompt for questions as well as your contact information (name and LinkedIn profile)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eYou will give a live presentation of your slides and submit them in PDF format on Canvas. The slides should also be present in the GitHub repository you submit with a file name of \u003ccode\u003epresentation.pdf\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eThe graded elements of the presentation are:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePresentation Content\u003c/li\u003e\n\u003cli\u003eSlide Style\u003c/li\u003e\n\u003cli\u003ePresentation Delivery and Answers to Questions\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSee the \u003ca href=\"#grading\"\u003eGrading\u003c/a\u003e section for further explanation of these elements.\u003c/p\u003e\n\u003cp\u003eFor further reading on creating professional presentations, check out:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/learn-co-curriculum/dsc-project-presentation-content\"\u003ePresentation Content\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/learn-co-curriculum/dsc-project-slide-design\"\u003eSlide Style\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJupyter Notebook\u003c/h3\u003e\n\u003cp\u003eThe Jupyter Notebook is a notebook that uses Python and Markdown to present your analysis to a data science audience.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e\u003cem\u003ePython and Markdown\u003c/em\u003e\u003c/strong\u003e means that you need to construct an integrated \u003ccode\u003e.ipynb\u003c/code\u003e file with Markdown (headings, paragraphs, links, lists, etc.) and Python code to create a well-organized, skim-able document.\n\u003cul\u003e\n\u003cli\u003eThe notebook kernel should be restarted and all cells run before submission, to ensure that all code is runnable in order.\u003c/li\u003e\n\u003cli\u003eMarkdown should be used to frame the project with a clear introduction and conclusion, as well as introducing each of the required elements.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003cem\u003eData science audience\u003c/em\u003e\u003c/strong\u003e means that you can assume basic data science proficiency in the person reading your notebook. This differs from the non-technical presentation.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAlong with the presentation, the notebook also describes the project \u003cstrong\u003e\u003cem\u003egoals, data, methods, and results\u003c/em\u003e\u003c/strong\u003e. It must include at least \u003cstrong\u003e\u003cem\u003ethree visualizations\u003c/em\u003e\u003c/strong\u003e which correspond to \u003cstrong\u003e\u003cem\u003ethree business recommendations\u003c/em\u003e\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eYou will submit the notebook in PDF format on Canvas as well as in \u003ccode\u003e.ipynb\u003c/code\u003e format in your GitHub repository.\u003c/p\u003e\n\u003cp\u003eThe graded elements for the Jupyter Notebook are:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eBusiness Understanding\u003c/li\u003e\n\u003cli\u003eData Understanding\u003c/li\u003e\n\u003cli\u003eData Preparation\u003c/li\u003e\n\u003cli\u003eData Analysis\u003c/li\u003e\n\u003cli\u003eVisualization\u003c/li\u003e\n\u003cli\u003eCode Quality\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSee the \u003ca href=\"#grading\"\u003eGrading\u003c/a\u003e section for further explanation of these elements.\u003c/p\u003e\n\u003ch3\u003eGitHub Repository\u003c/h3\u003e\n\u003cp\u003eThe GitHub repository is the cloud-hosted directory containing all of your project files as well as their version history.\u003c/p\u003e\n\u003cp\u003eThis repository link will be the project link that you include on your resume, LinkedIn, etc. for prospective employers to view your work. Note that we typically recommend that 3 links are highlighted (out of 5 projects) so don't stress too much about getting this one to be perfect! There will also be time after graduation for cosmetic touch-ups.\u003c/p\u003e\n\u003cp\u003eA professional GitHub repository has:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ccode\u003eREADME.md\u003c/code\u003e\n\u003cul\u003e\n\u003cli\u003eA file called \u003ccode\u003eREADME.md\u003c/code\u003e at the root of the repository directory, written in Markdown; this is what is rendered when someone visits the link to your repository in the browser\u003c/li\u003e\n\u003cli\u003eThis file contains these sections:\n\u003cul\u003e\n\u003cli\u003eOverview\u003c/li\u003e\n\u003cli\u003eBusiness Understanding\n\u003cul\u003e\n\u003cli\u003eInclude stakeholder and key business questions\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eData Understanding and Analysis\n\u003cul\u003e\n\u003cli\u003eSource of data\u003c/li\u003e\n\u003cli\u003eDescription of data\u003c/li\u003e\n\u003cli\u003eThree visualizations (the same visualizations presented in the slides and notebook)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConclusion\n\u003cul\u003e\n\u003cli\u003eSummary of conclusions including three relevant findings\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCommit history\n\u003cul\u003e\n\u003cli\u003eProgression of updates throughout the project time period, not just immediately before the deadline\u003c/li\u003e\n\u003cli\u003eClear commit messages\u003c/li\u003e\n\u003cli\u003eCommits from all team members (if a group project)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOrganization\n\u003cul\u003e\n\u003cli\u003eClear folder structure\u003c/li\u003e\n\u003cli\u003eClear names of files and folders\u003c/li\u003e\n\u003cli\u003eEasily-located notebook and presentation linked in the README\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eNotebook(s)\n\u003cul\u003e\n\u003cli\u003eClearly-indicated final notebook that runs without errors\u003c/li\u003e\n\u003cli\u003eExploratory/working notebooks (can contain errors, redundant code, etc.) from all team members (if a group project)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e.gitignore\u003c/code\u003e\n\u003cul\u003e\n\u003cli\u003eA file called \u003ccode\u003e.gitignore\u003c/code\u003e at the root of the repository directory instructs Git to ignore large, unnecessary, or private files\n\u003cul\u003e\n\u003cli\u003eBecause it starts with a \u003ccode\u003e.\u003c/code\u003e, you will need to type \u003ccode\u003els -a\u003c/code\u003e in the terminal in order to see that it is there\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eGitHub maintains a \u003ca href=\"https://github.com/github/gitignore/blob/master/Python.gitignore\"\u003ePython .gitignore\u003c/a\u003e that may be a useful starting point for your version of this file\u003c/li\u003e\n\u003cli\u003eTo tell Git to ignore more files, just add a new line to \u003ccode\u003e.gitignore\u003c/code\u003e for each new file name\n\u003cul\u003e\n\u003cli\u003eConsider adding \u003ccode\u003e.DS_Store\u003c/code\u003e if you are using a Mac computer, as well as project-specific file names\u003c/li\u003e\n\u003cli\u003eIf you are running into an error message because you forgot to add something to \u003ccode\u003e.gitignore\u003c/code\u003e and it is too large to be pushed to GitHub \u003ca href=\"https://medium.com/analytics-vidhya/tutorial-removing-large-files-from-git-78dbf4cf83a?sk=c3763d466c7f2528008c3777192dfb95\"\u003ethis blog post\u003c/a\u003e(friend link) should help you address this\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eYou wil submit a link to the GitHub repository on Canvas.\u003c/p\u003e\n\u003cp\u003eSee the \u003ca href=\"#grading\"\u003eGrading\u003c/a\u003e section for further explanation of how the GitHub repository will be graded.\u003c/p\u003e\n\u003cp\u003eFor further reading on creating professional notebooks and \u003ccode\u003eREADME\u003c/code\u003es, check out \u003ca href=\"https://github.com/learn-co-curriculum/dsc-repo-readability-v2-2\"\u003ethis reading\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003eGrading\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eTo pass this project, you must pass each project rubric objective.\u003c/em\u003e\u003c/strong\u003e The project rubric objectives for Phase 1 are:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eAttention to Detail\u003c/li\u003e\n\u003cli\u003eData Communication\u003c/li\u003e\n\u003cli\u003eAuthoring Jupyter Notebooks\u003c/li\u003e\n\u003cli\u003eData Manipulation and Analysis with \u003ccode\u003epandas\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3\u003eAttention to Detail\u003c/h3\u003e\n\u003cp\u003eIf you have searched for a job, you have probably seen \"attention to detail\" appear on a job description. In a \u003ca href=\"https://www.payscale.com/data-packages/job-skills\"\u003esurvey of hiring managers\u003c/a\u003e, fully 56% of them said they felt that recent college grads lacked this skill. So, what does \"attention to detail\" mean, and how will you be graded on it at Flatiron School?\u003c/p\u003e\n\u003cp\u003eAttention to detail means that you accomplish tasks thoroughly and accurately. You need to understand what is being asked of you, and double-check that your work fulfills all of the requirements. This will help make you a \"no-brainer hire\" because it helps employers feel confident that they will not have to double-check your work. For further reading, check out \u003ca href=\"https://www.indeed.com/career-advice/career-development/attention-to-detail\"\u003ethis article\u003c/a\u003e from Indeed.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eAttention to detail will be graded based on the project checklist. In Phase 1, you need to complete 60% (6 out of 10) or more of the checklist elements in order to pass the Attention to Detail objective.\u003c/em\u003e\u003c/strong\u003e The standard for passing the Attention to Detail objective will increase with each Phase, until you are required to complete all elements to pass Phase 5 (Capstone).\u003c/p\u003e\n\u003cp\u003eThe \u003ca href=\"https://docs.google.com/document/d/1PjJwdek9EeIy9tYdvlC4bvKvwYcI2xHO1wEMENfqo5E/edit?usp=sharing\"\u003ePhase 1 Project Checklist\u003c/a\u003e is linked here as well as directly in Canvas. The elements highlighted in yellow are the elements you need to complete in order to pass this objective. We recommend that you make your own copy of this document, so that you can check off each element as you complete it. The checklist also contains more specific, detailed guidance about the deliverables described above.\u003c/p\u003e\n\u003cp\u003eBelow are the definitions of each rubric level for this objective. This information is also summarized in the rubric, which is attached to the project submission assignment.\u003c/p\u003e\n\u003ch4\u003eExceeds Objective\u003c/h4\u003e\n\u003cp\u003e70% or more of the project checklist items are complete\u003c/p\u003e\n\u003ch4\u003eMeets Objective (Passing Bar)\u003c/h4\u003e\n\u003cp\u003e60% of the project checklist items are complete\u003c/p\u003e\n\u003ch4\u003eApproaching Objective\u003c/h4\u003e\n\u003cp\u003e50% of the project checklist items are complete\u003c/p\u003e\n\u003ch4\u003eDoes Not Meet Objective\u003c/h4\u003e\n\u003cp\u003e40% or fewer of the project checklist items are complete\u003c/p\u003e\n\u003ch3\u003eData Communication\u003c/h3\u003e\n\u003cp\u003eCommunication is another key \"soft skill\". In \u003ca href=\"https://www.payscale.com/data-packages/job-skills\"\u003ethe same survey mentioned above\u003c/a\u003e, 46% of hiring managers said that recent college grads were missing this skill.\u003c/p\u003e\n\u003cp\u003eBecause \"communication\" can encompass such a wide range of contexts and skills, we will specifically focus our Phase 1 objective on Data Communication. We define Data Communication as:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eCommunicating basic data analysis results to diverse audiences via writing and live presentation\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eTo further define some of these terms:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eBy \"basic data analysis\" we mean that you are filtering, sorting, grouping, and/or aggregating the data in order to answer business questions. This project does not involve inferential statistics or machine learning, although descriptive statistics such as measures of central tendency are encouraged.\u003c/li\u003e\n\u003cli\u003eBy \"results\" we mean your \u003cstrong\u003e\u003cem\u003ethree visualizations and recommendations\u003c/em\u003e\u003c/strong\u003e.\u003c/li\u003e\n\u003cli\u003eBy \"diverse audiences\" we mean that your presentation and notebook are appropriately addressing a business and data science audience, respectively.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eBelow are the definitions of each rubric level for this objective. This information is also summarized in the rubric, which is attached to the project submission assignment.\u003c/p\u003e\n\u003ch4\u003eExceeds Objective\u003c/h4\u003e\n\u003cp\u003eCreates and describes appropriate visualizations for given business questions, where each visualization fulfills all elements of the checklist\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis \"checklist\" refers to the Data Visualization checklist within the larger Phase 1 Project Checklist\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4\u003eMeets Objective (Passing Bar)\u003c/h4\u003e\n\u003cp\u003eCreates and describes appropriate visualizations for given business questions\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis objective can be met even if all checklist elements are not fulfilled. For example, if there is some illegible text in one of your visualizations, you can still meet this objective\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4\u003eApproaching Objective\u003c/h4\u003e\n\u003cp\u003eCreates visualizations that are not related to the business questions, or uses an inappropriate type of visualization\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEven if you create very compelling visualizations, you cannot pass this objective if the visualizations are not related to the business questions\u003c/p\u003e\n\u003cp\u003eAn example of an inappropriate type of visualization would be using a line graph to show the correlation between two independent variables, when a scatter plot would be more appropriate\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4\u003eDoes Not Meet Objective\u003c/h4\u003e\n\u003cp\u003eDoes not submit the required number of visualizations\u003c/p\u003e\n\u003ch3\u003eAuthoring Jupyter Notebooks\u003c/h3\u003e\n\u003cp\u003eAccording to \u003ca href=\"https://www.kaggle.com/kaggle-survey-2020\"\u003eKaggle's 2020 State of Data Science and Machine Learning Survey\u003c/a\u003e, 74.1% of data scientists use a Jupyter development environment, which is more than twice the percentage of the next-most-popular IDE, Visual Studio Code. Jupyter Notebooks allow for reproducible, skim-able code documents for a data science audience. Comfort and skill with authoring Jupyter Notebooks will prepare you for job interviews, take-home challenges, and on-the-job tasks as a data scientist.\u003c/p\u003e\n\u003cp\u003eThe key feature that distinguishes \u003cem\u003eauthoring Jupyter Notebooks\u003c/em\u003e from simply \u003cem\u003ewriting Python code\u003c/em\u003e is the fact that Markdown cells are integrated into the notebook along with the Python cells in a notebook. You have seen examples of this throughout the curriculum, but now it's time for you to practice this yourself!\u003c/p\u003e\n\u003cp\u003eBelow are the definitions of each rubric level for this objective. This information is also summarized in the rubric, which is attached to the project submission assignment.\u003c/p\u003e\n\u003ch4\u003eExceeds Objective\u003c/h4\u003e\n\u003cp\u003eUses Markdown and code comments to create a well-organized, skim-able document that follows all best practices\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eRefer to the \u003ca href=\"https://github.com/learn-co-curriculum/dsc-repo-readability-v2-2\"\u003erepository readability reading\u003c/a\u003e for more tips on best practices\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4\u003eMeets Objective (Passing Bar)\u003c/h4\u003e\n\u003cp\u003eUses some Markdown to create an organized notebook, with an introduction at the top and a conclusion at the bottom\u003c/p\u003e\n\u003ch4\u003eApproaching Objective\u003c/h4\u003e\n\u003cp\u003eUses Markdown cells to organize, but either uses only headers and does not provide any explanations or justifications, or uses only plaintext without any headers to segment out sections of the notebook\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHeaders in Markdown are delineated with one or more \u003ccode\u003e#\u003c/code\u003es at the start of the line. You should have a mixture of headers and plaintext (text where the line does not start with \u003ccode\u003e#\u003c/code\u003e)\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4\u003eDoes Not Meet Objective\u003c/h4\u003e\n\u003cp\u003eDoes not submit a notebook, or does not use Markdown cells at all to organize the notebook\u003c/p\u003e\n\u003ch3\u003eData Manipulation and Analysis with \u003ccode\u003epandas\u003c/code\u003e\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003epandas\u003c/code\u003e is a very popular data manipulation library, with over 2 million downloads on Anaconda (\u003ccode\u003econda install pandas\u003c/code\u003e) and over 19 million downloads on PyPI (\u003ccode\u003epip install pandas\u003c/code\u003e) at the time of this writing. In our own internal data, we see that the overwhelming majority of Flatiron School DS grads use \u003ccode\u003epandas\u003c/code\u003e on the job in some capacity.\u003c/p\u003e\n\u003cp\u003eUnlike in base Python, where the Zen of Python says \"There should be one-- and preferably only one --obvious way to do it\", there is often more than one valid way to do something in \u003ccode\u003epandas\u003c/code\u003e. However there are still more efficient and less efficient ways to use it. Specifically, the best \u003ccode\u003epandas\u003c/code\u003e code is \u003cem\u003eperformant\u003c/em\u003e and \u003cem\u003eidiomatic\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003ePerformant \u003ccode\u003epandas\u003c/code\u003e code utilizes methods and broadcasting rather than user-defined functions or \u003ccode\u003efor\u003c/code\u003e loops. For example, if you need to strip whitespace from a column containing string data, the best approach would be to use the \u003ca href=\"https://pandas.pydata.org/docs/reference/api/pandas.Series.str.strip.html\"\u003e\u003ccode\u003epandas.Series.str.strip\u003c/code\u003e method\u003c/a\u003e rather than writing your own function or writing a loop. Or if you want to multiply everything in a column by 100, the best approach would be to use broadcasting (e.g. \u003ccode\u003edf[\"column_name\"] * 100\u003c/code\u003e) instead of a function or loop. You can still write your own functions if needed, but only after checking that there isn't a built-in way to do it.\u003c/p\u003e\n\u003cp\u003eIdiomatic \u003ccode\u003epandas\u003c/code\u003e code has variable names that are meaningful words or abbreviations in English, that are related to the purpose of the variables. You can still use \u003ccode\u003edf\u003c/code\u003e as the name of your DataFrame if there is only one main DataFrame you are working with, but as soon as you are merging multiple DataFrames or taking a subset of a DataFrame, you should use meaningful names. For example, \u003ccode\u003edf2\u003c/code\u003e would not be an idiomatic name, but \u003ccode\u003emovies_and_reviews\u003c/code\u003e could be.\u003c/p\u003e\n\u003cp\u003eWe also recommend that you rename all DataFrame columns so that their meanings are more understandable, although it is fine to have acronyms. For example, \u003ccode\u003e\"col1\"\u003c/code\u003e would not be an idiomatic name, but \u003ccode\u003e\"USD\"\u003c/code\u003e could be.\u003c/p\u003e\n\u003cp\u003eBelow are the definitions of each rubric level for this objective. This information is also summarized in the rubric, which is attached to the project submission assignment.\u003c/p\u003e\n\u003ch4\u003eExceeds Objective\u003c/h4\u003e\n\u003cp\u003eUses \u003ccode\u003epandas\u003c/code\u003e to prepare data and answer business questions in an idiomatic, performant way\u003c/p\u003e\n\u003ch4\u003eMeets Objective (Passing Bar)\u003c/h4\u003e\n\u003cp\u003eSuccessfully uses \u003ccode\u003epandas\u003c/code\u003e to prepare data in order to answer business questions\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis includes projects that \u003cem\u003eoccasionally\u003c/em\u003e use base Python when \u003ccode\u003epandas\u003c/code\u003e methods would be more appropriate (such as using \u003ccode\u003eenumerate()\u003c/code\u003e on a DataFrame), or occasionally performs operations that do not appear to have any relevance to the business questions\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4\u003eApproaching Objective\u003c/h4\u003e\n\u003cp\u003eUses \u003ccode\u003epandas\u003c/code\u003e to prepare data, but makes significant errors\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eExamples of significant errors include: the result presented does not actually answer the stated question, the code produces errors, the code \u003cem\u003econsistently\u003c/em\u003e uses base Python when \u003ccode\u003epandas\u003c/code\u003e methods would be more appropriate, or the submitted notebook contains significant quantities of code that is unrelated to the presented analysis (such as copy/pasted code from the curriculum or StackOverflow)\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4\u003eDoes Not Meet Objective\u003c/h4\u003e\n\u003cp\u003eUnable to prepare data using \u003ccode\u003epandas\u003c/code\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis includes projects that successfully answer the business questions, but do not use \u003ccode\u003epandas\u003c/code\u003e (e.g. use only base Python, or use some other tool like R, Tableau, or Excel)\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2\u003eGetting Started\u003c/h2\u003e\n\u003cp\u003ePlease start by reviewing the contents of this project description. If you have any questions, please ask your instructor ASAP.\u003c/p\u003e\n\u003cp\u003eNext, you will need to complete the \u003ca href=\"#project_proposal\"\u003e\u003cstrong\u003e\u003cem\u003eProject Proposal\u003c/em\u003e\u003c/strong\u003e\u003c/a\u003e which must be reviewed by your instructor before you can continue with the project.\u003c/p\u003e\n\u003cp\u003eThen, you will need to create a GitHub repository. There are three options:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eLook at the \u003ca href=\"https://github.com/learn-co-curriculum/dsc-project-template\"\u003ePhase 1 Project Templates and Examples repo\u003c/a\u003e and follow the directions in the MVP branch.\u003c/li\u003e\n\u003cli\u003eFork the \u003ca class=\"inline_disabled\" href=\"https://github.com/learn-co-curriculum/dsc-phase-1-project-v2-4\" target=\"_blank\"\u003ePhase 1 Project Repository\u003c/a\u003e, clone it locally, and work in the \u003ccode\u003estudent.ipynb\u003c/code\u003e file. Make sure to also add and commit a PDF of your presentation to your repository with a file name of \u003ccode\u003epresentation.pdf\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eCreate a new repository from scratch by going to \u003ca href=\"https://github.com/new\"\u003egithub.com/new\u003c/a\u003e and copying the data files from one of the above resources into your new repository. This approach will result in the most professional-looking portfolio repository, but can be more complicated to use. So if you are getting stuck with this option, try one of the above options instead.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eThis project will give you a valuable opportunity to develop your data science skills using real-world data. The end-of-phase projects are a critical part of the program because they give you a chance to bring together all the skills you've learned, apply them to realistic projects for a business stakeholder, practice communication skills, and get feedback to help you improve. You've got this!\u003c/p\u003e","exportId":"phase-1-project-description"},{"id":439891,"title":"Phase 1 Project Checklist","type":"ExternalUrl","indent":1,"locked":false,"requirement":null,"completed":false,"content":"https://docs.google.com/document/d/1PjJwdek9EeIy9tYdvlC4bvKvwYcI2xHO1wEMENfqo5E/edit?usp=sharing"},{"id":439896,"title":"Professional DS Deliverables","type":"ContextModuleSubHeader","indent":1,"locked":false},{"id":439900,"title":"Repository Readability","type":"WikiPage","indent":1,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-repo-readability-v2-2\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-repo-readability-v2-2\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-repo-readability-v2-2/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eWhen a prospective employer looks at your GitHub repository they will read two things: your \u003ccode\u003eREADME\u003c/code\u003e and your notebook.\u003c/p\u003e  \u003cp\u003eUnfortunately, sometimes they see something like this:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-repo-readability-v2-2/master/overview.png\" alt=\"overview screenshot\"\u003e\u003c/p\u003e  \u003cp\u003eThat notebook analysis may contain perfectly valid code, but it's not readable.\u003c/p\u003e  \u003cp\u003eTo fully communicate the quality of your work it needs to be readable. What does readability mean? It means the most important information is highlighted and complex code is explained.\u003c/p\u003e  \u003cp\u003eSince your analysis is in a Jupyter notebook, you have the narrative of your analysis and important code all in the same place. You will use two different tools to enhance the readability of your notebook: \u003cstrong\u003emarkdown\u003c/strong\u003e for the narrative and \u003cstrong\u003ecomments\u003c/strong\u003e for the code. The same markdown techniques apply to your \u003ccode\u003eREADME\u003c/code\u003e as well.\u003c/p\u003e  \u003ch2\u003eObjectives\u003c/h2\u003e  \u003cp\u003eYou will be able to:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eUse markdown to enhance the readability of text\u003c/li\u003e \u003cli\u003eUse comments to enhance the readability of code\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eMarkdown\u003c/h2\u003e  \u003cp\u003eMarkdown is a \u003cstrong\u003eplain text formatting syntax\u003c/strong\u003e, that allows you to format text quickly without the need to write in a text editor. Markdown allows you to quickly format plain text using special characters like asterisks, dashes, underscores, etc. Markdown enables you to create headers, lists, code blocks and more without lifting your fingers off your keyboard. \u003c/p\u003e  \u003cp\u003eFor example, which chunk of text is more readable?\u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eExample A:\u003c/strong\u003e\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-repo-readability-v2-2/master/exercise_plaintext-example.png\" alt=\"plaintext example\"\u003e\u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eor\u003c/strong\u003e\u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eExample B:\u003c/strong\u003e\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-repo-readability-v2-2/master/exercise_rendered-text-example.png\" alt=\"rendered text example, showing effect of markdown\"\u003e\u003c/p\u003e  \u003cp\u003eExample B! But what makes them different? The only difference between Examples A and B is that Example B adds \u003cstrong\u003eMarkdown\u003c/strong\u003e syntax to Example A. Here is what Example B looks like before it is rendered:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e# Housing Price Prediction Project\u003cbr\u003e\u003cbr\u003e## Project Goal\u003cbr\u003e\u003cbr\u003eMy project aims to predict the sale price of houses. \u003c/code\u003e\u003c/pre\u003e \u003ch3\u003eHeadings example\u003c/h3\u003e  \u003cp\u003eWhen you use text editing software like Microsoft Word or Google Docs, you use different level headings to create a consistent hierarchy of information in your documentation. H1 headings are the  highest level, like the title of the document, while H2 and H3 headings are lower in value. You denote a line is a heading by putting a hash mark next to the text, so the title in your analysis:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-repo-readability-v2-2/master/title_without-markdown.png\" alt=\"example text without markdown\"\u003e\u003c/p\u003e  \u003cp\u003eIf you add one hash mark:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e# Housing Price Prediction Project \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eThe text becomes large and bold:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-repo-readability-v2-2/master/title_with-markdown.png\" alt=\"example text with markdown, a single hash to make a title\"\u003e\u003c/p\u003e  \u003cp\u003eThe title of your analysis should have the highest level of header and your section headings, such as \"Business Question\" or \"Data Understanding\" should have H2 headings, etc. \u003c/p\u003e  \u003ch3\u003ePractice\u003c/h3\u003e  \u003cp\u003eYou can practice your understanding of markdown using the following exercise:\u003c/p\u003e  \u003cp\u003e1) Examine the plaintext below:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-repo-readability-v2-2/master/exercise_plaintext-example.png\" alt=\"plaintext example\"\u003e\u003c/p\u003e  \u003cp\u003e2) Now examine the rendered text below and find \u003cstrong\u003e4 examples\u003c/strong\u003e of markdown being used to enhance the readability of the text:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-repo-readability-v2-2/master/exercise_rendered-text-example.png\" alt=\"rendered text example, showing effect of markdown\"\u003e\u003c/p\u003e  \u003cp\u003e3) Once you have identified four examples, look at the numbered image below to confirm your answers:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-repo-readability-v2-2/master/exercise_numbered_rendered-text-example.png\" alt=\"rendered text example, showing effect of markdown, now with numbers to point out changes\"\u003e\u003c/p\u003e  \u003cp\u003e4) Review the numbered answers listed below to confirm what was updated:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e1. headings and subheadings, used to show the organization of the file \u003cbr\u003e2. link embedding, used to create linked text so the full text of a URL does not need to be shown\u003cbr\u003e3. bulleted list, used to effectively convey lists\u003cbr\u003e4. code text, used to show that this is the name of a variable \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eTry updating the text in our messy repo to match the updated formatting.\u003c/p\u003e  \u003ch3\u003eFurther reading on Markdown\u003c/h3\u003e  \u003cul\u003e \u003cli\u003e\u003ca href=\"https://guides.github.com/pdfs/markdown-cheatsheet-online.pdf\"\u003eGitHub's Markdown Cheat Sheet\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href=\"https://pressbooks.bccampus.ca/technicalwriting/\"\u003eDocument design free ebook\u003c/a\u003e\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eCode Comments\u003c/h2\u003e  \u003cp\u003eThe \u003ca href=\"https://www.python.org/dev/peps/pep-0020/\"\u003eZen of Python\u003c/a\u003e states that \"Readability counts\". You covered how to make text more readable, but what about code? Enter code comments and docstrings.\u003c/p\u003e  \u003ch3\u003eComments\u003c/h3\u003e  \u003cp\u003eCode comments can show up three main ways:\u003c/p\u003e  \u003ch4\u003e1) at the top, before code, to say what it will do\u003c/h4\u003e \u003cpre\u003e\u003ccode\u003e# Prints the zen of python\u003cbr\u003eprint(this) \u003c/code\u003e\u003c/pre\u003e \u003ch4\u003e2) on the side, explaining what the code does\u003c/h4\u003e \u003cpre\u003e\u003ccode\u003eprint(this) # prints the zen of python \u003c/code\u003e\u003c/pre\u003e \u003ch4\u003e3) in the midst of code, telling Python to ignore that section of code and to not run it\u003c/h4\u003e \u003cpre\u003e\u003ccode\u003e# print(this)\u003cbr\u003eprint(\"something else\") \u003c/code\u003e\u003c/pre\u003e \u003ch4\u003eComments Example\u003c/h4\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-repo-readability-v2-2/master/without-code-comments.png\" alt=\"comments example without comments\"\u003e\u003c/p\u003e  \u003cp\u003eIf you were given the above bit of code, you could probably figure out what was happening... but you'd need to read through the code itself, and maybe run the cells and play with the code, in order to fully follow not only what the code does but also why the code was written.\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-repo-readability-v2-2/master/with-code-comments.png\" alt=\"comments example with comments\"\u003e\u003c/p\u003e  \u003cp\u003eIf you were instead given this bit of code above, you'd be able to instantly read through exactly what each bit was doing. The comments also clearly show why the code is running. Note that this example uses both markdown cells and code comments, for different reasons! The markdown gives an overview and more of the rationale behind the code, while the code comments talk through what each piece of code actually does.\u003c/p\u003e  \u003ch3\u003eDocstrings\u003c/h3\u003e  \u003cp\u003eDocstrings are multi-line comments that usually explain what a \u003cem\u003efunction\u003c/em\u003e, \u003cem\u003eclass\u003c/em\u003e, or \u003cem\u003emodule\u003c/em\u003e is intended to do. Whenever you type \u003ccode\u003eshift+tab\u003c/code\u003e in a code cell and get the documentation? The documentation is populated by docstrings written in the code itself. Examine \u003ca href=\"https://github.com/pandas-dev/pandas/blob/master/pandas/core/groupby/groupby.py#L1168\"\u003ethe source code for the Pandas groupby object\u003c/a\u003e to see docstrings in action. \u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\"\"\"\u003cbr\u003edocstrings are the text in triple quotes\u003cbr\u003e\u003cbr\u003ethat can take multiple lines and still not interfere\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003ewith the code\u003cbr\u003e\"\"\"\u003cbr\u003e \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eDocstrings help future employers AND our future selves to understand our code at a later date. It not only makes code more readable, but makes it more \u003cem\u003eusable\u003c/em\u003e in the future.\u003c/p\u003e  \u003ch4\u003eDocstrings Example\u003c/h4\u003e \u003cpre\u003e\u003ccode\u003edef summarize_dataframe(df):\u003cbr\u003e    summary = pd.DataFrame(df.dtypes,columns=['dtypes'])\u003cbr\u003e    summary = summary.reset_index()\u003cbr\u003e    summary['Name'] = summary['index']\u003cbr\u003e    summary = summary[['Name','dtypes']]\u003cbr\u003e    summary['Missing'] = df.isnull().sum().values    \u003cbr\u003e    summary['Uniques'] = df.nunique().values\u003cbr\u003e    return summary \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eIf you wanted to make the above function more readable, you could use BOTH comments and docstrings:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003edef summarize_dataframe(df):\u003cbr\u003e    '''\u003cbr\u003e    Summarizes each column in a Pandas dataframe, where each row of the \u003cbr\u003e    summary output is a column of the input dataframe, df\u003cbr\u003e    Will show the datatype of data in the column, the number of missing values\u003cbr\u003e    in that column, and the number of unique values in the column\u003cbr\u003e    -\u003cbr\u003e    Input:\u003cbr\u003e    df : Pandas dataframe\u003cbr\u003e    -\u003cbr\u003e    Output:\u003cbr\u003e    summary : Pandas dataframe, now showing column details\u003cbr\u003e    '''\u003cbr\u003e    summary = pd.DataFrame(df.dtypes,columns=['dtypes'])\u003cbr\u003e    summary = summary.reset_index()\u003cbr\u003e    summary['Name'] = summary['index'] # name of each variable \u003cbr\u003e    summary = summary[['Name','dtypes']] # data type of each variable\u003cbr\u003e    summary['Missing'] = df.isnull().sum().values # number of missing values  \u003cbr\u003e    summary['Uniques'] = df.nunique().values # number of unique values\u003cbr\u003e    return summary \u003c/code\u003e\u003c/pre\u003e \u003ch3\u003eFurther Reading on Creating Readable Code\u003c/h3\u003e  \u003cul\u003e \u003cli\u003eUltimate guide for readable code: \u003ca href=\"https://www.python.org/dev/peps/pep-0008/\"\u003ePep8 standards\u003c/a\u003e\u003c/li\u003e \u003cli\u003eIf you want more information on docstring expectations look \u003ca href=\"https://www.python.org/dev/peps/pep-0257/\"\u003ehere\u003c/a\u003e\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eSummary\u003c/h2\u003e  \u003cp\u003eGreat, now that you learned more about markdown and code readability, let's put this theory into practice!\u003c/p\u003e","exportId":"repository-readability"},{"id":439904,"title":"Presentation Content","type":"WikiPage","indent":1,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-project-presentation-content\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-presentation-content\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-presentation-content/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eWhat counts as presentation content? Anything written or spoken during a presentation! Content includes everything from slide titles to the slide notes that guide your talk. There is no consistent formula for the perfect presentation every time. There are only guidelines for creating \u003cem\u003ebetter\u003c/em\u003e presentation materials.\u003c/p\u003e  \u003ch2\u003eObjectives\u003c/h2\u003e  \u003cul\u003e \u003cli\u003eCreate a description of the example project's target audience\u003c/li\u003e \u003cli\u003eConnect the presentation components with a narrative arc\u003c/li\u003e \u003cli\u003eList the content sections that are expected in a data science presentation\u003c/li\u003e \u003cli\u003eCreate an outline for the presentation\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eDescribing the Target Audience\u003c/h2\u003e  \u003cp\u003eCreating a good presentation is an exercise in empathy: putting yourself in the mindset of the audience before you start to create slides. Before you draft the outline of your presentation, describe the target audience for the presentation by answering these questions:\u003c/p\u003e  \u003ctable\u003e\u003cthead\u003e \u003ctr\u003e \u003cth\u003e\u003cstrong\u003eQuestion\u003c/strong\u003e\u003c/th\u003e \u003cth\u003e\u003cstrong\u003eExample Answer\u003c/strong\u003e\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e\u003ctbody\u003e \u003ctr\u003e \u003ctd\u003e1. Who will be receiving your presentation, and what is their role in the company?\u003c/td\u003e \u003ctd\u003eMid-level manager\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e2. What is their background: technical or non-technical?\u003c/td\u003e \u003ctd\u003eWith a non-technical background\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e3. How will your presentation affect their work or a decision they need to make?\u003c/td\u003e \u003ctd\u003eMake wait time shorter, reduce work load, prioritize workload, save lives, etc.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e4. What is their attention span?\u003c/td\u003e \u003ctd\u003eExtremely short\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e5. What is the goal of the presentation?\u003c/td\u003e \u003ctd\u003eTo convince the manager that your results will have such a large impact on the business, that you should be allowed to continue the future work of your analysis\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e\u003c/table\u003e  \u003cp\u003eEvery bit of slide content will be filtered through the answers to those questions! \u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eExtremely short attention span?\u003c/strong\u003e ---\u0026gt; Concise text, attention grabbing titles, hook in the listener/reader\u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eNon technical background?\u003c/strong\u003e ---\u0026gt; Drop jargon, include only the most relevant information\u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eSign-off on your work continuing?\u003c/strong\u003e ---\u0026gt; Focus on the real life impact of your work. Always tie your results to real world numbers and how the answers you provide are solutions to real problems.\u003c/p\u003e  \u003ch3\u003eWhat If You Don't Know the Answer?\u003c/h3\u003e  \u003cp\u003eIn the Flatiron DS program, just like in the DS industry, sometimes you will just have to make your best guess. Look at the information provided when you are given the project, and infer what you can. Do some Google searching about the domain/industry if you aren't familiar with it, and be prepared to think on the fly.\u003c/p\u003e  \u003cp\u003eIf you don't know the actual person who will be the audience of your presentation, it can be helpful to develop a \u003cem\u003epersona\u003c/em\u003e  essentially, a fictional character who represents your audience. Check out \u003ca href=\"https://www.interaction-design.org/literature/article/personas-why-and-how-you-should-use-them\"\u003ethis article\u003c/a\u003e for more information on personas.\u003c/p\u003e  \u003ch2\u003eNarrative Arc\u003c/h2\u003e  \u003cp\u003eIn storytelling and narration there is conflict, resolution, and the journey in between. Your data science presentation can be arranged the same way. Plus, maintaining a narrative arc throughout your presentation will keep the audience engaged and help them retain information.\u003c/p\u003e  \u003ch3\u003eNarrative Arc Case Study\u003c/h3\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-project-presentation-content/master/images/Dont-Let-the-Pigeon-Drive-the-Bus-14-1024x518.jpg\" alt=\"'LET ME DRIVE THE BUS' says the pigeon in the book, 'Don't Let the Pigeon Drive the Bus' by Mo Willems\"\u003e\u003c/p\u003e  \u003cp\u003eA great example of this is the children's book \u003ca href=\"http://pigeonpresents.com/books/dont-let-the-pigeon-drive-the-bus/\"\u003e\u003cstrong\u003eDon't Let the Pigeon Drive the Bus!\u003c/strong\u003e\u003c/a\u003e by Mo Willems. \u003ca href=\"https://www.youtube.com/watch?v=n-dHeNfXtgc\"\u003eHere is a link to hear the book read aloud\u003c/a\u003e.\u003c/p\u003e  \u003cul\u003e \u003cli\u003eTitle reveals the main point of the story. It's catchy. It's not \u003cstrong\u003eAn Observation of Avian Conflict in Transportation Permissions\u003c/strong\u003e\u003c/li\u003e \u003cli\u003eProblem is established from the beginning - We've been told by the bus driver that the pigeon wants to drive, but we are not supposed to let him\u003c/li\u003e \u003cli\u003eIt's a children's book, so we can assume that a \u003cstrong\u003esuccessful\u003c/strong\u003e ending is one where we succeed in not letting the pigeon drive the bus\u003c/li\u003e \u003cli\u003eThe book is filled with the pigeon's attempts to convince us to let him drive the bus\u003c/li\u003e \u003cli\u003eThe bus driver returns and thanks us for not letting pigeon drive the bus\u003c/li\u003e \u003c/ul\u003e  \u003ch4\u003eHow is this related?\u003c/h4\u003e  \u003cul\u003e \u003cli\u003eHave a catchy title that reveals the answer and your findings\u003c/li\u003e \u003cli\u003eEstablish the business problem and scenario at the beginning in detail (the conflict)\u003c/li\u003e \u003cli\u003eWith the answer already revealed, go through the most meaningful work that impacted the final result (the journey)\u003c/li\u003e \u003cli\u003eAt the end, revisit the original problem and tie the entire presentation together (the resolution and ever after)\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eIn practical terms, the narrative arc of your presentation should have three parts:\u003c/p\u003e  \u003col\u003e \u003cli\u003eBeginning: tell them what you're going to tell them  \u003cul\u003e \u003cli\u003eThe problem\u003c/li\u003e \u003cli\u003eThe solution\u003c/li\u003e \u003cli\u003eThe data and tools you will use to solve it\u003c/li\u003e \u003c/ul\u003e\u003c/li\u003e \u003cli\u003eMiddle: tell them  \u003cul\u003e \u003cli\u003eA deeper description of the data and relevant variables\u003c/li\u003e \u003cli\u003eWhat type of approach your analysis took (descriptive statistics, inferential statistics, prediction, etc.)\u003c/li\u003e \u003cli\u003eThe findings of your analysis\u003c/li\u003e \u003c/ul\u003e\u003c/li\u003e \u003cli\u003eEnd: tell them what you told them  \u003cul\u003e \u003cli\u003eHow your solution solves the business problem (i.e. recommendations)\u003c/li\u003e \u003cli\u003eHow much better your solution is than the baseline/status quo\u003c/li\u003e \u003cli\u003eWhat impacts your confidence in the solution, limitations\u003c/li\u003e \u003cli\u003eHow to build off your work with next steps and future work\u003c/li\u003e \u003c/ul\u003e\u003c/li\u003e \u003c/ol\u003e  \u003ch3\u003eExercise\u003c/h3\u003e  \u003cp\u003eBefore putting anything into the presentation slides, review your notebook to address each section above. Speaking out loud, in \u003cem\u003ethree sentences or less\u003c/em\u003e, what is the information needed for each bullet point?\u003c/p\u003e  \u003ch2\u003eDrafting an Outline of a Presentation\u003c/h2\u003e  \u003cp\u003eNow that you have all the essential information, you can begin to organize content into an outline. At this point do not worry about what goes on your slide versus what goes in your voice over. This step focuses on pairing \u003cstrong\u003eone key point\u003c/strong\u003e with \u003cstrong\u003eeach slide\u003c/strong\u003e in your presentation.\u003c/p\u003e  \u003cp\u003eUse your audience persona to shape what you put in your presentation. A research scientist in the technical department of a company will have more interest in deep statistical tests than the CEO. If you are presenting to a coworker you sit next to, having a contact slide might be weird.\u003c/p\u003e  \u003cp\u003eWith a slide for each point, at a minimum you should have:\u003c/p\u003e  \u003cul\u003e \u003cli\u003e[ ] introduction\u003c/li\u003e \u003cli\u003e[ ] business context\u003c/li\u003e \u003cli\u003e[ ] data \u003c/li\u003e \u003cli\u003e[ ] process steps\u003c/li\u003e \u003cli\u003e[ ] results \u0026amp; business application (recommendations)\u003c/li\u003e \u003cli\u003e[ ] evaluation \u0026amp; future improvement ideas\u003c/li\u003e \u003cli\u003e[ ] contact information\u003c/li\u003e \u003c/ul\u003e  \u003ch3\u003eExercise:\u003c/h3\u003e  \u003cp\u003eTake some time to organize the key points of your analysis into an outline.\u003c/p\u003e  \u003ch2\u003eConclusion\u003c/h2\u003e  \u003cp\u003eYou have now learned about the fundamentals of presentation content! Up next, you'll learn more about slide design, in order to turn your outline into a professional presentation.\u003c/p\u003e","exportId":"presentation-content"},{"id":439909,"title":"Slide Style","type":"WikiPage","indent":1,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-project-slide-design\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-slide-design\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-slide-design/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn all of your projects at Flatiron School, your work should resemble a professional project, not a \"school project\". If the goal of your presentation is to convince an employer of your credibility, you do not want anything distracting from your work. Design aspects can be distracting, particularly:\u003c/p\u003e  \u003cul\u003e \u003cli\u003einconsistencies in style\u003c/li\u003e \u003cli\u003eheavy text and clutter\u003c/li\u003e \u003cli\u003emessy visualizations\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eObjectives\u003c/h2\u003e  \u003cp\u003eYou will be able to:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eidentify what slide components count as \"style\"\u003c/li\u003e \u003cli\u003edescribe the impact of a slide template\u003c/li\u003e \u003cli\u003edeclutter slides by removing excessive text and redundant visualizations\u003c/li\u003e \u003cli\u003edefine the characteristics of a \"complete\" visualization\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003e\"Style\" Components\u003c/h2\u003e  \u003cp\u003eOne goal of your presentation is to convey a \u003cem\u003eprofessional presentation style\u003c/em\u003e. A professional presentation style demonstrates that you pay attention to details and are aware of how the \u003cem\u003edesign\u003c/em\u003e of your slides will impact the viewer as much as the \u003cem\u003econtent\u003c/em\u003e. Fonts (including font size and consistency), colors, and visuals (including both photos and visualizations you build) all contribute to the design and style of your presentation. These choices can either enhance or distract from your material. \u003c/p\u003e  \u003ch3\u003eIdentifying Style Problems\u003c/h3\u003e  \u003cp\u003eThe slide below has a few examples of inconsistent style:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-postgrad-project-slide-design/master/styleproblems.png\" alt=\"example with style problems\"\u003e\u003c/p\u003e  \u003cp\u003eBeyond any problems in content, this example slide showcases a few inconsistent style problems:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eMultiple fonts\u003c/li\u003e \u003cli\u003eConfusing use of colors\u003c/li\u003e \u003cli\u003eFluctuating font size \u003c/li\u003e \u003cli\u003eDistracting background (makes text harder to read)\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eA simple solution is to use a \u003cem\u003eslide template\u003c/em\u003e. There are great websites such as \u003ca href=\"https://www.slidescarnival.com/\"\u003eSlideCarnival\u003c/a\u003e, that provide professional-quality \u003ca href=\"https://www.slidescarnival.com/thaliard-free-presentation-template/2189\"\u003etemplates\u003c/a\u003e made by designers that integrate easily into Google Slides or other presentation tools. A good template keeps the font choices, font sizes, and color schemes consistent. Since few data scientists also have a degree in design, using the right template saves your presentation from looking unprofessional.\u003c/p\u003e  \u003ch2\u003eDecluttering Slides\u003c/h2\u003e  \u003cp\u003eQuickly, in five seconds or less, review the following two slides:\u003c/p\u003e  \u003ch4\u003eA)\u003c/h4\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-postgrad-project-slide-design/master/a_toomuchtext.png\" alt=\"example slide with too much text\"\u003e\u003c/p\u003e  \u003ch4\u003eB)\u003c/h4\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-postgrad-project-slide-design/master/b_toomanyvisuals.png\" alt=\"example slide with too many visualizations\"\u003e\u003c/p\u003e  \u003cp\u003eTime's up! What was the main point of each slide? What was your initial response to those slides?\u003c/p\u003e  \u003ch3\u003eProblem with Slide A: Too Much Text\u003c/h3\u003e  \u003cp\u003eNot everything needs to be \u003cem\u003ein\u003c/em\u003e the slides themselves. Slides are not expected to stand alone. Slides are a supplement to you presenting your work. \u003cstrong\u003eYou\u003c/strong\u003e are the star, not your presentation materials.  \u003c/p\u003e  \u003cp\u003eRemember, the rule is one key point per slide. Additional information that you plan on sharing verbally, or wish to have available for later readers, should go in the slide notes which can be saved and shared in PDF versions of your presentations.\u003c/p\u003e  \u003ch3\u003eProblem with Slide B: Too Many Visualizations\u003c/h3\u003e  \u003cp\u003eWhich visualization in Slide B is most important? What is the key point this slide is trying to make? A good rule to follow is one visualization per slide, and the visualization should take up at least 60% of the slide's real estate. \u003c/p\u003e  \u003cp\u003eWhitespace that \u003cstrong\u003eis not\u003c/strong\u003e filled with text or images is just as important as the information being conveyed. An overcrowded slide is unappealing to the eye and off-putting to viewers.\u003c/p\u003e  \u003cp\u003eReview the updated slides below and compare them to their original versions:\u003c/p\u003e  \u003ch4\u003eA)\u003c/h4\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-postgrad-project-slide-design/master/a_improved.png\" alt=\"example next steps slide with text consolidated into bullet points\"\u003e\u003c/p\u003e  \u003ch4\u003eB)\u003c/h4\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-postgrad-project-slide-design/master/b_improved.png\" alt=\"example slide with a single purposeful visual\"\u003e\u003c/p\u003e  \u003cp\u003eAs you can see, having \u003cstrong\u003eless\u003c/strong\u003e on the slide is \u003cstrong\u003emore\u003c/strong\u003e appealing to review. When in doubt about having extra information on a slide, put it in the notes and include it in your delivery.\u003c/p\u003e  \u003ch2\u003e\"Complete\" Visualization\u003c/h2\u003e  \u003cp\u003eVisualizations for presentations work a little differently than visualizations you create for your own use, and should be held to pretty high standards. If you're using a visualization you create in a presentation, it should work to make a key point and should be stylized not only to match your presentation template but also to stand on its own.\u003c/p\u003e  \u003ch3\u003eElements of a Complete Visualization\u003c/h3\u003e  \u003cp\u003eDavid McCandless, from the website \u003ca href=\"https://www.informationisbeautiful.net/\"\u003eInformation is Beautiful\u003c/a\u003e, wrote in his 2014 book \u003ca href=\"https://informationisbeautiful.net/books/\"\u003eKnowledge is Beautiful\u003c/a\u003e that a quality visualization contains four elements: \u003cstrong\u003einformation, function, visual form, and story\u003c/strong\u003e.\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://infobeautiful4.s3.amazonaws.com/2015/05/2552_What-Makes-a-Good-Infoviz-frame01.png\" alt=\"quall-viz\"\u003e\u003c/p\u003e  \u003cp\u003eMore specifically, visualizations built for presentations should:\u003c/p\u003e  \u003cul\u003e \u003cli\u003e[ ] \u003cstrong\u003eBe Purposeful\u003c/strong\u003e. The visualization must be relevant to the analysis and fit into the narrative of the presentation. The most \u003cstrong\u003eimportant\u003c/strong\u003e part of the visualization should be highlighted. Is this one group different from the others? Where does this model \u003cem\u003enot\u003c/em\u003e perform well?\u003c/li\u003e \u003cli\u003e[ ] \u003cstrong\u003eBe Appropriately Labeled\u003c/strong\u003e. Each visualization should have a title, a legend, and labeled axes.\u003c/li\u003e \u003cli\u003e[ ] \u003cstrong\u003eHave Readable Numbers\u003c/strong\u003e. Dollars should have a $ in front of them. Percents should be formated as 50% rather than 0.5. Scientific notation has no business on 99% of data visualizations, especially in presentations.\u003c/li\u003e \u003cli\u003e[ ] \u003cstrong\u003eHave Readable Text\u003c/strong\u003e. Text should be large enough to read and not overlap with other text. All text should be \u003cem\u003emeaningful\u003c/em\u003e and \u003cem\u003eimmediately understandable\u003c/em\u003e by your audence, so the axis label should read \"House Sale Price\" rather than \"salesprice\" - \u003cstrong\u003eno variable names with CamelCase or underscores!\u003c/strong\u003e\u003c/li\u003e \u003cli\u003e[ ] \u003cstrong\u003eBe Saved to File\u003c/strong\u003e. Using a screenshot can produce fuzzy and grainy resolution if the image needs to scaled. Instead, use \u003ccode\u003esavefig\u003c/code\u003e or whichever appropriate command to save your images directly from your notebook.\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eFor further reading on what makes a great data visualization, David McCandless also provides a great \u003ca href=\"https://informationisbeautiful.net/visualizations/dataviz-books/\"\u003erecommended reading list\u003c/a\u003e of data visualization books.\u003c/p\u003e  \u003ch3\u003eIdentifying Visualization Problems\u003c/h3\u003e  \u003cp\u003eIn this sample visualization, there are 4 aspects that, if fixed, would enhance the credibility of this presentation. Take a moment to see if you can identify what is missing:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-postgrad-project-slide-design/master/examplevisualization.png\" alt=\"example visualization with issues\"\u003e\u003c/p\u003e  \u003cp\u003eAs you can see in the numbered picture below, the visualizations has the following issues:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-postgrad-project-slide-design/master/examplevisualization_numberedissues.png\" alt=\"example visualization, now with numbered issues\"\u003e\u003c/p\u003e  \u003col\u003e \u003cli\u003eThe y-axis is not immediately interpretable\u003c/li\u003e \u003cli\u003eAxis labels and legend use raw-variable names rather than a nice label\u003c/li\u003e \u003cli\u003eLegend does not use all the categories\u003c/li\u003e \u003cli\u003eDefault color is not informative or easily distinguishable\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003eThe key with a great presentation visual is that it is immediately interpretable - your audience should not need to guess what the numbers or colors mean, or interpret a variable name, or squint to distinguish between colors.\u003c/p\u003e  \u003ch3\u003eEnhancing Visualizations\u003c/h3\u003e  \u003cp\u003eThe \u003ca href=\"https://python-graph-gallery.com/\"\u003ePython Graph Gallery\u003c/a\u003e is a great resource for finding the exact code to enhance a visualization created using matplotlib or seaborn. The \u003ca href=\"https://matplotlib.org/\"\u003ematplotlib documentation\u003c/a\u003e also has plenty of code examples and the \u003ca href=\"https://seaborn.pydata.org/examples/index.html\"\u003eseaborn graph gallery\u003c/a\u003e can be a useful resource.\u003c/p\u003e  \u003cp\u003eBelow, review the differences between the code used to generate the earlier example and the code used to generate a much more polished visualization:\u003c/p\u003e  \u003ch4\u003eEarly Example:\u003c/h4\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-postgrad-project-slide-design/master/examplevisualization.png\" alt=\"example visualization with issues\"\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eplt.figure(figsize=(16, 10)) \u003cbr\u003esns.scatterplot(x='GrLivArea', y='SalePrice', data = df, hue='OverallQual')\u003cbr\u003eplt.title(\"The Positive Correlations between Home Sale Price,\\n Sq Footage and Quality Rating\", fontsize=26)\u003cbr\u003eplt.tight_layout()\u003cbr\u003eplt.show() \u003c/code\u003e\u003c/pre\u003e \u003ch4\u003ePolished Example:\u003c/h4\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-postgrad-project-slide-design/master/polishedvisualization.png\" alt=\"example visualization, but polished\"\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003efig = plt.figure(figsize=(16, 10), dpi=80) \u003cbr\u003e# Creates one subplot within our figure and uses the classes fig and ax\u003cbr\u003efig, ax = plt.subplots(figsize=(16, 10), dpi= 80, facecolor='w', edgecolor='k')\u003cbr\u003e# Uses hue to add an extra element, and changes the palette\u003cbr\u003echart = sns.scatterplot(x='GrLivArea', y='SalePrice', data = test,\u003cbr\u003e                        hue=test.OverallQual.values, legend='full', alpha = .7,\u003cbr\u003e                        palette=\"BrBG\")\u003cbr\u003e\u003cbr\u003e# Setting axis ticks and formulating numbers\u003cbr\u003eax.yaxis.set_major_locator(ticker.MultipleLocator(100000.00))\u003cbr\u003eax.yaxis.set_minor_locator(ticker.MultipleLocator(50000))\u003cbr\u003eax.yaxis.set_major_formatter(ticker.StrMethodFormatter('${x:,.0f}'))\u003cbr\u003eax.xaxis.set_major_locator(ticker.MultipleLocator(500))\u003cbr\u003eax.xaxis.set_minor_locator(ticker.MultipleLocator(100))\u003cbr\u003e\u003cbr\u003e# Naming the visual and each axis\u003cbr\u003efig.suptitle(\"The Positive Correlations between Home Sale Price,\\n Sq Footage and Quality Rating\", fontsize=26)\u003cbr\u003eax.set_xlabel(\"Total Square Feet\")\u003cbr\u003eax.set_ylabel(\"Sale Price\")\u003cbr\u003e\u003cbr\u003e# Creating the legend\u003cbr\u003eax.get_legend().set_title(\"Overall Quality Ranking\")\u003cbr\u003e\u003cbr\u003eplt.tight_layout() \u003c/code\u003e\u003c/pre\u003e \u003ch2\u003eSummary\u003c/h2\u003e  \u003cp\u003eSmall changes can have a big impact on the profesional quality of your slide design. There are many resources out there to help your slides be more consistent, polished, and informative. Utilize them!\u003c/p\u003e","exportId":"slide-style"},{"id":439912,"title":"Phase 1 Project Templates and Examples","type":"ExternalUrl","indent":1,"locked":false,"requirement":null,"completed":false,"content":"https://github.com/learn-co-curriculum/dsc-project-template"},{"id":439915,"title":"Submit Your Project Here","type":"ContextModuleSubHeader","indent":1,"locked":false},{"id":439932,"title":"Phase 1 Project - GitHub Repository URL","type":"Assignment","indent":1,"locked":true,"submissionTypes":"a website url","graded":true,"pointsPossible":0.0,"dueAt":"2022-08-26T23:58:00-04:00","lockAt":"2022-08-26T23:59:59-04:00","unlockAt":null,"requirement":null,"completed":false,"exportId":"g888c98182e6ca3d7f4a2bfb3bfbcc5b3"},{"id":439938,"title":"BLOG POST","type":"ContextModuleSubHeader","indent":0,"locked":false},{"id":439941,"title":"Blogging Overview","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-blogging-overview\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-blogging-overview\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-blogging-overview/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this lesson, we discuss how to write good blog posts that meet Flatiron School's requirements.\u003c/p\u003e  \u003ch2\u003eObjectives\u003c/h2\u003e  \u003cp\u003eThis lesson covers...\u003c/p\u003e  \u003cul\u003e \u003cli\u003eWhy blogging is valuable\u003c/li\u003e \u003cli\u003eTopics to blog about\u003c/li\u003e \u003cli\u003eWhat makes for a good blog post\u003c/li\u003e \u003cli\u003eHow to start your blog\u003c/li\u003e \u003cli\u003eFlatiron School blog requirements \u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eWhy Should I Blog?\u003c/h2\u003e  \u003cp\u003eBlogging has many benefits:\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\u003cp\u003e\u003cstrong\u003eDevelop your written communication skills.\u003c/strong\u003e Your writing ability will be critical to your success when completing job applications and presenting your work to colleagues. Blogging is great practice for identifying and clearly communicating the most important points of any subject.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cstrong\u003eDemonstrate your talent to employers.\u003c/strong\u003e Potential employers will review your blog to determine whether to offer you an interview or a job. Some students have even been invited to interview or exempted from technical interviews based on their blogs.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cstrong\u003eStrengthen your knowledge.\u003c/strong\u003e Blogging helps you explore new topics, deepen your understanding, and crystallize what you've learned.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cstrong\u003eHelp your peers and the broader community.\u003c/strong\u003e Have you ever Googled a question you had and found the answer on a blog? Writing blog posts helps others who are following in your footsteps!\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eWhat Should I Blog About?\u003c/h2\u003e  \u003cp\u003eHere are some blog topic ideas:\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\u003cp\u003eWhy did you decide to learn data science?\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eDescribe how a DS technique works, when you might use it, and its strengths/weaknesses.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eSummarize an End of Phase Project by explaining your problem, the dataset, your methodology, and your results.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eDive into something that you want to learn more about, maybe because you find it challenging or it wasn't covered in the course.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eWrite a tutorial to help aspiring data scientists to implement a tool or method.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eFind an interesting data science paper and summarize why it is important. This can be a new paper from the past few months, or you can refer to \u003ca href=\"https://docs.google.com/spreadsheets/d/1UYmAT13AAknrOatzLeeAsN4tS7ENjn2fpJNGzOZ67rQ/edit?usp=sharing\"\u003ethis spreadsheet\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eWhat Does A Good Blog Post Look Like?\u003c/h2\u003e  \u003cp\u003eWe recommend you take a look at our \u003ca href=\"https://drive.google.com/drive/folders/1UBiRCRLzVP5CHU3PJNwoMZAe3ajUBm2a?usp=sharing\"\u003eblog templates\u003c/a\u003e and \u003ca href=\"https://docs.google.com/document/d/1eqL8Dsj7dH7s_MRnf_4-3kCiSz72POHTfb-sBRN5Zhs/edit?usp=sharing\"\u003eexamples\u003c/a\u003e to get an idea for what makes a blog post good.\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\u003cp\u003eStrike a balance between providing a meaningful investigation of your topic and being concise. Constrain the scope so it will be interesting and digestible in about 1000-3000 words (this is not a firm limit).\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\n\u003cp\u003eUse clear and consistent formatting to make your content accessible and professional-looking.\u003c/p\u003e  \u003cul\u003e \u003cli\u003eWhen presenting code, use code snippets instead of screenshots.\u003c/li\u003e \u003cli\u003eMake URLs into hyperlinks that are easy for readers to click into.\u003c/li\u003e \u003cli\u003eUse headings to provide structure and flow to your post.\u003c/li\u003e \u003c/ul\u003e\n\u003c/li\u003e \u003cli\u003e\u003cp\u003eCite and link to resources you used to write your post.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eHow Do I Start My Blog?\u003c/h2\u003e  \u003cp\u003eIf you already have a professional blog that you'd like to use for your data science content, you can add your posts to that. Otherwise, you will need to start a new blog. If you have a personal blog, you should avoid using it for this purpose so that you can continue using it for personal content without worrying about how it might be perceived by potential employers.\u003c/p\u003e  \u003cp\u003eThere are multiple blogging platforms to choose from that make it easy to start a blog, here are some of our favorites:\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\u003ca href=\"https://www.blogger.com/\"\u003eBlogger\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href=\"https://dev.to/\"\u003edev.to\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href=\"https://pages.github.com/\"\u003eGitHub Pages\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href=\"https://medium.com/\"\u003eMedium\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href=\"https://wordpress.com/\"\u003eWordpress\u003c/a\u003e\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eDifferent platforms have different pros and cons, so do a little research to decide what is best for you.\u003c/p\u003e  \u003ch2\u003eBlog Requirements\u003c/h2\u003e  \u003cp\u003eTo succeed in your career transition and graduate from Flatiron School, you must complete the following activities. These requirements are designed to give you the best opportunity to deepen your knowledge, practice communication skills, and showcase yourself to potential employers.\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\u003cp\u003eSet up a publicly accessible blog \u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003ePublish at least four blog posts on it, including \u003cstrong\u003eone per Phase for Phases 1-4\u003c/strong\u003e\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\n\u003cp\u003eSubmit URLs to your posts \u003cstrong\u003eby the end of each Phase\u003c/strong\u003e in the Blog Post assignments\u003c/p\u003e  \u003cul\u003e \u003cli\u003eThese assignments are located in the Milestones topics of the Phase 1-4 Canvas courses\u003c/li\u003e \u003c/ul\u003e\n\u003c/li\u003e \u003cli\u003e\n\u003cp\u003eWrite blog posts that...\u003c/p\u003e  \u003cul\u003e \u003cli\u003eDiscuss data science topics\u003c/li\u003e \u003cli\u003eAre composed primarily of original material you wrote\u003c/li\u003e \u003cli\u003eInclude proper attribution\u003c/li\u003e \u003cli\u003eHave high-quality content and formatting\u003c/li\u003e \u003cli\u003eAre something you would proudly show to a potential employer\u003c/li\u003e \u003c/ul\u003e\n\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eAfter you submit your blog posts, your teacher will grade them as Complete or Incomplete. Your blogs must all be submitted on time and receive Complete grades in order to continue through your program.\u003c/p\u003e  \u003cp\u003e‚ú®Have fun and happy blogging!‚ú®\u003c/p\u003e","exportId":"blogging-overview"},{"id":439948,"title":"Phase 1 Blog Post","type":"Assignment","indent":0,"locked":true,"submissionTypes":"a website url","graded":true,"pointsPossible":0.0,"dueAt":"2022-08-15T17:00:00-04:00","lockAt":"2022-08-31T23:59:00-04:00","unlockAt":null,"requirement":null,"completed":false,"exportId":"gaffd156340f7ac44f391af23bde30a58"}]},{"id":45682,"name":"APPENDIX: Pandas","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"g5b7183538a54f5150f35f60d5d7c44b5","items":[{"id":440702,"title":"Analyzing Macbeth with Pandas","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-analyzing-macbeth-project-pandas-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-analyzing-macbeth-project-pandas-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gd606df2ef270cd64229a7b706e4fed85"},{"id":440703,"title":"Subplots and Enumeration - Lab","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-subplots-and-enumeration-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-subplots-and-enumeration-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gb1cfc9a196f8005c2890c519ebbae8f1"}]},{"id":45683,"name":"APPENDIX: Functions","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"g2e16293716fc071323e7f75d850a0473","items":[{"id":440704,"title":"Functions Practice: Building a Calculator","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-building-a-calculator\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-building-a-calculator/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"ga9fe2f3118742827eba3424f67a46c3e"}]},{"id":45684,"name":"APPENDIX: No-SQL Databases","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"g297ed71a2a6cff3bc2ebf853e4d3be05","items":[{"id":440705,"title":"NoSQL Databases","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn about some of the various kinds of NoSQL databases, and their use cases.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain why NoSQL is useful\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eExplore real-world use cases of NoSQL databases\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy NoSQL?\u003c/h2\u003e\n\n\u003cp\u003eRelational databases are a cornerstone of a modern technology. They're reliable, dependable, and they seem to be pretty much everywhere. Since their invention at IBM by Edgar Codd in 1970, they've rapidly grown to be used all over the place. Their creation allowed companies to track, store, and analyze data in ways that simply couldn't be done before. For the majority of situations, they're a great choice. However, as technology has progressed into the era of internet and smartphones, we've run into many different sorts of data that aren't a natural fit for a relational format. Let's examine a few of these situations, and see why NoSQL might be a better choice. \u003c/p\u003e\n\n\u003cp\u003eLet's assume that we need to store chat logs between customer service and customers through a web interface. These chats could be very short, or very long -- some chats may only be 2 or 3 messages, while others may conceivably be in the hundreds or thousands. For each message in the chat, we want to store metadata associated with the message, so that we can know things like which party sent the message, the time it was sent, the time the other party read the message, etc. This is a great use case for a NoSQL database, because it would be a very poor fit for a relational database. For starters, each chat can be any size, meaning that we can't just clearly define a table that links which messages belong to which chat. If every chat had only five messages, we might be able to make it work, with a column for \"message 1\", \"message 2\", and so on -- but we can't, because a chat has no set size, and can always grow larger in the future. A relational database would also waste a lot of space storing redundant information, and getting all the messages in a chat could result in some nasty runtimes for our SQL query if this data was stored in separate tables in something like the third normal format. \u003c/p\u003e\n\n\u003cp\u003eFor each of the database types below, we'll explore some brief real-world examples of when they're the ideal choice. As with the example above, the common thread that runs among all of them is that they aren't a great fit for a relational database. \u003c/p\u003e\n\n\u003ch2\u003eDocument Stores\u003c/h2\u003e\n\n\u003cp\u003eA \u003cstrong\u003e\u003cem\u003eDocument Store\u003c/em\u003e\u003c/strong\u003e is a database that stores records as unique documents in the database. These documents can be arbitrarily long, and can even contain other documents inside of them! The chat log example we saw above is a prime use case for a document store. In a document store, we could store each message and its accompanying metadata as a document, and then embed each of those documents in order in a chat document. In this way, we can easily access the data as needed. \u003c/p\u003e\n\n\u003cp\u003eIn these Document Stores, each document contains key-value pairs, with the actual data being stored in as the value. This makes Document Stores incredibly flexible, because each document can be unique. There is no constraint saying each document must have the same keys! This makes it great for working with data where we don't know what shape it will take (as we saw above, with chat logs that can be arbitrarily long or short), or perhaps when we don't know what data will be stored at all. This would be a problem in a relational database, because we would need to know what column the data belongs in before we could store it. With a Document Store, we can just create a key on the fly for the data that matters to us!\u003c/p\u003e\n\n\u003cp\u003eNote that while this flexibility makes it easy for us to store data on the fly, this also makes it harder for us to query data and get exactly what we need. Since each different document can potentially have its own \u003cstrong\u003e\u003cem\u003eSchema\u003c/em\u003e\u003c/strong\u003e, this means that we have to know what we are looking for. This also means that we have to be diligent in our naming conventions, because \u003ccode\u003echatLog\u003c/code\u003e is different than \u003ccode\u003eChatLog\u003c/code\u003e. This means that if we run a query across all documents to get all data with the key \u003ccode\u003echatLog\u003c/code\u003e, we'll completely miss any data where they key is written as \u003ccode\u003eChatLog\u003c/code\u003e!\u003c/p\u003e\n\n\u003ch5\u003ePopular  Document Store Databases: MongoDB and Couchbase\u003c/h5\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/mongo-db-logo.png\" height=\"60%\" width=\"60%\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/couchbase-logo.png\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eKey-Value Stores and Column Stores\u003c/h2\u003e\n\n\u003cp\u003eAlthough \u003cstrong\u003e\u003cem\u003eKey-Value Stores\u003c/em\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003cem\u003eColumn Stores\u003c/em\u003e\u003c/strong\u003e are two different kinds of databases, they both store their data in ways you're already familiar with, because you've seen them in Python and Pandas!  \u003cstrong\u003e\u003cem\u003eKey-Value Stores\u003c/em\u003e\u003c/strong\u003e work exactly like they sound -- just like a Python dictionary! They are powered by a hash table under the hood, and to access data, you just pass in the unique key for the value that you want. \u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eColumn Stores\u003c/em\u003e\u003c/strong\u003e work a bit more like how pandas stores data under the hood. Recall that in pandas, a DataFrame is stored as a collection of \u003ccode\u003eSeries\u003c/code\u003e objects, with each column getting it's own series. The same general principle is at work for Column Stores -- each column is stored separately, allowing for very fast reads when querying data. \u003c/p\u003e\n\n\u003ch5\u003ePopular Key-Value Store Database: Amazon DynamoDB\u003c/h5\u003e\n\n\u003ch5\u003ePopular Column Store Database: Google BigTable\u003c/h5\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/bigtable.png\" height=\"60%\" width=\"60%\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/dynamodb.png\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eGraph Databases\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eGraph Databases\u003c/em\u003e\u003c/strong\u003e are based on the idea of the kind of graphs you might have seen in higher-level math classes -- the kind that are made up of \u003cstrong\u003e\u003cem\u003eNodes\u003c/em\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003cem\u003eEdges\u003c/em\u003e\u003c/strong\u003e. These sorts of databases excel at storing data where there are multiple associations between the entities stored in the database. The most obvious use case here is social media. Think for a second about what it would take to represent all of your friends on Facebook or Twitter in a relational database. This would be a pretty gargantuan data engineering task! However, with Graph Databases, it's quite easy. In a graph database, every user is a node, and each connection between you and one of the nodes representing one of your Facebook friends is an edge. In each node, we can store an arbitrary amount of metadata, which allows us to store things like user information. These sorts of databases really shine when you need to ask questions about the connections between users or objects in a database. For instance, what if we wanted to determine who the greatest influencers are among the Data Science community on Facebook? Even thinking about how you might approach this problem in a relational database is a surefire way to get a headache, but this sort of query is quite easy in a Graph Database -- one approach might be to examine all the Nodes with a metadata tag listing their job as \"Data Scientist\", and then examine who has the most shared connections among this community. \u003c/p\u003e\n\n\u003ch5\u003ePopular Graph Databases: Neo4J and OrientDB\u003c/h5\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/neo4j-logo.png\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/orientdb-logo.png\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eRDDs and Big Data\u003c/h2\u003e\n\n\u003cp\u003eThe Term \"RDD\" is short for \u003cstrong\u003e\u003cem\u003eResilient Distributed Dataset\u003c/em\u003e\u003c/strong\u003e, and it's the backbone behind all the fuss surrounding \"Big Data\". The most popular platforms that support RDDs are Hadoop and Spark, which are related to one another. Spark is built on top of Hadoop and allows users a cleaner, faster way of dealing with distributed datasets. A \u003cem\u003eResilient Distributed Dataset\u003c/em\u003e is a collection of an arbitrary number of server clusters that share a full dataset distributed between them. With multiple servers comes multiple opportunities for things like server failures, and our dataset is no good if we have no guarantee that part of our dataset might be missing when we go to query for it. Relational databases are stored on a single server, which means that when the server is down, there's no doing anything until it comes back up. However, what if our Hadoop cluster contains 100 servers, and 2 are down when we write our query?  Without a way of making sure our RDD is \u003cstrong\u003e\u003cem\u003eFault Tolerant\u003c/em\u003e\u003c/strong\u003e, we could get incorrect information back because we think we've queried the entire dataset, but don't realize that two servers weren't up to contribute their data to the query. The way that RDDs like Hadoop and Spark deal with this is by chopping the data into different labeled blocks, and then storing multiple different backups of each block across all the different server clusters. For example, let's say that we've divided our dataset into blocks labeled, A, B, and C. Server 1 will host block A, but will also contain a backup of block B, and a backup of Block C, in that order. Server 2 will host Block B, but will contain backups of Block B and Block C, while Server 3 will host C first and contain backups of A and B. When things are working smoothly, Server 1 will run the query passed only on block A, Server 2 on Block B, etc. If Server B goes down, then our query will run on Blocks A and C because of Servers 1 and 3 first, and then the backup will kick in and Server 1 will then run the query on Block B. \u003c/p\u003e\n\n\u003cp\u003eIf you've never worked with RDDs before, this probably sounds slow and unnecessarily redundant. On small or normal-sized datasets, you're absolutely right. However, in this day and age, there has been a massive explosion in the amount of data created and stored every day. When working with truly \u003cem\u003eBig Data\u003c/em\u003e, the distributed architecture provides massive speedups to query times by distributing the workload across multiple servers. \u003c/p\u003e\n\n\u003cp\u003eAs an example, let's pretend that you're a Data Scientist for a major retailer that sells everything under the sun at discount prices -- we'll call this company WallMart. At the end of every day, your boss wants to know the total number of sales in each department. If your data was stored in a relational database, this would mean executing a query on a single, truly massive relational database, which can only work as fast as its processor allows. Each query would have to go through trillions of rows to find what it needs, aggregate the sales for each category, and then return the answer. Running this query on a traditional relational database would likely take days, or even weeks! \u003c/p\u003e\n\n\u003cp\u003eHowever, this would be a very different story with an RDD like Hadoop or Spark. Instead of running this on a single machine, we can just put a small server in each store location to keep track of all that store's data and transactions. When we need to run a query, our distributed system will ask each store's server to get the total number of sales for each department \u003cem\u003esimultaneously\u003c/em\u003e. For a single store, this is a much smaller query, so it will run quite quickly. Then, once we have the totals for each department from each store, we can just combine them together into grand totals for each, getting us the answer we needed in seconds instead of days! The idea of having each server run some query or function at the same time, and then combining the results is based on the idea of \u003cstrong\u003e\u003cem\u003eMapReduce\u003c/em\u003e\u003c/strong\u003e, which is the secret sauce behind RDDs. When we ask each server to run the function or query at the same time, this is the \"Map\" step. When we combine the results from each server into a single aggregate, this is the \"Reduce\" step. \u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/hadoop.png\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/spark.png\" height=\"10%\" width=\"10%\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned about the various sorts of NoSQL Databases in the market today. We dug into the similarities and differences between them all, and also looked at a few examples where a NoSQL Database is a more natural fit for storing data than a traditional relational database. \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-nosql-databases\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-nosql-databases\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"nosql-databases"}]},{"id":45685,"name":"APPENDIX: XML","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"ged9c9937c26b1aeb31b8bdd86355dd2d","items":[{"id":440706,"title":"XML","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-xml-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-xml-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gee49ec748d2b6c3293ac50914f83e0a2"},{"id":440707,"title":"XML - Lab","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-xml-lab-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-xml-lab-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"g4c272fe3c38baec50362a6695a172a6b"}]},{"id":45686,"name":"APPENDIX: More HTML and Scraping","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"gb6fce3955e64201c3fdef982b3b4d8e3","items":[{"id":440708,"title":"HTML5 Semantic Elements","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/html5-semantic-elements-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/html5-semantic-elements-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou've seen several HTML tags such as \u003ccode\u003ehead\u003c/code\u003e, \u003ccode\u003ebody\u003c/code\u003e, \u003ccode\u003etitle\u003c/code\u003e, and \u003ccode\u003ep\u003c/code\u003e which help organize the various sections of a webpage. The arbitrary container element to organize other pieces of HTML is a \u003ccode\u003ediv\u003c/code\u003e. While flexible and versatile, too many \u003ccode\u003ediv\u003c/code\u003e tags make an HTML document look cluttered and confusing. Even when you identify or classify them with specific names, it's a lot to keep track of. It would be clearer for both developers and browsers to use more descriptive HTML elements to arrange content. That's where semantic elements come in. They allow you to say, \"this isn't \u003cem\u003ejust\u003c/em\u003e a division of text, it's a \u003cem\u003eheader\u003c/em\u003e.\" In this lesson, you'll learn more about these \u003cem\u003esemantic\u003c/em\u003e elements.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the historical reasoning behind semantic elements\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDemonstrate HTML5 semantic element use\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eExplain the Historical Reasoning Behind Semantic Elements\u003c/h2\u003e\n\n\u003cp\u003eWhen developers first began defining containers to structure HTML, they had only\none generic element available to them: the \u003ccode\u003ediv\u003c/code\u003e. Creating complex page layouts\nthen required dozens of \u003ccode\u003ediv\u003c/code\u003e elements that were often difficult to organize or\nlocate within the code. HTML authors needed a way to distinguish one \u003ccode\u003ediv\u003c/code\u003e from another,\nwhich led to \u003ccode\u003eid\u003c/code\u003e and \u003ccode\u003eclass\u003c/code\u003e attributes on elements being misused in an attempt\nto communicate what the \u003ccode\u003ediv\u003c/code\u003e was doing. For example, a document usually has\nonly one header, so it seemed sensible to write \u003ccode\u003ediv id=\"header\"\u003c/code\u003e as a way to\nsay something stronger than, \"this is a text division.\" Developers wanted to\nsay, \"this is a special division of introduction,\" but lacked the specific language\nto express it. They wanted those sections to have a \u003cem\u003esemantic meaning\u003c/em\u003e (more on that later). But the\nHTML language simply didn't have the ability to meet this need.\u003c/p\u003e\n\n\u003cp\u003eNevertheless, many HTML authors\nthought that this was a good idea and an informal standard sprang up around\nadding \u003ccode\u003eid\u003c/code\u003e attributes on elements to express their \"semantic meaning.\"\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;div id=\"header\"\u0026gt;\n  \u0026lt;div class=\"wrapper\"\u0026gt;...\u0026lt;/div\u0026gt;\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWhen the W3C (the organization that oversees the specifications for HTML and\nCSS) started writing the specification for HTML5 they wanted to create new\nelements that would eliminate the need to label so many \u003ccode\u003ediv\u003c/code\u003e elements. The\ngoals were to make the code more readable for developers and more descriptive\nfor browsers. It turned out that many developers were already using the same\nnames to label their elements, such as \u003ccode\u003eid=\"header\"\u003c/code\u003e, \u003ccode\u003eid=\"footer\"\u003c/code\u003e, \u003ccode\u003eid=\"nav\"\u003c/code\u003e,\n\u003ccode\u003eclass=\"article\"\u003c/code\u003e, etc. So HTML5 provided semantic elements that explicitly\ndescribed those functions for developers to use instead.\u003c/p\u003e\n\n\u003cp\u003eWe once used to have to identify a \u003ccode\u003ediv\u003c/code\u003e as our header section.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;div id=\"header\"\u0026gt;...\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNow we use the \u003ccode\u003eheader\u003c/code\u003e element.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;header\u0026gt;\u0026lt;/header\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWhy do we call these \u003cem\u003esemantic\u003c/em\u003e elements? Semantic elements are elements that\nwe use when the content within the element all has the same related \u003cem\u003emeaning\u003c/em\u003e.\nIn our \u003ccode\u003eheader\u003c/code\u003e example above, all the content we would put within the \u003ccode\u003eheader\u003c/code\u003e\nelement would relate to introductory content, such as titles or navigation.\u003c/p\u003e\n\n\u003ch2\u003eDemonstrate HTML5 Semantic Element Use\u003c/h2\u003e\n\n\u003cp\u003eLet's take a layout that uses \u003ccode\u003ediv\u003c/code\u003e elements and convert it to use semantic\nelements instead. This is the markup we begin with:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;div class=\"wrapper\"\u0026gt;\n  \u0026lt;div id=\"header\"\u0026gt;\n     \u0026lt;div id=\"nav\"\u0026gt;...\u0026lt;/div\u0026gt;\n  \u0026lt;/div\u0026gt;\n  \u0026lt;div id=\"main\"\u0026gt;\n    \u0026lt;div id=\"music\"\u0026gt;\n      \u0026lt;div id=\"rock\"\u0026gt;...\u0026lt;/div\u0026gt;\n      \u0026lt;div id=\"jazz\"\u0026gt;...\u0026lt;/div\u0026gt;\n    \u0026lt;/div\u0026gt;\n  \u0026lt;/div\u0026gt;\n  \u0026lt;div id=\"aside\"\u0026gt;...\u0026lt;/div\u0026gt;\n  \u0026lt;div id=\"footer\"\u0026gt;...\u0026lt;/div\u0026gt;\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNow we'll replace each instance of a \u003ccode\u003ediv\u003c/code\u003e with a semantic element that matches\nthe type of content we want it to contain.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;div class=\"wrapper\"\u0026gt;\n  \u0026lt;header\u0026gt;\n     \u0026lt;nav\u0026gt;...\u0026lt;/nav\u0026gt;\n  \u0026lt;/header\u0026gt;\n  \u0026lt;main\u0026gt;\n    \u0026lt;section id=\"music\"\u0026gt;\n      \u0026lt;article id=\"rock\"\u0026gt;...\u0026lt;/article\u0026gt;\n      \u0026lt;article id=\"jazz\"\u0026gt;...\u0026lt;/article\u0026gt;\n    \u0026lt;/section\u0026gt;\n  \u0026lt;/main\u0026gt;\n  \u0026lt;aside\u0026gt;...\u0026lt;/aside\u0026gt;\n  \u0026lt;footer\u0026gt;...\u0026lt;/footer\u0026gt;\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNotice that in cases where the content within the element is not semantically\nrelated or we have the need to create a generic box such as the \u003ccode\u003ewrapper\u003c/code\u003e, we\ncan still use \u003ccode\u003ediv\u003c/code\u003e elements as we please. As a developer, keep in mind that\nwhile these elements are intended for certain content, there are no hard rules\nabout how to configure them. You should feel comfortable configuring them in any\nway that makes the most sense to you and best suits your layout needs.\u003c/p\u003e\n\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.google.com/presentation/d/1tl0aB0EUOhLMi1Xr19UCAUTCY20FRqEDv-oDGg2cTkg/edit?usp=sharing\"\u003ePresentation Slides\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/embed/V28xLFEYaSQ\"\u003eHTML5 Semantic Elements Lecture Video\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://diveintohtml5.info/semantics.html#new-elements\"\u003eDive into HTML5 - Semantic Elements\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\"\u003eMDN - HTML - Element Reference\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIf the content within an element is all semantically related, it is best\npractice to use the appropriate HTML5 semantic element if one applies. This\ncleans up our code and makes it more readable for developers and more\ndescriptive to browsers. There are a variety of semantic elements you can use to\nstructure your content, and you can also still use \u003ccode\u003ediv\u003c/code\u003e elements to create\ngeneric boxes or grouping elements as needed.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"html5-semantic-elements-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"html5-semantic-elements-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/html5-semantic-elements-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"html5-semantic-elements-2"},{"id":440709,"title":"HTML Links - Lab","type":"WikiPage","indent":1,"locked":false,"requirement":null,"completed":false,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-links-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-links-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou've seen HTML tags and tag attributes. In this lab, you'll bring those together by investigating the anchor tag, \u003ccode\u003ea\u003c/code\u003e. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\n* Use an anchor tag to create a link\u003c/p\u003e\n\n\u003ch2\u003eUse an \u003ccode\u003ea\u003c/code\u003e Tag to Create a Link\u003c/h2\u003e\n\n\u003cp\u003eOpen \u003ccode\u003eindex.html\u003c/code\u003e in your text editor. Add an \u003ccode\u003ea\u003c/code\u003e tag with the inner text (the\ntext between the \u003ccode\u003e\u0026lt;a\u0026gt;\u003c/code\u003e tag and the \u003ccode\u003e\u0026lt;/a\u0026gt;\u003c/code\u003e tag) of\n\u003ccode\u003eFlatiron School\u003c/code\u003e anywhere in the file. Then set the \u003ccode\u003ehref\u003c/code\u003e attribute of your\nnew link element to \u003ccode\u003ehttps://flatironschool.com\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eViewing Your Work in the Browser\u003c/h2\u003e\n\n\u003cp\u003eOnce you add the \u003ccode\u003ea\u003c/code\u003e tag to your web document, preview it in your web browser!\nAs a reminder, here's how to do that via learn:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-html-links-lab/master/images/httpserver.gif\" width=\"750\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eAddtional Resources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a\"\u003eMozilla Developer Network: HTML \u003ccode\u003e\u0026lt;a\u0026gt;\u003c/code\u003e Tag\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e[Learn IDE Help]: \u003ca href=\"http://help.learn.co/the-learn-ide/common-ide-questions/viewing-html-pages-in-the-learn-ide\"\u003ehttp://help.learn.co/the-learn-ide/common-ide-questions/viewing-html-pages-in-the-learn-ide\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eHere you saw how an attribute helps the \u003ccode\u003ea\u003c/code\u003e tag do its job, which is to link to another location.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-html-links-lab\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-html-links-lab\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-html-links-lab/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"html-links-lab"}]}],"pages":[{"exportId":"phase-1-project-description","title":"Phase 1 Project Description","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-phase-1-project-v2-4\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-phase-1-project-v2-4\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-phase-1-project-v2-4/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eYou've made it all the way through the first phase of this course - take a minute to celebrate your awesomeness!\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-phase-1-project-v2-4/master/awesome.gif\" alt=\"awesome\"\u003e\u003c/p\u003e\n\u003cp\u003eNow you will put your new skills to use with a large end-of-Phase project!\u003c/p\u003e\n\u003cp\u003eIn this project description, we will cover:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#project-overview\"\u003e\u003cstrong\u003e\u003cem\u003eProject Overview:\u003c/em\u003e\u003c/strong\u003e\u003c/a\u003e the project goal, audience, and dataset\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#deliverables\"\u003e\u003cstrong\u003e\u003cem\u003eDeliverables:\u003c/em\u003e\u003c/strong\u003e\u003c/a\u003e the specific items you are required to produce for this project\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#grading\"\u003e\u003cstrong\u003e\u003cem\u003eGrading:\u003c/em\u003e\u003c/strong\u003e\u003c/a\u003e how your project will be scored\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#getting-started\"\u003e\u003cstrong\u003e\u003cem\u003eGetting Started:\u003c/em\u003e\u003c/strong\u003e\u003c/a\u003e guidance for how to begin your first project\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eProject Overview\u003c/h2\u003e\n\u003cp\u003eFor this project, you will use exploratory data analysis to generate insights for a business stakeholder.\u003c/p\u003e\n\u003ch3\u003eBusiness Problem\u003c/h3\u003e\n\u003cp\u003eMicrosoft sees all the big companies creating original video content and they want to get in on the fun. They have decided to create a new movie studio, but they don‚Äôt know anything about creating movies. You are charged with exploring what types of films are currently doing the best at the box office. You must then translate those findings into actionable insights that the head of Microsoft's new movie studio can use to help decide what type of films to create.\u003c/p\u003e\n\u003ch3\u003eThe Data\u003c/h3\u003e\n\u003cp\u003eIn the folder \u003ccode\u003ezippedData\u003c/code\u003e are movie datasets from:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.boxofficemojo.com/\"\u003eBox Office Mojo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.imdb.com/\"\u003eIMDB\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.rottentomatoes.com/\"\u003eRotten Tomatoes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.themoviedb.org/\"\u003eTheMovieDB\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.the-numbers.com/\"\u003eThe Numbers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eBecause it was collected from various locations, the different files have different formats. Some are compressed CSV (comma-separated values) or TSV (tab-separated values) files that can be opened using spreadsheet software or \u003ccode\u003epd.read_csv\u003c/code\u003e, while the data from IMDB is located in a SQLite database.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-phase-1-project-v2-4/master/movie_data_erd.jpeg\" alt=\"movie data erd\"\u003e\u003c/p\u003e\n\u003cp\u003eNote that the above diagram shows ONLY the IMDB data. You will need to look carefully at the features to figure out how the IMDB data relates to the other provided data files.\u003c/p\u003e\n\u003cp\u003eIt is up to you to decide what data from this to use and how to use it. If you want to make this more challenging, you can scrape websites or make API calls to get additional data. If you are feeling overwhelmed or behind, we recommend you use only the following data files:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eim.db.zip\u003c/code\u003e\n\u003cul\u003e\n\u003cli\u003eZipped SQLite database (you will need to unzip then query using SQLite)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003emovie_basics\u003c/code\u003e and \u003ccode\u003emovie_ratings\u003c/code\u003e tables are most relevant\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebom.movie_gross.csv.gz\u003c/code\u003e\n\u003cul\u003e\n\u003cli\u003eCompressed CSV file (you can open without expanding the file using \u003ccode\u003epd.read_csv\u003c/code\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eKey Points\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eYour analysis should yield three concrete business recommendations.\u003c/strong\u003e The ultimate purpose of exploratory analysis is not just to learn about the data, but to help an organization perform better. Explicitly relate your findings to business needs by recommending actions that you think the business (Microsoft) should take.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eCommunicating about your work well is extremely important.\u003c/strong\u003e Your ability to provide value to an organization - or to land a job there - is directly reliant on your ability to communicate with them about what you have done and why it is valuable. Create a storyline your audience (the head of Microsoft's new movie studio) can follow by walking them through the steps of your process, highlighting the most important points and skipping over the rest.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eUse plenty of visualizations.\u003c/strong\u003e Visualizations are invaluable for exploring your data and making your findings accessible to a non-technical audience. Spotlight visuals in your presentation, but only ones that relate directly to your recommendations. Simple visuals are usually best (e.g. bar charts and line graphs), and don't forget to format them well (e.g. labels, titles).\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eDeliverables\u003c/h2\u003e\n\u003cp\u003eThere are three deliverables for this project:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA \u003cstrong\u003enon-technical presentation\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eA \u003cstrong\u003eJupyter Notebook\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eA \u003cstrong\u003eGitHub repository\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eNon-Technical Presentation\u003c/h3\u003e\n\u003cp\u003eThe non-technical presentation is a slide deck presenting your analysis to business stakeholders.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e\u003cem\u003eNon-technical\u003c/em\u003e\u003c/strong\u003e does not mean that you should avoid mentioning the technologies or techniques that you used, it means that you should explain any mentions of these technologies and avoid assuming that your audience is already familiar with them.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003cem\u003eBusiness stakeholders\u003c/em\u003e\u003c/strong\u003e means that the audience for your presentation is Microsoft, not the class or teacher. Do not assume that they are already familiar with the specific business problem, but also do not explain to them what Microsoft is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe presentation describes the project \u003cstrong\u003e\u003cem\u003egoals, data, methods, and results\u003c/em\u003e\u003c/strong\u003e. It must include at least \u003cstrong\u003e\u003cem\u003ethree visualizations\u003c/em\u003e\u003c/strong\u003e which correspond to \u003cstrong\u003e\u003cem\u003ethree business recommendations\u003c/em\u003e\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWe recommend that you follow this structure, although the slide titles should be specific to your project:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eBeginning\n\u003cul\u003e\n\u003cli\u003eOverview\u003c/li\u003e\n\u003cli\u003eBusiness Understanding\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eMiddle\n\u003cul\u003e\n\u003cli\u003eData Understanding\u003c/li\u003e\n\u003cli\u003eData Analysis\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eEnd\n\u003cul\u003e\n\u003cli\u003eRecommendations\u003c/li\u003e\n\u003cli\u003eNext Steps\u003c/li\u003e\n\u003cli\u003eThank You\n\u003cul\u003e\n\u003cli\u003eThis slide should include a prompt for questions as well as your contact information (name and LinkedIn profile)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eYou will give a live presentation of your slides and submit them in PDF format on Canvas. The slides should also be present in the GitHub repository you submit with a file name of \u003ccode\u003epresentation.pdf\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eThe graded elements of the presentation are:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePresentation Content\u003c/li\u003e\n\u003cli\u003eSlide Style\u003c/li\u003e\n\u003cli\u003ePresentation Delivery and Answers to Questions\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSee the \u003ca href=\"#grading\"\u003eGrading\u003c/a\u003e section for further explanation of these elements.\u003c/p\u003e\n\u003cp\u003eFor further reading on creating professional presentations, check out:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/learn-co-curriculum/dsc-project-presentation-content\"\u003ePresentation Content\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/learn-co-curriculum/dsc-project-slide-design\"\u003eSlide Style\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJupyter Notebook\u003c/h3\u003e\n\u003cp\u003eThe Jupyter Notebook is a notebook that uses Python and Markdown to present your analysis to a data science audience.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e\u003cem\u003ePython and Markdown\u003c/em\u003e\u003c/strong\u003e means that you need to construct an integrated \u003ccode\u003e.ipynb\u003c/code\u003e file with Markdown (headings, paragraphs, links, lists, etc.) and Python code to create a well-organized, skim-able document.\n\u003cul\u003e\n\u003cli\u003eThe notebook kernel should be restarted and all cells run before submission, to ensure that all code is runnable in order.\u003c/li\u003e\n\u003cli\u003eMarkdown should be used to frame the project with a clear introduction and conclusion, as well as introducing each of the required elements.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003cem\u003eData science audience\u003c/em\u003e\u003c/strong\u003e means that you can assume basic data science proficiency in the person reading your notebook. This differs from the non-technical presentation.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAlong with the presentation, the notebook also describes the project \u003cstrong\u003e\u003cem\u003egoals, data, methods, and results\u003c/em\u003e\u003c/strong\u003e. It must include at least \u003cstrong\u003e\u003cem\u003ethree visualizations\u003c/em\u003e\u003c/strong\u003e which correspond to \u003cstrong\u003e\u003cem\u003ethree business recommendations\u003c/em\u003e\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eYou will submit the notebook in PDF format on Canvas as well as in \u003ccode\u003e.ipynb\u003c/code\u003e format in your GitHub repository.\u003c/p\u003e\n\u003cp\u003eThe graded elements for the Jupyter Notebook are:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eBusiness Understanding\u003c/li\u003e\n\u003cli\u003eData Understanding\u003c/li\u003e\n\u003cli\u003eData Preparation\u003c/li\u003e\n\u003cli\u003eData Analysis\u003c/li\u003e\n\u003cli\u003eVisualization\u003c/li\u003e\n\u003cli\u003eCode Quality\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSee the \u003ca href=\"#grading\"\u003eGrading\u003c/a\u003e section for further explanation of these elements.\u003c/p\u003e\n\u003ch3\u003eGitHub Repository\u003c/h3\u003e\n\u003cp\u003eThe GitHub repository is the cloud-hosted directory containing all of your project files as well as their version history.\u003c/p\u003e\n\u003cp\u003eThis repository link will be the project link that you include on your resume, LinkedIn, etc. for prospective employers to view your work. Note that we typically recommend that 3 links are highlighted (out of 5 projects) so don't stress too much about getting this one to be perfect! There will also be time after graduation for cosmetic touch-ups.\u003c/p\u003e\n\u003cp\u003eA professional GitHub repository has:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ccode\u003eREADME.md\u003c/code\u003e\n\u003cul\u003e\n\u003cli\u003eA file called \u003ccode\u003eREADME.md\u003c/code\u003e at the root of the repository directory, written in Markdown; this is what is rendered when someone visits the link to your repository in the browser\u003c/li\u003e\n\u003cli\u003eThis file contains these sections:\n\u003cul\u003e\n\u003cli\u003eOverview\u003c/li\u003e\n\u003cli\u003eBusiness Understanding\n\u003cul\u003e\n\u003cli\u003eInclude stakeholder and key business questions\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eData Understanding and Analysis\n\u003cul\u003e\n\u003cli\u003eSource of data\u003c/li\u003e\n\u003cli\u003eDescription of data\u003c/li\u003e\n\u003cli\u003eThree visualizations (the same visualizations presented in the slides and notebook)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConclusion\n\u003cul\u003e\n\u003cli\u003eSummary of conclusions including three relevant findings\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCommit history\n\u003cul\u003e\n\u003cli\u003eProgression of updates throughout the project time period, not just immediately before the deadline\u003c/li\u003e\n\u003cli\u003eClear commit messages\u003c/li\u003e\n\u003cli\u003eCommits from all team members (if a group project)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOrganization\n\u003cul\u003e\n\u003cli\u003eClear folder structure\u003c/li\u003e\n\u003cli\u003eClear names of files and folders\u003c/li\u003e\n\u003cli\u003eEasily-located notebook and presentation linked in the README\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eNotebook(s)\n\u003cul\u003e\n\u003cli\u003eClearly-indicated final notebook that runs without errors\u003c/li\u003e\n\u003cli\u003eExploratory/working notebooks (can contain errors, redundant code, etc.) from all team members (if a group project)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e.gitignore\u003c/code\u003e\n\u003cul\u003e\n\u003cli\u003eA file called \u003ccode\u003e.gitignore\u003c/code\u003e at the root of the repository directory instructs Git to ignore large, unnecessary, or private files\n\u003cul\u003e\n\u003cli\u003eBecause it starts with a \u003ccode\u003e.\u003c/code\u003e, you will need to type \u003ccode\u003els -a\u003c/code\u003e in the terminal in order to see that it is there\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eGitHub maintains a \u003ca href=\"https://github.com/github/gitignore/blob/master/Python.gitignore\"\u003ePython .gitignore\u003c/a\u003e that may be a useful starting point for your version of this file\u003c/li\u003e\n\u003cli\u003eTo tell Git to ignore more files, just add a new line to \u003ccode\u003e.gitignore\u003c/code\u003e for each new file name\n\u003cul\u003e\n\u003cli\u003eConsider adding \u003ccode\u003e.DS_Store\u003c/code\u003e if you are using a Mac computer, as well as project-specific file names\u003c/li\u003e\n\u003cli\u003eIf you are running into an error message because you forgot to add something to \u003ccode\u003e.gitignore\u003c/code\u003e and it is too large to be pushed to GitHub \u003ca href=\"https://medium.com/analytics-vidhya/tutorial-removing-large-files-from-git-78dbf4cf83a?sk=c3763d466c7f2528008c3777192dfb95\"\u003ethis blog post\u003c/a\u003e(friend link) should help you address this\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eYou wil submit a link to the GitHub repository on Canvas.\u003c/p\u003e\n\u003cp\u003eSee the \u003ca href=\"#grading\"\u003eGrading\u003c/a\u003e section for further explanation of how the GitHub repository will be graded.\u003c/p\u003e\n\u003cp\u003eFor further reading on creating professional notebooks and \u003ccode\u003eREADME\u003c/code\u003es, check out \u003ca href=\"https://github.com/learn-co-curriculum/dsc-repo-readability-v2-2\"\u003ethis reading\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003eGrading\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eTo pass this project, you must pass each project rubric objective.\u003c/em\u003e\u003c/strong\u003e The project rubric objectives for Phase 1 are:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eAttention to Detail\u003c/li\u003e\n\u003cli\u003eData Communication\u003c/li\u003e\n\u003cli\u003eAuthoring Jupyter Notebooks\u003c/li\u003e\n\u003cli\u003eData Manipulation and Analysis with \u003ccode\u003epandas\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3\u003eAttention to Detail\u003c/h3\u003e\n\u003cp\u003eIf you have searched for a job, you have probably seen \"attention to detail\" appear on a job description. In a \u003ca href=\"https://www.payscale.com/data-packages/job-skills\"\u003esurvey of hiring managers\u003c/a\u003e, fully 56% of them said they felt that recent college grads lacked this skill. So, what does \"attention to detail\" mean, and how will you be graded on it at Flatiron School?\u003c/p\u003e\n\u003cp\u003eAttention to detail means that you accomplish tasks thoroughly and accurately. You need to understand what is being asked of you, and double-check that your work fulfills all of the requirements. This will help make you a \"no-brainer hire\" because it helps employers feel confident that they will not have to double-check your work. For further reading, check out \u003ca href=\"https://www.indeed.com/career-advice/career-development/attention-to-detail\"\u003ethis article\u003c/a\u003e from Indeed.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eAttention to detail will be graded based on the project checklist. In Phase 1, you need to complete 60% (6 out of 10) or more of the checklist elements in order to pass the Attention to Detail objective.\u003c/em\u003e\u003c/strong\u003e The standard for passing the Attention to Detail objective will increase with each Phase, until you are required to complete all elements to pass Phase 5 (Capstone).\u003c/p\u003e\n\u003cp\u003eThe \u003ca href=\"https://docs.google.com/document/d/1PjJwdek9EeIy9tYdvlC4bvKvwYcI2xHO1wEMENfqo5E/edit?usp=sharing\"\u003ePhase 1 Project Checklist\u003c/a\u003e is linked here as well as directly in Canvas. The elements highlighted in yellow are the elements you need to complete in order to pass this objective. We recommend that you make your own copy of this document, so that you can check off each element as you complete it. The checklist also contains more specific, detailed guidance about the deliverables described above.\u003c/p\u003e\n\u003cp\u003eBelow are the definitions of each rubric level for this objective. This information is also summarized in the rubric, which is attached to the project submission assignment.\u003c/p\u003e\n\u003ch4\u003eExceeds Objective\u003c/h4\u003e\n\u003cp\u003e70% or more of the project checklist items are complete\u003c/p\u003e\n\u003ch4\u003eMeets Objective (Passing Bar)\u003c/h4\u003e\n\u003cp\u003e60% of the project checklist items are complete\u003c/p\u003e\n\u003ch4\u003eApproaching Objective\u003c/h4\u003e\n\u003cp\u003e50% of the project checklist items are complete\u003c/p\u003e\n\u003ch4\u003eDoes Not Meet Objective\u003c/h4\u003e\n\u003cp\u003e40% or fewer of the project checklist items are complete\u003c/p\u003e\n\u003ch3\u003eData Communication\u003c/h3\u003e\n\u003cp\u003eCommunication is another key \"soft skill\". In \u003ca href=\"https://www.payscale.com/data-packages/job-skills\"\u003ethe same survey mentioned above\u003c/a\u003e, 46% of hiring managers said that recent college grads were missing this skill.\u003c/p\u003e\n\u003cp\u003eBecause \"communication\" can encompass such a wide range of contexts and skills, we will specifically focus our Phase 1 objective on Data Communication. We define Data Communication as:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eCommunicating basic data analysis results to diverse audiences via writing and live presentation\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eTo further define some of these terms:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eBy \"basic data analysis\" we mean that you are filtering, sorting, grouping, and/or aggregating the data in order to answer business questions. This project does not involve inferential statistics or machine learning, although descriptive statistics such as measures of central tendency are encouraged.\u003c/li\u003e\n\u003cli\u003eBy \"results\" we mean your \u003cstrong\u003e\u003cem\u003ethree visualizations and recommendations\u003c/em\u003e\u003c/strong\u003e.\u003c/li\u003e\n\u003cli\u003eBy \"diverse audiences\" we mean that your presentation and notebook are appropriately addressing a business and data science audience, respectively.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eBelow are the definitions of each rubric level for this objective. This information is also summarized in the rubric, which is attached to the project submission assignment.\u003c/p\u003e\n\u003ch4\u003eExceeds Objective\u003c/h4\u003e\n\u003cp\u003eCreates and describes appropriate visualizations for given business questions, where each visualization fulfills all elements of the checklist\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis \"checklist\" refers to the Data Visualization checklist within the larger Phase 1 Project Checklist\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4\u003eMeets Objective (Passing Bar)\u003c/h4\u003e\n\u003cp\u003eCreates and describes appropriate visualizations for given business questions\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis objective can be met even if all checklist elements are not fulfilled. For example, if there is some illegible text in one of your visualizations, you can still meet this objective\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4\u003eApproaching Objective\u003c/h4\u003e\n\u003cp\u003eCreates visualizations that are not related to the business questions, or uses an inappropriate type of visualization\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEven if you create very compelling visualizations, you cannot pass this objective if the visualizations are not related to the business questions\u003c/p\u003e\n\u003cp\u003eAn example of an inappropriate type of visualization would be using a line graph to show the correlation between two independent variables, when a scatter plot would be more appropriate\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4\u003eDoes Not Meet Objective\u003c/h4\u003e\n\u003cp\u003eDoes not submit the required number of visualizations\u003c/p\u003e\n\u003ch3\u003eAuthoring Jupyter Notebooks\u003c/h3\u003e\n\u003cp\u003eAccording to \u003ca href=\"https://www.kaggle.com/kaggle-survey-2020\"\u003eKaggle's 2020 State of Data Science and Machine Learning Survey\u003c/a\u003e, 74.1% of data scientists use a Jupyter development environment, which is more than twice the percentage of the next-most-popular IDE, Visual Studio Code. Jupyter Notebooks allow for reproducible, skim-able code documents for a data science audience. Comfort and skill with authoring Jupyter Notebooks will prepare you for job interviews, take-home challenges, and on-the-job tasks as a data scientist.\u003c/p\u003e\n\u003cp\u003eThe key feature that distinguishes \u003cem\u003eauthoring Jupyter Notebooks\u003c/em\u003e from simply \u003cem\u003ewriting Python code\u003c/em\u003e is the fact that Markdown cells are integrated into the notebook along with the Python cells in a notebook. You have seen examples of this throughout the curriculum, but now it's time for you to practice this yourself!\u003c/p\u003e\n\u003cp\u003eBelow are the definitions of each rubric level for this objective. This information is also summarized in the rubric, which is attached to the project submission assignment.\u003c/p\u003e\n\u003ch4\u003eExceeds Objective\u003c/h4\u003e\n\u003cp\u003eUses Markdown and code comments to create a well-organized, skim-able document that follows all best practices\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eRefer to the \u003ca href=\"https://github.com/learn-co-curriculum/dsc-repo-readability-v2-2\"\u003erepository readability reading\u003c/a\u003e for more tips on best practices\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4\u003eMeets Objective (Passing Bar)\u003c/h4\u003e\n\u003cp\u003eUses some Markdown to create an organized notebook, with an introduction at the top and a conclusion at the bottom\u003c/p\u003e\n\u003ch4\u003eApproaching Objective\u003c/h4\u003e\n\u003cp\u003eUses Markdown cells to organize, but either uses only headers and does not provide any explanations or justifications, or uses only plaintext without any headers to segment out sections of the notebook\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHeaders in Markdown are delineated with one or more \u003ccode\u003e#\u003c/code\u003es at the start of the line. You should have a mixture of headers and plaintext (text where the line does not start with \u003ccode\u003e#\u003c/code\u003e)\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4\u003eDoes Not Meet Objective\u003c/h4\u003e\n\u003cp\u003eDoes not submit a notebook, or does not use Markdown cells at all to organize the notebook\u003c/p\u003e\n\u003ch3\u003eData Manipulation and Analysis with \u003ccode\u003epandas\u003c/code\u003e\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003epandas\u003c/code\u003e is a very popular data manipulation library, with over 2 million downloads on Anaconda (\u003ccode\u003econda install pandas\u003c/code\u003e) and over 19 million downloads on PyPI (\u003ccode\u003epip install pandas\u003c/code\u003e) at the time of this writing. In our own internal data, we see that the overwhelming majority of Flatiron School DS grads use \u003ccode\u003epandas\u003c/code\u003e on the job in some capacity.\u003c/p\u003e\n\u003cp\u003eUnlike in base Python, where the Zen of Python says \"There should be one-- and preferably only one --obvious way to do it\", there is often more than one valid way to do something in \u003ccode\u003epandas\u003c/code\u003e. However there are still more efficient and less efficient ways to use it. Specifically, the best \u003ccode\u003epandas\u003c/code\u003e code is \u003cem\u003eperformant\u003c/em\u003e and \u003cem\u003eidiomatic\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003ePerformant \u003ccode\u003epandas\u003c/code\u003e code utilizes methods and broadcasting rather than user-defined functions or \u003ccode\u003efor\u003c/code\u003e loops. For example, if you need to strip whitespace from a column containing string data, the best approach would be to use the \u003ca href=\"https://pandas.pydata.org/docs/reference/api/pandas.Series.str.strip.html\"\u003e\u003ccode\u003epandas.Series.str.strip\u003c/code\u003e method\u003c/a\u003e rather than writing your own function or writing a loop. Or if you want to multiply everything in a column by 100, the best approach would be to use broadcasting (e.g. \u003ccode\u003edf[\"column_name\"] * 100\u003c/code\u003e) instead of a function or loop. You can still write your own functions if needed, but only after checking that there isn't a built-in way to do it.\u003c/p\u003e\n\u003cp\u003eIdiomatic \u003ccode\u003epandas\u003c/code\u003e code has variable names that are meaningful words or abbreviations in English, that are related to the purpose of the variables. You can still use \u003ccode\u003edf\u003c/code\u003e as the name of your DataFrame if there is only one main DataFrame you are working with, but as soon as you are merging multiple DataFrames or taking a subset of a DataFrame, you should use meaningful names. For example, \u003ccode\u003edf2\u003c/code\u003e would not be an idiomatic name, but \u003ccode\u003emovies_and_reviews\u003c/code\u003e could be.\u003c/p\u003e\n\u003cp\u003eWe also recommend that you rename all DataFrame columns so that their meanings are more understandable, although it is fine to have acronyms. For example, \u003ccode\u003e\"col1\"\u003c/code\u003e would not be an idiomatic name, but \u003ccode\u003e\"USD\"\u003c/code\u003e could be.\u003c/p\u003e\n\u003cp\u003eBelow are the definitions of each rubric level for this objective. This information is also summarized in the rubric, which is attached to the project submission assignment.\u003c/p\u003e\n\u003ch4\u003eExceeds Objective\u003c/h4\u003e\n\u003cp\u003eUses \u003ccode\u003epandas\u003c/code\u003e to prepare data and answer business questions in an idiomatic, performant way\u003c/p\u003e\n\u003ch4\u003eMeets Objective (Passing Bar)\u003c/h4\u003e\n\u003cp\u003eSuccessfully uses \u003ccode\u003epandas\u003c/code\u003e to prepare data in order to answer business questions\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis includes projects that \u003cem\u003eoccasionally\u003c/em\u003e use base Python when \u003ccode\u003epandas\u003c/code\u003e methods would be more appropriate (such as using \u003ccode\u003eenumerate()\u003c/code\u003e on a DataFrame), or occasionally performs operations that do not appear to have any relevance to the business questions\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4\u003eApproaching Objective\u003c/h4\u003e\n\u003cp\u003eUses \u003ccode\u003epandas\u003c/code\u003e to prepare data, but makes significant errors\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eExamples of significant errors include: the result presented does not actually answer the stated question, the code produces errors, the code \u003cem\u003econsistently\u003c/em\u003e uses base Python when \u003ccode\u003epandas\u003c/code\u003e methods would be more appropriate, or the submitted notebook contains significant quantities of code that is unrelated to the presented analysis (such as copy/pasted code from the curriculum or StackOverflow)\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4\u003eDoes Not Meet Objective\u003c/h4\u003e\n\u003cp\u003eUnable to prepare data using \u003ccode\u003epandas\u003c/code\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis includes projects that successfully answer the business questions, but do not use \u003ccode\u003epandas\u003c/code\u003e (e.g. use only base Python, or use some other tool like R, Tableau, or Excel)\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2\u003eGetting Started\u003c/h2\u003e\n\u003cp\u003ePlease start by reviewing the contents of this project description. If you have any questions, please ask your instructor ASAP.\u003c/p\u003e\n\u003cp\u003eNext, you will need to complete the \u003ca href=\"#project_proposal\"\u003e\u003cstrong\u003e\u003cem\u003eProject Proposal\u003c/em\u003e\u003c/strong\u003e\u003c/a\u003e which must be reviewed by your instructor before you can continue with the project.\u003c/p\u003e\n\u003cp\u003eThen, you will need to create a GitHub repository. There are three options:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eLook at the \u003ca href=\"https://github.com/learn-co-curriculum/dsc-project-template\"\u003ePhase 1 Project Templates and Examples repo\u003c/a\u003e and follow the directions in the MVP branch.\u003c/li\u003e\n\u003cli\u003eFork the \u003ca class=\"inline_disabled\" href=\"https://github.com/learn-co-curriculum/dsc-phase-1-project-v2-4\" target=\"_blank\"\u003ePhase 1 Project Repository\u003c/a\u003e, clone it locally, and work in the \u003ccode\u003estudent.ipynb\u003c/code\u003e file. Make sure to also add and commit a PDF of your presentation to your repository with a file name of \u003ccode\u003epresentation.pdf\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eCreate a new repository from scratch by going to \u003ca href=\"https://github.com/new\"\u003egithub.com/new\u003c/a\u003e and copying the data files from one of the above resources into your new repository. This approach will result in the most professional-looking portfolio repository, but can be more complicated to use. So if you are getting stuck with this option, try one of the above options instead.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eThis project will give you a valuable opportunity to develop your data science skills using real-world data. The end-of-phase projects are a critical part of the program because they give you a chance to bring together all the skills you've learned, apply them to realistic projects for a business stakeholder, practice communication skills, and get feedback to help you improve. You've got this!\u003c/p\u003e","frontPage":false},{"exportId":"short-video-list-comprehensions-and-dictionary-comprehensions","title":"Short Video: List Comprehensions and Dictionary Comprehensions","type":"WikiPage","content":"\u003cdiv style=\"padding: 62.5% 0 0 0; position: relative;\"\u003e\u003ciframe style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\" title=\"comprehensions_phase1_gd\" src=\"https://player.vimeo.com/video/713398582?h=e73b68c5ba\u0026amp;badge=0\u0026amp;autopause=0\u0026amp;player_id=0\u0026amp;app_id=58479\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\u003c/div\u003e","frontPage":false},{"exportId":"how-to-use-lesson-priorities-live","title":"How to Use Lesson Priorities (Live)","type":"WikiPage","content":"\u003cp\u003eThis page explains how to use the daily Lesson Priorities pages that are shared throughout the program. Your instructor may also provide guidance that modifies these instructions.\u003c/p\u003e\n\u003ch1\u003eMotivation\u003c/h1\u003e\n\u003cp\u003eOur program is fast paced, and we want to help you focus your time on the activities that will best support your learning. The Canvas courses contain a lot of material - more than most students will be able to complete during the program. The Lesson Priorities pages can help you make sure that you are learning the core concepts and skills on schedule so you stay on track throughout the program.\u003c/p\u003e\n\u003ch1\u003ePriority Levels\u003c/h1\u003e\n\u003cp\u003eThe Lesson Priorities pages assign priority levels to readings to help you manage your time throughout the program. Priority levels help you think about when or whether to complete a reading if you don‚Äôt have enough time to complete all the readings for a given day.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eFirst Priority: Focus.\u003c/strong\u003e 1st priority lessons cover core concepts and skills, so you should complete all of them according to your schedule. This will ensure that you are prepared for the upcoming lectures and other activities. If you are unable to complete these readings on schedule, make sure to finish them the following day and/or reach out to your instructor for support.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eSecond Priority: Support.\u003c/strong\u003e 2nd priority lessons are important but not critical for your success in the program. They are often the \"lab\" assignments associated with a lesson, where you are not being introduced to new topics but are instead getting the opportunity to practice them. Complete them the day they are assigned if you have time, but don‚Äôt worry if you are unable to. You can complete them later when you might have more time.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eThird Priority: Extension.\u003c/strong\u003e 3rd priority lessons provide additional practice or teach supplemental content that is not needed to succeed in the program. Complete these readings only after you have completed all previous 1st or 2nd priority lessons.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1\u003eAdjusting the Schedule\u003c/h1\u003e\n\u003cp\u003eThe readings for each day are chosen to prepare you for the lectures that will be delivered that day or the following day. However, you should feel free to adjust your personal reading schedule as needed for your own learning. Some possible adjustments you might make:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eIf Monday‚Äôs readings cover material for a lecture that is happening on Tuesday afternoon, complete some of those readings on Tuesday morning instead.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you complete all of the readings for a day, go back and complete unfinished readings from prior days or get a head start on the next day‚Äôs readings.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you know you will need to be absent, complete readings ahead of schedule so you won‚Äôt be behind when you return.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIf you have any questions about how best to adjust your reading schedule, reach out to your instructor.\u003c/p\u003e\n\u003ch1\u003eCumulative Labs\u003c/h1\u003e\n\u003cp\u003eThere are a few Cumulative Labs in each Phase to help assess your progress in the program. If you can complete these labs, you are on track for success with the rest of the Phase and the upcoming Code Challenge. If you find yourself struggling, revisit the prior lessons relevant to the parts where you get stuck. If you are unable to complete one, please reach out for assistance.\u003c/p\u003e\n\u003cp\u003eComplete the Cumulative Labs soon after you‚Äôve participated in the lecture that covers the topic. Your instructor may also give you special instructions about when or how to complete the Cumulative Labs - hold off on doing them if your instructor has specific plans for when/how to do them.\u003c/p\u003e\n\u003ch1\u003eAppendix\u003c/h1\u003e\n\u003cp\u003eSome lessons have a low enough priority that they are not included in the main topic modules. These lessons are contained in modules with names that start with \"APPENDIX\". Feel free to browse these sections for additional content that interests you, but you will not be assessed on this content and it's less likely to be relevant for your job search.\u003c/p\u003e\n\u003ch1\u003eSummary\u003c/h1\u003e\n\u003cp\u003eThe Lesson Priorities pages should help you manage your time through Phases 1-4. Most of your time in the program will be spent outside of live class sessions, so the quality of your learning experience will depend greatly on how you use that time. Your instructor will give some instructions for how to use your time. Follow their instructions, and then use these Reading Priorities pages to help decide how best to use any remaining unstructured time. If you ever have any questions about what you should be doing, reach out to your peers or your instructor.\u003c/p\u003e","frontPage":false},{"exportId":"setting-up-a-professional-data-science-environment-windows-installation","title":"Setting up a Professional Data Science Environment - Windows Installation","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-science-env-windows-installation\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-windows-installation\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-windows-installation/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eThere are two major pieces we need to install in order to set you up for success as a professional data scientist! In this lesson, we will be installing Git and Anaconda for Windows.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eInstall Git\u003c/li\u003e\n\u003cli\u003eInstall Anaconda\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eLet‚Äôs start by getting Git and Anaconda installed.\u003c/p\u003e\n\u003cp\u003ePlease note - the exact names and versions will change over time.\u003c/p\u003e\n\u003ch2\u003eInstalling Git\u003c/h2\u003e\n\u003ch3\u003eOverview:\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eDownload the install package from \u003ca href=\"https://git-scm.com/download/win\" target=\"_blank\"\u003ehere\u003c/a\u003e.\n\u003cul\u003e\n\u003cli\u003eIf you do not know whether you need the 32 or 64-bit install, check your system type. On Windows 10, head to Settings \u0026gt; System \u0026gt; About. Under the Device specifications header, next to System type, you‚Äôll see if Windows and your processor are 32-bit or 64-bit.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOpen the downloaded exe file\n\u003cul\u003e\n\u003cli\u003eYou can either click the downloaded file at the bottom of your browser to open, or navigate to your downloads folder\u003c/li\u003e\n\u003cli\u003eIt may open a window asking if you want to allow this application to make changes to your device, click ‚ÄúYes‚Äù\u003c/li\u003e\n\u003cli\u003eClick ‚ÄúNext‚Äù to accept the license\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSelect the installation desination\n\u003cul\u003e\n\u003cli\u003eThe default option is recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSelect components\n\u003cul\u003e\n\u003cli\u003eMake sure to keep the ‚ÄúWindows Explorer integration‚Äù options checked\u003c/li\u003e\n\u003cli\u003eOtherwise, the default options are recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eChoose a default editor that you are comfortable with, or choose either Nano or Visual Studio Code if you have not used an editor before\n\u003cul\u003e\n\u003cli\u003eIf you know or have used vi/vim, feel free to use it (otherwise it is not recommended)\u003c/li\u003e\n\u003cli\u003eYou must have the editor installed to continue. You can set a default now and change it later.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAdjust the PATH environment\n\u003cul\u003e\n\u003cli\u003eSelect ‚ÄúUse Git from the Windows Command Prompt‚Äù\u003c/li\u003e\n\u003cli\u003eThe first option is also fine, as you‚Äôll mainly be using Git from the new ‚ÄúGit Bash‚Äù program that is being installed, but the second option is ideal as it‚Äôll give you the option of using it through either Git Bash or the Windows Command Prompt in the future if you wish\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eChoose HTTPS transport backend.\n\u003cul\u003e\n\u003cli\u003eSelect the ‚ÄúUse the OpenSSL library‚Äù option\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConfigure line-ending conversions\n\u003cul\u003e\n\u003cli\u003eThe default option is recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConfigure the terminal emulator\n\u003cul\u003e\n\u003cli\u003eSelect MinTTY as the default terminal emulator\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eChoose the default behavior of \u003ccode\u003egit pull\u003c/code\u003e\n\u003cul\u003e\n\u003cli\u003eThe default option is recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConfigure extra options to enable file system caching\u003c/li\u003e\n\u003cli\u003eChoose a credential helper\n\u003cul\u003e\n\u003cli\u003eSelect Git Credential Manager\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWait while Git is installed onto your computer\u003c/li\u003e\n\u003cli\u003eClick \"Finish\" to complete set-up\n\u003cul\u003e\n\u003cli\u003eIt is not necessary to view the release notes\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e* It is \u003cstrong\u003estrongly recommended\u003c/strong\u003e that you select any options to install and use the \"Git Bash\" shell - it's generally included by default. The Git Bash shell will allow students with either Windows or Mac computers to run the same set of commands, and all commands in this program follow that convention.\u003c/p\u003e\n\u003cp\u003eNote - if there are any differences in the options provided in the installer you download, accept the defaults.\u003c/p\u003e\n\u003ch4\u003eGit Installation Step-by-Step:\u003c/h4\u003e\n\u003cp\u003e\u003ciframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vSB09TxDpbxOjud38L2dX0_YJbh2JOVDMYqkTOxhEbhKKLjCmwM9JP27JTJ8VtOYAwnPzlJg_Ipf7gd/embed?start=false\u0026amp;loop=false\u0026amp;delayms=3000\" width=\"960\" height=\"569\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003ch3\u003eConfirming Your Git Installation\u003c/h3\u003e\n\u003cp\u003eTo confirm you have installed Git successfully:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eOpen a terminal window\n\u003cul\u003e\n\u003cli\u003eWhen we ask you to use the terminal, we mean the Git Bash application we just installed through Git\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eType \u003ccode\u003egit --version\u003c/code\u003e: It should return the version of git you are running\u003c/li\u003e\n\u003c/ol\u003e\n\u003chr\u003e\n\u003ch2\u003eInstalling Anaconda\u003c/h2\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-windows-installation/master/images/win_anaconda.png\" width=\"650\"\u003e\u003c/p\u003e\n\u003cp\u003eThe easiest way to get set up with Python and Jupyter Notebook so you can start coding is to install the Anaconda distribution.\u003c/p\u003e\n\u003ch3\u003eOverview:\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eDownload the latest version of Anaconda \u003ca href=\"https://www.anaconda.com/download/#windows\" target=\"_blank\"\u003ehere\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003eSame as with the Git installation - If you do not know whether you need the 32 or 64-bit install, check your system type.\u003c/li\u003e\n\u003cli\u003eA window may pop up asking if you want to give Anaconda your information in return for a cheat sheet - you do not need to do so unless you want to.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOpen the .exe file once it has downloaded to open the Anaconda installer\n\u003cul\u003e\n\u003cli\u003eClick \"Next\", then \"I Agree\" to accept the license\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eInstall for \"Just Me\"\u003c/li\u003e\n\u003cli\u003eSelect the destination folder\n\u003cul\u003e\n\u003cli\u003eThe default option is recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eChoose both Advanced Installation Options\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003eAlthough you will see a warning from the installer, \u003cstrong\u003e\u003cem\u003emake sure\u003c/em\u003e\u003c/strong\u003e to choose \u003cem\u003eboth\u003c/em\u003e \"Add Anaconda to my PATH environment variable\" \u003cem\u003eand\u003c/em\u003e \"Register Anaconda as my default Python\" !!\u003c/li\u003e\n\u003cli\u003eFor this program, these options will actually avoid you needed to uninstall and reinstall Anaconda in the near future, which is what they're warning about\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWait while Anaconda is installed on your computer\n\u003cul\u003e\n\u003cli\u003eYou can ignore any supplementary materials advertised, such as PyCharm\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhen it thanks you for installing Anaconda, click \"Finish\"\n\u003cul\u003e\n\u003cli\u003eYou do not need to learn more about your installation, and can close the browser window if one opens\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4\u003eAnaconda Installation Step-by-Step:\u003c/h4\u003e\n\u003cp\u003e\u003ciframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vS_m9nr642u3w6p3MmgyvnRWHgVRLVA_8EwsW8UDxgbxmMU2cJ04AkQSbBafLqGOJgQveXLzQtBWIas/embed?start=false\u0026amp;loop=false\u0026amp;delayms=3000\" width=\"960\" height=\"569\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003ch3\u003eConfirming Your Anaconda Installation\u003c/h3\u003e\n\u003cp\u003eTo confirm you have installed Anaconda successfully:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eOpen a terminal window\u003c/li\u003e\n\u003cli\u003eType \u003ccode\u003econda info\u003c/code\u003e: It should return a table of details about your conda installation\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eCongratulations! If you've gotten this far and everything has worked, you have successfully installed Git and Anaconda on your Windows PC!\u003c/p\u003e","frontPage":false},{"exportId":"topic-8-lesson-priorities-live","title":"Topic 8 Lesson Priorities (Live)","type":"WikiPage","content":"\u003cp\u003eIn the Live program, there is no scheduled lecture on Topic 8; instead there is a recorded video lecture. NoSQL databases are especially useful for storing and querying JSON data, and you might find these lessons more useful closer to Capstone if you intend to use JSON data.\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 71.8829%; height: 165px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 51.0308%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.17192%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 51.0308%; height: 29px;\"\u003e\u003ca title=\"NoSQL Databases - Introduction\" href=\"pages/nosql-databases-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/nosql-databases-introduction\" data-api-returntype=\"Page\"\u003eNoSQL Databases - Introduction\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.17192%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 51.0308%; height: 29px;\"\u003e\u003ca title=\"NoSQL Databases: Document Stores\" href=\"pages/nosql-databases-document-stores\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/nosql-databases-document-stores\" data-api-returntype=\"Page\"\u003eNoSQL Databases: Document Stores\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.17192%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 51.0308%; height: 29px;\"\u003e\u003ca title=\"MongoDB\" href=\"assignments/gf6c6c749bcd0e8319c495a160a859682\"\u003eMongoDB\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.17192%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 51.0308%; height: 29px;\"\u003e\u003ca title=\"MongoDB - Lab\" href=\"assignments/gfa8f25d1005d166d0c7ca504d8790728\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9028\" data-api-returntype=\"Assignment\"\u003eMongoDB - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.17192%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 51.0308%;\"\u003e\u003ca title=\"Quiz: NoSQL Interview Questions\" href=\"quizzes/gd3ad2db29d6e944fc35b8af150599e62\"\u003eQuiz: NoSQL Interview Questions\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.17192%; text-align: center;\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 51.0308%;\"\u003e\u003ca title=\"üé¨ Lecture: NoSQL\" href=\"pages/lecture-nosql\"\u003eüé¨ Lecture: NoSQL\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.17192%; text-align: center;\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 51.0308%; height: 29px;\"\u003e\u003ca title=\"NoSQL Databases - Summary\" href=\"pages/nosql-databases-summary\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/nosql-databases-summary\" data-api-returntype=\"Page\"\u003eNoSQL Databases - Summary\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.17192%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e","frontPage":false},{"exportId":"slide-style","title":"Slide Style","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-project-slide-design\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-slide-design\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-slide-design/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn all of your projects at Flatiron School, your work should resemble a professional project, not a \"school project\". If the goal of your presentation is to convince an employer of your credibility, you do not want anything distracting from your work. Design aspects can be distracting, particularly:\u003c/p\u003e  \u003cul\u003e \u003cli\u003einconsistencies in style\u003c/li\u003e \u003cli\u003eheavy text and clutter\u003c/li\u003e \u003cli\u003emessy visualizations\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eObjectives\u003c/h2\u003e  \u003cp\u003eYou will be able to:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eidentify what slide components count as \"style\"\u003c/li\u003e \u003cli\u003edescribe the impact of a slide template\u003c/li\u003e \u003cli\u003edeclutter slides by removing excessive text and redundant visualizations\u003c/li\u003e \u003cli\u003edefine the characteristics of a \"complete\" visualization\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003e\"Style\" Components\u003c/h2\u003e  \u003cp\u003eOne goal of your presentation is to convey a \u003cem\u003eprofessional presentation style\u003c/em\u003e. A professional presentation style demonstrates that you pay attention to details and are aware of how the \u003cem\u003edesign\u003c/em\u003e of your slides will impact the viewer as much as the \u003cem\u003econtent\u003c/em\u003e. Fonts (including font size and consistency), colors, and visuals (including both photos and visualizations you build) all contribute to the design and style of your presentation. These choices can either enhance or distract from your material. \u003c/p\u003e  \u003ch3\u003eIdentifying Style Problems\u003c/h3\u003e  \u003cp\u003eThe slide below has a few examples of inconsistent style:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-postgrad-project-slide-design/master/styleproblems.png\" alt=\"example with style problems\"\u003e\u003c/p\u003e  \u003cp\u003eBeyond any problems in content, this example slide showcases a few inconsistent style problems:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eMultiple fonts\u003c/li\u003e \u003cli\u003eConfusing use of colors\u003c/li\u003e \u003cli\u003eFluctuating font size \u003c/li\u003e \u003cli\u003eDistracting background (makes text harder to read)\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eA simple solution is to use a \u003cem\u003eslide template\u003c/em\u003e. There are great websites such as \u003ca href=\"https://www.slidescarnival.com/\"\u003eSlideCarnival\u003c/a\u003e, that provide professional-quality \u003ca href=\"https://www.slidescarnival.com/thaliard-free-presentation-template/2189\"\u003etemplates\u003c/a\u003e made by designers that integrate easily into Google Slides or other presentation tools. A good template keeps the font choices, font sizes, and color schemes consistent. Since few data scientists also have a degree in design, using the right template saves your presentation from looking unprofessional.\u003c/p\u003e  \u003ch2\u003eDecluttering Slides\u003c/h2\u003e  \u003cp\u003eQuickly, in five seconds or less, review the following two slides:\u003c/p\u003e  \u003ch4\u003eA)\u003c/h4\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-postgrad-project-slide-design/master/a_toomuchtext.png\" alt=\"example slide with too much text\"\u003e\u003c/p\u003e  \u003ch4\u003eB)\u003c/h4\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-postgrad-project-slide-design/master/b_toomanyvisuals.png\" alt=\"example slide with too many visualizations\"\u003e\u003c/p\u003e  \u003cp\u003eTime's up! What was the main point of each slide? What was your initial response to those slides?\u003c/p\u003e  \u003ch3\u003eProblem with Slide A: Too Much Text\u003c/h3\u003e  \u003cp\u003eNot everything needs to be \u003cem\u003ein\u003c/em\u003e the slides themselves. Slides are not expected to stand alone. Slides are a supplement to you presenting your work. \u003cstrong\u003eYou\u003c/strong\u003e are the star, not your presentation materials.  \u003c/p\u003e  \u003cp\u003eRemember, the rule is one key point per slide. Additional information that you plan on sharing verbally, or wish to have available for later readers, should go in the slide notes which can be saved and shared in PDF versions of your presentations.\u003c/p\u003e  \u003ch3\u003eProblem with Slide B: Too Many Visualizations\u003c/h3\u003e  \u003cp\u003eWhich visualization in Slide B is most important? What is the key point this slide is trying to make? A good rule to follow is one visualization per slide, and the visualization should take up at least 60% of the slide's real estate. \u003c/p\u003e  \u003cp\u003eWhitespace that \u003cstrong\u003eis not\u003c/strong\u003e filled with text or images is just as important as the information being conveyed. An overcrowded slide is unappealing to the eye and off-putting to viewers.\u003c/p\u003e  \u003cp\u003eReview the updated slides below and compare them to their original versions:\u003c/p\u003e  \u003ch4\u003eA)\u003c/h4\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-postgrad-project-slide-design/master/a_improved.png\" alt=\"example next steps slide with text consolidated into bullet points\"\u003e\u003c/p\u003e  \u003ch4\u003eB)\u003c/h4\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-postgrad-project-slide-design/master/b_improved.png\" alt=\"example slide with a single purposeful visual\"\u003e\u003c/p\u003e  \u003cp\u003eAs you can see, having \u003cstrong\u003eless\u003c/strong\u003e on the slide is \u003cstrong\u003emore\u003c/strong\u003e appealing to review. When in doubt about having extra information on a slide, put it in the notes and include it in your delivery.\u003c/p\u003e  \u003ch2\u003e\"Complete\" Visualization\u003c/h2\u003e  \u003cp\u003eVisualizations for presentations work a little differently than visualizations you create for your own use, and should be held to pretty high standards. If you're using a visualization you create in a presentation, it should work to make a key point and should be stylized not only to match your presentation template but also to stand on its own.\u003c/p\u003e  \u003ch3\u003eElements of a Complete Visualization\u003c/h3\u003e  \u003cp\u003eDavid McCandless, from the website \u003ca href=\"https://www.informationisbeautiful.net/\"\u003eInformation is Beautiful\u003c/a\u003e, wrote in his 2014 book \u003ca href=\"https://informationisbeautiful.net/books/\"\u003eKnowledge is Beautiful\u003c/a\u003e that a quality visualization contains four elements: \u003cstrong\u003einformation, function, visual form, and story\u003c/strong\u003e.\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://infobeautiful4.s3.amazonaws.com/2015/05/2552_What-Makes-a-Good-Infoviz-frame01.png\" alt=\"quall-viz\"\u003e\u003c/p\u003e  \u003cp\u003eMore specifically, visualizations built for presentations should:\u003c/p\u003e  \u003cul\u003e \u003cli\u003e[ ] \u003cstrong\u003eBe Purposeful\u003c/strong\u003e. The visualization must be relevant to the analysis and fit into the narrative of the presentation. The most \u003cstrong\u003eimportant\u003c/strong\u003e part of the visualization should be highlighted. Is this one group different from the others? Where does this model \u003cem\u003enot\u003c/em\u003e perform well?\u003c/li\u003e \u003cli\u003e[ ] \u003cstrong\u003eBe Appropriately Labeled\u003c/strong\u003e. Each visualization should have a title, a legend, and labeled axes.\u003c/li\u003e \u003cli\u003e[ ] \u003cstrong\u003eHave Readable Numbers\u003c/strong\u003e. Dollars should have a $ in front of them. Percents should be formated as 50% rather than 0.5. Scientific notation has no business on 99% of data visualizations, especially in presentations.\u003c/li\u003e \u003cli\u003e[ ] \u003cstrong\u003eHave Readable Text\u003c/strong\u003e. Text should be large enough to read and not overlap with other text. All text should be \u003cem\u003emeaningful\u003c/em\u003e and \u003cem\u003eimmediately understandable\u003c/em\u003e by your audence, so the axis label should read \"House Sale Price\" rather than \"salesprice\" - \u003cstrong\u003eno variable names with CamelCase or underscores!\u003c/strong\u003e\u003c/li\u003e \u003cli\u003e[ ] \u003cstrong\u003eBe Saved to File\u003c/strong\u003e. Using a screenshot can produce fuzzy and grainy resolution if the image needs to scaled. Instead, use \u003ccode\u003esavefig\u003c/code\u003e or whichever appropriate command to save your images directly from your notebook.\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eFor further reading on what makes a great data visualization, David McCandless also provides a great \u003ca href=\"https://informationisbeautiful.net/visualizations/dataviz-books/\"\u003erecommended reading list\u003c/a\u003e of data visualization books.\u003c/p\u003e  \u003ch3\u003eIdentifying Visualization Problems\u003c/h3\u003e  \u003cp\u003eIn this sample visualization, there are 4 aspects that, if fixed, would enhance the credibility of this presentation. Take a moment to see if you can identify what is missing:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-postgrad-project-slide-design/master/examplevisualization.png\" alt=\"example visualization with issues\"\u003e\u003c/p\u003e  \u003cp\u003eAs you can see in the numbered picture below, the visualizations has the following issues:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-postgrad-project-slide-design/master/examplevisualization_numberedissues.png\" alt=\"example visualization, now with numbered issues\"\u003e\u003c/p\u003e  \u003col\u003e \u003cli\u003eThe y-axis is not immediately interpretable\u003c/li\u003e \u003cli\u003eAxis labels and legend use raw-variable names rather than a nice label\u003c/li\u003e \u003cli\u003eLegend does not use all the categories\u003c/li\u003e \u003cli\u003eDefault color is not informative or easily distinguishable\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003eThe key with a great presentation visual is that it is immediately interpretable - your audience should not need to guess what the numbers or colors mean, or interpret a variable name, or squint to distinguish between colors.\u003c/p\u003e  \u003ch3\u003eEnhancing Visualizations\u003c/h3\u003e  \u003cp\u003eThe \u003ca href=\"https://python-graph-gallery.com/\"\u003ePython Graph Gallery\u003c/a\u003e is a great resource for finding the exact code to enhance a visualization created using matplotlib or seaborn. The \u003ca href=\"https://matplotlib.org/\"\u003ematplotlib documentation\u003c/a\u003e also has plenty of code examples and the \u003ca href=\"https://seaborn.pydata.org/examples/index.html\"\u003eseaborn graph gallery\u003c/a\u003e can be a useful resource.\u003c/p\u003e  \u003cp\u003eBelow, review the differences between the code used to generate the earlier example and the code used to generate a much more polished visualization:\u003c/p\u003e  \u003ch4\u003eEarly Example:\u003c/h4\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-postgrad-project-slide-design/master/examplevisualization.png\" alt=\"example visualization with issues\"\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eplt.figure(figsize=(16, 10)) \u003cbr\u003esns.scatterplot(x='GrLivArea', y='SalePrice', data = df, hue='OverallQual')\u003cbr\u003eplt.title(\"The Positive Correlations between Home Sale Price,\\n Sq Footage and Quality Rating\", fontsize=26)\u003cbr\u003eplt.tight_layout()\u003cbr\u003eplt.show() \u003c/code\u003e\u003c/pre\u003e \u003ch4\u003ePolished Example:\u003c/h4\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-postgrad-project-slide-design/master/polishedvisualization.png\" alt=\"example visualization, but polished\"\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003efig = plt.figure(figsize=(16, 10), dpi=80) \u003cbr\u003e# Creates one subplot within our figure and uses the classes fig and ax\u003cbr\u003efig, ax = plt.subplots(figsize=(16, 10), dpi= 80, facecolor='w', edgecolor='k')\u003cbr\u003e# Uses hue to add an extra element, and changes the palette\u003cbr\u003echart = sns.scatterplot(x='GrLivArea', y='SalePrice', data = test,\u003cbr\u003e                        hue=test.OverallQual.values, legend='full', alpha = .7,\u003cbr\u003e                        palette=\"BrBG\")\u003cbr\u003e\u003cbr\u003e# Setting axis ticks and formulating numbers\u003cbr\u003eax.yaxis.set_major_locator(ticker.MultipleLocator(100000.00))\u003cbr\u003eax.yaxis.set_minor_locator(ticker.MultipleLocator(50000))\u003cbr\u003eax.yaxis.set_major_formatter(ticker.StrMethodFormatter('${x:,.0f}'))\u003cbr\u003eax.xaxis.set_major_locator(ticker.MultipleLocator(500))\u003cbr\u003eax.xaxis.set_minor_locator(ticker.MultipleLocator(100))\u003cbr\u003e\u003cbr\u003e# Naming the visual and each axis\u003cbr\u003efig.suptitle(\"The Positive Correlations between Home Sale Price,\\n Sq Footage and Quality Rating\", fontsize=26)\u003cbr\u003eax.set_xlabel(\"Total Square Feet\")\u003cbr\u003eax.set_ylabel(\"Sale Price\")\u003cbr\u003e\u003cbr\u003e# Creating the legend\u003cbr\u003eax.get_legend().set_title(\"Overall Quality Ranking\")\u003cbr\u003e\u003cbr\u003eplt.tight_layout() \u003c/code\u003e\u003c/pre\u003e \u003ch2\u003eSummary\u003c/h2\u003e  \u003cp\u003eSmall changes can have a big impact on the profesional quality of your slide design. There are many resources out there to help your slides be more consistent, polished, and informative. Utilize them!\u003c/p\u003e","frontPage":false},{"exportId":"getting-started-with-sql-recap","title":"Getting Started with SQL - Recap","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-getting-started-sql-recap\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-sql-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-sql-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this section, you were introduced to SQL databases and learned the basics of writing \u003ccode\u003eSELECT\u003c/code\u003e queries as well as some introductory database administration queries.\u003c/p\u003e  \u003ch2\u003eKey Takeaways\u003c/h2\u003e  \u003ch3\u003eSQL Format\u003c/h3\u003e  \u003cp\u003eWhile you may end up primarily using tools such as pandas to do a lot of your exploratory analysis and data manipulation, databases provide a much more powerful data storage option than flat files like CSVs or spreadsheets.\u003c/p\u003e  \u003cp\u003eSQL is short for \"structured query language\". SQL \u003cem\u003edatabases\u003c/em\u003e are containers that can contain multiple \u003cem\u003etables\u003c/em\u003e. Each table has a \u003cem\u003eschema\u003c/em\u003e that describes its columns (and their data types), and an \u003cem\u003eentity relationship diagram\u003c/em\u003e (or ERD) is a visual representation of all tables and their relationships.\u003c/p\u003e  \u003cp\u003eInteracting with SQL databases requires that you write queries using SQL syntax. Then you can execute the queries using tools such as a command-line interface or a Python library.\u003c/p\u003e  \u003cp\u003eMost database software is actually a type of server, but we mainly use SQLite in this course because it is lightweight and portable. SQLite databases are files located on the computer's file system, similar to CSV or JSON files. We used the \u003ccode\u003esqlite3\u003c/code\u003e Python library to open connections to these databases.\u003c/p\u003e  \u003ch3\u003e\u003ccode\u003eSELECT\u003c/code\u003e Queries\u003c/h3\u003e  \u003cp\u003eAs a data scientist, typically you are interacting with a database because you want to extract some data for analysis. To do this, you write SQL queries that start with \u003ccode\u003eSELECT\u003c/code\u003e. This allows you to read specific columns by name, or read all columns using \u003ccode\u003eSELECT *\u003c/code\u003e.\u003c/p\u003e  \u003cp\u003eIf you want to \u003cstrong\u003efilter\u003c/strong\u003e your selection so it only contains rows that meet certain criteria, you can use the \u003ccode\u003eWHERE\u003c/code\u003e clause.\u003c/p\u003e  \u003cp\u003eIf you want to \u003cstrong\u003eorder\u003c/strong\u003e your selection, you can use the \u003ccode\u003eORDER BY\u003c/code\u003e clause. Remember that the default behavior is to return results in ascending order (smallest to largest). You can verbosely specify this with the \u003ccode\u003eASC\u003c/code\u003e keyword, or, more commonly, modify the behavior to sort in descending order (largest to smallest) with the \u003ccode\u003eDESC\u003c/code\u003e keyword.\u003c/p\u003e  \u003cp\u003eIf you want to \u003cstrong\u003elimit\u003c/strong\u003e the number of results, you can use the \u003ccode\u003eLIMIT\u003c/code\u003e clause. This is frequently used with \u003ccode\u003eORDER BY\u003c/code\u003e to select the largest or smallest N results.\u003c/p\u003e  \u003ch3\u003eGrouping\u003c/h3\u003e  \u003cp\u003eThe unit of analysis of a SQL table is whatever is represented by a row. Sometimes you want to use a different unit of analysis that is less granular than the original. Maybe a row represents a city, but you want analysis that is by country. This is a good use case for \u003cstrong\u003egrouping\u003c/strong\u003e data using the \u003ccode\u003eGROUP BY\u003c/code\u003e clause.\u003c/p\u003e  \u003cp\u003eOften you also want to use an \u003cstrong\u003eaggregate function\u003c/strong\u003e when grouping, so that you can summarize the grouped data in some meaningful way. Examples of these aggregate functions include \u003ccode\u003eCOUNT()\u003c/code\u003e, \u003ccode\u003eMAX()\u003c/code\u003e, \u003ccode\u003eMIN()\u003c/code\u003e, and \u003ccode\u003eAVG()\u003c/code\u003e. You can also use those aggregate functions without grouping, and they will return a single record for the table overall (or all rows selected based on your filters).\u003c/p\u003e  \u003cp\u003eIf you want to \u003cstrong\u003efilter based on the result of an aggregate function\u003c/strong\u003e, you need to use \u003ccode\u003eHAVING\u003c/code\u003e rather than \u003ccode\u003eWHERE\u003c/code\u003e. \u003ccode\u003eWHERE\u003c/code\u003e applies to the original rows of the table, whereas \u003ccode\u003eHAVING\u003c/code\u003e applies to the rows created by \u003ccode\u003eGROUP BY\u003c/code\u003e. Both can be used in the same query if needed, applied to different features.\u003c/p\u003e  \u003ch3\u003eDatabase Administration\u003c/h3\u003e  \u003cp\u003eAs a data scientist, your responsibilities will typically be limited to writing \u003ccode\u003eSELECT\u003c/code\u003e queries. However it is useful to be familiar with the other queries used for managing data using databases, including commands for creating tables (specifying the data types in their schemas) and inserting, updating, and deleting data. Understanding the basics will help you collaborate with the team members who are responsible for these tasks, as well as occasional ad hoc work needed for your data analysis tasks.\u003c/p\u003e  \u003ch2\u003eSummary\u003c/h2\u003e  \u003cp\u003eIn this section, you were introduced to some foundational concepts in SQL. Next you'll expand your skills to more complex queries that integrate information from multiple tables!\u003c/p\u003e","frontPage":false},{"exportId":"git-merge-lab","title":"Git Merge - Lab","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-merge-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-merge-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIt's time to continue to practice your git and bash skills! In this lab, you'll work primarily from the command line in order to create a git repository, create a development branch and practice merging updates into a master copy. Along the way, you'll see how python scripts can be run from the command line and continue to get more familiar with git and bash in general!\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eExplain branches and their purpose in git\u003c/li\u003e\n\u003cli\u003eCreate a new branch\u003c/li\u003e\n\u003cli\u003eSwitch between branches\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003egit merge\u003c/code\u003e to merge different branches\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eCreate a Local Folder to House the Git Repository\u003c/h2\u003e\n\u003cp\u003eTo start, create a folder from the command line. (Be sure to place this in a logical, organized location!)\u003c/p\u003e\n\u003ch2\u003eInitialize Git In Your New Folder\u003c/h2\u003e\n\u003cp\u003eStill working from the command line, navigate into your folder and initialize git!\u003c/p\u003e\n\u003ch2\u003eOptional: Check What's Going On with git status\u003c/h2\u003e\n\u003ch2\u003eCreate a New Python File\u003c/h2\u003e\n\u003cp\u003eFrom the command line type \u003ccode\u003enano numbers.py\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eInside the file that opens write the following:\u003c/p\u003e\n\u003cp\u003e(use 4 spaces for the indentation on the second line) \u003ccode\u003e\nfor i in range(10):\n    print(i**2)\n\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003ePress Ctrl+X to exit and press Y to confirm that you wish to save your changes.\u003c/p\u003e\n\u003ch2\u003eTest Your Python File\u003c/h2\u003e\n\u003cp\u003ePython files can be run from the command line with \u003ccode\u003epython filename\u003c/code\u003e.\u003cbr\u003eSo in this case, let's practice running our super simple script with \u003ccode\u003epython numbers.py\u003c/code\u003e. With luck, you should see the square numbers up through 81.\u003c/p\u003e\n\u003ch2\u003eAdd and Commit Your Changes\u003c/h2\u003e\n\u003cp\u003eAdd and commit (with a comment) your new file.\u003c/p\u003e\n\u003ch2\u003eCreate and Checkout a New Branch\u003c/h2\u003e\n\u003cp\u003eCreate a new branch called cubes and switch to it.\u003c/p\u003e\n\u003ch2\u003eModify the Branch\u003c/h2\u003e\n\u003cp\u003eType \u003ccode\u003enano numbers.py\u003c/code\u003e to open up the file again.\u003c/p\u003e\n\u003cp\u003eChange the file from\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efor i in range(10):\n    print(i**2)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eto\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efor i in range(10):\n    print(i**3)\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eAdd and Commit the Changes to the Cubes Branch\u003c/h2\u003e\n\u003cp\u003eAdd and commit your changes to the cubes branch.\u003c/p\u003e\n\u003ch2\u003eSwitch Back to the Master Branch\u003c/h2\u003e\n\u003cp\u003eNow that we've made development changes in our new branch, we may wish to integrate them back into our master branch such as updating our production code. To do this, we'll switch back to the master branch and then merge the changes we made to our development branch.\u003c/p\u003e\n\u003ch2\u003eMerge the Changes from Cubes\u003c/h2\u003e\n\u003cp\u003eFinally, let's merge the changes from the cubes branch into our master branch.\u003c/p\u003e\n\u003ch2\u003eDo a Couple Sanity Checks\u003c/h2\u003e\n\u003cp\u003eEverything should have gone smoothly, but let's do a couple of checks to be sure. Try running the python file again and observe the output. Take a look a \u003ccode\u003egit status\u003c/code\u003e and see what the output is.\u003c/p\u003e\n\u003ch2\u003eDelete the Development Branch\u003c/h2\u003e\n\u003cp\u003eWhile deleting branches should be cautionary, now that we've merged our changes into the master, we really don't need our development cubes branch anymore. To clean things up, delete the branch.\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eCongratulations! In this lab, you practiced using multiple branches in git and merging your changes together. What's more, we also saw that you can use git locally with no remote connection to GitHub if you wish!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\n\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" title=\"Thumbs up!\" alt=\"thumbs up\" data-repository=\"dsc-git-merge-lab\"\u003e\u003cimg id=\"thumbs-down\" title=\"Thumbs down!\" alt=\"thumbs down\" data-repository=\"dsc-git-merge-lab\"\u003e\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-merge-lab/issues/new\"\u003eTell us here!\u003c/a\u003e\u003c/h5\u003e\n\u003c/footer\u003e","frontPage":false},{"exportId":"topic-5-lesson-priorities-live","title":"Topic 5 Lesson Priorities (Live)","type":"WikiPage","content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 85.469%; height: 243px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete Before \u003cem\u003ePandas Data Cleaning\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 28px;\"\u003e\n\u003cth style=\"width: 53.5903%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.53687%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 30px;\"\u003e\u003ca title=\"Data Cleaning in Pandas - Introduction\" href=\"pages/data-cleaning-in-pandas-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/data-cleaning-in-pandas-introduction\" data-api-returntype=\"Page\"\u003e\u003cstrong\u003eData Cleaning in Pandas - Introduction\u003c/strong\u003e\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 30px; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Lambda Functions\" href=\"assignments/gd6d4e0c786c87244d6921427f55c08c4\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186746\" data-api-returntype=\"Assignment\"\u003eLambda Functions\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003ca title=\"Lambda Functions - Lab\" href=\"assignments/gd3689c7e14e78885d849191b09bd3a2d\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186747\" data-api-returntype=\"Assignment\"\u003eLambda Functions - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Dealing with Missing Data\" href=\"pages/dealing-with-missing-data\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/dealing-with-missing-data\" data-api-returntype=\"Page\"\u003eDealing with Missing Data\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003ca title=\"Dealing with Missing Data - Lab\" href=\"assignments/gf5f34dde719812cc47fa22f4b23a2b39\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186724\" data-api-returntype=\"Assignment\"\u003eDealing with Missing Data - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"More on missing data\" href=\"assignments/g90331b557510c3edfebb291368728f55\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186750\" data-api-returntype=\"Assignment\"\u003eMore on Missing Data\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003ca title=\"More on missing data - Lab\" href=\"assignments/g6e8159c5e97542fc6e498b96f3983647\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186751\" data-api-returntype=\"Assignment\"\u003eMore on Missing Data - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 10px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 10px;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: Dealing with Missing Data\" href=\"quizzes/g212414a665f29e1ec4a5f5c3b6a55400\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30557\" data-api-returntype=\"Quiz\"\u003eQuiz: Dealing with Missing Data\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center; height: 10px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 85.469%; height: 231px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003ePandas Data Cleaning\u003c/em\u003e Lecture, Before \u003cem\u003eAggregating and Combining DataFrames\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 28px;\"\u003e\n\u003cth style=\"width: 53.5903%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.53687%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 25px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 25px;\"\u003e\u003cstrong\u003e\u003ca title=\"Pandas Data Cleaning Exit Ticket\" href=\"quizzes/g42901c242a191446780fab69d267afce\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30561\" data-api-returntype=\"Quiz\"\u003ePandas Data Cleaning Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center; height: 25px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Pandas Groupby\" href=\"pages/pandas-groupby\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/pandas-groupby\" data-api-returntype=\"Page\"\u003ePandas Groupby\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Combining DataFrames With Pandas\" href=\"pages/combining-dataframes-with-pandas\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/combining-dataframes-with-pandas\" data-api-returntype=\"Page\"\u003eCombining DataFrames With Pandas\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 36px;\"\u003e\u003ca title=\"Combining DataFrames with Pandas - Lab\" href=\"assignments/g40b6e66c6ac8b27b60c89364c1716c87\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186713\" data-api-returntype=\"Assignment\"\u003eCombining DataFrames with Pandas - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 36px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Pivot Tables with Pandas\" href=\"assignments/g9711a839a76ceeaa2cf9d6a1c5d580ca\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186764\" data-api-returntype=\"Assignment\"\u003ePivot Tables with Pandas\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003ca title=\"Pivot Tables with Pandas - Lab\" href=\"assignments/g25a675bd128d1200bf205aa7d6423c6e\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186765\" data-api-returntype=\"Assignment\"\u003ePivot Tables with Pandas - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 25px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 25px;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: Aggregating and Reshaping with Pandas\" href=\"quizzes/gbb274ab685bca70f3b0cf4db4df8d524\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30550\" data-api-returntype=\"Quiz\"\u003eQuiz: Aggregating and Reshaping with Pandas\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center; height: 25px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 85.469%; height: 39px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eAggregating and Combining DataFrames\u003c/em\u003e Lecture, Before \u003cem\u003eDescriptive Analysis\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 28px;\"\u003e\n\u003cth style=\"width: 53.5903%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.53687%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 10px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 10px;\"\u003e\u003ca title=\"Short Video: Pandas GroupBy\" href=\"pages/short-video-pandas-groupby\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/short-video-pandas-groupby\" data-api-returntype=\"Page\"\u003eShort Video: Pandas GroupBy\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center; height: 10px;\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 10px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 10px;\"\u003e\u003cstrong\u003e\u003ca title=\"Aggregating and Combining DataFrames Exit Ticket\" href=\"quizzes/g59977d542efdb84dde70b1e3bc1a671f\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30560\" data-api-returntype=\"Quiz\"\u003eAggregating and Combining DataFrames Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center; height: 10px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 85.469%; height: 78px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eDescriptive Analysis\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 28px;\"\u003e\n\u003cth style=\"width: 53.5903%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.53687%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 20px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 20px;\"\u003e\u003cstrong\u003e\u003ca title=\"Descriptive Analysis Exit Ticket\" href=\"quizzes/g7fa50505224c8ed215a2e2ecfe57ab7e\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30582\" data-api-returntype=\"Quiz\"\u003eDescriptive Analysis Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center; height: 20px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 53.5903%;\"\u003e\u003cstrong\u003e\u003ca title=\"‚≠êÔ∏è Pandas Data Cleaning - Cumulative Lab\" href=\"quizzes/g1be6f06d4a1dcfca22a12139749b5105\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30588\" data-api-returntype=\"Quiz\"\u003e‚≠êÔ∏è Pandas Data Cleaning - Cumulative Lab\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center;\"\u003e\u003cstrong\u003e1st*\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003ca title=\"Data Cleaning in Pandas - Recap\" href=\"pages/data-cleaning-in-pandas-recap\"\u003eData Cleaning in Pandas - Recap\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003e*Cumulative labs may be used for pairing exercises and might not be published yet; contact your instructor if you have questions\u003c/strong\u003e\u003c/p\u003e","frontPage":false},{"exportId":"short-video-basic-plotting-with-matplotlib","title":"Short Video: Basic Plotting with MatPlotLib","type":"WikiPage","content":"\u003cdiv style=\"padding:62.5% 0 0 0;position:relative;\"\u003e\u003ciframe src=\"https://player.vimeo.com/video/713398853?h=ddf33ca9a0\u0026amp;badge=0\u0026amp;autopause=0\u0026amp;player_id=0\u0026amp;app_id=58479\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen=\"\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;\" title=\"atplotlib_phase1_gd\"\u003e\u003c/iframe\u003e\u003c/div\u003e","frontPage":false},{"exportId":"data-analysis-in-base-python-introduction","title":"Data Analysis in Base Python - Introduction","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-analysis-python-intro\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-analysis-python-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-analysis-python-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this section, you'll continue solidifying your knowledge of Python programming, descriptive statistics, and data visualization by performing key data analysis tasks. You will learn how to load data from CSV and JSON files into Python objects in memory, and wrap up with an analysis that joins together two datasets.\u003c/p\u003e  \u003ch2\u003eBase Python\u003c/h2\u003e  \u003cp\u003eWhen we say \"base Python\", this means that we are emphasizing the data types and modules that are part of Python itself, rather than using third-party libraries. For much of this course, you will use numerous Python libraries such as \u003ccode\u003epandas\u003c/code\u003e and StatsModels, but first we want to dig into how data analysis tasks can be performed without them.\u003c/p\u003e  \u003ch3\u003ePython Data Types and Control Structures\u003c/h3\u003e  \u003cp\u003eIn this section, our data is stored in data structures that are built into the Python language: numbers, strings, lists, dictionaries, etc. For example, if we have this table of data:\u003c/p\u003e  \u003ctable\u003e\u003cthead\u003e \u003ctr\u003e \u003cth\u003ecolor\u003c/th\u003e \u003cth\u003enumber\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e\u003ctbody\u003e \u003ctr\u003e \u003ctd\u003egreen\u003c/td\u003e \u003ctd\u003e7\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003ered\u003c/td\u003e \u003ctd\u003e2\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eorange\u003c/td\u003e \u003ctd\u003e1\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e\u003c/table\u003e  \u003cp\u003eA standard way we might represent that table would be a list of dictionaries, where each dictionary represents a row and has the keys \u003ccode\u003ecolor\u003c/code\u003e and \u003ccode\u003enumber\u003c/code\u003e:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003einfo_table = [\u003cbr\u003e    {\"color\": \"green\", \"number\": 7},\u003cbr\u003e    {\"color\": \"red\", \"number\": 2},\u003cbr\u003e    {\"color\": \"orange\", \"number\": 1}\u003cbr\u003e]\u003cbr\u003e\u003cbr\u003etype(info_table) \u003c/code\u003e\u003c/pre\u003e \u003cp\u003elist\u003c/p\u003e  \u003cp\u003eThen if we wanted to print out all of the values associated with the \u003ccode\u003ecolor\u003c/code\u003e keys, the logic would look something like this:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003efor row in info_table:\u003cbr\u003e    print(row[\"color\"]) \u003c/code\u003e\u003c/pre\u003e \u003cp\u003egreen     red     orange\u003c/p\u003e  \u003cp\u003eIn later sections of this course, that same task (printing the list of colors) might look something like this, using the \u003ccode\u003epandas\u003c/code\u003e library:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eimport pandas as pd\u003cbr\u003edf = pd.DataFrame(info_table)\u003cbr\u003etype(df) \u003c/code\u003e\u003c/pre\u003e \u003cp\u003epandas.core.frame.DataFrame\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eprint(df[\"color\"]) \u003c/code\u003e\u003c/pre\u003e \u003cp\u003e0     green     1       red     2    orange     Name: color, dtype: object\u003c/p\u003e  \u003cp\u003eIn the base Python example, we had a variable \u003ccode\u003einfo_table\u003c/code\u003e which was type \u003ccode\u003elist\u003c/code\u003e (a built-in Python type), whereas in the pandas example, we had a variable \u003ccode\u003edf\u003c/code\u003e which was type \u003ccode\u003epandas.core.frame.DataFrame\u003c/code\u003e (a custom type from the pandas library).\u003c/p\u003e  \u003cp\u003eThen to print out the colors, in the base Python example we had a \u003ccode\u003efor\u003c/code\u003e loop and then code to extract the information from each individual dictionary. The string values got printed out without any additional markup. Then in the pandas example we did not have to use a loop (hint: this is \u003cem\u003ebroadcasting\u003c/em\u003e like we saw previously with NumPy) and also we had some extra markup where it printed out the index values as well as \u003ccode\u003eName: color, dtype: object\u003c/code\u003e.\u003c/p\u003e  \u003cp\u003eIn this section you will practice performing data analysis with the first (base Python) format, before eventually learning how to use pandas instead.\u003c/p\u003e  \u003ch3\u003ePython Modules\u003c/h3\u003e  \u003cp\u003eIn addition to the data types used, we will also use built-in Python modules. These modules must be imported, but they are part of Python itself and do not require separate installation.\u003c/p\u003e  \u003cp\u003eThe main modules we will focus on are \u003ccode\u003ecsv\u003c/code\u003e (\u003ca href=\"https://docs.python.org/3/library/csv.html\"\u003edocumentation here\u003c/a\u003e) and \u003ccode\u003ejson\u003c/code\u003e (\u003ca href=\"https://docs.python.org/3/library/json.html\"\u003edocumentation here\u003c/a\u003e).\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eimport csv\u003cbr\u003eimport json \u003c/code\u003e\u003c/pre\u003e \u003ch2\u003eLoading Data from Files\u003c/h2\u003e  \u003cp\u003eWhile trivial example data structures like the one above can be declared directly in Python code, more realistic data comes in the form of a file on disk.\u003c/p\u003e  \u003cp\u003eIn this section you will practice opening data files that use the CSV and JSON formats, then loading them into sensible objects using the \u003ccode\u003ecsv\u003c/code\u003e and \u003ccode\u003ejson\u003c/code\u003e libraries in order to perform additional analysis.\u003c/p\u003e  \u003ch3\u003eCSV Files\u003c/h3\u003e  \u003cp\u003eThe first major file type we will explore is CSV (comma-separated value). For example, this code loads a dataset of 5000 apple trees in an orchard, where the column \u003ccode\u003eyield\u003c/code\u003e represents the total pounds of apples yielded by that tree for a given year.\u003c/p\u003e  \u003cp\u003eYou can think of the table as looking like this, except that it is thousands of lines long:\u003c/p\u003e  \u003ctable\u003e\u003cthead\u003e \u003ctr\u003e \u003cth\u003eyield\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e\u003ctbody\u003e \u003ctr\u003e \u003ctd\u003e39.741234289561504\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e39.872054738763474\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e44.33116416558151\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e46.6006230827385\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e40.694984210927196\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e40.96981882686812\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e\u003c/table\u003e  \u003cp\u003eIn relatively few lines of code, we can perform some key data analysis tasks: counting, measuring central tendency, finding the maximum, and finding the minimum.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003ewith open(\"data/apple_orchard.csv\") as f:\u003cbr\u003e    apple_orchard_data = list(csv.DictReader(f))\u003cbr\u003e    apple_tree_yields = [float(x[\"yield\"]) for x in apple_orchard_data]\u003cbr\u003e    print(\"Total apple tree yields:\", len(apple_tree_yields))\u003cbr\u003e    print(\"Average apple tree yield:\", sum(apple_tree_yields) / len(apple_tree_yields))\u003cbr\u003e    print(\"Maximum apple tree yield:\", max(apple_tree_yields))\u003cbr\u003e    print(\"Minimum apple tree yield:\", min(apple_tree_yields)) \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eTotal apple tree yields: 5000     Average apple tree yield: 42.40762385776258     Maximum apple tree yield: 65.54817042071103     Minimum apple tree yield: 21.93121221285836\u003c/p\u003e  \u003ch3\u003eJSON Files\u003c/h3\u003e  \u003cp\u003eThe second major file type we will explore is JSON (JavaScript object notation). For example, this code loads a dataset of interactions between Twitter users, where each user is represented as a \"node\" and when one tweets at another that connection is represented as a \"link\".\u003c/p\u003e  \u003cp\u003eYou can think of this data as looking like this, although this version is truncated:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e{\u003cbr\u003e  'nodes': [\u003cbr\u003e    {'id': '347457291'},\u003cbr\u003e    {'id': '232762581'},\u003cbr\u003e    {'id': '23678636'},\u003cbr\u003e    {'id': '21278412'},\u003cbr\u003e    {'id': '222040026'},\u003cbr\u003e    {'id': '19579205'},\u003cbr\u003e    {'id': '222957350'},\u003cbr\u003e    {'id': '264013722'},\u003cbr\u003e    ...\u003cbr\u003e  ],\u003cbr\u003e  'links': [\u003cbr\u003e    {'source': '347457291', 'target': '232762581'},\u003cbr\u003e    {'source': '347457291', 'target': '119706266'},\u003cbr\u003e    {'source': '347457291', 'target': '421509544'},\u003cbr\u003e    {'source': '232762581', 'target': '222957350'},\u003cbr\u003e    {'source': '232762581', 'target': '21648607'},\u003cbr\u003e    {'source': '232762581', 'target': '155691033'},\u003cbr\u003e    {'source': '232762581', 'target': '59974294'},\u003cbr\u003e    ...\u003cbr\u003e  ]\u003cbr\u003e  ...\u003cbr\u003e} \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eIn relatively few lines of code, we can count the number of users and find the users who were \"sources\" (the user initiating a tweet that tags someone else) most often and \"targets\" (the user being tagged in a tweet) most often.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003edef build_freq_table(key, links):\u003cbr\u003e    table = {}\u003cbr\u003e    for link in links:\u003cbr\u003e        user = link[key]\u003cbr\u003e        table[user] = table.get(user, 0) + 1\u003cbr\u003e    return table\u003cbr\u003e\u003cbr\u003edef print_top_5(table):\u003cbr\u003e    for k, v in sorted(table.items(), key=lambda x: x[1], reverse=True)[:5]:\u003cbr\u003e        print(f\"User {k}\\t| {v} Tweets\")\u003cbr\u003e\u003cbr\u003ewith open(\"data/twitter_graph.json\") as f:\u003cbr\u003e    twitter_data = json.load(f)\u003cbr\u003e    print(f\"There are {len(twitter_data['nodes'])} users in this dataset\")\u003cbr\u003e    print()\u003cbr\u003e\u003cbr\u003e    links = twitter_data[\"links\"]\u003cbr\u003e    sources = build_freq_table(\"source\", links)\u003cbr\u003e    targets = build_freq_table(\"target\", links)\u003cbr\u003e\u003cbr\u003e    print(\"Top 5 Sources:\")\u003cbr\u003e    print_top_5(sources)\u003cbr\u003e    print()\u003cbr\u003e    print(\"Top 5 Targets:\")\u003cbr\u003e    print_top_5(targets) \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eThere are 99 users in this dataset\u003c/p\u003e  \u003cp\u003eTop 5 Sources:     User 232762581  | 23 Tweets     User 49076695   | 20 Tweets     User 523173553  | 19 Tweets     User 24883888   | 17 Tweets     User 53318310   | 16 Tweets\u003c/p\u003e  \u003cp\u003eTop 5 Targets:     User 169686021  | 13 Tweets     User 23642374   | 12 Tweets     User 25797630   | 11 Tweets     User 25626212   | 11 Tweets     User 21648607   | 10 Tweets\u003c/p\u003e  \u003ch2\u003eWhat About NumPy and Matplotlib?\u003c/h2\u003e  \u003cp\u003eYou can continue using NumPy and Matplotlib as you see fit. For example, if you want to convert a base Python list into a NumPy array because it will help you perform some descriptive analysis task, that is not an issue. You will also need to use Matplotlib in the lessons ahead to create the required visualizations.\u003c/p\u003e  \u003cp\u003eThe main library that you will \u003cem\u003enot\u003c/em\u003e be using extensively is \u003ccode\u003epandas\u003c/code\u003e, which will be introduced in a future section.\u003c/p\u003e  \u003ch2\u003eSummary\u003c/h2\u003e  \u003cp\u003eIn this section you will learn how to load and manipulate CSV and JSON datasets using base Python. This means that we will mainly be using the data structures and modules built into Python, rather than third-party libraries. We also walked through some examples of the kinds of analysis you will be able to perform by the end of this section.\u003c/p\u003e","frontPage":false},{"exportId":"getting-started-with-sql-introduction","title":"Getting Started with SQL - Introduction","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-getting-started-sql-intro\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-sql-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-sql-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you'll learn about SQL, which stands for Structured Query Language. It has been around since the 1970s and there are many different dialects of the language including MySQL, SQLite, and PostgreSQL, to name a few.\u003c/p\u003e\n\n\u003cp\u003eEach of these dialects has particularities such as specific functions or keywords for that specific implementation. All of them, however, have the same basic structures including keywords like \u003ccode\u003eSELECT\u003c/code\u003e for querying databases, and the same general database architecture.\u003c/p\u003e\n\n\u003ch2\u003eThe Structure of SQL Databases\u003c/h2\u003e\n\n\u003cp\u003eA SQL \u003cstrong\u003e\u003cem\u003edatabase\u003c/em\u003e\u003c/strong\u003e is a high-level container containing one or more \u003cstrong\u003e\u003cem\u003etables\u003c/em\u003e\u003c/strong\u003e. The database can be a continuously-running server that receives requests and returns responses (MySQL, PostgreSQL) or it can be a specially-formatted file on disk (SQLite). We will primarily use SQLite in these lessons because it is lightweight and portable (and therefore useful for educational purposes), but it's important to be aware that other more \"heavy duty\" types of databases are available and are used more often in industry settings.\u003c/p\u003e\n\n\u003cp\u003eA SQL table contains tabular data (data stored in rows and columns), similar to a CSV. Every table has a defined set of columns, and then we store any number of what we refer to as 'records' as rows in our database. A record is just information referring to one specific entity. For instance, if you had a table called \"people\" you could imagine a structure like this:\u003c/p\u003e\n\n\u003ctable border=\"1\" cellpadding=\"4\" cellspacing=\"0\"\u003e\n  \u003ctbody\u003e\u003ctr\u003e\n    \u003cth\u003eid\u003c/th\u003e\n    \u003cth\u003ename\u003c/th\u003e\n    \u003cth\u003eage\u003c/th\u003e\n    \u003cth\u003eemail\u003c/th\u003e\n  \u003c/tr\u003e\n\n  \u003ctr\u003e\n    \u003ctd\u003e1\u003c/td\u003e\n    \u003ctd\u003eBob\u003c/td\u003e\n    \u003ctd\u003e29\u003c/td\u003e\n    \u003ctd\u003ebob@flatironschool.com\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003e2\u003c/td\u003e\n    \u003ctd\u003eJames\u003c/td\u003e\n    \u003ctd\u003e28\u003c/td\u003e\n    \u003ctd\u003ejames@flatironschool.com\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003e3\u003c/td\u003e\n    \u003ctd\u003eJohn\u003c/td\u003e\n    \u003ctd\u003e28\u003c/td\u003e\n    \u003ctd\u003ejohn@flatironschool.com\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\n\u003cp\u003eEach column has a name, and each row contains the corresponding information about a person. Unlike a CSV, a SQL table can also enforce the data types of the columns, which are described in the table \u003cstrong\u003e\u003cem\u003eschema\u003c/em\u003e\u003c/strong\u003e. The schema for this table might look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eCREATE TABLE people (\n  id INTEGER PRIMARY KEY,\n  name TEXT,\n  age INTEGER,\n  email TEXT\n);\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eConnecting to and Querying SQL Databases\u003c/h2\u003e\n\n\u003cp\u003eAs a data scientist, your primary use case of SQL will be querying data stored within databases. To do this, you connect to the database with some sort of tool.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eMost SQL databases have an associated \u003cstrong\u003ecommand-line interface\u003c/strong\u003e where you can write SQL queries without any additional languages or tools. For SQLite, this is called \u003ccode\u003esqlite3\u003c/code\u003e (\u003ca href=\"https://sqlite.org/cli.html\"\u003edocumentation here\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eYou can also connect through a different \u003cstrong\u003ecoding language such as Python\u003c/strong\u003e. For SQLite, the Python module is called \u003ccode\u003esqlite3\u003c/code\u003e (\u003ca href=\"https://docs.python.org/3/library/sqlite3.html\"\u003edocumentation here\u003c/a\u003e). (Yes, the command-line interface and Python module have the same name.)\u003c/li\u003e\n\u003cli\u003eOne other approach is using a \u003cstrong\u003eGUI (graphical user interface)\u003c/strong\u003e tool. For SQLite, a good one is DB Browser for SQLite (\u003ca href=\"https://sqlitebrowser.org/\"\u003edocumentation here\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eOnce you're connected to the database, you can then read, write, update, and delete data from its tables. These commands are called \u003cstrong\u003e\u003cem\u003equeries\u003c/em\u003e\u003c/strong\u003e and are written using the SQL language.\u003c/p\u003e\n\n\u003cp\u003e(Similar to other kinds of file permissions, you might only have the ability to perform some of these actions but not others, e.g. read information from the database but not delete information.)\u003c/p\u003e\n\n\u003cp\u003eTo retrieve data from one or more tables you usually use a \u003ccode\u003eSELECT\u003c/code\u003e statement in your query.\u003c/p\u003e\n\n\u003cp\u003eA simple query would look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight sql\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e \u003cspan class=\"n\"\u003ecol1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecol2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecol3\u003c/span\u003e\n\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e \u003cspan class=\"k\"\u003etable\u003c/span\u003e\n\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e \u003cspan class=\"n\"\u003erecords\u003c/span\u003e \u003cspan class=\"k\"\u003ematch\u003c/span\u003e \u003cspan class=\"n\"\u003ecriteria\u003c/span\u003e\n\u003cspan class=\"k\"\u003eLIMIT\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eDon't worry if this is confusing now, you'll soon learn what each line does. For now, just notice that:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eQueries start with the \u003ccode\u003eSELECT\u003c/code\u003e clause, followed by what you want to select. If selecting multiple columns, you separate them with a comma.\u003c/li\u003e\n\u003cli\u003eThen you specify where that data is being retrieved from the using the FROM clause followed by the table name.\u003c/li\u003e\n\u003cli\u003eAfterward, you can provide conditions such as filters or limits on the amount of data returned.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eRelational Data\u003c/h2\u003e\n\n\u003cp\u003eAlso unlike a CSV, a SQL database can contain multiple related SQL tables. To demonstrate, here is an outline of a database structure:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://github.com/learn-co-curriculum/dsc-getting-started-sql-intro/raw/master/Database-Schema.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThis kind of diagram is called an \u003cstrong\u003e\u003cem\u003eentity relationship diagram (ERD)\u003c/em\u003e\u003c/strong\u003e because it shows the relationships between tables. It does not give us any information about the specific data stored in the database, but rather the metadata.\u003c/p\u003e\n\n\u003cp\u003eIn the diagram, each rectangle is a table, with the table name listed at the top. In this case, we have 8 tables:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003ccode\u003eproductlines\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eproducts\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eorderdetails\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eemployees\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eoffices\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecustomers\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eorders\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003epayments\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eBelow each of the table names, we have a list of the various column names associated with that table. So for example, the \u003ccode\u003eproductlines\u003c/code\u003e table has four columns: \u003ccode\u003eproductLine\u003c/code\u003e, \u003ccode\u003etextDescription\u003c/code\u003e, \u003ccode\u003ehtmlDescription\u003c/code\u003e and \u003ccode\u003eimage\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eIn addition to the names of the tables and their column names, we have an indication of relationships. For example, data in the employees table has some relationship to data on the offices table, indicating that an employee may be associated with a specific office location. Likewise, certain orders are associated with certain customers. Lots of real world data is inherently related. For example, students have an association to a course, or ingredients are related to a recipe.\u003c/p\u003e\n\n\u003ch3\u003ePrimary Keys and Foreign Keys\u003c/h3\u003e\n\n\u003cp\u003eYou may also note that some of these column names are preceded by an asterix (\u003ccode\u003e*\u003c/code\u003e). This indicates that this is the \u003cstrong\u003e\u003cem\u003eprimary key\u003c/em\u003e\u003c/strong\u003e for the table. A primary key is a unique identifier for a table. That is, there can only be unique values for this column entry. \u003ccode\u003elastName\u003c/code\u003e would not be a good choice for a primary key as it's common for people to have the same last names or even \u003ccode\u003efirstName + lastName\u003c/code\u003e pairings. For this reason it is typical for a primary key to have a name reflecting some kind of \"number\", \"code\", or \"id\" ‚Äî something that is truly unique to that record, which may or may not have any meaning beyond the database itself.\u003c/p\u003e\n\n\u003cp\u003eIf you look closely, you'll see that the columns that are the primary key for one table can also appear on other tables. This is known as a \u003cstrong\u003e\u003cem\u003eforeign key\u003c/em\u003e\u003c/strong\u003e aka the primary key from a different (\"foreign\") table. This is the core idea of how data on different tables is associated in a relational database. If you were told a specific \u003ccode\u003ecustomerNumber\u003c/code\u003e, and then given a list of order data that included the \u003ccode\u003ecustomerNumber\u003c/code\u003e, you could determine which orders were placed by that customer by matching up the primary and foreign keys.\u003c/p\u003e\n\n\u003cp\u003eThe lines, circles, arrows, and tick marks are showing different categorizations on exactly how this data is linked.\u003c/p\u003e\n\n\u003ch2\u003eTechnical Interview Practice\u003c/h2\u003e\n\n\u003cp\u003eData retrieval is the most foundational and arguably most important skill in a data scientist's toolbox. You can know all the Python and machine learning and statistics in the world, but they're useless if you don't have data to aim those skills at!\u003c/p\u003e\n\n\u003cp\u003eEspecially for junior data scientists, employers tend to evaluate candidates' data retrieval abilities by asking SQL questions. Keep this in mind as you go through our SQL content, and consider getting additional practice with platforms such as \u003ca href=\"https://www.hackerrank.com/domains/sql\"\u003eHackerRank\u003c/a\u003e to keep your skills up.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you got a quick overview of what SQL is and saw an example SQL \u003ccode\u003eSELECT\u003c/code\u003e query and ERD! Remember that there are multiple SQL dialects all with particular differences, but the overall language is generally fairly similar and interchangeable. You also learned that knowledge of SQL is important for job interviews since data retrieval is a foundational part of the data science process.\u003c/p\u003e","frontPage":false},{"exportId":"intro-to-css","title":"Intro to CSS","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-intro-to-css\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-intro-to-css/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eBrowsers combine the content (HTML) and presentation (CSS) layers to\ndisplay web pages.  CSS is the language for \u003cem\u003estyling\u003c/em\u003e web pages.\u003c/p\u003e\n\n\u003cp\u003eCSS instructions live apart from the HTML elements and have a different\nlook and feel (\"syntax\"). CSS directives give web pages their specific look and\nfeel.  If you have ever been impressed by how a website can be displayed on a\ndesktop browser while the same content looks great on a mobile device, you have\nCSS to thank for it!\u003c/p\u003e\n\n\u003cp\u003eOne of the most amazing displays of the power of CSS is the\n\u003ca href=\"http://www.csszengarden.com/\"\u003eCSS Zen Garden\u003c/a\u003e where people take the \u003cem\u003eexact\nsame\u003c/em\u003e HTML page and use CSS to create \u003cem\u003ewildly\u003c/em\u003e different pages. Take a look!\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-intro-to-css/canvas/images/zengarden1.png\" alt=\"CSS Zen Garden 1\" title=\"A long-scrolling single-page CSS Zen Garden design\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-intro-to-css/canvas/images/zengarden2.png\" alt=\"CSS Zen Garden 2\" title=\"An animated CSS, full-screen browser single-page style Zen Garden design\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-intro-to-css/canvas/images/zengarden3.png\" alt=\"CSS Zen Garden 3\" title=\"Blog-like CSS Zen Garden designs\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAll of the differences you see are due to CSS!\nAstounding, right!?\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eList the components of CSS\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDeclare CSS properties and values\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eRecognize The Differences Between HTML And CSS\u003c/h2\u003e\n\n\u003cp\u003eHTML and CSS play two different roles. When you write HTML, it's important to focus on structure, hierarchy, and meaning ‚Äî the \"marking-up\" of content. Questions in the mind of an HTML author are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIs it best to list these members' names with numbers or bullets?\u003c/li\u003e\n\u003cli\u003eDoes this menu belong in the navigation in the header?\u003c/li\u003e\n\u003cli\u003eShould this additional reference be an aside or a separate section?\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThese questions deal with structure, hierarchy, and meaning, which are concerns of the content layer (HTML).\u003c/p\u003e\n\n\u003cp\u003eWhen defining the presentation layer (CSS), here are the questions to ask\nyourself:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDo I want the header menu to be stationary or do I want it to scroll with the\nbrowser window?\u003c/li\u003e\n\u003cli\u003eHow do I want the content to display inside of a container? For example,\ndoes it fill the whole area, edge-to-edge? Is there white space around the content and/or the container?\u003c/li\u003e\n\u003cli\u003eHow large should an \u003ccode\u003eH1\u003c/code\u003e be relative to an \u003ccode\u003eH2\u003c/code\u003e? What about an \u003ccode\u003eH3\u003c/code\u003e?\u003c/li\u003e\n\u003cli\u003eWhat properties should links have? Underline or no underline?\nWhich color for the normal state versus the hover state? Should the visited link state be different?\u003c/li\u003e\n\u003cli\u003eHow should the content appear when on a desktop machine versus a\nmobile device?\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAs you ask yourself these questions, your focus is on the \u003cem\u003eaesthetic\u003c/em\u003e quality\nof the page. For each bit of \u003cem\u003econtent\u003c/em\u003e, we can define a \u003cstrong\u003epresentation rule\u003c/strong\u003e\nthat will change the way the HTML is displayed.\u003c/p\u003e\n\n\u003ch2\u003eList the Components of CSS\u003c/h2\u003e\n\n\u003cp\u003eFor each \u003cstrong\u003epresentation rule\u003c/strong\u003e, there are 3 things to keep in mind:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat is the specific HTML we want to style?\u003c/li\u003e\n\u003cli\u003eWhat are the qualities we want to modify (e.g. the properties of text\nin a paragraph)?\u003c/li\u003e\n\u003cli\u003e\n\u003cem\u003eHow\u003c/em\u003e do we want to modify the qualities of the element (e.g. font\nfamily, font color, font size, line height, letter spacing, etc.)?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eOnce you've decided what to modify and how we can start writing CSS rules.\u003c/p\u003e\n\n\u003cp\u003eCSS \u003cstrong\u003eselectors\u003c/strong\u003e are a way of declaring which HTML elements you wish to style.\nSelectors can appear a few different ways:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe type of HTML element(\u003ccode\u003eh1\u003c/code\u003e, \u003ccode\u003ep\u003c/code\u003e, \u003ccode\u003ediv\u003c/code\u003e, etc.)\u003c/li\u003e\n\u003cli\u003eThe value of an element's \u003ccode\u003eid\u003c/code\u003e or \u003ccode\u003eclass\u003c/code\u003e (\u003ccode\u003e\u0026lt;p id='idvalue'\u0026gt;\u0026lt;/p\u0026gt;\u003c/code\u003e, \u003ccode\u003e\u0026lt;p class='classname'\u0026gt;\u0026lt;/p\u0026gt;\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003eThe value of an element's attributes (\u003ccode\u003evalue=\"hello\"\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003eThe element's relationship with surrounding elements (a \u003ccode\u003ep\u003c/code\u003e within an element\nwith class of \u003ccode\u003e.infobox\u003c/code\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFor example, if you want the body of the page to have a black background, your\nselector syntax may be \u003ccode\u003ehtml\u003c/code\u003e or \u003ccode\u003ebody\u003c/code\u003e. For anchors, your selector would be\n\u003ccode\u003ea\u003c/code\u003e. A few more examples are listed below:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"css\"\u003e/*\nThe CSS comment syntax is text between \"slash-star\" and \"star-slash\"\n*/\n\n/*\nselects all anchor tag elements in the document (e.g. \u0026lt;a href=\"page-link.html\"\u0026gt;Page Link\u0026lt;/a\u0026gt;)\n*/\na\n\n/*\nselects all headers of type h3 in the document (e.g. \u0026lt;h3\u0026gt;Type selectors\u0026lt;/h3\u0026gt;)\n*/\nh3\n\n/*\nselects all paragraph elements in the document (e.g. \u0026lt;p\u0026gt;Type selectors are used\nto...\u0026lt;/p\u0026gt;)\n*/\np\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors\"\u003eType selectors documentation\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe element type \u003ccode\u003eclass\u003c/code\u003e is a commonly used selector. Class selectors are used\nto \u003cstrong\u003eselect all elements that share a given class name\u003c/strong\u003e. The class selector\nsyntax is: \u003ccode\u003e.classname\u003c/code\u003e. Prefix the class name with a '.'(period).\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"css\"\u003e/*\nselect all elements that have the 'important-topic' classname (e.g. \u0026lt;h1 class='important-topic'\u0026gt;\nand \u0026lt;h1 class='important-topic'\u0026gt;)\n*/\n.important-topic\n\n/*\nselect all elements that have the 'welcome-message' classname (e.g. \u0026lt;p class='helpful-hint'\u0026gt;\nand \u0026lt;p class='helpful-hint'\u0026gt;)\n*/\n.helpful-hint\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eYou can also use the \u003ccode\u003eid\u003c/code\u003e selector to style elements. However, \u003cstrong\u003ethere should\nbe only one element with a given id\u003c/strong\u003e in an HTML document. This can make\nstyling with the ID selector ideal for one-off styles. The \u003ccode\u003eid\u003c/code\u003e selector syntax\nis: \u003ccode\u003e#idvalue\u003c/code\u003e. Prefix the id attribute of an element with a \u003ccode\u003e#\u003c/code\u003e (which is\ncalled \"octothorpe,\" \"pound sign\", or \"hashtag\").\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"css\"\u003e/*\nselects the HTML element with the id 'main-header' (e.g. \u0026lt;h1 id='main-header'\u0026gt;)\n*/\n#main-header\n\n/*\nselects the HTML element with the id 'welcome-message' (e.g. \u0026lt;p id='welcome-message'\u0026gt;)\n*/\n#welcome-message\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/ID_selectors\"\u003eid selectors documentation\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003eDeclare CSS Properties and Values\u003c/h2\u003e\n\n\u003cp\u003eEach element has a list of qualities that can be styled.  CSS \"property\" names\nidentify those qualities. For text styling, examples of property names include\ntext \u003ccode\u003ecolor\u003c/code\u003e, \u003ccode\u003etext-align\u003c/code\u003e and \u003ccode\u003eline-height\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eCSS Property Values are directly related to property names. If you are working\nwith the \u003ccode\u003ecolor\u003c/code\u003e property, the value could be a named color such as \u003ccode\u003ered\u003c/code\u003e, or\n\u003ccode\u003e#660000\u003c/code\u003e. Some properties have their values set with words, others with\nnumbers, and some can take both.\u003c/p\u003e\n\n\u003cp\u003eA CSS property name with a CSS property value is a \u003cstrong\u003eCSS declaration\u003c/strong\u003e.\nTo apply a CSS declaration like \u003ccode\u003ecolor: blue\u003c/code\u003e to a specific HTML\nelement, you need to combine your CSS declaration with a CSS selector. The\nassociation between one or more CSS declarations and a CSS selector is called a\n\u003cstrong\u003eCSS declaration block\u003c/strong\u003e. CSS declarations (one or more) that applied to a\nspecific selector are wrapped by curly braces (\u003ccode\u003e{ }\u003c/code\u003e).  Each declaration inside\na declaration block \u003cstrong\u003emust\u003c/strong\u003e be separated by a semi-colon (\u003ccode\u003e;\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eBelow is a sample CSS declaration block.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"css\"\u003eselector {\n  color: blue;\n}\n/*\nThis is a css declaration for a selector\n'color' is a property name and 'blue' is a css property value\n!!!!! CSS declarations must end with a semi-colon (;) !!!!!\n*/\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eHere's a more complete example declaration block.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"css\"\u003e/*\nThe CSS declaration block below:\n* Will apply to all `h1` elements\n* Will change the text color to blue\n* Will set the font family to Georgia\n*/\nh1 {\n  color: blue;\n  font-family: Georgia;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWith the combination of HTML and CSS, you are able to define content, structure, and style for websites. In this lesson, you learned about the components of CSS and how to declare CSS properties and values in declaration blocks. For example, you can use a CSS selector like \u003ccode\u003eh1\u003c/code\u003e or \u003ccode\u003ep\u003c/code\u003e paired with a declaration block to change the display of that element.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-intro-to-css\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-intro-to-css\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-intro-to-css/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"topic-6-lesson-priorities-live","title":"Topic 6 Lesson Priorities (Live)","type":"WikiPage","content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 91.5433%; height: 415px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete Before \u003cem\u003eSQL Queries\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 52.2353%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.72432%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003cstrong\u003e\u003ca title=\"Getting Started with SQL - Introduction\" href=\"pages/getting-started-with-sql-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/getting-started-with-sql-introduction\" data-api-returntype=\"Page\"\u003eGetting Started with SQL - Introduction\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 29px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 29px;\"\u003e\u003ca title=\"Connecting to SQL Databases\" href=\"assignments/g1add67b78281ae2a2eb3f75501c424c3\"\u003eConnecting to SQL Databases\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center; height: 29px;\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 29px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Selecting Data with SQL\" href=\"assignments/ge031f1ae87298d0a98f8e73c6b53640b\"\u003eSelecting Data with SQL\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center; height: 29px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 29px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: Getting Started with SQL\" href=\"quizzes/g3870afccc1c53ad18c76df204a41f4fd\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/quizzes/21549\" data-api-returntype=\"Quiz\"\u003eQuiz: Getting Started with SQL\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center; height: 29px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003cstrong\u003e\u003ca title=\"Filtering Data with SQL\" href=\"assignments/g055514bc26de5d911bf7626fff266d7b\"\u003eFiltering Data with SQL\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"Filtering Data with SQL - Lab\" href=\"assignments/gd45c31c98f6c1a9458d872d0b982e0aa\"\u003eFiltering Data with SQL - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 29px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Ordering and Limiting Data with SQL\" href=\"assignments/g094287fd7ad527253aaf69cfe63613d9\"\u003eOrdering and Limiting Data with SQL\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center; height: 29px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 29px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 29px;\"\u003e\u003ca title=\"Filtering, Ordering, and Limiting Data with SQL - Lab\" href=\"assignments/g75f6e7009ad15d0846d2826775cb78b4\"\u003eFiltering, Ordering, and Limiting Data with SQL - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center; height: 29px;\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003cstrong\u003e \u003ca title=\"Grouping Data with SQL\" href=\"assignments/ge21d8bf641243230e5a6e1bd29bfc0f5\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9175\" data-api-returntype=\"Assignment\"\u003eGrouping Data with SQL\u003c/a\u003e \u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"Grouping Data with SQL - Lab\" href=\"assignments/gfe1ba86c5b9da7fdee1d1c620a9527d9\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9176\" data-api-returntype=\"Assignment\"\u003eGrouping Data with SQL - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"Database Admin 101\" href=\"assignments/g9f939ac2496cd23a9d2236b40858d109\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9185\" data-api-returntype=\"Assignment\"\u003eDatabase Admin 101\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"Database Admin 101 - Lab\" href=\"assignments/g31949e3e33b48d18e70e6c57f6bebb96\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9186\" data-api-returntype=\"Assignment\"\u003eDatabase Admin 101 - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;Low priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003cstrong\u003e \u003ca class=\"inline_disabled\" title=\"SQL Database Data Types\" href=\"pages/sql-database-data-types\" target=\"_blank\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/sql-database-data-types\" data-api-returntype=\"Page\"\u003eSQL Database Data Types\u003c/a\u003e \u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"Quiz: SQL Filtering and Database Management\" href=\"quizzes/gcbfca6c57f956e3e24e228e00d2ff65d\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/quizzes/21550\" data-api-returntype=\"Quiz\"\u003eQuiz: SQL Filtering and Database Management\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 91.3561%; height: 58px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eSQL Queries\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 52.2353%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.72432%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 52.2353%;\"\u003e\u003cstrong\u003e\u003ca title=\"SQL Queries Exit Ticket\" href=\"quizzes/g48b48a569b57fd9cecaaeee99eba2db5\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/quizzes/11256\" data-api-returntype=\"Quiz\"\u003eSQL Queries Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"Getting Started with SQL - Recap\" href=\"pages/getting-started-with-sql-recap\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/getting-started-with-sql-recap\" data-api-returntype=\"Page\"\u003eGetting Started with SQL - Recap\u003c/a\u003e\u0026nbsp;\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e","frontPage":false},{"exportId":"topic-2-lesson-priorities-live","title":"Topic 2 Lesson Priorities (Live)","type":"WikiPage","content":"\u003cp\u003eFor a reminder of how to use these lesson priorities, see \u003ca title=\"How to Use Lesson Priorities (Live)\" href=\"pages/how-to-use-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/how-to-use-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eHow to Use Lesson Priorities (Live)\u003c/a\u003e\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 98.314%; height: 121px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete Before \u003cem\u003eBash and Git Introduction\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 48.7333%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 6.93321%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"Bash and Git - Introduction\" href=\"pages/bash-and-git-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/bash-and-git-introduction\" data-api-returntype=\"Page\"\u003e\u003cstrong\u003eBash and Git - Introduction\u003c/strong\u003e\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"The Bash Shell\" href=\"pages/the-bash-shell\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/the-bash-shell\" data-api-returntype=\"Page\"\u003eThe Bash Shell\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"Git Version Control 101\" href=\"pages/git-version-control-101\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/git-version-control-101\" data-api-returntype=\"Page\"\u003e\u003cstrong\u003eGit Version Control 101\u003c/strong\u003e\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 98.1264%; height: 151px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eBash and Git Introduction\u003c/em\u003e Lecture, Before \u003cem\u003eGit Fundamentals\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 48.7333%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 6.93321%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"Short Video: Bash\" href=\"pages/short-video-bash?module_item_id=g411555d6048aff1f39a29289e31619ad\" data-api-endpoint=\"pages/short-video-bash?module_item_id=mastercourse_15802_379_4a14f5d3091e90d2d58f0fe6878ad9e7\" data-api-returntype=\"Page\"\u003eShort Video: Bash\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 48.7333%;\"\u003e\u003cstrong\u003e\u003ca title=\"Bash Exit Ticket\" href=\"quizzes/g45e2eb98ac8f48b70905148b24529dd9\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30562\" data-api-returntype=\"Quiz\"\u003eBash Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"Getting Started with Git\" href=\"pages/getting-started-with-git\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/getting-started-with-git\" data-api-returntype=\"Page\"\u003eGetting Started with Git\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e3rd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"Git Practice\" href=\"pages/git-practice\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/git-practice\" data-api-returntype=\"Page\"\u003eGit Practice\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 48.7333%;\"\u003e\u003ca title=\".gitignore\" href=\"pages/dot-gitignore\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/dot-gitignore\" data-api-returntype=\"Page\"\u003e.gitignore\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 48.7333%;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: Bash and Git Fundamentals\" href=\"quizzes/gdf1958170fb1be12193296399ab484d2\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30554\" data-api-returntype=\"Quiz\"\u003eQuiz: Bash and Git Fundamentals\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 98.3134%; height: 184px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eGit Fundamentals\u003c/em\u003e Lecture, Before \u003cem\u003eGit Collaboration\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 48.7333%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 6.93321%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 48.7333%;\"\u003e\u003cstrong\u003e\u003ca title=\"Git Exit Ticket\" href=\"quizzes/g0676d1cd424d2d148b28d57bbe490338\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30552\" data-api-returntype=\"Quiz\"\u003eGit Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"Collaborating with Git Branches\" href=\"pages/collaborating-with-git-branches\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/collaborating-with-git-branches\" data-api-returntype=\"Page\"\u003eCollaborating with Git Branches\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"Git Merge - Lab\" href=\"pages/git-merge-lab\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/git-merge-lab\" data-api-returntype=\"Page\"\u003eGit Merge - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"Git Stash - Lab\" href=\"pages/git-stash-lab\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/git-stash-lab\" data-api-returntype=\"Page\"\u003eGit Stash - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"Git Resources\" href=\"pages/git-resources\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/git-resources\" data-api-returntype=\"Page\"\u003eGit Resources\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e3rd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 48.7333%;\"\u003e\u003ca title=\"Quiz: Git Collaboration\" href=\"quizzes/gc063a86905e9f4ca9cd5caec4b8601e3\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30583\" data-api-returntype=\"Quiz\"\u003eQuiz: Git Collaboration\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 98.7812%; height: 88px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eGit Collaboration\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 48.7333%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 6.93321%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 48.7333%;\"\u003e\u003cstrong\u003e\u003ca title=\"Collaborating with Git Exit Ticket\" href=\"quizzes/g27426852f823c095338dad1cd46aa373\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30564\" data-api-returntype=\"Quiz\"\u003eCollaborating with Git Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 29px;\"\u003e\u003ca title=\"Bash and Git - Recap\" href=\"pages/bash-and-git-recap\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/bash-and-git-recap\" data-api-returntype=\"Page\"\u003eBash and Git - Recap\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 29px; text-align: center;\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003c/table\u003e","frontPage":false},{"exportId":"apis-introduction","title":"APIs - Introduction","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-apis-intro\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-apis-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-apis-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003cp\u003eOne of the many ways you'll find yourself accessing data as a professional data scientist is via APIs (Application Programming Interfaces). Typically, you'll send a request and get some data back, often in JSON or XML format. In this section, you'll get some hands-on experience retrieving and working with data provided by a range of different APIs.\u003c/p\u003e  \u003ch2\u003eIntroduction to APIs\u003c/h2\u003e  \u003cp\u003eIn this section, we'll provide a conceptual introduction to various kinds of APIs and some of the reasons that businesses create them. \u003c/p\u003e  \u003ch3\u003eThe Client Server Model\u003c/h3\u003e  \u003cp\u003eWe then look at the basic model of \"clients\" and \"servers\" to provide a framework for thinking about how your \"client\" retrieves information from an API \"server\". \u003c/p\u003e  \u003ch3\u003eThe Request/Response Cycle\u003c/h3\u003e  \u003cp\u003eNext, we'll look at the fundamental mechanism by which web-based APIs are typically accessed - sending an HTTP request and then processing the response provided by the server. We'll also get a little experience working with HTTP requests using the Python \u003ccode\u003e.get()\u003c/code\u003e method within the \u003ccode\u003erequests\u003c/code\u003e package. We also get some hands-on experience retrieving information from NASA using \u003ca href=\"http://open-notify.org/\"\u003eOpen Notify\u003c/a\u003e.\u003c/p\u003e  \u003ch3\u003eAPIs and OAuth\u003c/h3\u003e  \u003cp\u003eUsually, access to a given API is limited to avoid abuse. One of the most common mechanisms for identifying your API requests to make sure they fit within acceptable usage guidelines is OAuth - Open Authorization - a standard for authorizing clients across web requests. In this section, we'll provide an overview of what OAuth is and how it works by looking at how it is implemented by Dropbox. \u003c/p\u003e  \u003ch3\u003eWorking with the Yelp API\u003c/h3\u003e  \u003cp\u003eNext, we'll get some practice working with a real API, retrieving information from the Yelp API. \u003c/p\u003e  \u003ch3\u003eCreating Interactive Maps with Folium\u003c/h3\u003e  \u003cp\u003eWe wrap up the section by creating interactive maps with Folium. In the cumulative lab, you will obtain data from the Yelp API to display it on an interactive map.\u003c/p\u003e  \u003ch2\u003eSummary\u003c/h2\u003e  \u003cp\u003eMany companies provide access to their data via an API, so being able to connect to and work with data provided via an API is a critical skill as a professional data scientist!\u003c/p\u003e","frontPage":false},{"exportId":"topic-1-lesson-priorities-live","title":"Topic 1 Lesson Priorities (Live)","type":"WikiPage","content":"\u003cp\u003e\u003cstrong\u003eIf you have not completed all of the content from Pre-Work, you should do so as soon as possible.\u003c/strong\u003e Proficiency with the content from the Pre-Work is required to follow along with the lectures and other activities. If you have any questions about Pre-Work material, please reach out to your instructor for support.\u003c/p\u003e\n\u003cp\u003eFor a reminder of how to use these lesson priorities, see \u003ca title=\"How to Use Lesson Priorities (Live)\" href=\"pages/how-to-use-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/how-to-use-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eHow to Use Lesson Priorities (Live)\u003c/a\u003e\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 98.8747%; height: 236px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete Before \u003cem\u003eData Science Environments\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 48.7333%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 6.93321%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003cstrong\u003e \u003ca title=\"Getting Started with Data Science - Introduction\" href=\"pages/getting-started-with-data-science-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/getting-started-with-data-science-introduction\" data-api-returntype=\"Page\"\u003eGetting Started with Data Science - Introduction\u003c/a\u003e \u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003ca title=\"The Data Science Process\" href=\"pages/the-data-science-process\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/the-data-science-process\" data-api-returntype=\"Page\"\u003eThe Data Science Process\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003ca title=\"Problems Data Science Can Solve\" href=\"pages/problems-data-science-can-solve\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/problems-data-science-can-solve\" data-api-returntype=\"Page\"\u003eProblems Data Science Can Solve\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003cstrong\u003e\u003ca title=\"PEP8\" href=\"assignments/gfed45802704e0b7865e825dba6faff25\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186756\" data-api-returntype=\"Assignment\"\u003ePEP8\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003ca title=\"Data Privacy and Data Ethics\" href=\"pages/data-privacy-and-data-ethics\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/data-privacy-and-data-ethics\" data-api-returntype=\"Page\"\u003eData Privacy and Data Ethics\u003c/a\u003e\u0026nbsp;\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: Data Science Basics\" href=\"quizzes/g3fc96605f5d6cc55db8e217edd865729\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30549\" data-api-returntype=\"Quiz\"\u003eQuiz: Data Science Basics\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 98.0734%;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eData Science Environments\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 48.7333%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 6.93321%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 48.7333%;\"\u003e\u003cstrong\u003e\u003ca title=\"Data Science Environments Exit Ticket\" href=\"quizzes/g344243053420d69c7ffad8c81e13c8d5\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30576\" data-api-returntype=\"Quiz\"\u003eData Science Environments Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003cstrong\u003e\u003ca title=\"Setting up a Professional Data Science Environment - Introduction\" href=\"pages/setting-up-a-professional-data-science-environment-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/setting-up-a-professional-data-science-environment-introduction\" data-api-returntype=\"Page\"\u003eSetting up a Professional Data Science Environment - Introduction\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003cstrong\u003e\u003ca title=\"Setting up a Professional Data Science Environment - MacOS Installation\" href=\"pages/setting-up-a-professional-data-science-environment-macos-installation\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/setting-up-a-professional-data-science-environment-macos-installation\" data-api-returntype=\"Page\"\u003eSetting up a Professional Data Science Environment - MacOS Installation\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\"\u003e\u003cstrong\u003e1st*\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003cstrong\u003e\u003ca title=\"Setting up a Professional Data Science Environment - Windows Installation\" href=\"pages/setting-up-a-professional-data-science-environment-windows-installation\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/setting-up-a-professional-data-science-environment-windows-installation\" data-api-returntype=\"Page\"\u003eSetting up a Professional Data Science Environment - Windows Installation\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\"\u003e\u003cstrong\u003e1st*\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003cstrong\u003e\u003ca title=\"Setting up a Professional Data Science Environment - Configuring Git and Anaconda\" href=\"pages/setting-up-a-professional-data-science-environment-configuring-git-and-anaconda\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/setting-up-a-professional-data-science-environment-configuring-git-and-anaconda\" data-api-returntype=\"Page\"\u003eSetting up a Professional Data Science Environment - Configuring Git and Anaconda\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003ca title=\"Running Jupyter Notebooks Locally\" href=\"pages/running-jupyter-notebooks-locally\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/running-jupyter-notebooks-locally\" data-api-returntype=\"Page\"\u003eRunning Jupyter Notebooks Locally\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003ca title=\"Running Jupyter Notebooks Locally - Lab\" href=\"assignments/g2079b79db5f5e3608e7b2979d6657035\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186769\" data-api-returntype=\"Assignment\"\u003eRunning Jupyter Notebooks Locally - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 48.7333%;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: Professional Data Science Environment\" href=\"quizzes/ga453b697c32536aa3d4b985a1dce583b\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30590\" data-api-returntype=\"Quiz\"\u003eQuiz: Professional Data Science Environment\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px; text-align: left;\"\u003e\n\u003ctd style=\"width: 48.7333%; height: 30px;\"\u003e\u003ca title=\"Getting Started with Data Science - Recap\" href=\"pages/getting-started-with-data-science-recap\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/getting-started-with-data-science-recap\" data-api-returntype=\"Page\"\u003eGetting Started with Data Science - Recap\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 6.93321%; height: 30px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003e*Follow the setup instructions for your operating system only\u003c/strong\u003e\u003c/p\u003e","frontPage":false},{"exportId":"short-video-bash","title":"Short Video: Bash","type":"WikiPage","content":"\u003cdiv style=\"padding:62.5% 0 0 0;position:relative;\"\u003e\u003ciframe src=\"https://player.vimeo.com/video/713398999?h=cf5cb60dab\u0026amp;badge=0\u0026amp;autopause=0\u0026amp;player_id=0\u0026amp;app_id=58479\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen=\"\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;\" title=\"bash_new_directory_phase1_gd\"\u003e\u003c/iframe\u003e\u003c/div\u003e","frontPage":false},{"exportId":"getting-started-with-data-science-recap","title":"Getting Started with Data Science - Recap","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-introduction-v2-2-recap\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-v2-2-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-v2-2-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this section, you learned about the data science process and set up a professional data science environment on your computer.\u003c/p\u003e  \u003ch2\u003eKey Takeaways\u003c/h2\u003e  \u003cul\u003e \u003cli\u003eThere is a lot to learn about data science, but most of the models involved do one of the following things:  \u003cul\u003e \u003cli\u003ePredicting a continuous value (regression)\u003c/li\u003e \u003cli\u003ePredicting a category (classification)\u003c/li\u003e \u003cli\u003eIdentifying unusual data (anomaly detection)\u003c/li\u003e \u003cli\u003eGenerating recommendations\u003c/li\u003e \u003c/ul\u003e\u003c/li\u003e \u003cli\u003eData science is not just about selecting and tuning machine learning models. Much of the value comes from understanding the business needs and formulating the problem thoughtfully. And most of the effort is in the early stages of finding, cleaning, exploring, and simplifying the data so it's ready to be run against your models.\u003c/li\u003e \u003cli\u003eIt's important to use professional tools.  \u003cul\u003e \u003cli\u003eJupyter Notebook is a great environment for combining your notes and your code\u003c/li\u003e \u003cli\u003eGit allows you to keep track of your changes\u003c/li\u003e \u003cli\u003eGitHub allows you to share your changes with your team\u003c/li\u003e \u003cli\u003eConda virtual environments ensure that the libraries you use for one project won't break another project you were working on\u003c/li\u003e \u003c/ul\u003e\u003c/li\u003e \u003c/ul\u003e","frontPage":false},{"exportId":"getting-started-with-git","title":"Getting Started with Git","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-git-intro\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eAs you now know, Git is a version control system. The Flatiron School hosts our curriculum using GitHub, and we use IllumiDesk to facilitate a deep integration with GitHub. GitHub is an online hosting platform that uses Git. We need to teach you just enough Git to interact with GitHub like a real developer. While you can run Python notebooks on the Illumidesk platform, you'll also want to be able to download material to your local computer so you can work on it there.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDescribe the difference between a forked and a cloned respository\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003egit clone\u003c/code\u003e to clone a repository\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003egit add\u003c/code\u003e, \u003ccode\u003egit commit\u003c/code\u003e, and \u003ccode\u003egit push\u003c/code\u003e to make changes to a repository\u003c/li\u003e\n\u003cli\u003eCompare local and remote repositories\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSome terminology and concepts\u003c/h2\u003e\n\u003cp\u003eAs you can see from the objectives above, we're going to dive in and use several Git commands in this lesson.\u003c/p\u003e\n\u003cp\u003eThe first thing we'll look at is \u003cem\u003eforking\u003c/em\u003e, a concept from the GitHub platform.\u003c/p\u003e\n\u003cp\u003eForking is the process of making a personal copy of the lesson or lab on GitHub.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"http://ironboard-curriculum-content.s3.amazonaws.com/front-end/lab-assets/git-workflow-1.png\" alt=\"What's a Fork\"\u003e\u003c/p\u003e\n\u003cp\u003eAfterward, we'll use \u003ccode\u003egit clone\u003c/code\u003e from a bash shell like terminal or git bash in order to copy the material from the web to our local computer.\u003c/p\u003e\n\u003cp\u003eFrom there, Git will allow us to continue to track and incorporate changes that we make to our work.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egit status\u003c/code\u003e allows us to see if we have made any changes.\u003c/p\u003e\n\u003cp\u003eIf we have made changes that we would like to save to our version control history, we can then use \u003ccode\u003egit add\u003c/code\u003e to stage the changed files to the version history and \u003ccode\u003egit commit\u003c/code\u003e to finalize the process. Finally, we can then use \u003ccode\u003egit push\u003c/code\u003e to push our changes to the web so that we or collaborators can access them from anywhere.\u003c/p\u003e\n\u003cp\u003eNow that you have a brief overview of what we're about to dive into, let's go through the process step by step.\u003c/p\u003e\n\u003ch2\u003eOpen up a Bash Shell and Create a Course Folder / Subfolder\u003c/h2\u003e\n\u003cp\u003eTo use Git, we're going back to the bash shell (mac: terminal, windows: git bash) once again!\u003c/p\u003e\n\u003cp\u003eTo start:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a folder on your computer for your course materials and navigate into it (preferably using \u003ccode\u003emkdir\u003c/code\u003e and \u003ccode\u003ecd\u003c/code\u003e) if you haven't already\n\u003cul\u003e\n\u003cli\u003eYou may want to create a subfolder titled \"Section1\", \"Phase_1\" (or whatever you find to be an appropriate title) and navigate into that\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eReturn to your web browser and navigate to the lesson or lab you want to download\u003c/li\u003e\n\u003cli\u003eClick the GitHub icon\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-intro/master/images/canvas_github_icon.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003cp\u003eYou'll be redirected to the associated GitHub repository.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-intro/master/images/before-fork.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eClick the fork button\u003c/strong\u003e, as shown above in order to create a copy on your personal account which you can edit and update.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAfter a moment of this:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-intro/master/images/during-fork.png\" width=\"400\"\u003e\u003c/p\u003e\n\u003cp\u003eYou'll be redirected to your new personal copy of the repository:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-intro/master/images/after-fork.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003ch2\u003e\u003ccode\u003egit clone\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eNow that you have your own copy (by forking), we're going to download this copy to your local computer using \u003ccode\u003egit clone\u003c/code\u003e.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eCopy the URL\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMac: Press \u003cstrong\u003ecmd+L\u003c/strong\u003e to highlight the url bar and \u003cstrong\u003ecmd+c\u003c/strong\u003e to copy the url\u003c/li\u003e\n\u003cli\u003eWindows: Press \u003cstrong\u003eCtrl+L\u003c/strong\u003e to highlight the url bar and \u003cstrong\u003eCtrl+c\u003c/strong\u003e to copy the url\u003c/li\u003e\n\u003cli\u003eYou can also click the green \"Code\" button on the GitHub page, and click the clipboard icon to copy the url\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eReturn to your bash shell\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eType: \u003ccode\u003egit clone\u003c/code\u003e and paste your repo url (\u003cstrong\u003ecmd + v\u003c/strong\u003e or \u003cstrong\u003eCtrl+V\u003c/strong\u003e)\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eVoila!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eThe repository and all of its contents will be downloaded locally to your computer!\u003c/p\u003e\n\u003cp\u003eYou should be able to see the new folder by listing the files in the current directory with \u003ccode\u003els\u003c/code\u003e. You can then navigate into the git directory with \u003ccode\u003ecd directory_name\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eNow that you have a local copy, we can further investigate some more Git commands for version control. \u003cstrong\u003eNote that for these to work you must be in the git folder (the one you just cloned above). Make sure to navigate into the folder using the \u003ccode\u003ecd\u003c/code\u003e command.\u003c/strong\u003e\u003c/p\u003e\n\u003ch2\u003e\u003ccode\u003egit status\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eOnce you have a Git repository downloaded locally, Git will keep track of every change you make to the code in that folder. You can ask Git what the differences or changes you've made since the last commit by typing \u003ccode\u003egit status\u003c/code\u003e into your terminal.\u003c/p\u003e\n\u003cp\u003eIt's really helpful to constantly get the status from Git to see what changes you need to add, commit, or push.\u003c/p\u003e\n\u003ch2\u003e\u003ccode\u003egit add\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eAdding changes with the \u003ccode\u003egit add\u003c/code\u003e command is a way to stage any changes and get them ready to be a permanent record in your Git log via a commit. The workflow worth memorizing right now is to simply add all your changes via \u003ccode\u003egit add .\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003e\u003ccode\u003egit commit\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eA commit is a permanent moment in time in your Git history. A commit creates a new version of your code. To commit, memorize this command. \u003ccode\u003egit commit -am \"Your commit message\"\u003c/code\u003e. You are using the \u003ccode\u003egit commit\u003c/code\u003e command with the flags \u003ccode\u003e-am\u003c/code\u003e, which tell Git to add and commit all changes and to include a commit message. You supply the commit message in \u003ccode\u003e\"\"\u003c/code\u003e directly after the command, where it says \u003ccode\u003e\"Your commit message\"\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003e\u003ccode\u003egit push\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003ePushing is the process of taking your local code and commits and syncing them, or uploading them, to GitHub. You're updating the GitHub remote (remotes are just fancy names for cloud copies of the repository), generally your fork, represented by a remote named \u003ccode\u003eorigin\u003c/code\u003e, by pushing your code to the remote. The Git command to do this is simply \u003ccode\u003egit push\u003c/code\u003e. When you \u003ccode\u003egit push\u003c/code\u003e from within a Git repository, it will take all the commits that you have locally and push them to the online remote.\u003c/p\u003e\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.git-tower.com/blog/git-cheat-sheet/\"\u003eGit Cheatsheet\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.git-tower.com/learn/git/ebook/en/command-line/appendix/best-practices\"\u003eGit Best Practices\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://guides.github.com/introduction/flow\"\u003eUnderstanding the GitHub Flow\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://guides.github.com/activities/hello-world\"\u003eHello World GitHub\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://guides.github.com/activities/forking\"\u003eForking on GitHub\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://rogerdudler.github.io/git-guide/\"\u003eGit - The Simple Guide\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://gitimmersion.com/\"\u003eGit Immersion\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://try.github.com/\"\u003eTry Git\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eIn this lesson, we took an introductory look at Git and GitHub. First, we saw how to fork and clone repositories from GitHub onto your local machine. From there, we then further discussed how to add changes to git, commit them, and push them online.\u003c/p\u003e","frontPage":false},{"exportId":"topic-3-lesson-priorities-live","title":"Topic 3 Lesson Priorities (Live)","type":"WikiPage","content":"\u003cp\u003e\u003cstrong\u003eThe first lecture in this topic covers content that was introduced in the Pre-Work\u003c/strong\u003e. Be sure to go back and review this content if you feel uncertain about data manipulation with base Python.\u003c/p\u003e\n\u003cp\u003eFor a reminder of how to use these lesson priorities, see \u003ca title=\"How to Use Lesson Priorities (Live)\" href=\"pages/how-to-use-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/how-to-use-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eHow to Use Lesson Priorities (Live)\u003c/a\u003e\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 88.7081%; height: 60px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete Before \u003cem\u003ePython Data Manipulation\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 32.6414%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 2.9876%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003cstrong\u003e\u003ca title=\"Data Analysis in Base Python - Introduction\" href=\"pages/data-analysis-in-base-python-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/data-analysis-in-base-python-introduction\" data-api-returntype=\"Page\"\u003eData Analysis in Base Python - Introduction\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003ca title=\"Short Video: List Comprehensions and Dictionary Comprehensions\" href=\"pages/short-video-list-comprehensions-and-dictionary-comprehensions\" data-api-endpoint=\"pages/short-video-list-comprehensions-and-dictionary-comprehensions\" data-api-returntype=\"Page\"\u003eShort Video: List Comprehensions and Dictionary Comprehensions\u003c/a\u003e\u0026nbsp;\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 88.7081%; height: 147px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003ePython Data Manipulation\u003c/em\u003e Lecture, Before \u003cem\u003eData Analysis with CSV Files\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 32.6414%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 2.9876%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003cstrong\u003e\u003ca title=\"Python Data Manipulation Exit Ticket\" href=\"quizzes/gc29d9ce2ff9c715a75278780ea856aa6\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30567\" data-api-returntype=\"Quiz\"\u003ePython Data Manipulation Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003cstrong\u003e\u003ca title=\"File Input and Output in Python\" href=\"assignments/gf51f7ff13bc3c4e413c7ca73a07fae54\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186730\" data-api-returntype=\"Assignment\"\u003eFile Input and Output in Python\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003cstrong\u003e\u003ca title=\"CSV\" href=\"assignments/g24d05e47f4390531bc8dc930f333d2e9\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186715\" data-api-returntype=\"Assignment\"\u003eCSV\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 32.6414%;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: Data Analysis with Base Python \" href=\"quizzes/g0f269a778bfec639d5bc74b32b8ff84d\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30577\" data-api-returntype=\"Quiz\"\u003eQuiz: Data Analysis with Base Python \u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 88.7081%; height: 263px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eData Analysis with CSV Files\u003c/em\u003e\u0026nbsp;Lecture, Before \u003cem\u003eData Analysis with JSON Files\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 32.6414%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 2.9876%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003cstrong\u003e\u003ca title=\"Data Analysis with CSVs Exit Ticket\" href=\"quizzes/g2a4459472e02be064bae46fe92d56ec5\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30581\" data-api-returntype=\"Quiz\"\u003eData Analysis with CSVs Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003cstrong\u003e\u003ca title=\"JSON\" href=\"assignments/ga04c79d1eaf15c23f148e5d332dde21b\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186744\" data-api-returntype=\"Assignment\"\u003eJSON\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003ca title=\"JSON - Lab\" href=\"assignments/g1cdf2e88ec7422089bef9ddf8b50fc83\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186745\" data-api-returntype=\"Assignment\"\u003eJSON - Lab\u003c/a\u003e\u0026nbsp;\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003cstrong\u003e\u003ca title=\"Working with Known JSON Schemas\" href=\"assignments/gf3caae422ef7dee572f98221d8a62f41\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186789\" data-api-returntype=\"Assignment\"\u003eWorking with Known JSON Schemas\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003ca title=\"Working with Known JSON Schemas - Lab\" href=\"assignments/gbf5a923d347522f919e93620881c0252\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186790\" data-api-returntype=\"Assignment\"\u003eWorking with Known JSON Schemas - Lab\u003c/a\u003e\u0026nbsp;\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003ca title=\"Exploring and Transforming JSON Schemas\" href=\"assignments/gb51784d7a69a0c8c29987cb96607eca0\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186728\" data-api-returntype=\"Assignment\"\u003eExploring and Transforming JSON Schemas\u003c/a\u003e\u0026nbsp;\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"height: 28px; width: 32.6414%;\" width=\"64\"\u003e\u003ca title=\"Exploring and Transforming JSON Schemas - Lab\" href=\"assignments/g2e4f113fb8a929893f5dc33a077850cf\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186729\" data-api-returntype=\"Assignment\"\u003eExploring and Transforming JSON Schemas - Lab\u003c/a\u003e\u0026nbsp;\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 24px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 24px;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: Data Serialization Formats \" href=\"quizzes/g919915f93846219b96688242093bc527\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30585\" data-api-returntype=\"Quiz\"\u003eQuiz: Data Serialization Formats \u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; text-align: center; height: 24px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 88.6145%; height: 104px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eData Analysis with JSON Files\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 32.6414%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 2.9876%; height: 43px; text-align: center;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 28px;\"\u003e\u003cstrong\u003e\u003ca title=\"Data Analysis with JSONs Exit Ticket \" href=\"quizzes/g92eed2d6e4f3c5b60a9abd3ec8aff16a\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30565\" data-api-returntype=\"Quiz\"\u003eData Analysis with JSONs Exit Ticket \u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 32.6414%;\"\u003e\u003cstrong\u003e\u003ca title=\"‚≠êÔ∏è Data Serialization Formats - Cumulative Lab\" href=\"quizzes/gd382b571f354991be10756bfc79dd939\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30553\" data-api-returntype=\"Quiz\"\u003e‚≠êÔ∏è Data Serialization Formats - Cumulative Lab\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; text-align: center;\"\u003e\u003cstrong\u003e1st*\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 32.6414%; height: 29px;\"\u003e\u003ca title=\"Data Analysis in Base Python - Recap\" href=\"pages/data-analysis-in-base-python-recap\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/data-analysis-in-base-python-recap\" data-api-returntype=\"Page\"\u003eData Analysis in Base Python - Recap\u003c/a\u003e\u0026nbsp;\u003c/td\u003e\n\u003ctd style=\"width: 2.9876%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003e*Cumulative labs may be used for pairing exercises and might not be published yet; contact your instructor if you have questions\u003c/strong\u003e\u003c/p\u003e","frontPage":false},{"exportId":"apis-recap","title":"APIs - Recap","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-apis-recap\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-apis-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-apis-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this section, you learned about the HTTP request/response cycle and using APIs. APIs are critical to software development, and they can be powerful tools for gathering data for data scientists.\u003c/p\u003e  \u003ch2\u003eKey Takeaways\u003c/h2\u003e  \u003cp\u003eAPIs can provide access to a wide range of data that you might need as a data scientist.\u003c/p\u003e  \u003cp\u003eKey takeaways include:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eWhile there are many other kinds of APIs, as a data scientist, you'll typically be working with web APIs.\u003c/li\u003e \u003cli\u003eThe \u003ccode\u003erequests\u003c/code\u003e library in Python is a great starting point for making HTTP requests to APIs.\u003c/li\u003e \u003cli\u003eMost APIs you encounter will return results in JSON format.\u003c/li\u003e \u003cli\u003eThe two most common HTTP methods you'll use when accessing APIs are \u003ccode\u003eGET\u003c/code\u003e (to retrieve information) and \u003ccode\u003ePOST\u003c/code\u003e (to send information).\u003c/li\u003e \u003cli\u003eTypically, you'll need to authenticate in some manner to gain access to most APIs - one common method for doing so is using OAuth. \u003c/li\u003e \u003c/ul\u003e","frontPage":false},{"exportId":"bash-and-git-introduction","title":"Bash and Git - Introduction","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-bash-collab-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-bash-collab-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you'll learn about Bash command line and Git. You've seen a bit of this from our first section in which you took a look at how to clone a GitHub repository. Now, we'll further investigate how to navigate the command line and use more powerful Git techniques. \u003c/p\u003e\n\n\u003ch2\u003eBash and the command line\u003c/h2\u003e\n\n\u003cp\u003eThe command line or shell is the preliminary interface where users can interact with the operating system. Before applications, windows, and graphical user interfaces, all interaction with the computer was facilitated through the command line. Of these command line shells, bash now comes preinstalled in every mac and many other unix based systems.\u003c/p\u003e\n\n\u003ch3\u003eNavigating directories\u003c/h3\u003e\n\n\u003cp\u003eThe preliminary fundamental techniques you'll practice in this section are changing directories using the \u003ccode\u003ecd\u003c/code\u003e command, making directories with the \u003ccode\u003emkdir\u003c/code\u003e command, and checking where you are using the print working directory, \u003ccode\u003epwd\u003c/code\u003e command. In addition, you'll also take a look at how to create and edit files from the command line using the \u003ccode\u003enano\u003c/code\u003e command.\u003c/p\u003e\n\n\u003ch2\u003eGit\u003c/h2\u003e\n\n\u003cp\u003eYou've previously seen how to fork and clone git repositories from GitHub. Git is a version control system that is used by developers all over the world for collaboration. Git is the technology underlying the GitHub platform, a cloud service provider, of which there are many. \u003c/p\u003e\n\n\u003ch3\u003eGit commands\u003c/h3\u003e\n\n\u003cp\u003eIn this section, you'll take a look at several Git commands including \u003ccode\u003egit add\u003c/code\u003e, \u003ccode\u003egit commit\u003c/code\u003e, \u003ccode\u003egit push\u003c/code\u003e, \u003ccode\u003egit merge\u003c/code\u003e, \u003ccode\u003egit branch\u003c/code\u003e, \u003ccode\u003egit checkout\u003c/code\u003e, \u003ccode\u003egit status\u003c/code\u003e, \u003ccode\u003egit stash\u003c/code\u003e, and \u003ccode\u003egit log\u003c/code\u003e. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you'll take a look at Git and Bash! Get ready to have the preliminary tools that almost all developers consider to be their foundation!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-git-bash-collab-intro\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-git-bash-collab-intro\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-bash-collab-intro/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"html-links-lab","title":"HTML Links - Lab","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-links-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-links-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou've seen HTML tags and tag attributes. In this lab, you'll bring those together by investigating the anchor tag, \u003ccode\u003ea\u003c/code\u003e. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\n* Use an anchor tag to create a link\u003c/p\u003e\n\n\u003ch2\u003eUse an \u003ccode\u003ea\u003c/code\u003e Tag to Create a Link\u003c/h2\u003e\n\n\u003cp\u003eOpen \u003ccode\u003eindex.html\u003c/code\u003e in your text editor. Add an \u003ccode\u003ea\u003c/code\u003e tag with the inner text (the\ntext between the \u003ccode\u003e\u0026lt;a\u0026gt;\u003c/code\u003e tag and the \u003ccode\u003e\u0026lt;/a\u0026gt;\u003c/code\u003e tag) of\n\u003ccode\u003eFlatiron School\u003c/code\u003e anywhere in the file. Then set the \u003ccode\u003ehref\u003c/code\u003e attribute of your\nnew link element to \u003ccode\u003ehttps://flatironschool.com\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eViewing Your Work in the Browser\u003c/h2\u003e\n\n\u003cp\u003eOnce you add the \u003ccode\u003ea\u003c/code\u003e tag to your web document, preview it in your web browser!\nAs a reminder, here's how to do that via learn:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-html-links-lab/master/images/httpserver.gif\" width=\"750\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eAddtional Resources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a\"\u003eMozilla Developer Network: HTML \u003ccode\u003e\u0026lt;a\u0026gt;\u003c/code\u003e Tag\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e[Learn IDE Help]: \u003ca href=\"http://help.learn.co/the-learn-ide/common-ide-questions/viewing-html-pages-in-the-learn-ide\"\u003ehttp://help.learn.co/the-learn-ide/common-ide-questions/viewing-html-pages-in-the-learn-ide\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eHere you saw how an attribute helps the \u003ccode\u003ea\u003c/code\u003e tag do its job, which is to link to another location.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-html-links-lab\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-html-links-lab\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-html-links-lab/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"setting-up-a-professional-data-science-environment-configuring-git-and-anaconda","title":"Setting up a Professional Data Science Environment - Configuring Git and Anaconda","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-science-env-config\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-config\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-config/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this lesson, you'll continue setting up your professional data science environment by configuring your terminal to work with GitHub, creating an Anaconda virtual environment, setting up your new virtual environment to open by default from your terminal, and confirming your configuration.\u003c/p\u003e  \u003ch2\u003eObjectives\u003c/h2\u003e  \u003cp\u003eYou will be able to:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eUse basic commands to navigate the command line\u003c/li\u003e \u003cli\u003ePractice utilizing Git and GitHub\u003c/li\u003e \u003cli\u003eSummarize why virtual environments are used\u003c/li\u003e \u003cli\u003eSet up a virtual environment\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eConnecting Your Terminal to GitHub\u003c/h2\u003e  \u003cp\u003eNow that you have Git installed locally, you'll be often working back and forth between GitHub, a service which hosts Git repositories online, and your local computer. To better integrate with GitHub, you should set up your name and email address:\u003c/p\u003e  \u003col\u003e \u003cli\u003e\u003cp\u003eIn your terminal window*, type \u003ccode\u003egit config --global user.name\u003c/code\u003e\u003c/p\u003e  \u003cul\u003e \u003cli\u003eIf it returns your name, you‚Äôre set!\u003c/li\u003e \u003cli\u003eIf it returns nothing or displays an error message, type \u003ccode\u003egit config --global user.name ‚ÄúYour Name‚Äù\u003c/code\u003e - replacing Your Name with your name inside the quotes (this should be your real first and last name, not your GitHub username)\u003c/li\u003e \u003c/ul\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eIn your terminal window, type \u003ccode\u003egit config --global user.email\u003c/code\u003e\u003c/p\u003e  \u003cul\u003e \u003cli\u003eIf it returns your email address, you‚Äôre set!\u003c/li\u003e \u003cli\u003eIf it returns nothing or displays an error message, type \u003ccode\u003egit config --global user.email your@email.com\u003c/code\u003e - replacing \u003ca href=\"mailto:your@email.com\"\u003eyour@email.com\u003c/a\u003e with your email address\u003c/li\u003e \u003c/ul\u003e\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003e* Remember, when we say \"terminal\" we mean the Terminal app for Mac, and the Git Bash program for Windows\u003c/p\u003e  \u003ch2\u003eCloning this Repository\u003c/h2\u003e  \u003cp\u003eTo complete the later steps in this configuration process, you‚Äôre going to need to download a copy of the files in this repository, so we should do this now since you already have a terminal window open.\u003c/p\u003e  \u003cp\u003eYou should get in the habit of checking exactly where you are in your Terminal before downloading anything. Use the command \u003ccode\u003epwd\u003c/code\u003e to print your working directory. If you're not in a place you want to download lessons, you should navigate to a place you want to keep your Flatiron repositories and files.\u003c/p\u003e  \u003cp\u003eIf you have not used the command line much or at all, follow the below steps:\u003c/p\u003e  \u003col\u003e \u003cli\u003eOpen a new terminal window\u003c/li\u003e \u003cli\u003eType \u003ccode\u003epwd\u003c/code\u003e - this should show your home directory, the most basic of paths on your computer\u003c/li\u003e \u003cli\u003eType \u003ccode\u003ecd Documents\u003c/code\u003e - this will change your directory, and move you into your Documents folder\u003c/li\u003e \u003cli\u003eType \u003ccode\u003emkdir Flatiron\u003c/code\u003e - this will create a new folder, called Flatiron, to keep all of your Flatiron repositories and files\u003c/li\u003e \u003cli\u003eType \u003ccode\u003ecd Flatiron\u003c/code\u003e - this will change your directory, moving you into the new Flatiron folder you just created\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003eMacOS Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-make-flatiron-directory.png\" width=\"450\"\u003e\u003c/p\u003e  \u003cp\u003eWindows Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/windows_create_dir.png\" width=\"450\"\u003e\u003c/p\u003e  \u003cblockquote\u003e \u003ch2\u003eImportant Note\u003c/h2\u003e  \u003cp\u003eYou should \u003cstrong\u003eNEVER\u003c/strong\u003e clone a Git repository into another Git repository!\u003c/p\u003e  \u003cp\u003eYou can always check if you are currently in a Git repository by running \u003ccode\u003egit status\u003c/code\u003e. If you get an error that says \"\u003ccode\u003efatal: not a git repository (or any of the parent directories): .git\u003c/code\u003e\", then you are not in a Git repository.\u003c/p\u003e \u003c/blockquote\u003e  \u003cp\u003eOnce you are in a good place to download files from GitHub, like a general folder to keep all of your Flatiron repositories and files, type (or better still, copy and paste) \u003ccode\u003egit clone https://github.com/learn-co-curriculum/dsc-data-science-env-config.git\u003c/code\u003e\u003c/p\u003e  \u003cp\u003e\u003cem\u003eIn Windows, in Git Bash, to paste from the clipboard the shortcut should be \u003cstrong\u003eshift-insert\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e  \u003cp\u003eThis will create a new subdirectory whose name is \"dsc-data-science-env-config\" which will contain a copy of all of the files in this repository!\u003c/p\u003e  \u003cp\u003eMove into that directory using the \u003ccode\u003ecd\u003c/code\u003e, or change directory, command (after typing \u003ccode\u003ecd dsc\u003c/code\u003e you should be able to hit the \u003cstrong\u003etab\u003c/strong\u003e key to \"tab complete\" so you don't need to type the whole directory name).\u003c/p\u003e  \u003cp\u003eNow, if you run \u003ccode\u003epwd\u003c/code\u003e to print your working directory again, you should be inside the folder we just cloned down from that GitHub link!\u003c/p\u003e  \u003cp\u003eMacOS Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-git-clone.png\" width=\"650\"\u003e\u003c/p\u003e  \u003cp\u003eWindows Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/win_git_clone.png\" width=\"650\"\u003e\u003c/p\u003e  \u003ch2\u003eSetting Up Virtual Environments\u003c/h2\u003e  \u003cp\u003eAs you do data science projects, you will spend a lot of your time using pre-written libraries to speed up your development - like numpy, pandas, or scikit-learn. As you work on different projects, you may also find that you use different versions of different libraries for different projects. The most common versioning issue is that some projects will run in Python 2 whereas others will run in Python 3, but you may also find that different projects depend on different versions of libraries like Tensorflow.\u003c/p\u003e  \u003cp\u003eOccasionally, code that works in an old version of a library won‚Äôt work in a newer version. So if you open up a new project and install the dependencies, it‚Äôs possible that your old project won‚Äôt work anymore.\u003c/p\u003e  \u003cp\u003eTo avoid that problem, a best practice is to use ‚Äúvirtual environments‚Äù. Virtual environments allow you to have different versions of Python and different versions of the various libraries you use, so you can install a new version of a library for one project but still use the old version for another project. It‚Äôs almost as if you have multiple computers that you can swap between, each having a different setup and configuration, just by running a couple of commands.\u003c/p\u003e  \u003cp\u003eThere is a built-in virtual environment feature in Python, but we‚Äôre going to use the more flexible virtual environments provided by Conda as part of the Anaconda distribution you installed.\u003c/p\u003e  \u003cp\u003eTo use a new virtual environment, there are two steps you need to complete. The first step is to create the virtual environment. That may take a couple of minutes as your computer has to download the necessary version of Python and all of the libraries that you want to be able to use in that environment. The next step then is to ‚Äúuse‚Äù the virtual environment by activating it.\u003c/p\u003e  \u003cp\u003eIf you want to learn more about Conda environments, have a look at the \u003ca href=\"https://conda.io/docs/user-guide/tasks/manage-environments.html\" target=\"_blank\"\u003edocumentation\u003c/a\u003e, otherwise, let‚Äôs give this a try.\u003c/p\u003e  \u003ch3\u003eCreating the Conda Virtual Environment\u003c/h3\u003e  \u003cp\u003eYou need to start by navigating into this project folder. If you run \u003ccode\u003epwd\u003c/code\u003e to print your working directory in your terminal, you should be inside the folder we cloned down. If the name of the current working directory is not \"dsc-data-science-env-config\", then you need to move into that folder - follow the steps above.\u003c/p\u003e  \u003cp\u003eThe instructions to create the environment are slightly different for MacOS and Windows, because they need to use different environment files, so make sure you follow the instructions relevant to your operating system.\u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eMacOS\u003c/strong\u003e: run \u003ccode\u003econda env create -f mac_environment.yml\u003c/code\u003e\u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eWindows\u003c/strong\u003e: run \u003ccode\u003econda env create -f win_environment.yml\u003c/code\u003e\u003c/p\u003e  \u003cp\u003eDepending on the speed of your computer and your internet connection it may take up to twenty minutes for this to complete. While it does you should see output similar to that displayed below start to appear in your terminal.\u003c/p\u003e  \u003cp\u003eMacOS Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-env-create-from-yml.png\" width=\"450\"\u003e\u003c/p\u003e  \u003cp\u003eWindows Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/win_env_create.PNG\" width=\"450\"\u003e\u003c/p\u003e  \u003ch3\u003eActivating the Conda Virtual Environment\u003c/h3\u003e  \u003cp\u003eNext, try activating the environment. Type \u003ccode\u003econda activate learn-env\u003c/code\u003e.\u003c/p\u003e  \u003cp\u003eTo confirm that it worked, type \u003ccode\u003econda info --envs\u003c/code\u003e and confirm that the asterisk (*) is next to the learn-env environment.\u003c/p\u003e  \u003cp\u003eMacOS Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-conda-info-envs.png\" width=\"450\"\u003e\u003c/p\u003e  \u003cp\u003eWindowsWindows Example:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/win_env_check.PNG\" width=\"450\"\u003e\u003c/p\u003e  \u003ch2\u003eTroubleshooting\u003c/h2\u003e  \u003cp\u003eif you see a message that states ‚ÄúWARNING: A newer version of Conda exists‚Äù, run \u003ccode\u003econda update -n base conda\u003c/code\u003e and then try again to create the environment.\u003c/p\u003e  \u003cp\u003eIf you see a message that states \"file not found\", double check that you are running this command from the directory that contains the .yml file. If you type \u003ccode\u003els\u003c/code\u003e you should see the environment.yml file. If you don't see it, you likely forgot to run \u003ccode\u003ecd dsc-data-science-env-config\u003c/code\u003e to change into the right directory.\u003c/p\u003e  \u003ch2\u003eSetting your Default Environment\u003c/h2\u003e  \u003cp\u003eYou have successfully created your virtual environment! But, to be sure that you are using the learn-env, it's helpful to set it as your default environment so that you don't need to remember to manually switch to it every time you open the terminal. This step is \u003cstrong\u003ehighly recommended\u003c/strong\u003e but not required.\u003c/p\u003e  \u003ch3\u003eMac\u003c/h3\u003e  \u003cp\u003eOn a Mac, we need to first see what shell you're running in your terminal. Run \u003ccode\u003eecho $SHELL\u003c/code\u003e.\u003c/p\u003e  \u003cp\u003eIf the response ends in \u003ccode\u003ebash\u003c/code\u003e:\u003c/p\u003e  \u003cul\u003e \u003cli\u003erun \u003ccode\u003eecho \"conda activate learn-env\" \u0026gt;\u0026gt; ~/.bash_profile\u003c/code\u003e to add the configuration to your bash profile\u003c/li\u003e \u003cli\u003erun \u003ccode\u003esource ~/.bash_profile\u003c/code\u003e to activate the changes you just made\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-bash-set-default-env.png\" width=\"450\"\u003e\u003c/p\u003e  \u003cblockquote\u003e \u003cp\u003e(Don't forget to run \u003ccode\u003esource ~/.bash_profile\u003c/code\u003e like the Test Student in the screen capture!)\u003c/p\u003e \u003c/blockquote\u003e  \u003cp\u003eIf the response ends in \u003ccode\u003ezsh\u003c/code\u003e:\u003c/p\u003e  \u003cul\u003e \u003cli\u003erun \u003ccode\u003eecho \"conda activate learn-env\" \u0026gt;\u0026gt; ~/.zshrc\u003c/code\u003e to add the configuration to your bash profile\u003c/li\u003e \u003cli\u003erun \u003ccode\u003esource ~/.zshrc\u003c/code\u003e to activate the changes you just made\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/mac-zsh-set-default-env.png\" width=\"450\"\u003e\u003c/p\u003e  \u003ch3\u003eWindows\u003c/h3\u003e  \u003cp\u003eTo follow these instructions on a Windows machine you must be using the Git Bash shell it was suggested to install above.\u003c/p\u003e  \u003col\u003e \u003cli\u003eRun \u003ccode\u003etouch ~/.bash_profile\u003c/code\u003e to create a new file.\u003c/li\u003e \u003cli\u003eRun \u003ccode\u003eecho \"conda activate learn-env\" \u0026gt;\u0026gt; ~/.bash_profile\u003c/code\u003e to add the configuration to your bash profile\u003c/li\u003e \u003cli\u003eRun \u003ccode\u003esource ~/.bash_profile\u003c/code\u003e to activate the changes you just made\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/win_default_env.PNG\" width=\"450\"\u003e\u003c/p\u003e  \u003ch2\u003eUpdating your Virtual Environment\u003c/h2\u003e  \u003cp\u003e\u003cimg src=\"https://imgs.xkcd.com/comics/python_environment_2x.png\" alt=\"xkcd comic about python environments\" width=\"500\"\u003e\u003c/p\u003e  \u003cp\u003ePython packages are constantly updating and changing, and switching between environments, updating or installing new packages, and troubleshooting environment issues will are all necessary skills for when you're a fully-fledged professional data scientist.\u003c/p\u003e  \u003cp\u003eIn general, because we are using Anaconda as our package manager, it is preferable to update or install new packages using \u003ccode\u003econda\u003c/code\u003e options instead of \u003ccode\u003epip\u003c/code\u003e.\u003c/p\u003e  \u003cp\u003eIf you are ever concerned about conflicting package versions, just remember that creating a new conda environment is as easy as \u003ccode\u003econda create --name new-env\u003c/code\u003e - and it is very normal to have different environments with different packages for different purposes. Just remember that you've likely just set up learn-env to activate by default, so you'll need to either change that or activate other environments manually when needed.\u003c/p\u003e  \u003ch2\u003eConfiguring your Kernel and Confirming your Configuration\u003c/h2\u003e  \u003cp\u003eJupyter Notebooks run \"kernels\" - the computational engine used for executing your code. It's important to be running the right kernel within your notebook, otherwise you may get errors stating that you don't have a particular package or have the wrong version of it or even complaints about the version of Python you're running (some packages don't support Python 3.8, for example).\u003c/p\u003e  \u003cp\u003eRight now, let's check that everything is running properly. In your terminal, run \u003ccode\u003ejupyter notebook\u003c/code\u003e. This should prompt a new browser window to open, at an address that is something like \"localhost:8888\". \u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/jupyter-home-dir.png\" width=\"650\"\u003e\u003c/p\u003e  \u003cp\u003eWe'll talk a lot more about Jupyter Notebooks later on in the course, because you'll use them quite a lot! For now, we want to check not only that the terminal shortcut you just used to open a Jupyter Notebook worked, but also that you are running your learn-env kernel in your notebook.\u003c/p\u003e  \u003cp\u003eYou should be able to see learn-env as an option in two places:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eWhen you create a new Jupyter Notebook, by clicking \"New\" on the right-hand side\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/check-kernel1.png\" width=\"650\"\u003e\u003c/p\u003e  \u003cul\u003e \u003cli\u003eOnce you're in a notebook or create a new one, by checking the options under \"Kernel\" in the top menu bar\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-config/master/images/check-kernel2.png\" width=\"650\"\u003e\u003c/p\u003e  \u003cp\u003eIf you don't see the learn-env option in those two places:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eClose the notebook in the browser\u003c/li\u003e \u003cli\u003eClose down the notebook server from the terminal  \u003cul\u003e \u003cli\u003e(run \u003ccode\u003ectrl\u003c/code\u003e + \u003ccode\u003ec\u003c/code\u003e and then type \u003ccode\u003ey\u003c/code\u003e to confirm that you want to close down jupyter)\u003c/li\u003e \u003c/ul\u003e\u003c/li\u003e \u003cli\u003eIn the terminal, enter \u003c/li\u003e \u003c/ul\u003e \u003cpre\u003e\u003ccode\u003econda activate learn-env\u003cbr\u003epython -m ipykernel install --user --name learn-env --display-name \"Python (learn-env)\" \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eThat will add the learn-env to your list of kernels. When you restart the Jupyter Notebook server and try again, you'll be able to select the learn-env option in those two places above.\u003c/p\u003e  \u003cp\u003eIt will be essential to run \u003ccode\u003econda activate learn-env\u003c/code\u003e every time you start a new terminal window if you do not set your terminal to activate that environment by default. If you don't do this you \u003cstrong\u003ewill\u003c/strong\u003e get errors, so please check this first. You can always run \u003ccode\u003econda info --envs\u003c/code\u003e to see which environment is selected - and, if you run the above steps to set the learn-env to open by default, you won't need to remember to activate every time you open your terminal.\u003c/p\u003e  \u003ch2\u003eSummary\u003c/h2\u003e  \u003cp\u003eCongratulations! That was a lot! If you've gotten this far and everything has worked, you have successfully set up your computer with some of the primary tools you need to work as a professional data scientist!\u003c/p\u003e","frontPage":false},{"exportId":"setting-up-a-professional-data-science-environment-macos-installation","title":"Setting up a Professional Data Science Environment - MacOS Installation","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-science-env-mac-installation\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-mac-installation\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-mac-installation/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eThere are two major pieces we need to install in order to set you up for success as a professional data scientist! In this lesson, we will be installing Git and Anaconda for MacOS.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eInstall Git\u003c/li\u003e\n\u003cli\u003eInstall Anaconda\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003ePlease note - the exact names and versions will change over time.\u003c/p\u003e\n\u003ch2\u003eInstalling Git\u003c/h2\u003e\n\u003cp\u003eIf you are comfortable with the command line and have installed \u003ca href=\"https://brew.sh/\" target=\"_blank\"\u003e homebrew\u003c/a\u003e, you should install Git by running the command \u003ccode\u003ebrew install git\u003c/code\u003e in a terminal window. If you have no idea what that last sentence meant, please disregard and follow the below steps.\u003c/p\u003e\n\u003ch3\u003eOverview\u003c/h3\u003e\n\u003cp\u003ePlease also reference the image screengrabs for more detail below.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eNavigate to Git's download page for MacOS \u003ca href=\"https://git-scm.com/download/mac\" target=\"_blank\"\u003ehere\u003c/a\u003e. Since you are not using homebrew, you should click on the latest version number under the Binary Installer option\n\u003cul\u003e\n\u003cli\u003eThis should take you to another page, where the download of the installer dmg file should begin automatically after a few seconds\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDouble click on the downloaded dmg file to open a small Finder window\u003c/li\u003e\n\u003cli\u003eDouble click on the .pkg file to run it, and click \"Open\" when the pop-up security warning asks if you are sure you want to open it\n\u003cul\u003e\n\u003cli\u003eIf you get a security warning that simply says the file cannot be opened because it is from an unidentified developer, then:\n\u003cul\u003e\n\u003cli\u003eClick on the Apple symbol at the top left of your screen\u003c/li\u003e\n\u003cli\u003eSelect ‚ÄúSystem Preferences‚Äù from the drop-down menu\u003c/li\u003e\n\u003cli\u003eSelect ‚ÄúSecurity and Privacy‚Äù\u003c/li\u003e\n\u003cli\u003eSelect the ‚ÄúGeneral‚Äù tag\u003c/li\u003e\n\u003cli\u003eBelow the ‚ÄúAllow apps downloaded from‚Äù option, click the \"Open Anyway\" option. You may need to click the lock to make changes, which will prompt you to enter your password\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhen the Installer opens, click \"Continue\" on each screen, then \"Install\"\n\u003cul\u003e\n\u003cli\u003eYou may need to enter your password when prompted\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhen the installation is complete, click the \"Close\" button\n\u003cul\u003e\n\u003cli\u003eIf the installation window asks if you want to move the installer .pkg file to trash, you can click ‚ÄúMove to Trash‚Äù\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4\u003eGit Installation Step-by-Step:\u003c/h4\u003e\n\u003cp\u003e\u003ciframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vQtsPSXRa47q3beYt81S9lchOz5ZC5vrqK324GH1GuGGQXSALFfpBSF_VWVcm8GrQNqvGfjxZeohx5I/embed?start=false\u0026amp;loop=false\u0026amp;delayms=3000\" width=\"960\" height=\"569\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003ch3\u003eConfirming Your Git Installation\u003c/h3\u003e\n\u003cp\u003eTo confirm you have installed Git successfully:\u003c/p\u003e\n\u003cp\u003e1. Open a terminal window\u003c/p\u003e\n\u003cul style=\"list-style-type: circle;\"\u003e\n\u003cli\u003eWhen we ask you to use the terminal, we mean the ‚ÄúTerminal‚Äù app in the ‚ÄúUtilities‚Äù folder within your ‚ÄúApplications‚Äù folder - or, find the \"Terminal\" app in your Launchpad (often found in a subdirectory named \"Other\")\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e2. Type \u003ccode\u003egit --version\u003c/code\u003e: It should return the version of git you are running\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003chr\u003e\n\u003ch2\u003eInstalling Anaconda\u003c/h2\u003e\n\u003cp\u003eThe easiest way to get set up with Python and Jupyter Notebook so you can start coding is to install the Anaconda distribution.\u003c/p\u003e\n\u003ch3\u003eOverview:\u003c/h3\u003e\n\u003cp\u003ePlease also reference the image screengrabs for more detail below.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eDownload the latest version of Anaconda \u003ca href=\"https://www.anaconda.com/products/individual\" target=\"_blank\"\u003ehere\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eOpen the pkg file once it has downloaded to open the Anaconda installer\u003c/li\u003e\n\u003cli\u003eClick \"Continue\" to run the package to determine if the software can be installed\u003c/li\u003e\n\u003cli\u003eWhen the Installation window opens, click \"Continue\"\u003c/li\u003e\n\u003cli\u003eRead the Read Me, then click \"Continue\"\u003c/li\u003e\n\u003cli\u003eAccept the license by clicking \"Continue\", then click \"Agree\" in the pop-up window\u003c/li\u003e\n\u003cli\u003eClick \"Install\" to install the software\n\u003cul\u003e\n\u003cli\u003eYou may need to enter your password when prompted\u003c/li\u003e\n\u003cli\u003eYou can ignore any supplementary materials advertised, such as PyCharm\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClick \"Close\" when the installation was completed successfully\n\u003cul\u003e\n\u003cli\u003eIf the installation window asks if you want to move the installer .pkg file to trash, you can click ‚ÄúMove to Trash‚Äù\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4\u003eAnaconda Installation Step-by-Step:\u003c/h4\u003e\n\u003cp\u003e\u003ciframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vQ5d1LpSJt8OnoANlTfAHZg8ff4zVS22HPV1_98k8bGRQEotl686kSjzqEi_vjhXudMB4ui9i_wBheJ/embed?start=false\u0026amp;loop=false\u0026amp;delayms=3000\" width=\"960\" height=\"569\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003ch3\u003eConfirming Your Anaconda Installation\u003c/h3\u003e\n\u003cp\u003eTo confirm you have installed Anaconda successfully:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eOpen a terminal window\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eType \u003ccode\u003econda info\u003c/code\u003e: It should return a table of details about your conda installation\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2\u003eConfirmation\u003c/h2\u003e\n\u003cp\u003eThis image shows what it should look like when you confirm both your Git and Anaconda installs (although version numbers and details may change):\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-science-env-mac-installation/master/images/mac-confirm-install.png\" width=\"500\"\u003e\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eCongratulations! If you've gotten this far and everything has worked, you have successfully installed Git and Anaconda on your Mac!\u003c/p\u003e","frontPage":false},{"exportId":"researching-html-elements","title":"Researching HTML Elements","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-researching-html-elements\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-researching-html-elements/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWhen writing HTML you might encounter tags that are new to you. When searching for technical help, you have to be careful about which sources you trust. This is a skill you will build over time but you'll get an overview of some good practices here.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse search engines as resources to find information\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eCompare multiple resources to find the best source\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eUse Search Engines as Resources to Find Information\u003c/h2\u003e\n\n\u003cp\u003eLet's say in your research, you come across an unfamiliar HTML element like\n\u003ccode\u003e\u0026lt;samp\u0026gt;\u003c/code\u003e. You can google \u003ccode\u003esamp html element,\u003c/code\u003e and you will find an endless list\nof results to choose from. Sometimes resources can be outdated, biased, or\ninaccurate. It's important to filter through the results to find the best one.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/web-development/html-element-search.png\" width=\"850\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eObserve And Identify Relevant Information\u003c/h2\u003e\n\n\u003cp\u003eYour instinct might be to open the first result. You should be pickier.\nSometimes the result has \"gamed\" the search engine and unfairly influenced the ranking.\nIt's recommended that you open the top \u003cstrong\u003efive\u003c/strong\u003e results and review them critically.\u003c/p\u003e\n\n\u003cp\u003eIt's also advisable to trust sites that are affiliated with building or\ndefining the technologies more than blogs or other resources. In the HTML\nworld, the Mozilla Developer Network (MDN) is an extremely trustworthy site.\nIn fact, it's likely the best HTML and CSS documentation source on the\ninternet.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/web-development/samp-mdn-page.png\" width=\"850\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eCompare Multiple Resources To Find The Best Source\u003c/h2\u003e\n\n\u003cp\u003eIf you go back to the search results, you'll see that the first result, in this\ncase, is \u003ccode\u003eW3schools\u003c/code\u003e. A site, like W3schools, for example, can be used as an\nadditional resource for garnering understanding. It even includes interactive\nexamples, creating a sandbox environment for experimentation.\u003c/p\u003e\n\n\u003cp\u003eIn this case, between MDN and W3schools, you should get a good sense of how to\nuse the \u003ccode\u003e\u0026lt;samp\u0026gt;\u003c/code\u003e element.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eThe web is a constantly evolving entity. As we build more ambitious products or\nlearn from our collective needs and mistakes, the industry will continually\nupdate the HTML specifications.\u003c/p\u003e\n\n\u003cp\u003eResearching referencing documentation\ncan be scary at first, but it's a primary skill for data scientists. Don't be afraid to\npractice technical searches. It's a \u003cem\u003eskill\u003c/em\u003e that you will get better at with practice.\u003c/p\u003e\n\n\u003cp\u003eMost importantly, don't feel like \u003cem\u003enot knowing everything by heart\u003c/em\u003e means you can't\nbe a data scientist. The greatest data scientists we know are constantly admitting what they\ndon't know, finding the latest news, using the answer they found and moving on.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-researching-html-elements\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-researching-html-elements\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-researching-html-elements/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"lecture-nosql","title":"üé¨ Lecture: NoSQL","type":"WikiPage","content":"\u003cdiv style=\"padding:56.25% 0 0 0;position:relative;\"\u003e\u003ciframe src=\"https://player.vimeo.com/video/681643492?h=aa35b284b4\u0026amp;badge=0\u0026amp;autopause=0\u0026amp;player_id=0\u0026amp;app_id=58479\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen=\"\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;\" title=\"NoSQL\"\u003e\u003c/iframe\u003e\u003c/div\u003e\n\u003cp\u003eIn this lesson Greg Damico introduces NoSQL along with a popular tool for these databases called MongoDB. In this lesson you will learn what NoSQL is, what MongoDB is, how to use MongoDB from the command line, inside a Jupyter notebook using PyMongo, and from the web using MongoDB Atlas. Greg introduces some useful key words and talks a little about the benefits of MongoDB.\u003c/p\u003e\n\u003cp\u003eThe repository for this lecture can be found here - \u003ca class=\"inline_disabled\" href=\"https://github.com/flatiron-school/ds-nosql-bqs32\" target=\"_blank\"\u003e \u003cspan style=\"color: #236fa1;\"\u003eNoSQL\u003c/span\u003e \u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e#nosql #mongodb #nonrelational #pymongo #database #json #crud #mongoterminology #schemaless #mongoqueries #find #findone #mongodemo #find #deleteone #update #updatemany #insertone #insertmany #mongodbatlas #mongointhecloud\u003c/p\u003e","frontPage":false},{"exportId":"short-video-sql-joins","title":"Short Video: SQL JOINs","type":"WikiPage","content":"\u003cdiv style=\"padding:62.5% 0 0 0;position:relative;\"\u003e\u003ciframe src=\"https://player.vimeo.com/video/713398696?h=4694958b31\u0026amp;badge=0\u0026amp;autopause=0\u0026amp;player_id=0\u0026amp;app_id=58479\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen=\"\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;\" title=\"sql_joins_phase1_gd\"\u003e\u003c/iframe\u003e\u003c/div\u003e","frontPage":false},{"exportId":"git-version-control-101","title":"Git Version Control 101","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-version-control-101\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-version-control-101/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e‚ÄúThe past is never where you think you left it.‚Äù ‚Äî \u003ca href=\"http://en.wikipedia.org/wiki/Katherine_Anne_Porter\"\u003eKatherine Anne Porter\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eVersion Control is the process of storing multiple versions of a single project, allowing each version to be recalled at a later date.\u003c/p\u003e\n\n\u003cp\u003eThere are a lot of different ways to do version control. You could save a new file every time you make a change, timestamp that file, and place all of those files into a timestamped folder. You could track all of your changes in a spreadsheet with copious notes. Or you could use dedicated version control software. Guess which method programmers use?\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the purpose of version control and Git\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy Use Version Control?\u003c/h2\u003e\n\n\u003cp\u003eLet's think about the future for a second. It's a year or two down the road, and you're working at your dream job (YAY!). You just deployed a new chat feature for the app you're working on. Suddenly, your boss runs over to your desk: \"Wait! We can't deploy the chat yet! Revert! Revert!\"\u003c/p\u003e\n\n\u003cp\u003eWhat do you do? You need to find all of the new code you pushed to the server and delete it. Then you need to find the old code, test it, and re-upload it. So much work to do. Well, since you used version control software, it's as easy as 1, 2, 3. Actually, it's as easy as \u003ccode\u003egit reset --hard \u0026lt;commit id\u0026gt;\u003c/code\u003e... but we'll get to that later. Using version control is useful because it allows you to easily rollback to a previous version of your application, saving you a ton of extra work and time.\u003c/p\u003e\n\n\u003cp\u003eThere are a lot of advantages to version control. It's a great way to keep a backup of your work, it facilitates collaboration, and it gives you the freedom to experiment and try new things without messing up the code base.\u003c/p\u003e\n\n\u003ch2\u003eLocal vs Remote Version Control\u003c/h2\u003e\n\n\u003cp\u003eA local version control system stores all of the information on your computer, locally. This system works great while you work on a project by yourself. However, it becomes cumbersome when you attempt to collaborate.\u003c/p\u003e\n\n\u003cp\u003eSome organizations use a centralized repository on a company server. Think of a repository as a big folder that stores all of the files of a particular project. It is simply the location where a project's data is stored. Users pull only the files they need to work on from the server. The advantage is that multiple people can collaborate and work on the same project at once. The disadvantage of this process is that a user must be connected to the network in order to work on the project.\u003c/p\u003e\n\n\u003cp\u003eWhich brings us to the third system, a distributed version control system. In a distributed system, all users have a complete copy of the entire repository. This means that you can work on the project independent of any network connection. Upon reconnecting, you can push your changes to the server and merge with the server's repository.\u003c/p\u003e\n\n\u003ch2\u003eMeet Git\u003c/h2\u003e\n\n\u003cp\u003eGit is the distributed version control system we use here at The Flatiron School. Git began in 2005 and has quickly grown to be one of the most widely used version control systems in the industry. Because so many companies use Git, it's important that you get used to working with it. We also use GitHub, a popular remote repository hosting service built to integrate seamlessly with Git.\u003c/p\u003e\n\n\u003cp\u003eCheck out some of the resources below to learn more about Git.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Getting-Started-About-Version-Control\"\u003eGetting Started - About Version Control\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/video/what-is-git\"\u003eGit Basics - What is Git?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you were introduced to version control and Git, and the reasons we use it as part of our workflow!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-git-version-control-101\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-git-version-control-101\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-version-control-101/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"data-cleaning-in-pandas-recap","title":"Data Cleaning in Pandas - Recap","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-summary-data-cleaning-pandas\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-summary-data-cleaning-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-summary-data-cleaning-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section you saw how to wrangle and clean data in Pandas! This will be a baseline skill that you will use consistently in your work whether it's doing sanity checks, cleaning messy data or transforming raw datasets into useful aggregates and views. Having an understanding of the format of your data is essential to critically thinking about how you can manipulate and shape it into new and interesting forms.\u003c/p\u003e\n\n\u003ch2\u003eLambda functions\u003c/h2\u003e\n\n\u003cp\u003eWe started out by introducing lambda functions. These are quick throw away functions that you can write on the fly. They're very useful for transforming a column feature. For example, you might want to extract the day from a date.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003epandas\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003epd\u003c/span\u003e\n\u003cspan class=\"n\"\u003edates\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epd\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSeries\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"s\"\u003e'12-01-2017'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e'12-02-2017'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e'12-03-2017'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e'12-04-2017'\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"n\"\u003edates\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003elambda\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e'-'\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e0    01\n1    02\n2    03\n3    04\ndtype: object\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eCombining DataFrames\u003c/h2\u003e\n\n\u003cp\u003eYou can combine dataframes by merging them (joining data by a common field) or concatenating them (appending data at the beginning or end).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003edf1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epd\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDataFrame\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edates\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003edf2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epd\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDataFrame\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"s\"\u003e'12-05-2017'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e'12-06-2017'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e'12-07-2017'\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"n\"\u003epd\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econcat\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"n\"\u003edf1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edf2\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cstyle\u003e\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\u003c/style\u003e\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e0\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003e0\u003c/th\u003e\n      \u003ctd\u003e12-01-2017\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1\u003c/th\u003e\n      \u003ctd\u003e12-02-2017\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2\u003c/th\u003e\n      \u003ctd\u003e12-03-2017\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e3\u003c/th\u003e\n      \u003ctd\u003e12-04-2017\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e0\u003c/th\u003e\n      \u003ctd\u003e12-05-2017\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1\u003c/th\u003e\n      \u003ctd\u003e12-06-2017\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2\u003c/th\u003e\n      \u003ctd\u003e12-07-2017\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\n\u003ch2\u003eGrouping and aggregating\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epd\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread_csv\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e'titanic.csv'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cstyle\u003e\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\u003c/style\u003e\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003ePassengerId\u003c/th\u003e\n      \u003cth\u003eSurvived\u003c/th\u003e\n      \u003cth\u003ePclass\u003c/th\u003e\n      \u003cth\u003eName\u003c/th\u003e\n      \u003cth\u003eSex\u003c/th\u003e\n      \u003cth\u003eAge\u003c/th\u003e\n      \u003cth\u003eSibSp\u003c/th\u003e\n      \u003cth\u003eParch\u003c/th\u003e\n      \u003cth\u003eTicket\u003c/th\u003e\n      \u003cth\u003eFare\u003c/th\u003e\n      \u003cth\u003eCabin\u003c/th\u003e\n      \u003cth\u003eEmbarked\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003e0\u003c/th\u003e\n      \u003ctd\u003e1.0\u003c/td\u003e\n      \u003ctd\u003e0.0\u003c/td\u003e\n      \u003ctd\u003e3\u003c/td\u003e\n      \u003ctd\u003eBraund, Mr. Owen Harris\u003c/td\u003e\n      \u003ctd\u003emale\u003c/td\u003e\n      \u003ctd\u003e22.0\u003c/td\u003e\n      \u003ctd\u003e1.0\u003c/td\u003e\n      \u003ctd\u003e0.0\u003c/td\u003e\n      \u003ctd\u003eA/5 21171\u003c/td\u003e\n      \u003ctd\u003e7.2500\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eS\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1\u003c/th\u003e\n      \u003ctd\u003e2.0\u003c/td\u003e\n      \u003ctd\u003e1.0\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003eCumings, Mrs. John Bradley (Florence Briggs Th...\u003c/td\u003e\n      \u003ctd\u003efemale\u003c/td\u003e\n      \u003ctd\u003e38.0\u003c/td\u003e\n      \u003ctd\u003e1.0\u003c/td\u003e\n      \u003ctd\u003e0.0\u003c/td\u003e\n      \u003ctd\u003ePC 17599\u003c/td\u003e\n      \u003ctd\u003e71.2833\u003c/td\u003e\n      \u003ctd\u003eC85\u003c/td\u003e\n      \u003ctd\u003eC\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2\u003c/th\u003e\n      \u003ctd\u003e3.0\u003c/td\u003e\n      \u003ctd\u003e1.0\u003c/td\u003e\n      \u003ctd\u003e3\u003c/td\u003e\n      \u003ctd\u003eHeikkinen, Miss. Laina\u003c/td\u003e\n      \u003ctd\u003efemale\u003c/td\u003e\n      \u003ctd\u003e26.0\u003c/td\u003e\n      \u003ctd\u003e0.0\u003c/td\u003e\n      \u003ctd\u003e0.0\u003c/td\u003e\n      \u003ctd\u003eSTON/O2. 3101282\u003c/td\u003e\n      \u003ctd\u003e7.9250\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eS\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e3\u003c/th\u003e\n      \u003ctd\u003e4.0\u003c/td\u003e\n      \u003ctd\u003e1.0\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003eFutrelle, Mrs. Jacques Heath (Lily May Peel)\u003c/td\u003e\n      \u003ctd\u003efemale\u003c/td\u003e\n      \u003ctd\u003e35.0\u003c/td\u003e\n      \u003ctd\u003e1.0\u003c/td\u003e\n      \u003ctd\u003e0.0\u003c/td\u003e\n      \u003ctd\u003e113803\u003c/td\u003e\n      \u003ctd\u003e53.1000\u003c/td\u003e\n      \u003ctd\u003eC123\u003c/td\u003e\n      \u003ctd\u003eS\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e4\u003c/th\u003e\n      \u003ctd\u003e5.0\u003c/td\u003e\n      \u003ctd\u003e0.0\u003c/td\u003e\n      \u003ctd\u003e3\u003c/td\u003e\n      \u003ctd\u003eAllen, Mr. William Henry\u003c/td\u003e\n      \u003ctd\u003emale\u003c/td\u003e\n      \u003ctd\u003e35.0\u003c/td\u003e\n      \u003ctd\u003e0.0\u003c/td\u003e\n      \u003ctd\u003e0.0\u003c/td\u003e\n      \u003ctd\u003e373450\u003c/td\u003e\n      \u003ctd\u003e8.0500\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eS\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003egrouped\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egroupby\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"s\"\u003e'Pclass'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e'Sex'\u003c/span\u003e\u003cspan class=\"p\"\u003e])[\u003c/span\u003e\u003cspan class=\"s\"\u003e'Age'\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003emean\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003ereset_index\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"n\"\u003egrouped\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cstyle\u003e\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\u003c/style\u003e\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003ePclass\u003c/th\u003e\n      \u003cth\u003eSex\u003c/th\u003e\n      \u003cth\u003eAge\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003e0\u003c/th\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003efemale\u003c/td\u003e\n      \u003ctd\u003e34.098291\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1\u003c/th\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003emale\u003c/td\u003e\n      \u003ctd\u003e38.287799\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2\u003c/th\u003e\n      \u003ctd\u003e2\u003c/td\u003e\n      \u003ctd\u003efemale\u003c/td\u003e\n      \u003ctd\u003e26.338992\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e3\u003c/th\u003e\n      \u003ctd\u003e2\u003c/td\u003e\n      \u003ctd\u003emale\u003c/td\u003e\n      \u003ctd\u003e31.630340\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e4\u003c/th\u003e\n      \u003ctd\u003e3\u003c/td\u003e\n      \u003ctd\u003efemale\u003c/td\u003e\n      \u003ctd\u003e25.677973\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\n\u003ch2\u003ePivot tables\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003epivoted\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egrouped\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epivot\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eindex\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e'Pclass'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecolumns\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e'Sex'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalues\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e'Age'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003epivoted\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cstyle\u003e\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\u003c/style\u003e\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003eSex\u003c/th\u003e\n      \u003cth\u003efemale\u003c/th\u003e\n      \u003cth\u003emale\u003c/th\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003ePclass\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1\u003c/th\u003e\n      \u003ctd\u003e34.098291\u003c/td\u003e\n      \u003ctd\u003e38.287799\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2\u003c/th\u003e\n      \u003ctd\u003e26.338992\u003c/td\u003e\n      \u003ctd\u003e31.630340\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e3\u003c/th\u003e\n      \u003ctd\u003e25.677973\u003c/td\u003e\n      \u003ctd\u003e25.757624\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e?\u003c/th\u003e\n      \u003ctd\u003e32.011356\u003c/td\u003e\n      \u003ctd\u003e32.862597\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\n\u003ch2\u003eGraphing\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003ematplotlib.pyplot\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003eplt\u003c/span\u003e\n\u003cspan class=\"o\"\u003e%\u003c/span\u003e\u003cspan class=\"n\"\u003ematplotlib\u003c/span\u003e \u003cspan class=\"n\"\u003einline\u003c/span\u003e\n\u003cspan class=\"n\"\u003epivoted\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eplot\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ekind\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e'barh'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\u0026lt;matplotlib.axes._subplots.AxesSubplot at 0x121802828\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cimg src=\"index_files/index_11_1.png\" alt=\"png\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eMissing data\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e'Top 5 Values before:\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e'Cabin'\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003evalue_counts\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enormalize\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003ereset_index\u003c/span\u003e\u003cspan class=\"p\"\u003e()[:\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Not a useful means of imputing in most cases, but a simple example to recap\n\u003c/span\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCabin\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e'Cabin'\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003efillna\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e'?'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e'Top 5 Values after:\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCabin\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalue_counts\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enormalize\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003ereset_index\u003c/span\u003e\u003cspan class=\"p\"\u003e()[:\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eTop 5 Values before:\n          index     Cabin\n0         E121  0.013289\n1          A20  0.013289\n2          B41  0.013289\n3  C23 C25 C27  0.011628\n4          E38  0.011628\nTop 5 Values after:\n   index     Cabin\n0     ?  0.567218\n1   B41  0.005751\n2  E121  0.005751\n3   A20  0.005751\n4   E38  0.005032\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you started practicing essential ETL skills that you will use throughout your data work to transform and wrangle data into useful forms.\u003c/p\u003e","frontPage":false},{"exportId":"dot-gitignore","title":".gitignore","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-gitignore\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-gitignore\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-gitignore/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSo far our examples have assumed that we want Git to track changes to all files in our repository. In some cases, we want Git to ignore certain files, and this is accomplished using a \u003ccode\u003e.gitignore\u003c/code\u003e file.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe use cases for a \u003ccode\u003e.gitignore\u003c/code\u003e file\u003c/li\u003e\n\u003cli\u003eInterpret and utilize the glob syntax of a \u003ccode\u003e.gitignore\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eUse Git and \u003ccode\u003e.gitignore\u003c/code\u003e to ignore files that Git is currently tracking, or to track files that Git is currently ignoring\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy \u003ccode\u003e.gitignore\u003c/code\u003e?\u003c/h2\u003e\n\n\u003cp\u003eIf version control systems like Git are designed to track all of your changes, why would we want to tell it to ignore some files? There are three main reasons:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003ePrivate files\u003c/li\u003e\n\u003cli\u003eIrrelevant files\u003c/li\u003e\n\u003cli\u003eFiles that are too large for GitHub\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003ePrivate Files\u003c/h3\u003e\n\n\u003cp\u003e\u003ca title=\"¬© 2014 Andreas Kainz \u0026amp; Uri Herrera \u0026amp; Andrew Lake \u0026amp; Marco Martin \u0026amp; Harald Sitter \u0026amp; Jonathan Riddell \u0026amp; Ken Vermette \u0026amp; Aleix Pol \u0026amp; David Faure \u0026amp; Albert Vaca \u0026amp; Luca Beltrame \u0026amp; Gleb Popov \u0026amp; Nuno Pinheiro \u0026amp; Alex Richardson \u0026amp;  Jan Grulich \u0026amp; Bernhard Landauer \u0026amp; Heiko Becker \u0026amp; Volker Krause \u0026amp; David Rosca \u0026amp; Phil Schaf\u0026nbsp;/\u0026nbsp;KDE\" href=\"https://commons.wikimedia.org/wiki/File:Breezeicons-actions-22-view-certificate.svg\"\u003e\u003cimg width=\"256\" alt=\"Breezeicons-actions-22-view-certificate\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e1/Breezeicons-actions-22-view-certificate.svg/256px-Breezeicons-actions-22-view-certificate.svg.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIn some cases, you will need credentials in order for your code to access some service. This includes free services! For example, if you are using a rate-limited API, the API needs to know who is making the request in order to determine whether you have exceeded your limit of requests.\u003c/p\u003e\n\n\u003cp\u003eThese credentials are often stored in the form of \u003cem\u003ekeys\u003c/em\u003e or \u003cem\u003esecrets\u003c/em\u003e, often stored in JSON or YML file formats.\u003c/p\u003e\n\n\u003cp\u003eYou want to avoid pushing these files to public GitHub repositories, because people have set up bots to crawl GitHub in order to steal these valuable credentials!\u003c/p\u003e\n\n\u003cp\u003eUsing \u003ccode\u003e.gitignore\u003c/code\u003e you can make sure that your credentials are not pushed.\u003c/p\u003e\n\n\u003ch3\u003eIrrelevant Files\u003c/h3\u003e\n\n\u003cp\u003e\u003ca title=\"¬© 2014 Andreas Kainz \u0026amp; Uri Herrera \u0026amp; Andrew Lake \u0026amp; Marco Martin \u0026amp; Harald Sitter \u0026amp; Jonathan Riddell \u0026amp; Ken Vermette \u0026amp; Aleix Pol \u0026amp; David Faure \u0026amp; Albert Vaca \u0026amp; Luca Beltrame \u0026amp; Gleb Popov \u0026amp; Nuno Pinheiro \u0026amp; Alex Richardson \u0026amp;  Jan Grulich \u0026amp; Bernhard Landauer \u0026amp; Heiko Becker \u0026amp; Volker Krause \u0026amp; David Rosca \u0026amp; Phil Schaf\u0026nbsp;/\u0026nbsp;KDE\" href=\"https://commons.wikimedia.org/wiki/File:Breezeicons-actions-22-noisereduction.svg\"\u003e\u003cimg width=\"256\" alt=\"Breezeicons-actions-22-noisereduction\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/be/Breezeicons-actions-22-noisereduction.svg/256px-Breezeicons-actions-22-noisereduction.svg.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eSome of the files generated in the process of coding are not actually relevant for future users of the repository.\u003c/p\u003e\n\n\u003cp\u003eThese include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eLog files\u003c/li\u003e\n\u003cli\u003eNotebook checkpoint files (e.g. \u003ccode\u003e.ipynb_checkpoints\u003c/code\u003e from Jupyter Notebook)\u003c/li\u003e\n\u003cli\u003eOS-specific files (e.g. \u003ccode\u003e.DS_Store\u003c/code\u003e, which is only applicable to Mac computers)\u003c/li\u003e\n\u003cli\u003eConfiguration files for code editors (e.g. \u003ccode\u003e.vscode\u003c/code\u003e, which is used by VS Code)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIf you are working with collaborators, not only are these files \u003cem\u003enot useful\u003c/em\u003e to them, they can actually cause \u003cem\u003emerge conflicts\u003c/em\u003e!\u003c/p\u003e\n\n\u003ch3\u003eFiles That Are Too Large for GitHub\u003c/h3\u003e\n\n\u003cp\u003e\u003ca title=\"¬© 2014 Andreas Kainz \u0026amp; Uri Herrera \u0026amp; Andrew Lake \u0026amp; Marco Martin \u0026amp; Harald Sitter \u0026amp; Jonathan Riddell \u0026amp; Ken Vermette \u0026amp; Aleix Pol \u0026amp; David Faure \u0026amp; Albert Vaca \u0026amp; Luca Beltrame \u0026amp; Gleb Popov \u0026amp; Nuno Pinheiro \u0026amp; Alex Richardson \u0026amp;  Jan Grulich \u0026amp; Bernhard Landauer \u0026amp; Heiko Becker \u0026amp; Volker Krause \u0026amp; David Rosca \u0026amp; Phil Schaf\u0026nbsp;/\u0026nbsp;KDE\" href=\"https://commons.wikimedia.org/wiki/File:Breezeicons-actions-22-project-development-close.svg\"\u003e\u003cimg width=\"256\" alt=\"Breezeicons-actions-22-project-development-close\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Breezeicons-actions-22-project-development-close.svg/256px-Breezeicons-actions-22-project-development-close.svg.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eGitHub \u003ca href=\"https://docs.github.com/en/repositories/working-with-files/managing-large-files/about-large-files-on-github\"\u003elimits the size\u003c/a\u003e of files that can be pushed to its repositories. If you try to push a file that exceeds the 100 MB threshold, you will get an error message and the push will fail.\u003c/p\u003e\n\n\u003cp\u003eOften in a data science context, these large files are the data files themselves. Sometimes you will find that a compressed file (e.g. \u003ccode\u003e.zip\u003c/code\u003e file) is small enough to be pushed to GitHub, but the expanded version is too big. Then you can specify the expanded version in the \u003ccode\u003e.gitignore\u003c/code\u003e while still being able to share the compressed data on GitHub.\u003c/p\u003e\n\n\u003ch2\u003e\u003ccode\u003e.gitignore\u003c/code\u003e Syntax\u003c/h2\u003e\n\n\u003cp\u003eNow that we understand some reasons that we might want to ignore certain files, how does that actually work?\u003c/p\u003e\n\n\u003cp\u003eTo start with, you put a hidden text file called \u003ccode\u003e.gitignore\u003c/code\u003e at the root of the repository. It is hidden because it starts with \u003ccode\u003e.\u003c/code\u003e, which means that in order to view it you will need to type \u003ccode\u003els -a\u003c/code\u003e rather than just \u003ccode\u003els\u003c/code\u003e in the terminal. We demonstrate the \u003ccode\u003e.gitignore\u003c/code\u003e in this very repository below:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"err\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003els\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eCONTRIBUTING.md  index.ipynb  LICENSE.md  README.md\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"err\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003els\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e.   CONTRIBUTING.md  .gitignore   .ipynb_checkpoints  README.md\n..  .git         index.ipynb  LICENSE.md\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eBasic Syntax\u003c/h3\u003e\n\n\u003cp\u003eThe file's content is just a list of things to ignore, as well as whitespace and comments (which start with \u003ccode\u003e#\u003c/code\u003e). The items in the list are separated by newlines.\u003c/p\u003e\n\n\u003cp\u003eFor example, this could be the contents of a valid \u003ccode\u003e.gitignore\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# a comment\nsecrets.json\n\n# another comment\nsecrets.yml\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis means that if the repository contained a file called \u003ccode\u003esecrets.json\u003c/code\u003e and/or a file called \u003ccode\u003esecrets.yml\u003c/code\u003e, Git would ignore them.\u003c/p\u003e\n\n\u003ch3\u003eGlob Syntax\u003c/h3\u003e\n\n\u003cp\u003e\u003ccode\u003e.gitignore\u003c/code\u003e can also work with wildcard characters using \u003ca href=\"https://en.wikipedia.org/wiki/Glob_(programming)\"\u003eglob syntax\u003c/a\u003e. For example, if you wanted to ignore all files ending with \u003ccode\u003e.csv\u003c/code\u003e, the \u003ccode\u003e.gitignore\u003c/code\u003e might look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# ignore all CSV files\n*.csv\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOr, if you only wanted to ignore only CSV files in the \u003ccode\u003edata/\u003c/code\u003e folder, that might look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# ignore CSV files in the data/ folder\ndata/*.csv\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFor more examples with comments, see the \u003ca href=\"https://git-scm.com/docs/gitignore\"\u003eGit documentation\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003eUseful Defaults\u003c/h3\u003e\n\n\u003cp\u003eThe examples above were specific to a particular project, and you will typically need to write your own \u003ccode\u003e.gitignore\u003c/code\u003e lines for these specialized use cases.\u003c/p\u003e\n\n\u003cp\u003eOutside of these narrow use cases, there are resources available for developing \u003ccode\u003e.gitignore\u003c/code\u003e files that are appropriate for your type of project in general. For example, GitHub maintains a \u003ca href=\"https://github.com/github/gitignore/blob/main/Python.gitignore\"\u003ePython \u003ccode\u003e.gitignore\u003c/code\u003e template\u003c/a\u003e (this can be added to your repository by selecting it from the drop-down when you initialize a repository on GitHub). There is also a tool called \u003ca href=\"https://gitignore.io\"\u003egitignore.io\u003c/a\u003e that will help you identify useful \u003ccode\u003e.gitignore\u003c/code\u003e lines for your operating system or code editor. It's usually a good idea to use these resources first, before trying to write your own glob syntax!\u003c/p\u003e\n\n\u003ch3\u003eIgnoring a Tracked File\u003c/h3\u003e\n\n\u003cp\u003eIf you previously used \u003ccode\u003egit add\u003c/code\u003e on a file then ran \u003ccode\u003egit commit\u003c/code\u003e, that means that the file is already tracked, regardless of what the \u003ccode\u003e.gitignore\u003c/code\u003e says.\u003c/p\u003e\n\n\u003ch4\u003eIrrelevant Files\u003c/h4\u003e\n\n\u003cp\u003eIf the file is just irrelevant for your collaborators, you can tell Git to stop tracking it. For example, if you wanted to tell Git to stop tracking \u003ccode\u003elog.txt\u003c/code\u003e, you could use this command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003egit \u003cspan class=\"nb\"\u003erm\u003c/span\u003e \u003cspan class=\"nt\"\u003e--cached\u003c/span\u003e log.txt\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNote that this is a command you run in the terminal, \u003cem\u003enot\u003c/em\u003e a line to be added to the \u003ccode\u003e.gitignore\u003c/code\u003e file. For the changes to be reflected on GitHub, you will also need to run \u003ccode\u003egit commit\u003c/code\u003e and \u003ccode\u003egit push\u003c/code\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIn general \u003ccode\u003egit rm\u003c/code\u003e is a useful command that deletes a file from the directory and stages that file deletion with Git (i.e. combines the \u003ccode\u003erm file_name\u003c/code\u003e and \u003ccode\u003egit add file_name\u003c/code\u003e steps). Adding \u003ccode\u003e--cached\u003c/code\u003e to \u003ccode\u003egit rm\u003c/code\u003e means that Git will no longer track the file, but that the file will not actually be deleted from the directory.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e(You also probably want to add that file name to the \u003ccode\u003e.gitignore\u003c/code\u003e at the same time!)\u003c/p\u003e\n\n\u003ch4\u003ePrivate or Too Large Files\u003c/h4\u003e\n\n\u003cp\u003eIf the file is private/secret or too large for GitHub, you will need to rewrite your Git history. This can be fairly complicated (see \u003ca href=\"https://medium.com/analytics-vidhya/tutorial-removing-large-files-from-git-78dbf4cf83a?sk=c3763d466c7f2528008c3777192dfb95\"\u003ethis blog post\u003c/a\u003e for more details) so it's always better to add things to \u003ccode\u003e.gitignore\u003c/code\u003e sooner rather than later!\u003c/p\u003e\n\n\u003ch3\u003eTelling Git Not to Ignore\u003c/h3\u003e\n\n\u003cp\u003eMany developer setups will include a \u003ca href=\"https://sebastiandedeyne.com/setting-up-a-global-gitignore-file/\"\u003eglobal \u003ccode\u003e.gitignore\u003c/code\u003e file\u003c/a\u003e. This file is not located within a specific repository, and can be especially useful for OS-related settings (e.g. ignoring \u003ccode\u003e.DS_Store\u003c/code\u003e on a Mac).\u003c/p\u003e\n\n\u003cp\u003eSometimes you might want to override these global settings for the current repository, particularly if your global \u003ccode\u003e.gitignore\u003c/code\u003e is relatively broad. To do that, you use the same glob syntax, placing a \u003ccode\u003e!\u003c/code\u003e at the beginning.\u003c/p\u003e\n\n\u003cp\u003eSo, for example, if you want Git \u003cem\u003enot\u003c/em\u003e to ignore \u003ccode\u003elog.txt\u003c/code\u003e in a particular repository, you could add this to the \u003ccode\u003e.gitignore\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# do not ignore log.txt\n!log.txt\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eSometimes you want Git to ignore certain files. The common reasons for this are that the files are private, the files are irrelevant to collaborators, or that the files are too big for GitHub. To tell Git to ignore the files, you use a hidden file called \u003ccode\u003e.gitignore\u003c/code\u003e at the root of the repository. This file uses glob syntax to specify which files should be ignored, including \u003ccode\u003e*\u003c/code\u003e to indicate a wildcard and \u003ccode\u003e!\u003c/code\u003e to indicate that a file should \u003cem\u003enot\u003c/em\u003e be ignored. We recommend that you use useful defaults rather than writing your own \u003ccode\u003e.gitignore\u003c/code\u003e lines most of the time, and that you always make sure to add private or too-large files to the \u003ccode\u003e.gitignore\u003c/code\u003e as soon as possible so you don't have to rewrite your Git history.\u003c/p\u003e","frontPage":false},{"exportId":"html-introduction","title":"HTML Introduction","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-introduction\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-introduction/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eHTML, or HyperText Markup Language, is a markup language that describes the\nstructure and semantic meaning of web pages. Web browsers, such as Mozilla\nFirefox, Internet Explorer, and Google Chrome interpret the HTML code and use\nit to render output. Unlike Python, JavaScript and other programming languages,\nmarkup languages like HTML don't have any logic behind them. Instead, they\nsimply surround the content to convey structure and meaning.\u003c/p\u003e\n\n\u003cp\u003eEvery web page you've ever visited is structured using HTML code. Being able to\nread and understand an HTML document is an incredibly useful tool in a\ndata scientist's toolbox.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain what HTML is and why it's important in the context of web development\u003c/li\u003e\n\u003cli\u003eCompare and contrast HTML tags\u003c/li\u003e\n\u003cli\u003eCreate an HTML document with appropriate tags\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eHTML Syntax\u003c/h2\u003e\n\n\u003cp\u003eHTML makes use of \u003cstrong\u003etags\u003c/strong\u003e which are interpreted by web browsers to affect how content is displayed. The \u003ccode\u003ep\u003c/code\u003e tag to define a paragraph is shown below:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;p\u0026gt;Hello World\u0026lt;/p\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eElements, like the \u003ccode\u003ep\u003c/code\u003e tags above, won't be displayed in the browser. Technologists might say that\nthe tags \"affect how the content is rendered by the browser.\" \u003c/p\u003e\n\n\u003cp\u003eYou can also alter any number of attributes inside of the opening tags. For\nexample, the \u003ccode\u003ea\u003c/code\u003e element, which is used for links, has an \u003ccode\u003ehref\u003c/code\u003e attribute to\nspecify the destination address of the link. If you wanted to link to\n\u003ca href=\"http://www.flatironschool.com\"\u003ewww.flatironschool.com\u003c/a\u003e, you could do so as follows:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;a href=\"http://www.flatironschool.com\"\u0026gt;Flatiron School\u0026lt;/a\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis would render as:\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://www.flatironschool.com\"\u003eFlatiron School\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can also nest elements inside of each other. To have a link displayed as a\nseparate paragraph, we could nest an \u003ccode\u003ea\u003c/code\u003e element inside of a \u003ccode\u003ep\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;p\u0026gt;This \u0026lt;a href=\"http://www.google.com\"\u0026gt;link\u0026lt;/a\u0026gt; will be a part of a separate paragraph.\u0026lt;/p\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eBasic HTML Document Structure\u003c/h2\u003e\n\n\u003cp\u003eAll HTML documents begin with a \"doctype declaration\" tag, which tells the web\nbrowser which version of HTML to use. HTML is a language that is currently\nevolving ‚Äî just like English. When you open a novel such as \"Romeo and Juliet,\" your\nexpectation is that the \"doctype\" is \"Elizabethan English.\" In the same way\n\"Elizabethan English\" has changed to a more modern form, HTML 1.0 was\n\u003cem\u003eessentially\u003c/em\u003e the same as modern HTML5 but had some tags that are no longer used\nand was lacking some tags often used today.\u003c/p\u003e\n\n\u003cp\u003eSince it's not wrapping any content, the doctype declaration doesn't require a\nclosing tag. To use HTML5, the current up-to-date version, you can simply\ndeclare \u003ccode\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNext, you add an opening and closing \u003ccode\u003ehtml\u003c/code\u003e tag. This tells the web browser to\ninterpret everything inside the tags as HTML code.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\n\u0026lt;html\u0026gt;\n\n\n\u0026lt;/html\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eEvery HTML page is made up of two primary sections: a \u003ccode\u003ehead\u003c/code\u003e and a \u003ccode\u003ebody\u003c/code\u003e. The\n\u003ccode\u003ehead\u003c/code\u003e element contains metadata about the HTML document and other information\nfor the browser, while the \u003ccode\u003ebody\u003c/code\u003e element contains the actual content.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\n\u0026lt;html\u0026gt;\n    \u0026lt;head\u0026gt;\n        \u0026lt;!-- metadata about the HTML document as a whole --\u0026gt;\n\n    \u0026lt;/head\u0026gt;\n\n    \u0026lt;body\u0026gt;\n        \u0026lt;!-- content of our page will be here! --\u0026gt;\n\n    \u0026lt;/body\u0026gt;\n\u0026lt;/html\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eComments\u003c/h2\u003e\n\n\u003cp\u003eLet's also take a brief moment to recognize how to add comments into an HTML\ndocument.  These won't get rendered to the browser at all: they're just helpful\nnotes for the author.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;!-- NYC Pizza is world-famous, cheap, and loved by both vermin and human-like! --\u0026gt;\n\u0026lt;p\u0026gt;Top 5 Pizza Places in NYC\u0026lt;/p\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eCommon HTML Elements\u003c/h2\u003e\n\n\u003cp\u003eYou've already looked at some common HTML elements, such as \u003ccode\u003ea\u003c/code\u003e and \u003ccode\u003ep\u003c/code\u003e. Let's\ntake a look at some more HTML elements.\u003c/p\u003e\n\n\u003ch2\u003eHeaders\u003c/h2\u003e\n\n\u003cp\u003eHTML gives us access to different header elements, ranging from \u003ccode\u003eh1\u003c/code\u003e to \u003ccode\u003eh6\u003c/code\u003e,\nwith \u003ccode\u003eh1\u003c/code\u003e being the largest and \u003ccode\u003eh6\u003c/code\u003e being the smallest.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;h1\u0026gt;Dogs!\u0026lt;/h1\u0026gt;\n\u0026lt;h3\u0026gt;Why Dogs are Great\u0026lt;/h3\u0026gt;\n\n\u0026lt;h6\u0026gt;Different Breeds\u0026lt;/h6\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn addition to changing how the text is displayed, search engines use headers\nto help determine what a web page is about. Remember when\nyou provide \u003cem\u003esemantic\u003c/em\u003e markup, machines can infer the \"main points\" of a page. A\nwell structured article will generally have its principal arguments bracketed\nby low-number header tags -- this very document does exactly that!\u003c/p\u003e\n\n\u003ch2\u003eImages\u003c/h2\u003e\n\n\u003cp\u003eYou can embed images on our web pages using the \u003ccode\u003eimg\u003c/code\u003e element. The \u003ccode\u003eimg\u003c/code\u003e element\ndoesn't have a closing tag. The \u003ccode\u003esrc\u003c/code\u003e attribute tells the browser where to find\nthe image. The \u003ccode\u003ealt\u003c/code\u003e attribute will be displayed if an image can't be loaded,\nand also describes the image to search engines.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003ealt\u003c/code\u003e tag presents a moment to talk about an important principle behind \u003ca href=\"https://webfoundation.org/about/vision/history-of-the-web/\"\u003eTim\nBerners-Lee's vision for the Web\u003c/a\u003e: it is \u003cem\u003einclusive\u003c/em\u003e. If you're using assistive\ntechnologies because you have a sight impairment, it's helpful to know what's\nbeing displayed. If you're in a remote community where internet access is\nexpensive, you might choose to disable images and only pay to download those\nwhich you \u003cem\u003eabsolutely need\u003c/em\u003e. So while an \u003ccode\u003eimg\u003c/code\u003e will inject an image and \"work,\"\nhonoring the Web's vision for openness and inclusivity requires that you provide\nthe \u003ccode\u003ealt\u003c/code\u003e tag as well.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e\u0026lt;img src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-html-introduction/master/URL_TO_IMAGE\" alt=\"Picture of a Dog\"\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2\u003eLists\u003c/h2\u003e\n\n\u003cp\u003eSome other useful HTML elements are lists. You can make bulleted, or unordered\nlists, using opening and closing \u003ccode\u003eul\u003c/code\u003e tags. Inside, you can nest a \u003ccode\u003eli\u003c/code\u003e, or\n\"list item\" element for each item on our list.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;h5\u0026gt;My Favorite Things in No Particular Order\u0026lt;/h5\u0026gt;\n\u0026lt;ul\u0026gt;\n    \u0026lt;li\u0026gt;Coffee\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Vinyl Records\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Pickling\u0026lt;/li\u0026gt;\n\u0026lt;/ul\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis would render as:\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch5\u003eMy Favorite Things in No Particular Order\u003c/h5\u003e\n\n\u003cul\u003e\n    \u003cli\u003eCoffee\u003c/li\u003e\n    \u003cli\u003eVinyl Records\u003c/li\u003e\n    \u003cli\u003ePickling\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr\u003e\n\n\u003cp\u003eYou can also make a numbered, or ordered list, using an \u003ccode\u003eol\u003c/code\u003e tag.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;h5\u0026gt;Top 5 Pizza Places in NYC\u0026lt;/h5\u0026gt;\n\u0026lt;ol\u0026gt;\n    \u0026lt;li\u0026gt;DiFara Pizza\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Lucali's\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Sal and Carmine's\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Juliana's\u0026lt;/li\u0026gt;\n    \u0026lt;li\u0026gt;Joe's\u0026lt;/li\u0026gt;\n\u0026lt;/ol\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWould render as:\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch5\u003eTop 5 Pizza Places in NYC\u003c/h5\u003e\n\n\u003col\u003e\n    \u003cli\u003eDiFara Pizza\u003c/li\u003e\n    \u003cli\u003eLucali's\u003c/li\u003e\n    \u003cli\u003eSal and Carmine's\u003c/li\u003e\n    \u003cli\u003eJuliana's\u003c/li\u003e\n    \u003cli\u003eJoe's\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003chr\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWelcome to the world of the web! In this lesson, you learned about HTML, why it's important in web development, and how web pages are structured. You also compared and contrasted a few common HTML tags as well as saw how tags can be used to construct HTML documents.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-html-introduction\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-html-introduction\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-html-introduction/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"data-analysis-in-base-python-recap","title":"Data Analysis in Base Python - Recap","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-analysis-python-recap\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-analysis-python-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-analysis-python-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this section, you started by learning about how Python code interacts with files, and how to use the \u003ccode\u003eopen\u003c/code\u003e built-in function to read data from files on disk into Python objects in memory. Then you learned about the CSV and JSON formats for serializing data, and how to use the built-in \u003ccode\u003ecsv\u003c/code\u003e and \u003ccode\u003ejson\u003c/code\u003e Python modules to parse and extract data from files using those formats.\u003c/p\u003e\n\u003ch2\u003eKey Takeaways\u003c/h2\u003e\n\u003ch3\u003eBase Python\u003c/h3\u003e\n\u003cp\u003eWhile there are many popular third-party libraries used for data analysis with Python, you can create simple, powerful analyses with just the built-in language data types and modules. When working with data in base Python:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eData is stored in familiar data structures such as lists and dictionaries, which are often nested\u003c/li\u003e\n\u003cli\u003eAnalysis is performed using familiar control structures such as \u003ccode\u003efor\u003c/code\u003e loops and \u003ccode\u003eif\u003c/code\u003e statements\u003c/li\u003e\n\u003cli\u003eFiles are opened using the \u003ccode\u003eopen\u003c/code\u003e built-in function, and CSV or JSON files are parsed using the built-in \u003ccode\u003ecsv\u003c/code\u003e or \u003ccode\u003ejson\u003c/code\u003e modules\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLoading Data from Files\u003c/h3\u003e\n\u003cp\u003eAs you were initially learning to work with Python, you often used Python variables that were declared in the code of a Jupyter Notebook, manipulated using that code, then never existed again after that notebook was shut down. These are variables \"in memory\". In many cases data scientists will want to work with larger data files that are saved after the code is finished running. This is data \"on disk\". Python has built-in functionality to facilitate communication between variables in memory and files on disk.\u003c/p\u003e\n\u003cp\u003eKey takeaways:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eVariables \u003cstrong\u003ein memory\u003c/strong\u003e are the current active variables in your code, which go away if you shut down the kernel or shut down your computer\u003c/li\u003e\n\u003cli\u003eFiles \u003cstrong\u003eon disk\u003c/strong\u003e are the things you see printed out when you type \u003ccode\u003els\u003c/code\u003e in the terminal, which persist when you shut down the kernel or shut down your computer\u003c/li\u003e\n\u003cli\u003eThere is no concept like \"editing\" when working with files in Python. You are either reading from the first line to the last line of the file (sometimes all at once), or writing lines one after another\u003c/li\u003e\n\u003cli\u003eIn Python, the typical way to interact with these files is to use the \u003ccode\u003eopen\u003c/code\u003e built-in function\n\u003cul\u003e\n\u003cli\u003eThe first step is identifying the path to the file, which is a string and represents the relative path from the current code execution context to the location of the file on the computer. It is represented as \u003ccode\u003epath_to_file\u003c/code\u003e in the examples below\u003c/li\u003e\n\u003cli\u003eTo open a file for reading, that looks like:\u003cbr\u003e\u003ccode\u003ewith open(path_to_file) as f:\u003c/code\u003e\u003cbr\u003e\u0026nbsp; \u0026nbsp;\u0026nbsp;\u003ccode\u003e# Read data from file object f\n\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eTo open a file for writing, that looks like:\u003cbr\u003e\u003ccode\u003ewith open(path_to_file, \"w\") as f:\u003cbr\u003e\u0026nbsp; \u0026nbsp; # Write data to the file object f\n\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003ewith...:\u003c/code\u003e syntax means that the file is automatically closed after the \u003ccode\u003ewith\u003c/code\u003e block ends. If you use the syntax \u003ccode\u003ef = open(path_to_file)\u003c/code\u003e instead, you also need to call \u003ccode\u003ef.close()\u003c/code\u003e when you are finished working with the file\u003c/li\u003e\n\u003cli\u003eYou will find that some third-party libraries handle opening and closing the files for you. In this case, you only need to identify the file path and do not need to call \u003ccode\u003eopen\u003c/code\u003e and \u003ccode\u003e.close\u003c/code\u003e yourself\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eopen\u003c/code\u003e function assumes that you are working with a file encoded as plain text, such as an unstructured \u003ccode\u003e.txt\u003c/code\u003e file, CSV file, or JSON file. If you are working with a file encoded as bytes, such as a JPEG image, you need to specify a mode of \u003ccode\u003e\"rb\"\u003c/code\u003e to read or \u003ccode\u003e\"wb\"\u003c/code\u003e to write when you call \u003ccode\u003eopen\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eCSV\u003c/h3\u003e\n\u003cp\u003eThe CSV format stands for \"comma-separated values\". It is possibly the most common data serialization format used by data scientists, and we will use it very frequently in this course.\u003c/p\u003e\n\u003cp\u003eKey takeaways:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCSV is a file format. The file names typically end with the extension \u003ccode\u003e.csv\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eCSV is a \u003cstrong\u003eplain text\u003c/strong\u003e format. This means that it is encoded as text that is readable without specialized software, and you can explore the contents using VS Code, Vim, or any other general-purpose editor\u003c/li\u003e\n\u003cli\u003eCSV is a \u003cstrong\u003edelimited\u003c/strong\u003e format. This means that there are characters in the text of the file that are intended to separate the pieces of data from one another\n\u003cul\u003e\n\u003cli\u003eAs you might assume from the name, the most common delimiter is a comma. A line of comma-delimited CSV content representing four pieces of data might look like: \u003ccode\u003e\n10,2,1.5,\"Firstname Lastname\"\n\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eIt is also possible to use some other delimiter. One of the most common is a tab \u003ccode\u003e\\t\u003c/code\u003e, to the extent that there is a name \"TSV\" (tab-separated values) for that specific kind of file. You could also use a pipe \u003ccode\u003e|\u003c/code\u003e, semicolon \u003ccode\u003e;\u003c/code\u003e, or really any other character as long as the markup is consistent and the code knows how to interpret it. Technically all of these files would still be referred to as CSVs, even though the delimiter is not a comma\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIn Python, we can use the \u003ccode\u003ecsv\u003c/code\u003e module to parse data from CSV files (\u003ca href=\"https://docs.python.org/3/library/csv.html\"\u003edocumentation here\u003c/a\u003e)\n\u003cul\u003e\n\u003cli\u003eIf the data file does not contain headings, the \u003ccode\u003ecsv.reader\u003c/code\u003e function works well. It will return a reader iterable that produces a Python list for each row of the file. There is a matching \u003ccode\u003ecsv.writer\u003c/code\u003e option for writing data to files rather than reading data from files\u003c/li\u003e\n\u003cli\u003eIf the data file does contain headings, the \u003ccode\u003ecsv.DictReader\u003c/code\u003e class works well. It will use a reader iterable that produces a Python dictionary for each row of the file. There is a matching \u003ccode\u003ecsv.DictWriter\u003c/code\u003e option\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJSON\u003c/h3\u003e\n\u003cp\u003eThe JSON format stands for \"JavaScript object notation\". It is a widely-adopted format for storing and transferring data between applications, particularly on the web.\u003c/p\u003e\n\u003cp\u003eKey takeaways:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eJSON is a file format. The file names typically end with the extension \u003ccode\u003e.json\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eJSON is a \u003cstrong\u003eplain text\u003c/strong\u003e format, like CSV\u003c/li\u003e\n\u003cli\u003eThe markup of JSON is more complex than CSV. While it typically does contain comma delimiters, it can also contain square brackets (\u003ccode\u003e[\u003c/code\u003e and \u003ccode\u003e]\u003c/code\u003e) and curly braces (\u003ccode\u003e{\u003c/code\u003e and \u003ccode\u003e}\u003c/code\u003e).\n\u003cul\u003e\n\u003cli\u003eFor example, the same line represented as CSV above might look like this in JSON: \u003ccode\u003e\n[10, 2, 1.5, \"Firstname Lastname\"]\n\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eUnlike CSV (which mainly works for \"flat\" tabular data) it is also possible to store nested data with JSON. For example, this comes from the \u003ccode\u003ejson\u003c/code\u003e docs: \u003ccode\u003e\n[\"foo\", {\"bar\": [\"baz\", null, 1.0, 2]}]\n\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIn Python, we can use the \u003ccode\u003ejson\u003c/code\u003e module to parse data from JSON files (\u003ca href=\"https://docs.python.org/3/library/json.html\"\u003edocumentation here\u003c/a\u003e)\n\u003cul\u003e\n\u003cli\u003eTypically you will want to load the entire file contents at once using \u003ccode\u003ejson.load\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eYou can also use \u003ccode\u003ejson.dump\u003c/code\u003e to serialize an object in memory and write it to a file on disk\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eA major part of data science is loading the data, and you just learned the fundamental building blocks of how to do this with Python! In future sections we will cover additional libraries and data formats, but you already have the knowledge to dig up interesting data sets and use Python to answer questions about the data.\u003c/p\u003e","frontPage":false},{"exportId":"repository-readability","title":"Repository Readability","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-repo-readability-v2-2\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-repo-readability-v2-2\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-repo-readability-v2-2/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eWhen a prospective employer looks at your GitHub repository they will read two things: your \u003ccode\u003eREADME\u003c/code\u003e and your notebook.\u003c/p\u003e  \u003cp\u003eUnfortunately, sometimes they see something like this:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-repo-readability-v2-2/master/overview.png\" alt=\"overview screenshot\"\u003e\u003c/p\u003e  \u003cp\u003eThat notebook analysis may contain perfectly valid code, but it's not readable.\u003c/p\u003e  \u003cp\u003eTo fully communicate the quality of your work it needs to be readable. What does readability mean? It means the most important information is highlighted and complex code is explained.\u003c/p\u003e  \u003cp\u003eSince your analysis is in a Jupyter notebook, you have the narrative of your analysis and important code all in the same place. You will use two different tools to enhance the readability of your notebook: \u003cstrong\u003emarkdown\u003c/strong\u003e for the narrative and \u003cstrong\u003ecomments\u003c/strong\u003e for the code. The same markdown techniques apply to your \u003ccode\u003eREADME\u003c/code\u003e as well.\u003c/p\u003e  \u003ch2\u003eObjectives\u003c/h2\u003e  \u003cp\u003eYou will be able to:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eUse markdown to enhance the readability of text\u003c/li\u003e \u003cli\u003eUse comments to enhance the readability of code\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eMarkdown\u003c/h2\u003e  \u003cp\u003eMarkdown is a \u003cstrong\u003eplain text formatting syntax\u003c/strong\u003e, that allows you to format text quickly without the need to write in a text editor. Markdown allows you to quickly format plain text using special characters like asterisks, dashes, underscores, etc. Markdown enables you to create headers, lists, code blocks and more without lifting your fingers off your keyboard. \u003c/p\u003e  \u003cp\u003eFor example, which chunk of text is more readable?\u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eExample A:\u003c/strong\u003e\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-repo-readability-v2-2/master/exercise_plaintext-example.png\" alt=\"plaintext example\"\u003e\u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eor\u003c/strong\u003e\u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eExample B:\u003c/strong\u003e\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-repo-readability-v2-2/master/exercise_rendered-text-example.png\" alt=\"rendered text example, showing effect of markdown\"\u003e\u003c/p\u003e  \u003cp\u003eExample B! But what makes them different? The only difference between Examples A and B is that Example B adds \u003cstrong\u003eMarkdown\u003c/strong\u003e syntax to Example A. Here is what Example B looks like before it is rendered:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e# Housing Price Prediction Project\u003cbr\u003e\u003cbr\u003e## Project Goal\u003cbr\u003e\u003cbr\u003eMy project aims to predict the sale price of houses. \u003c/code\u003e\u003c/pre\u003e \u003ch3\u003eHeadings example\u003c/h3\u003e  \u003cp\u003eWhen you use text editing software like Microsoft Word or Google Docs, you use different level headings to create a consistent hierarchy of information in your documentation. H1 headings are the  highest level, like the title of the document, while H2 and H3 headings are lower in value. You denote a line is a heading by putting a hash mark next to the text, so the title in your analysis:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-repo-readability-v2-2/master/title_without-markdown.png\" alt=\"example text without markdown\"\u003e\u003c/p\u003e  \u003cp\u003eIf you add one hash mark:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e# Housing Price Prediction Project \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eThe text becomes large and bold:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-repo-readability-v2-2/master/title_with-markdown.png\" alt=\"example text with markdown, a single hash to make a title\"\u003e\u003c/p\u003e  \u003cp\u003eThe title of your analysis should have the highest level of header and your section headings, such as \"Business Question\" or \"Data Understanding\" should have H2 headings, etc. \u003c/p\u003e  \u003ch3\u003ePractice\u003c/h3\u003e  \u003cp\u003eYou can practice your understanding of markdown using the following exercise:\u003c/p\u003e  \u003cp\u003e1) Examine the plaintext below:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-repo-readability-v2-2/master/exercise_plaintext-example.png\" alt=\"plaintext example\"\u003e\u003c/p\u003e  \u003cp\u003e2) Now examine the rendered text below and find \u003cstrong\u003e4 examples\u003c/strong\u003e of markdown being used to enhance the readability of the text:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-repo-readability-v2-2/master/exercise_rendered-text-example.png\" alt=\"rendered text example, showing effect of markdown\"\u003e\u003c/p\u003e  \u003cp\u003e3) Once you have identified four examples, look at the numbered image below to confirm your answers:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-repo-readability-v2-2/master/exercise_numbered_rendered-text-example.png\" alt=\"rendered text example, showing effect of markdown, now with numbers to point out changes\"\u003e\u003c/p\u003e  \u003cp\u003e4) Review the numbered answers listed below to confirm what was updated:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e1. headings and subheadings, used to show the organization of the file \u003cbr\u003e2. link embedding, used to create linked text so the full text of a URL does not need to be shown\u003cbr\u003e3. bulleted list, used to effectively convey lists\u003cbr\u003e4. code text, used to show that this is the name of a variable \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eTry updating the text in our messy repo to match the updated formatting.\u003c/p\u003e  \u003ch3\u003eFurther reading on Markdown\u003c/h3\u003e  \u003cul\u003e \u003cli\u003e\u003ca href=\"https://guides.github.com/pdfs/markdown-cheatsheet-online.pdf\"\u003eGitHub's Markdown Cheat Sheet\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href=\"https://pressbooks.bccampus.ca/technicalwriting/\"\u003eDocument design free ebook\u003c/a\u003e\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eCode Comments\u003c/h2\u003e  \u003cp\u003eThe \u003ca href=\"https://www.python.org/dev/peps/pep-0020/\"\u003eZen of Python\u003c/a\u003e states that \"Readability counts\". You covered how to make text more readable, but what about code? Enter code comments and docstrings.\u003c/p\u003e  \u003ch3\u003eComments\u003c/h3\u003e  \u003cp\u003eCode comments can show up three main ways:\u003c/p\u003e  \u003ch4\u003e1) at the top, before code, to say what it will do\u003c/h4\u003e \u003cpre\u003e\u003ccode\u003e# Prints the zen of python\u003cbr\u003eprint(this) \u003c/code\u003e\u003c/pre\u003e \u003ch4\u003e2) on the side, explaining what the code does\u003c/h4\u003e \u003cpre\u003e\u003ccode\u003eprint(this) # prints the zen of python \u003c/code\u003e\u003c/pre\u003e \u003ch4\u003e3) in the midst of code, telling Python to ignore that section of code and to not run it\u003c/h4\u003e \u003cpre\u003e\u003ccode\u003e# print(this)\u003cbr\u003eprint(\"something else\") \u003c/code\u003e\u003c/pre\u003e \u003ch4\u003eComments Example\u003c/h4\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-repo-readability-v2-2/master/without-code-comments.png\" alt=\"comments example without comments\"\u003e\u003c/p\u003e  \u003cp\u003eIf you were given the above bit of code, you could probably figure out what was happening... but you'd need to read through the code itself, and maybe run the cells and play with the code, in order to fully follow not only what the code does but also why the code was written.\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-repo-readability-v2-2/master/with-code-comments.png\" alt=\"comments example with comments\"\u003e\u003c/p\u003e  \u003cp\u003eIf you were instead given this bit of code above, you'd be able to instantly read through exactly what each bit was doing. The comments also clearly show why the code is running. Note that this example uses both markdown cells and code comments, for different reasons! The markdown gives an overview and more of the rationale behind the code, while the code comments talk through what each piece of code actually does.\u003c/p\u003e  \u003ch3\u003eDocstrings\u003c/h3\u003e  \u003cp\u003eDocstrings are multi-line comments that usually explain what a \u003cem\u003efunction\u003c/em\u003e, \u003cem\u003eclass\u003c/em\u003e, or \u003cem\u003emodule\u003c/em\u003e is intended to do. Whenever you type \u003ccode\u003eshift+tab\u003c/code\u003e in a code cell and get the documentation? The documentation is populated by docstrings written in the code itself. Examine \u003ca href=\"https://github.com/pandas-dev/pandas/blob/master/pandas/core/groupby/groupby.py#L1168\"\u003ethe source code for the Pandas groupby object\u003c/a\u003e to see docstrings in action. \u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\"\"\"\u003cbr\u003edocstrings are the text in triple quotes\u003cbr\u003e\u003cbr\u003ethat can take multiple lines and still not interfere\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003ewith the code\u003cbr\u003e\"\"\"\u003cbr\u003e \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eDocstrings help future employers AND our future selves to understand our code at a later date. It not only makes code more readable, but makes it more \u003cem\u003eusable\u003c/em\u003e in the future.\u003c/p\u003e  \u003ch4\u003eDocstrings Example\u003c/h4\u003e \u003cpre\u003e\u003ccode\u003edef summarize_dataframe(df):\u003cbr\u003e    summary = pd.DataFrame(df.dtypes,columns=['dtypes'])\u003cbr\u003e    summary = summary.reset_index()\u003cbr\u003e    summary['Name'] = summary['index']\u003cbr\u003e    summary = summary[['Name','dtypes']]\u003cbr\u003e    summary['Missing'] = df.isnull().sum().values    \u003cbr\u003e    summary['Uniques'] = df.nunique().values\u003cbr\u003e    return summary \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eIf you wanted to make the above function more readable, you could use BOTH comments and docstrings:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003edef summarize_dataframe(df):\u003cbr\u003e    '''\u003cbr\u003e    Summarizes each column in a Pandas dataframe, where each row of the \u003cbr\u003e    summary output is a column of the input dataframe, df\u003cbr\u003e    Will show the datatype of data in the column, the number of missing values\u003cbr\u003e    in that column, and the number of unique values in the column\u003cbr\u003e    -\u003cbr\u003e    Input:\u003cbr\u003e    df : Pandas dataframe\u003cbr\u003e    -\u003cbr\u003e    Output:\u003cbr\u003e    summary : Pandas dataframe, now showing column details\u003cbr\u003e    '''\u003cbr\u003e    summary = pd.DataFrame(df.dtypes,columns=['dtypes'])\u003cbr\u003e    summary = summary.reset_index()\u003cbr\u003e    summary['Name'] = summary['index'] # name of each variable \u003cbr\u003e    summary = summary[['Name','dtypes']] # data type of each variable\u003cbr\u003e    summary['Missing'] = df.isnull().sum().values # number of missing values  \u003cbr\u003e    summary['Uniques'] = df.nunique().values # number of unique values\u003cbr\u003e    return summary \u003c/code\u003e\u003c/pre\u003e \u003ch3\u003eFurther Reading on Creating Readable Code\u003c/h3\u003e  \u003cul\u003e \u003cli\u003eUltimate guide for readable code: \u003ca href=\"https://www.python.org/dev/peps/pep-0008/\"\u003ePep8 standards\u003c/a\u003e\u003c/li\u003e \u003cli\u003eIf you want more information on docstring expectations look \u003ca href=\"https://www.python.org/dev/peps/pep-0257/\"\u003ehere\u003c/a\u003e\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eSummary\u003c/h2\u003e  \u003cp\u003eGreat, now that you learned more about markdown and code readability, let's put this theory into practice!\u003c/p\u003e","frontPage":false},{"exportId":"topic-4-lesson-priorities-live","title":"Topic 4 Lesson Priorities (Live)","type":"WikiPage","content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 85.3754%; height: 412px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete Before \u003cem\u003ePandas DataFrames\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 28px;\"\u003e\n\u003cth style=\"width: 53.5903%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.53687%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Data Analysis in Pandas - Introduction\" href=\"pages/data-analysis-in-pandas-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/data-analysis-in-pandas-introduction\" data-api-returntype=\"Page\"\u003eData Analysis in Pandas - Introduction\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Introducing Python Libraries\" href=\"pages/introducing-python-libraries\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/introducing-python-libraries\" data-api-returntype=\"Page\"\u003eIntroducing Python Libraries\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Accessing Data within Pandas\" href=\"assignments/g0a64daf9497a06e8b498a063e05c799c\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186708\" data-api-returntype=\"Assignment\"\u003eAccessing Data within Pandas\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003ca title=\"Accessing Data within Pandas - Lab\" href=\"assignments/g33625ac3776e3bcf751370d9fc3b1723\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186709\" data-api-returntype=\"Assignment\"\u003eAccessing Data within Pandas - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 53.5903%;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: Pandas Fundamentals\" href=\"quizzes/ge4ebebf95dee70ef95a317eb200a8bbc\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30592\" data-api-returntype=\"Quiz\"\u003eQuiz: Pandas Fundamentals\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Importing Data Using Pandas\" href=\"assignments/g6ba2152a25eb0ea3ca4aeb2ddc8d42e4\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186740\" data-api-returntype=\"Assignment\"\u003eImporting Data Using Pandas\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003ca title=\"Importing Data Using Pandas - Lab\" href=\"assignments/gd69ca565852456f473df35aa1070740b\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186741\" data-api-returntype=\"Assignment\"\u003eImporting Data Using Pandas - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 33px;\"\u003e\u003cstrong\u003e\u003ca title=\"Understanding Pandas Series and DataFrames\" href=\"assignments/g340e2dc031191ea636e890ed22a10dc8\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186780\" data-api-returntype=\"Assignment\"\u003eUnderstanding Pandas Series and DataFrames\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 33px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003ca title=\"Understanding Pandas Series and DataFrames - Lab\" href=\"assignments/ga351a61f8d4fc357cea294ffd6742dd7\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186781\" data-api-returntype=\"Assignment\"\u003eUnderstanding Pandas Series and DataFrames - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"Statistical Methods in Pandas\" href=\"pages/statistical-methods-in-pandas-2\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/statistical-methods-in-pandas-2\" data-api-returntype=\"Page\"\u003eStatistical Methods in Pandas\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 29px;\"\u003e\u003ca title=\"Statistical Methods in Pandas - Lab\" href=\"assignments/g1e22660ff8e0c256c1c8bd0b38286da1\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186778\" data-api-returntype=\"Assignment\"\u003eStatistical Methods in Pandas - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 28px;\"\u003e\u003ca title=\"Kaggle and The Ames Housing Dataset\" href=\"pages/kaggle-and-the-ames-housing-dataset\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/kaggle-and-the-ames-housing-dataset\" data-api-returntype=\"Page\"\u003eKaggle and The Ames Housing Dataset\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 28px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 85.3754%; height: 75px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003ePandas DataFrames\u003c/em\u003e Lecture, Before\u0026nbsp;\u003cem\u003eData Visualization\u0026nbsp;\u003c/em\u003eLecture\u003c/caption\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 28px;\"\u003e\n\u003cth style=\"width: 53.5903%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.53687%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 17px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 17px;\"\u003e\u003cstrong\u003e\u003ca title=\"Pandas DataFrames Exit Ticket\" href=\"quizzes/gc4aa66be11cc73395c3fcdd4e70da7b2\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30569\" data-api-returntype=\"Quiz\"\u003ePandas DataFrames Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center; height: 17px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 17px;\"\u003e\u003ca title=\"Data Visualization with Pandas\" href=\"assignments/g8563fda27ea892529bdc75d88463655b\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186723\" data-api-returntype=\"Assignment\"\u003eData Visualization with Pandas\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 17px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 53.5903%;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: Data Analysis with Pandas\" href=\"quizzes/gcd66c3b1b8dab1f536ef606cdf62ee0b\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30587\" data-api-returntype=\"Quiz\"\u003eQuiz: Data Analysis with Pandas\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 85.3754%; height: 75px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eData Visualization\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 28px;\"\u003e\n\u003cth style=\"width: 53.5903%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.53687%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 12px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 12px;\"\u003e\u003ca title=\"Short Video: Basic Plotting with MatPlotLib\" href=\"pages/short-video-basic-plotting-with-matplotlib\" data-api-endpoint=\"pages/short-video-basic-plotting-with-matplotlib\" data-api-returntype=\"Quiz\"\u003eShort Video: Basic Plotting with MatPlotLib\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center; height: 12px;\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 12px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 12px;\"\u003e\u003cstrong\u003e\u003ca title=\"Data Visualization Exit Ticket\" href=\"quizzes/gd400f6657b84e8ef084f199e3e1fdbc6\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30591\" data-api-returntype=\"Quiz\"\u003eData Visualization Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center; height: 12px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 17px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 17px;\"\u003e\u003cstrong\u003e\u003ca title=\"‚≠êÔ∏è EDA with Pandas - Cumulative Lab\" href=\"quizzes/g82c8665ac84c8238cf8996a60e998020\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30586\" data-api-returntype=\"Quiz\"\u003e‚≠êÔ∏è EDA with Pandas - Cumulative Lab\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; text-align: center; height: 17px;\"\u003e\u003cstrong\u003e1st*\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 53.5903%; height: 17px;\"\u003e\u003ca title=\"Data Analysis in Pandas - Recap\" href=\"pages/data-analysis-in-pandas-recap\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/data-analysis-in-pandas-recap\" data-api-returntype=\"Page\"\u003eData Analysis in Pandas - Recap\u003c/a\u003e\u0026nbsp;\u003c/td\u003e\n\u003ctd style=\"width: 7.53687%; height: 17px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e*Cumulative labs may be used for pairing exercises and might not be published yet; contact your instructor if you have questions\u003c/strong\u003e\u003c/p\u003e","frontPage":false},{"exportId":"collaborating-with-git-branches","title":"Collaborating with Git Branches","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-branches\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-branches/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eSo far we've primarily presented Git as a version control system. Not only is Git a good version control system, it is also a marvelous tool for collaboration and team development. In fact, it was originally designed by Linus Torvalds for coordinating development for the Linux kernel. A primary mechanism through which Git collaboration can effectively be organized is the concept of branches.\u003c/p\u003e\n\u003cp\u003eTwo golden practices in collaborating with \u003ccode\u003egit\u003c/code\u003e are:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eKeep the \u003ccode\u003emaster\u003c/code\u003e \u003cem\u003ebranch\u003c/em\u003e functional at all times\u003c/li\u003e\n\u003cli\u003eKeep lines of work ( \u003cem\u003ebranches\u003c/em\u003e ) separate from each other\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eLet's explore \u003ccode\u003egit\u003c/code\u003e \u003cem\u003ebranches\u003c/em\u003e and we'll come back to review why these golden practices are so helpful.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eExplain branches and their purpose in git\u003c/li\u003e\n\u003cli\u003eCreate a new branch\u003c/li\u003e\n\u003cli\u003eSwitch between branches\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003egit merge\u003c/code\u003e to merge different branches\u003c/li\u003e\n\u003cli\u003eIdentify and fix merge conflicts when merging branches\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eDefine a \u003ccode\u003egit\u003c/code\u003e branch\u003c/h2\u003e\n\u003cp\u003eA \u003ccode\u003egit\u003c/code\u003e branch is a means to separate a new set of commits or edits from another branch. Typically we create a new branch off of \u003ccode\u003emaster\u003c/code\u003e. If all developers we collaborate with honor golden practice 1, we can trust that \u003ccode\u003emaster\u003c/code\u003e will be a safe starting point.\u003c/p\u003e\n\u003cp\u003eWhen we branch, we're creating a separate parallel universe. We can experiment there without any adverse effects to the \u003ccode\u003emaster\u003c/code\u003e branch. It's a contained sandbox where mistakes can be made or ideas can incubate.\u003c/p\u003e\n\u003cp\u003eIt's an idea that a lot of fiction has presented in the last 50 years.\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eParallel Universe\u003c/th\u003e\n\u003cth\u003eSource\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eMirror Dimension\u003c/td\u003e\n\u003ctd\u003eDr. Strange (2016)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDarkest Timeline\u003c/td\u003e\n\u003ctd\u003e\"Community\" / \"Inspector Spacetime\"\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eThe entire premise of..\u003c/td\u003e\n\u003ctd\u003e\"Dr. Who\"\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eMirror, Mirror (Evil Kirk / Spock)\u003c/td\u003e\n\u003ctd\u003eStar Trek\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cem\u003ePlot Against America\u003c/em\u003e\u003c/td\u003e\n\u003ctd\u003ePhilip Roth\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eThe entire plot of...\u003c/td\u003e\n\u003ctd\u003e\"Primer\" (2004)\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eIf you understand multiple-timeline fiction, you get the idea of branches.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://media.giphy.com/media/aorHd4Tl6qIDK/giphy.gif\" alt=\"Annie Edison Says Farewhen to the Inspector\"\u003e\u003c/p\u003e\n\u003cp\u003eBy working in branches, collaborators can work without messing with the main timeline, known as \u003ccode\u003emaster\u003c/code\u003e. OK, so how can we \u003cem\u003eactually\u003c/em\u003e leverage this reality-shattering idea?\u003c/p\u003e\n\u003ch2\u003eCreate a new branch\u003c/h2\u003e\n\u003cp\u003eLet's suppose a \u003ccode\u003emaster\u003c/code\u003e branch with two commits:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-branches/master/images/new_image_git_1.png\"\u003e\u003c/p\u003e\n\u003cp\u003eBest practices suggest that any new set of changes related to fixing a bug, creating a feature, or even messing around with experimental code in a \"sandbox\", should be started on a new branch.\u003c/p\u003e\n\u003cp\u003eIn order to start a new branch, type:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ git branch \u0026lt;new-branch-name\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis creates a new branch. If you wish to see a list of all branches associated with a \u003ccode\u003egit\u003c/code\u003e repo, you can type:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ git branch -a\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIn case of a branch relating to writing a new feature, you could name the branch \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e. Thus: \u003ccode\u003egit branch add-preprocessing-and-normalization\u003c/code\u003e creates a new branch named \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e. This will take the entire commit history of the branch you're on (usually \u003ccode\u003emaster\u003c/code\u003e) and make it the same history as on the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e branch.\u003c/p\u003e\n\u003cp\u003eAt this moment \u003ccode\u003emaster\u003c/code\u003e and \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e \u003cstrong\u003eare the same branches / realities\u003c/strong\u003e etc.\u003c/p\u003e\n\u003ch2\u003eSwitch to a new branch\u003c/h2\u003e\n\u003cp\u003eIn order to start making changes on your new branch, you need to \"check it out.\" After checking a branch out, your commits will be added to that branch's history. You move between branches with:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ git checkout \u0026lt;branch-name\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eProtip\u003c/strong\u003e: You can create and checkout a new branch in one command using: \u003ccode\u003egit checkout -b \u0026lt;new-branch-name\u0026gt;\u003c/code\u003e. This will both create the branch \u003ccode\u003enew-branch-name\u003c/code\u003e and move into it by checking it out.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIf you are currently on \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e, you can move back to \u003ccode\u003emaster\u003c/code\u003e with \u003ccode\u003egit checkout master\u003c/code\u003e. You can also type \u003ccode\u003egit checkout -\u003c/code\u003e in order to move back to the previous branch.\u003c/p\u003e\n\u003cp\u003eWhen you add commits to a branch, you can see the history of the commits by typing:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ git log --graph\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe \u003ccode\u003egit log\u003c/code\u003e command displays the history of commits for the branch you're on. The \u003ccode\u003e--graph\u003c/code\u003e \"flag\" tells \u003ccode\u003egit\u003c/code\u003e to make it pretty, like a timeline. You can use \"Space\" to page down the history of commits. Use \u003ccode\u003eq\u003c/code\u003e to exit.\u003c/p\u003e\n\u003cp\u003eLet's suppose we added two new commits to our new branch. We could visualize it as:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-branches/master/images/new_image_git_2.png\"\u003e\u003c/p\u003e\n\u003cp\u003eTo make sure that you don't lose work, you should make sure all your changes are committed before you switch branches. If you're doing work in \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e that updates \u003ccode\u003emodel.py\u003c/code\u003e, because \u003ccode\u003emaster\u003c/code\u003e \u003cem\u003ealso\u003c/em\u003e has a \u003ccode\u003emodel.py\u003c/code\u003e file, \u003ccode\u003emaster\u003c/code\u003e could overwrite your changes. Make sure all your changes are committed before you switch branches.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eAdvanced\u003c/strong\u003e: \u003ccode\u003egit\u003c/code\u003e has a powerful feature called \u003ccode\u003estash\u003c/code\u003e which can be used when you're ready to hold changes-in-progress. When you're very comfortable with \u003ccode\u003egit\u003c/code\u003e, look into it!\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAs you add more commits on the new branch you're changing \u003cem\u003eonly\u003c/em\u003e the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e reality. The \u003ccode\u003emaster\u003c/code\u003e branch \u003cstrong\u003ewill not be changed\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eYou can confirm this by first checking out \u003ccode\u003emaster\u003c/code\u003e using \u003ccode\u003egit checkout master\u003c/code\u003e, then use \u003ccode\u003egit log --graph\u003c/code\u003e again, and you can see that the \u003ccode\u003emaster\u003c/code\u003e branch \u003cem\u003eonly\u003c/em\u003e has the code up to the moment you \"branched\" into the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e timeline, er, branch.\u003c/p\u003e\n\u003cp\u003eThe code from \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e is safely tucked away in that branch, waiting patiently in isolation from the rest of your code in \u003ccode\u003emaster\u003c/code\u003e until the feature is considered complete. Let's talk about merging these commits into \u003ccode\u003emaster\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003eMerge a branch into master\u003c/h2\u003e\n\u003cp\u003eNow that you have some additions to the code that you'd like to combine back with the \u003ccode\u003emaster\u003c/code\u003e, the goal is to bring the commits that occurred on the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e branch into the \u003ccode\u003emaster\u003c/code\u003e branch. By merging the branch, \u003ccode\u003emaster\u003c/code\u003e will have all of the commits from the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e branch as though those events occurred on the \u003ccode\u003emaster\u003c/code\u003e branch.\u003c/p\u003e\n\u003cp\u003eWhen merging a branch with \u003ccode\u003egit merge\u003c/code\u003e, it's important to be currently working on your target branch, the branch that you want to move the content to of the new branch.\u003c/p\u003e\n\u003cp\u003eThe first step for our \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e merge is to checkout \u003ccode\u003emaster\u003c/code\u003e because that is where you want the commits to end up. You can then use \u003ccode\u003egit merge \u0026lt;branch-to-merge\u0026gt; -m \"message\"\u003c/code\u003e like shown here:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ git checkout master\n$ git merge add-preprocessing-and-normalization -m \"merge in the feature\" \n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eNow the branches have been merged. If you type \u003ccode\u003egit log --graph\u003c/code\u003e, you'll see the commits from the \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e branch on your \u003ccode\u003emaster\u003c/code\u003e branch.\u003c/p\u003e\n\u003cp\u003eHere's another way to visualize it:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-branches/master/images/new_image_git_3.png\"\u003e\u003c/p\u003e\n\u003cp\u003eIn this graphic, you might note that a commit happened to \u003ccode\u003emaster\u003c/code\u003e \u003cem\u003ebetween\u003c/em\u003e the two commits that made up our feature branch. The amazing thing is \u003ccode\u003egit\u003c/code\u003e reconciles the \u003ccode\u003emaster\u003c/code\u003e timeline, the additional commit, and the commits in this feature branch. It re-weaves multiple realities together. That is \u003cem\u003eseriously\u003c/em\u003e cool.\u003c/p\u003e\n\u003cp\u003eWhen you're done with a branch that's been merged you can delete it with:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ git branch -d \u0026lt;branch-to-delete\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eMerge conflicts\u003c/h2\u003e\n\u003cp\u003eOccasionally, when merging two branches, you might run into a message similar to this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eAuto-merging \u0026lt;filename\u0026gt;\nCONFLICT (content): Merge conflict in \u0026lt;filename\u0026gt;\nAutomatic merge failed; fix conflicts and then commit the result. \n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWhat happened here? Well, you made changes to the same file (\u003ccode\u003e\u0026lt;filename\u0026gt;\u003c/code\u003e in this case) on both the base and the feature branches, and now Git doesn't know which set of changes to retain. In order to resolve this, you need to manually fix the relevant file. To do this, first open the relevant file. After opening the file, you will see conflict markers -- \u003ccode\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; HEAD\u003c/code\u003e, \u003ccode\u003e=======\u003c/code\u003e, and \u003ccode\u003e\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; branch-name\u003c/code\u003e. These markers indicate which portions of the file have conflicting changes. The markers and the conflicting changes are represented like this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e...\n...\neverthing is fine here\n\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; HEAD\n...\n...\nthis is the portion from the destination branch\n=======\n...\n...\nthis is the portion from the source branch\n\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; branch-name\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAll the lines between \u003ccode\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; HEAD\u003c/code\u003e and \u003ccode\u003e=======\u003c/code\u003e are the conflicting lines from the base branch and all lines between \u003ccode\u003e=======\u003c/code\u003e and \u003ccode\u003e\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; branch-name\u003c/code\u003e are the conflicting lines from the \u003ccode\u003e\u0026lt;branch-name\u0026gt;\u003c/code\u003e branch. Here you can discard the set of conflicting lines of your choice and then delete the conflict markers (\u003ccode\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; HEAD\u003c/code\u003e, \u003ccode\u003e=======\u003c/code\u003e, and \u003ccode\u003e\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; branch-name\u003c/code\u003e). After you do this, add and commit your changes so you can merge the branches without any issues.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eNote: If there are multiple conflicts in the same file, each conflict is surrounded by conflict markers and it is your resposibility to resolve each conflict individually and remove all the conflict markers before you attempt to merge again.\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eKeep your local repo up to date\u003c/h2\u003e\n\u003cp\u003eWhen you are collaborating with several people on a project, it is important that you are always up to date with the changes others are making to the project. Not only will this ensure that you are always working with the latest version of the project, but it will also help reduce merge conflicts!\u003c/p\u003e\n\u003cp\u003eThus your local branches can merge in changes from remote repository branches just like they can do for local branches! To update a list of available branches at a remote we use: \u003ccode\u003egit fetch \u0026lt;remote-name\u0026gt;\u003c/code\u003e. Note this only updates the list of branches from remote repositories and not the local branches themselves. If you want to update the local branches, you have to merge. To give you a preview of what merging a remote branch workflow looks like:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ git fetch origin \n$ git checkout add-preprocessing-and-normalization \n$ git merge origin/laurens-preprocessing \n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAnd now our local \u003ccode\u003eadd-preprocessing-and-normalization\u003c/code\u003e has Lauren's ideas woven into it.\u003c/p\u003e\n\u003cp\u003eAlternatively, as a shorthand, you can fetch and then automatically merge the same-named branch from the remote using \u003ccode\u003egit pull \u0026lt;remote-name\u0026gt; \u0026lt;branch-name-to-merge-in\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003eExplain the motivation of the \"Golden Practices\"\u003c/h2\u003e\n\u003cp\u003eAs developers we try to make sure that everyone has a clean place to start from: be that for writing a new feature or fixing a bug. Branching lets us keep \u003ccode\u003emaster\u003c/code\u003e working at all times. If an emergency bug comes up, we know we have a solid foundation to build from. Feature branches also help us look at \u003ccode\u003egit log\u003c/code\u003e and see what the intention of a feature was.\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eGit is a complex tool, and these tools are just scratching the surface for collaborating with people. These workflows are just being introduced to you -- and it may be challenging for the time being. You'll have lots of time to practice them and get used to what each command does. Don't try to cram it all in at once; instead just start to get an understanding of what is at your disposal.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"http://imgs.xkcd.com/comics/git.png\" alt=\"XKCD Git\"\u003e\u003c/p\u003e\n\u003cp\u003eImage courtesy of \u003ca href=\"https://www.xkcd.com/\"\u003exkcd\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eDo not do as stick man suggests!\u003c/em\u003e\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\n\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" title=\"Thumbs up!\" alt=\"thumbs up\" data-repository=\"dsc-git-branches\"\u003e\u003cimg id=\"thumbs-down\" title=\"Thumbs down!\" alt=\"thumbs down\" data-repository=\"dsc-git-branches\"\u003e\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-branches/issues/new\"\u003eTell us here!\u003c/a\u003e\u003c/h5\u003e\n\u003c/footer\u003e","frontPage":false},{"exportId":"oauth-open-authorization","title":"OAuth - Open Authorization","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-oauth-open-authorization\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-oauth-open-authorization/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003ePerhaps the most common thread among all APIs available on the web is the need to \u003cstrong\u003e\u003cem\u003eauthenticate\u003c/em\u003e\u003c/strong\u003e yourself to prove you are who you say are. This is a major security point for web APIs, and it's no surprise that a standard protocol has evolved to help make authenticating users simple and safe. This authentication protocol is called \u003cstrong\u003e\u003cem\u003eOAuth\u003c/em\u003e\u003c/strong\u003e, and it provides a simple, easy integration for multi-user applications, such as web APIs, so that they can add authentication capabilities to their API in a simple, streamlined way. From our side, this makes life easy because it standardizes the authentication process so that we don't have to worry about many different authentication protocols for every different service. In this lesson, we'll look into OAuth, learn a little about how it works, and explore the benefits OAuth offers. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the role OAuth plays when working with a 3rd party API\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhat is OAuth?\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eOAuth stands for Open Authorization.\u003c/strong\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eOAuth\u003c/em\u003e\u003c/strong\u003e is an open-source protocol created to allow the creators of APIs and other online services to easily let them share private data or assets with users. One of the biggest challenges of building multi-user applications is making sure that you only give people access to the data and functionality they're supposed to have. OAuth provides a framework for allowing authenticated access, but without the risk of having to share the original login credentials such as a password.  The OAuth protocol was created in 2010 and was the brainchild of major tech companies such as Google and Twitter. It's now the most popular open standard for user authentication, is used by almost all of the major players in the tech world, such as Netflix, Amazon, Facebook, and more!\u003c/p\u003e\n\n\u003ch3\u003eThe Steps of OAuth\u003c/h3\u003e\n\n\u003cp\u003ePrior to using OAuth, we must also register our application with the authorizer and get our \u003cstrong\u003ecredentials\u003c/strong\u003e to use during the process. We need to set up some information about the application, like the app's name or website, and most importantly,‚Ää\u003cstrong\u003ea redirect URI\u003c/strong\u003e. The authorizer later uses this to contact the requesting app and tell them that the user said yes. \u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eA URI (Uniform Resource Identifier) is a string that refers to a resource. The most common are URLs, which identify the resource by giving its location on the Web.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAfter registration, The first step is the \u003cstrong\u003eauthorization\u003c/strong\u003e. Here, we send our users to the authorization server to ask for some permissions with our scope (permissions) that we would like to have. The user can see everything being requested on his behalf and confirm that they would like to grant our application access for those permissions.\u003c/p\u003e\n\n\u003cp\u003eThe second step is the \u003cstrong\u003eredirect\u003c/strong\u003e. Redirect URIs are a critical part of the OAuth flow. After a user successfully authorizes their application, the authorization server then redirects the user back to the app with an \u003cstrong\u003eauthorization code\u003c/strong\u003e in the URL. Because the redirect URL will contain sensitive information, it is critical that the service doesn‚Äôt redirect the user to arbitrary locations. The authorization code is used by our application in the final act of getting the access token. \u003c/p\u003e\n\n\u003cp\u003eThe final step is \u003cstrong\u003eacquisition\u003c/strong\u003e. This is where we finally receive our \u003cstrong\u003eaccess token\u003c/strong\u003e from the service provider so we can process API requests for our user. We use the authorization code we received in the redirect to our redirect url and our own application secret (which is acquired during initial registration) in order to get our user‚Äôs access token. The access token can then be used to make API calls on behalf of our user.\u003c/p\u003e\n\n\u003cp\u003eThis architecture is summarized in the image below:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-oauth-open-authorization/master/images/new_oa3.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe following example shows a scenario where you may want to access a user's Dropbox account for storing photo/media as a part of the service you provide. \u003c/p\u003e\n\n\u003ch2\u003eOAuth with DropBox for Single-Sign-On (SSO)\u003c/h2\u003e\n\n\u003cp\u003eIf you've ever used your Facebook or Google account to log in to a 3rd party website or app, then you've used OAuth--OAuth is what makes this sort of \u003cstrong\u003e\u003cem\u003eSingle-Sign-On\u003c/em\u003e\u003c/strong\u003e or \u003cstrong\u003e\u003cem\u003eSSO\u003c/em\u003e\u003c/strong\u003e ability possible. To get a feel for how OAuth makes this possible, let's look at a real-world example--giving Dropbox access to the photos app on your phone or computer!\u003c/p\u003e\n\n\u003ch3\u003eRegistering with OAuth and Using SDKs\u003c/h3\u003e\n\n\u003cp\u003eBefore an application can be used with OAuth, that application must first be \u003cem\u003eregistered\u003c/em\u003e with OAuth. This is a process handled by the team creating the Application itself, and not something we need to worry about as users. For instance, in order for the Photo Gallery app on our Macbook to have access to Dropbox, the team behind this software at Apple will have taken the time to register their app, provide the name of it, set the permissions it will need, and other things like that. The good news is that in most cases, we don't need to write the actual code that allows our application to interface with the service we're connecting to--major companies usually create \u003cstrong\u003e\u003cem\u003eSoftware Development Kits\u003c/em\u003e\u003c/strong\u003e or \u003cstrong\u003e\u003cem\u003eSDKs\u003c/em\u003e\u003c/strong\u003e that we can drop into our application and use as a library to add functionality like SSO with our Facebook account or the ability to access files in our Dropbox account. \u003c/p\u003e\n\n\u003ch3\u003eThe OAuth Process\u003c/h3\u003e\n\n\u003cp\u003eIn order for our app to access our users' Dropbox accounts, the following steps need to happen:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eA user must authenticate with Dropbox, verifying their identity. \u003c/li\u003e\n\u003cli\u003eThe user must explicitly give app permission to access their Dropbox (you've probably seen these sorts of popups before when connecting apps to one another on your phone).\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eOne quick technical note: Dropbox (and most other online services) actually use \u003cstrong\u003eOAuth 2\u003c/strong\u003e specifications. \u003ca href=\"https://oauth.net/2/\"\u003eDetails on OAuth2 can be viewed at the official website\u003c/a\u003e. In practice, most people just call it OAuth for short, but there is technically a difference between OAuth and OAuth 2 in terms of how they work and what they can do. \u003c/p\u003e\n\n\u003cp\u003eOnce the user has completed signing in and verifying permissions, the OAuth process returns an \u003cstrong\u003e\u003cem\u003eAccess Token\u003c/em\u003e\u003c/strong\u003e to our application. \u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eAn access token is a special string generated by authorizer that we need to send with \neach subsequent API request to uniquely identify both the app and the  user.\u003c/strong\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eYou can think of an access token as a secret code that identifies our HTTP requests as coming from the actual user that has signed in and authenticated themselves. \u003c/p\u003e\n\n\u003cp\u003eFor the remainder of this lesson, we'll borrow some example graphics and explanations from Dropbox's amazing \u003ca href=\"https://www.dropbox.com/developers/reference/oauth-guide\"\u003eOAuth Guide\u003c/a\u003e, which provides a detailed explanation of exactly how OAuth works with Dropbox. We're only interested in the broad strokes of this as an example of how it all works, but if you have time, take a look at the full guide--it's quite informative and very easy to understand! \u003c/p\u003e\n\n\u003cp\u003eHave a look at an example scenario for an Image/gallery app that wants to access its users' Dropbox accounts for accessing or storing new images.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-oauth-open-authorization/master/images/oa1.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe key benefit of this approach is that our app doesn't need to store or transmit the user's Dropbox password. The user will be redirected to Dropbox to authorize our app to access their Dropbox data. After the user has approved our app, they'll be sent back to the app with an authorization code. At this point, our app will exchange the authorization code for an access token which can be used to make subsequent requests to the Dropbox API for downloading/uploading contents, etc. OAuth also allows the user to authorize only a limited set of permissions and the user may choose to stop access at any time. This makes OAuth a safer and more secure form of API authorization for end users.\u003c/p\u003e\n\n\u003ch2\u003eDropbox access for web apps\u003c/h2\u003e\n\n\u003cp\u003eIf you've used SSO features before or connected apps to other apps on your smartphone, then you're probably familiar with the overall workflow of how OAuth takes users through the process of authenticating. \u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eThe application redirects the user to a page to sign in to the account they're using, such as redirecting to the Facebook login page when you click \"Login with Facebook\" in a 3rd party app or game. \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe User signs in, and explicitly provides permissions to the application or game to connect to their account--in our example, this would mean giving the Photo Gallery app on our Macbook explicit permission to access our Dropbox account. \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe user is given an access code and redirected back to the original application. The application then signs in, and exchanges the access code for a more permanent \u003cstrong\u003e\u003cem\u003eAccess Token\u003c/em\u003e\u003c/strong\u003e that it can store for all subsequent connections to the service that it has authenticated with--this is the reason why our 3rd party apps can stay signed in and connected with things like our Facebook or Dropbox accounts, so that we don't have to reauthenticate every time we sign into the app!\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eNote that this request to exchange the authorization code for an access token takes place behind-the-scenes with a call to the /token API endpoint and is not visible to your end users. This setup is shown in the image below, which comes from the Dropbox OAuth Guide linked above.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-oauth-open-authorization/master/images/oa2.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eThe Benefits of Using OAuth\u003c/h2\u003e\n\n\u003cp\u003eNow that we understand how OAuth works, let's think about why it's useful.  Before OAuth, authentication meant \u003cstrong\u003e\u003cem\u003eDirect Authentication\u003c/em\u003e\u003c/strong\u003e through an HTTP request, where the user is prompted for a username and password. This sort of Basic Authentication is still used in plenty of places, as a primitive kind of API authentication for server-side applications: instead of sending a username and password to the server with each request, the user sends an API key ID and secret. Before OAuth, sites prompted users to enter their username and password directly into a form and sites would log into the user account.\u003c/p\u003e\n\n\u003cp\u003eWhat makes OAuth so special and so effective is that it is a \u003cstrong\u003e\u003cem\u003eDelegated\u003c/em\u003e\u003c/strong\u003e authorization framework for RESTful APIs.  This means that it allows apps to obtain limited access (scopes) to a user‚Äôs data without giving away a user‚Äôs password--think about every HTTP request an app makes when it needs information from a connected Facebook account. It would be a major security risk if each of these HTTP requests still had to contain a username and password to verify that the HTTP request should have access to a certain account. By using an OAuth access token,  it allows us to decouple authentication (proving we are who we say we are) and authorization (getting permissions for all we need to do). \u003c/p\u003e\n\n\u003ch2\u003eFurther reading\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://oauth.net/2/\"\u003eOAuth 2.0\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://medium.freecodecamp.org/how-to-dance-the-oauth-a-step-by-step-lesson-fd2364d89742\"\u003eHow to dance the OAuth: a step-by-step lesson\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://medium.com/square-corner-blog/oauth-wherefore-art-thou-b7034098a0fd\"\u003eOAuth, wherefore art thou?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we looked at the OAuth process for gaining access to user-owned resources. We saw how we authorize our apps to access resources with a high level of confidentiality and security that OAuth offers. We looked at an example of how this might work with the Dropbox API and also some extra reading to see more examples of this process. Next, we'll put this into practice by seeing how this process works with the Yelp API.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-oauth-open-authorization\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-oauth-open-authorization\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-oauth-open-authorization/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"nosql-databases-introduction","title":"NoSQL Databases - Introduction","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eBy now, you've dug pretty deep into SQL and relational databases. In this lesson, we'll learn about NoSQL databases, which have become increasingly popular because they can store data that don't fit the traditional \"tabular\" views. \u003c/p\u003e\n\n\u003ch2\u003eNoSQL Databases\u003c/h2\u003e\n\n\u003cp\u003eYou're now familiar with relational databases, how they work, and how to use them to store and retrieve data. However, relational databases and SQL are only part of the picture when it comes to databases -- while their structure and organization is great for tabular data (data that fits in a table), there are plenty of situations where data just doesnt work well as a table. We'll begin this section by exploring some of those situations, and look at some of options out there for databases that don't use a relational format. \u003c/p\u003e\n\n\u003ch2\u003eMongoDB\u003c/h2\u003e\n\n\u003cp\u003eOnce we've gotten the lay of the land, we'll get some hands on experience with one of the most popular NoSQL variants on the market today, MongoDB! We'll start by installing MongoDB on our machine, and then we'll add some data to it, so that we can learn to store data and write queries using MongoDB. By the end of this section, you'll be able to do all the same things in MongoDB as you can in SQLite3!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eGet ready! In addition to querying SQL databases; by the end of this section, you will be able to create, update, and retrieve data from a popular NoSQL database, \u003cstrong\u003eMongoDB\u003c/strong\u003e! \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-nosql-databases-section-intro\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-nosql-databases-section-intro\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-intro/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"git-stash-lab","title":"Git Stash - Lab","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-stash-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-stash-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eYou've started to see some of the awesome power of git as a tool for version control and collaboration. Sometimes, workflows aren't quite as linear or straightforward as those examples we've discussed thus far. For example, if both the local and remote versions of a repository have been updated at the same time, you may encounter merge conflicts! Essentially, Git is unsure of which changes to incorporate if both versions of the repository have changed the same line of the same file. In these cases, \u003ccode\u003egit stash\u003c/code\u003e can be a valuable tool: it allows you to \u003cem\u003estash\u003c/em\u003e away your changes for later use!\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse \u003ccode\u003egit stash\u003c/code\u003e to store changes to files\u003c/li\u003e\n\u003cli\u003eIdentify and fix merge conflicts when merging branches\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eGetting started\u003c/h2\u003e\n\u003cp\u003eSince we're doing another Git investigation, let's start by working from our previously created \u003ccode\u003egit\u003c/code\u003e repository from \u003cem\u003eGit Merge - Lab\u003c/em\u003e.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCheck \u003ccode\u003egit status\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eHopefully, you should see the usual:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eOn branch master\nnothing to commit, working tree clean\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIf not, add and commit your changes and recheck \u003ccode\u003egit status\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003eMake some changes\u003c/h2\u003e\n\u003cp\u003eNow that we have a clean working directory, let's muck things up! (Sorry if you already had untracked changes and cleaned them up; it's good practice at the very least!)\u003c/p\u003e\n\u003cp\u003eOnce again, let's modify \u003ccode\u003enumbers.py\u003c/code\u003e. Open up the file from the command line with \u003ccode\u003enano numbers.py\u003c/code\u003e and modify the script so that it prints the fourth power of numbers. The script should look like this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"python\"\u003efor i in range(10):\n    print(i**4)    \n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003eCheck \u003ccode\u003egit status\u003c/code\u003e again\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThis time, you should see something like:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eOn branch master\nChanges not staged for commit:\n  (use \"git add \u0026lt;file\u0026gt;...\" to update what will be committed)\n  (use \"git checkout -- \u0026lt;file\u0026gt;...\" to discard changes in working directory)\n\n    modified:   numbers.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eTry out \u003ccode\u003egit stash\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eNow for our new wizardry! Execute the command \u003ccode\u003egit stash\u003c/code\u003e. Afterward, do another \u003ccode\u003egit status\u003c/code\u003e to see what's going on.\u003c/p\u003e\n\u003ch3\u003eFurther exploration\u003c/h3\u003e\n\u003cp\u003eYou should see that we're back to a clean working tree. You can further see this by using the bash command \u003ccode\u003ecat\u003c/code\u003e which will print the contents of a file to the command line, so in this case, try out \u003ccode\u003ecat numbers.py\u003c/code\u003e. You should see that our file has reverted back to the previous version where we were actually cubing our numbers.\u003c/p\u003e\n\u003cp\u003eSo what happened to our changes? Where did they go? We stashed them. To see stashes, you can use the command \u003ccode\u003egit stash list\u003c/code\u003e. Try it out now.\u003c/p\u003e\n\u003cp\u003eIf you want a few more details about the stash, you can use \u003ccode\u003egit stash show\u003c/code\u003e. Again, give it a try.\u003c/p\u003e\n\u003cp\u003eFinally, if you want to re-implement your stashed changes you can use \u003ccode\u003egit stash apply\u003c/code\u003e. Let's go ahead and reapply our changes (raising numbers to the fourth power rather than the third).\u003c/p\u003e\n\u003cp\u003eOnce you do that, you'll see a message as if we did \u003ccode\u003egit status\u003c/code\u003e, and you'll see that we once again have changes that have not been added or committed. What's more, while we've applied our stash, the stash still exists (you can see this once again with \u003ccode\u003egit stash list\u003c/code\u003e).\u003c/p\u003e\n\u003ch2\u003eSee all of the commit history\u003c/h2\u003e\n\u003cp\u003eAs a friendly reminder, you can see all of the commit history to date with \u003ccode\u003egit log --graph\u003c/code\u003e.\u003c/p\u003e\n\u003ch2\u003eCreate a new branch\u003c/h2\u003e\n\u003cp\u003eNext, we're going to briefly investigate some merge conflicts. These occur when you have two versions of the same file which both have the same line modified. This typically occurs when merging branches as we cleanly did in the last lab. Here, we'll cause the same behavior to occur by modifying our new branch and then attempting to apply our stashed changes.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a new branch called \u003ccode\u003ebeta\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eOn your new branch, modify \u003ccode\u003enumbers.py\u003c/code\u003e to raise numbers to the 5th power\u003c/li\u003e\n\u003cli\u003eOnce you modify the script, take a look at the state of affairs with \u003ccode\u003egit status\u003c/code\u003e. Then add and commit your changes with an appropriate description\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eMerge Conflicts\u003c/h2\u003e\n\u003cp\u003eNow for the fun part. We're going to create a merge conflict. Execute \u003ccode\u003egit stash apply\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eYou should be presented with a message:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eAuto-merging numbers.py\nCONFLICT (content): Merge conflict in numbers.py\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWhat's more, if you open up \u003ccode\u003enumbers.py\u003c/code\u003e with \u003ccode\u003enano numbers.py\u003c/code\u003e, you'll see some bizarre changes:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-stash-lab/master/images/stash_merge_conflict.png\" width=\"750\"\u003e\u003c/p\u003e\n\u003cp\u003eSo what do all of these symbols mean?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; Updated Upstream\u003c/code\u003e - the beginning of the original branch (beta)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e=======\u003c/code\u003e - the end of the original branch/the beginning of the branch being merged in (our stashed changes)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; Stashed changes\u003c/code\u003e - the end of our stashed changes\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThis is because our new branch and the stashed changes modified the same line of the same file. Specifically, both modified line 2 of the \u003ccode\u003enumbers.py\u003c/code\u003e file. As such, Git is unsure of which version of line 2 we wish to incorporate. It has highlighted this for us, and it‚Äôs now our job to manually modify the file to resolve these conflicts, keeping the version we are interested in.\u003c/p\u003e\n\u003cp\u003eAs a further note, this is why development would generally be separated by files, or at the very least, sections of files; we can avoid merge conflicts and continue to collaborate together working seamlessly on a project.\u003c/p\u003e\n\u003cp\u003eYour \u003ccode\u003enumbers.py\u003c/code\u003e file should now be back to numbers raised the 4th degree as such:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"python\"\u003efor i in range(10):\n    print(i**4)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e(To do this, we simply manually opened up the file with nano and resolved the merge conflicts, including removing the notes left for us by Git.)\u003c/p\u003e\n\u003cp\u003eChecking \u003ccode\u003egit status\u003c/code\u003e, we now see that we have once again modified \u003ccode\u003enumbers.py\u003c/code\u003e. As usual, we can now add and commit those changes to our version history.\u003c/p\u003e\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://www.git-scm.com/docs/git-stash\"\u003eGit Stash Documentation\u003c/a\u003e\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eIn this lesson, we took a look at \u003ccode\u003egit stash\u003c/code\u003e as well as merge conflicts, and how to resolve them. \u003ccode\u003egit stash\u003c/code\u003e is often useful when you need to quickly store away your changes and don't wish to create a new branch; you intend to quickly reintroduce these changes but need to put them to the side for a moment. This can be helpful if the remote repository has been updated and you first need to fetch and pull it, but have already also made some changes locally. In this and other cases, it's often easiest to first just stash the changes and then apply them subsequently. Similarly, we also saw that stashed changes can be applied to multiple branches. Overall, the more you use Git and its myriad of tools, the more options you'll have for organizing and synchronizing your development process.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\n\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" title=\"Thumbs up!\" alt=\"thumbs up\" data-repository=\"dsc-git-stash-lab\"\u003e\u003cimg id=\"thumbs-down\" title=\"Thumbs down!\" alt=\"thumbs down\" data-repository=\"dsc-git-stash-lab\"\u003e\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-stash-lab/issues/new\"\u003eTell us here!\u003c/a\u003e\u003c/h5\u003e\n\u003c/footer\u003e","frontPage":false},{"exportId":"data-analysis-in-pandas-recap","title":"Data Analysis in Pandas - Recap","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-analysis-pandas-recap\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-analysis-pandas-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-analysis-pandas-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003cp\u003eThis short lesson summarizes the topics we covered in this section and why they'll be important to you as a data scientist.\u003c/p\u003e  \u003ch2\u003eKey Takeaways\u003c/h2\u003e  \u003cp\u003eIn this section, we spent time getting comfortable with pandas and getting some more practice with exploratory data analysis. Some of the key takeaways:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eFor non-trivial datasets you'll usually want to store your data in pandas data structures rather than native Python lists and dictionaries \u003c/li\u003e \u003cli\u003ePandas has a range of great features for easily importing data from anything from a CSV, an Excel file, JSON, SQL, or a Python dictionary\u003cbr\u003e\u003c/li\u003e \u003cli\u003ePandas \u003ccode\u003eSeries\u003c/code\u003e and \u003ccode\u003eDataFrame\u003c/code\u003e classes have a bunch of powerful methods for munging data \u003c/li\u003e \u003cli\u003ePandas also has a range of methods for applying descriptive statistics to Series and DataFrames \u003c/li\u003e \u003cli\u003eFinally, by wrapping Matplotlib, Pandas also provides some very convenient plotting capabilities for quickly visualizing data \u003c/li\u003e \u003cli\u003eWe also got some experience working with the Ames Housing dataset, and set up accounts on Kaggle - a really useful resource for practicing data scientists.\u003c/li\u003e \u003c/ul\u003e","frontPage":false},{"exportId":"dealing-with-missing-data","title":"Dealing with Missing Data","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dealing-missing-data\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dealing-missing-data/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn about various strategies for detecting and dealing with missing data using Pandas.  \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIdentify missing values in a dataframe using built-in methods \u003c/li\u003e\n\u003cli\u003eExplain why missing values are a problem in data science \u003c/li\u003e\n\u003cli\u003eEvaluate and execute the best strategy for dealing with missing, duplicate, and erroneous values for a given dataset \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy is missing data a problem?\u003c/h2\u003e\n\n\u003cp\u003eMissing data can be problematic during the Data Science process because \u003ccode\u003eNaN\u003c/code\u003e values in the dataset limit our ability to do important things like:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eConvert data types\u003c/li\u003e\n\u003cli\u003eCalculate summary statistics\u003c/li\u003e\n\u003cli\u003eVisualize data\u003c/li\u003e\n\u003cli\u003eBuild models\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eDetecting missing data\u003c/h2\u003e\n\n\u003cp\u003eThere are two main ways missing data is often represented in datasets.\u003c/p\u003e\n\n\u003ch3\u003e\n\u003ccode\u003eNaN\u003c/code\u003es\u003c/h3\u003e\n\n\u003cp\u003eBy default, pandas represents null values with \u003ccode\u003eNaN\u003c/code\u003e, which is short for \u003cstrong\u003e\u003cem\u003eNot a Number\u003c/em\u003e\u003c/strong\u003e.  Pandas provides many great ways for checking for null values, built right into DataFrames and Series objects.\u003c/p\u003e\n\n\u003ch4\u003eDetecting \u003ccode\u003eNaN\u003c/code\u003es\u003c/h4\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.isna()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eReturns a matrix of boolean values, where all cells containing \u003ccode\u003eNaN\u003c/code\u003e are converted to \u003ccode\u003eTrue\u003c/code\u003e, and all cells containing valid data are converted to \u003ccode\u003eFalse\u003c/code\u003e. \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.isna().sum()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSince \u003ccode\u003eTrue\u003c/code\u003e is equivalent to \u003ccode\u003e1\u003c/code\u003e and \u003ccode\u003eFalse\u003c/code\u003e is equivalent to \u003ccode\u003e0\u003c/code\u003e in Python, taking the \u003ccode\u003e.sum()\u003c/code\u003e of the DataFrame (or Series) will return the total number of \u003ccode\u003eNaN\u003c/code\u003e values in the dataset.  Pandas even breaks this down by column -- see the example output below.\u003c/p\u003e\n\n\u003ch1\u003eNumber of NaNs the in Titanic dataset by column\u003c/h1\u003e\n\n\u003cp\u003ePassengerId      0\nSurvived         0\nPclass           0\nName             0\nSex              0\nAge            177\nSibSp            0\nParch            0\nTicket           0\nFare             0\nCabin          687\nEmbarked         2\u003c/p\u003e\n\n\u003ch3\u003ePlaceholder values\u003c/h3\u003e\n\n\u003cp\u003eOften, datasets will contain missing values that are denoted by a value that seems valid to pandas.  This is very common in real-world datasets -- often, people entering the data are required to enter values that they don't actually have, so they enter an agreed-upon placeholder value.  \u003c/p\u003e\n\n\u003cp\u003eThe easiest way to deal with these is to familiarize yourself with the data dictionary that corresponds to your dataset -- any placeholder values meant to denote a \u003ccode\u003eNaN\u003c/code\u003e value will be specified here. \u003c/p\u003e\n\n\u003cp\u003eHowever, you'll encounter plenty of datasets in the real world that don't come with a data dictionary, or that fail to mention placeholder values.  \u003c/p\u003e\n\n\u003cp\u003eFollow these strategies for detecting placeholder values in your data. \u003c/p\u003e\n\n\u003ch4\u003eNumerical data\u003c/h4\u003e\n\n\u003cp\u003eNumerical columns will often represent missing values with a value that is nonsensical to the column in question.  For instance, in healthcare data, missing values in a \u003ccode\u003eWeight\u003c/code\u003e column may be using impossible values such as \u003ccode\u003e0\u003c/code\u003e or \u003ccode\u003e9999\u003c/code\u003e.  These are valid to the computer, since they are real-numbered, but are obvious to anyone analyzing the data as placeholder values.  \u003c/p\u003e\n\n\u003cp\u003eThese are the most difficult to check for, since this requires getting decently familiar with the column in question enough to notice values that are technically valid but pragmatically impossible. \u003c/p\u003e\n\n\u003cp\u003eTo detect these sorts of placeholder values, start by checking for outliers -- they are often encoded as very large numbers, or as 0 (when 0 isn't a realistic value for the column in question).  Any good placeholder value will be a value that couldn't show up in the real world.  \u003c/p\u003e\n\n\u003cp\u003eHowever, you may also find actual outliers (values that are \u003cem\u003enot impossible\u003c/em\u003e, but \u003cem\u003eoccur rarely\u003c/em\u003e). Outliers, like missing or corrupt data, can adversely effect your Machine Learning models. Some of the ways in which you can identify outliers are: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eStandard deviation\u003c/strong\u003e: If the data is normally distributed (or nearly normal), you can use three standard deviations as a cutoff point. In a normal distribution, three standard devations from the mean in both the directions cover 99.7% of the data, so any values outside this range are highly improbable, and can be safely discarded as outliers. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-dealing-missing-data/master/images/normal_sd_new.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eYou will learn more about normal distribution in a later lesson. \u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eInterquartile range (IQR)\u003c/strong\u003e: If the data is not normally distribued, you can use the same method boxplots use to determine the outliers -- all observations that lie 1.5 times the IQR (difference between the 75th and the 25th percentiles of the data) away from the median in either direction are treated as outliers. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-dealing-missing-data/master/images/new_boxplot.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIf you need a refresher on IQR, refer to the lesson on \u003cem\u003eMeasures of Dispersion\u003c/em\u003e in the \u003cem\u003eImporting and Statistical Analysis of Data\u003c/em\u003e section of Module 1.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAnother way to confirm these values is to check the \u003ccode\u003e.value_counts()\u003c/code\u003e of a column.  In a continuously-valued column, it is probably rare for one specific value to overwhelm all the others.  If, for instance, you see the same numerical value showing up a statistically improbable number of times, double-check that this value is real -- placeholder values have the potential to show up many times, but it's much less likely for real-valued numbers.  \u003c/p\u003e\n\n\u003ch4\u003eCategorical data\u003c/h4\u003e\n\n\u003cp\u003eTo detect placeholder values in categorical data, get the unique values in the column and see if there are any values that don't match up with your expectations.  Pandas provides a built-in method for this.  For instance, in the titanic dataset, we can check the unique values of the \u003ccode\u003eEmbarked\u003c/code\u003e column by typing:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Embarked'].unique()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis will return an array containing all the unique values in the dataset.  \u003c/p\u003e\n\n\u003cp\u003eNote that for categorical columns, it is much more likely to have a data dictionary to work with, since it is common to have categorical values that aren't readily understandable without a data dictionary to help us figure out what each potential category means.  \u003c/p\u003e\n\n\u003ch2\u003eStrategies for dealing with missing data\u003c/h2\u003e\n\n\u003cp\u003eDetecting missing values isn't enough -- we need to deal with them in order to move forward! We have three options for dealing with missing values -- removing them from the dataset, keeping them, or replacing them with another value. \u003c/p\u003e\n\n\u003ch3\u003eRemove\u003c/h3\u003e\n\n\u003cp\u003eThe easiest way to deal with missing values is to drop the offending rows and/or columns.  The downside to this is that we lose data in the process.  This is a valid strategy on very large datasets -- however, on smaller datasets, throwing away data may be unacceptable.  \u003c/p\u003e\n\n\u003cp\u003eThe two main strategies for dealing with missing values are to drop columns or to drop rows. For this strategy, it does not matter if we are dealing with continuous or categorical data.  \u003c/p\u003e\n\n\u003ch4\u003eDropping columns\u003c/h4\u003e\n\n\u003cp\u003eConsider the output from the titanic dataset shown previously.  The \u003ccode\u003eCabins\u003c/code\u003e column contains 687 missing values. The entire dataset only contains around 900 rows of data.  In this case, it makes more sense to just remove the \u003ccode\u003eCabins\u003c/code\u003e  column from the dataset entirely.  \u003c/p\u003e\n\n\u003cp\u003eNote that while this makes sense for the \u003ccode\u003eCabins\u003c/code\u003e column, this is not a good idea for dealing with the null values contained within the \u003ccode\u003eAge\u003c/code\u003e column. Although the \u003ccode\u003eAge\u003c/code\u003e column contains 75 missing values, the vast majority of the items in this dataset contain perfectly good information for the age column.  If we dropped this column, we would be throwing out all that information just to deal with a small subset of missing values in that column!\u003c/p\u003e\n\n\u003ch4\u003eDropping rows\u003c/h4\u003e\n\n\u003cp\u003eIn the above example, dropping all rows that contain a null value would be a very bad idea, because we would 3/4 of our data! Dropping rows makes more sense when the proportion of rows with missing values is very small compared to the size of the overall dataset -- it's okay to just throw out the missing values as long as it's not too many observations. There's no hard rule for exactly how many missing values is the right amount to throw out, and will vary project by project.  Think critically, and use your best judgment!\u003c/p\u003e\n\n\u003cp\u003eTo drop all rows containing missing values in a DataFrame, use \u003ccode\u003edataframe.dropna()\u003c/code\u003e.  Note that this returns a copy of the dataframe with the rows in question dropped -- however, you can mutate the DataFrame in place by passing in \u003ccode\u003einplace=True\u003c/code\u003e as a parameter to the method call. \u003c/p\u003e\n\n\u003ch3\u003eReplace\u003c/h3\u003e\n\n\u003cp\u003eWe can also deal with missing values by replacing them with a common value. The downside of this method is that this can introduce noise into our dataset. \u003c/p\u003e\n\n\u003ch4\u003eContinuous data\u003c/h4\u003e\n\n\u003cp\u003eFor continuous data, the best solution is to replace the missing values with the median value for that column. The median value is a good choice because it is least likely to influence the distribution of the dataset overall. If the dataset is symmetric, then the mean and the median will be the same value. If the dataset is not symmetric, then the mean is more likely to be skewed by outlier values, so the median is a better choice.  \u003c/p\u003e\n\n\u003cp\u003ePandas provides an easy way for us to replace null values. For instance, if we wanted to replace all null values in the \u003ccode\u003eFare\u003c/code\u003e column with the column median, we would type:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Fare'].fillna(df['Fare'].median())\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch4\u003eCategorical data\u003c/h4\u003e\n\n\u003cp\u003eWith categorical data, this is harder, since we don't have summary statistics to lean on such as the median or the mean. In this case, if one categorical value is much more common than others, it is a valid strategy to replace missing values with this common value. However, make sure to examine your data first! If all the categorical values are equally common, picking one to replace all the missing values may do more harm than good by skewing the distribution and introducing some false signal into your dataset.\u003c/p\u003e\n\n\u003ch3\u003eKeep\u003c/h3\u003e\n\n\u003cp\u003eSometimes, the knowledge that a value is missing can itself be informative for us.  If knowing that a value is missing tells you something, then it is often worth keeping the missing values using the following strategies. \u003c/p\u003e\n\n\u003ch4\u003eCategorical data\u003c/h4\u003e\n\n\u003cp\u003eThis one is the easiest -- just treat missing values as its own category! This may require replacing missing values with a string to denote this, as your model will still likely throw errors if the actual \u003ccode\u003eNaN\u003c/code\u003e values are not replaced. In that case, just replace the \u003ccode\u003eNaN\u003c/code\u003e values with the string \u003ccode\u003e'NaN'\u003c/code\u003e, or another string that makes it obvious that this value is \u003ccode\u003e'missing'\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch4\u003eNumerical data\u003c/h4\u003e\n\n\u003cp\u003eOften, missing values inside a continuously-valued column will cause all sorts of havoc in your models, so leaving the \u003ccode\u003eNaN\u003c/code\u003es alone isn't usually an option here.  Instead, consider using \u003cstrong\u003e\u003cem\u003eCoarse Classification\u003c/em\u003e\u003c/strong\u003e, also referred to as \u003cstrong\u003e\u003cem\u003eBinning\u003c/em\u003e\u003c/strong\u003e.  This allows us to convert the entire column from a numerical column to a categorical column by binning our data into categories. For instance, we could deal with the missing values in the \u003ccode\u003eAge\u003c/code\u003e column by creating a categorical column that separates each person into 10-year age ranges. Anybody between the ages of 0 and 10 would be a \u003ccode\u003e1\u003c/code\u003e, 11 to 20 would be a \u003ccode\u003e2\u003c/code\u003e, and so on.  \u003c/p\u003e\n\n\u003cp\u003eOnce we have binned the data in a new column, we can throw out the numerical version of the column, and just leave the missing values as one more valid category inside our new categorical column!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this section, we learned:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eStrategies for detecting \u003ccode\u003eNaN\u003c/code\u003e values in pandas\u003c/li\u003e\n\u003cli\u003eStrategies for detecting missing data denoted by place holder values\u003c/li\u003e\n\u003cli\u003eHow to deal with missing values by \u003cem\u003eRemoving\u003c/em\u003e, \u003cem\u003eReplacing\u003c/em\u003e, or \u003cem\u003eKeeping\u003c/em\u003e them!\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-dealing-missing-data\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-dealing-missing-data\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-dealing-missing-data/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"problems-data-science-can-solve","title":"Problems Data Science Can Solve","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-problems-data-science-can-solve\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-problems-data-science-can-solve/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson we will look at what data science is and the different kinds of problems that it can be used to solve. By the end of the lesson you should be able to answer which technique you would use as a professional data scientist for a particular business problem. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the problems data science can solve\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhat Problems Can Data Science Solve?\u003c/h2\u003e\n\n\u003cp\u003eCongratulations on deciding to become a data scientist! Before we dig into the details of the tools and techniques that you'll need to learn, it's important to take a little time to understand what you'll be able to do once you graduate. Here is a list of some of the common types of business problems data scientists are expected to solve. \u003c/p\u003e\n\n\u003ch2\u003e1. Regression: How much or how many?\u003c/h2\u003e\n\n\u003cp\u003eRegression analysis is used to predict a continuous value - such as the number of staff you'll need for a busy shift or the likely sale price of a house. \u003c/p\u003e\n\n\u003ch3\u003eExample:  Sales or Market Forecasts\u003c/h3\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-problems-data-science-can-solve/master/images/Image_185_forecast_corrected.png\" width=\"650\"\u003e\u003c/p\u003e\n\n\u003cp\u003eTraditional trend analysis only looks at how one business entity changes with respect to another. Regression analyses can provide insight into how an outcome will change when several other variables are modified.\u003c/p\u003e\n\n\u003ch2\u003e2. Classification: Which category?\u003c/h2\u003e\n\n\u003cp\u003eClassification is used to predict which category something will fall into. If you're trying to figure out whether a client is likely to default on a loan (i.e., default or no default) or which of your products a customer is likely to prefer, you're dealing with a classification problem.\u003c/p\u003e\n\n\u003ch3\u003eExample: Credit Rating\u003c/h3\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-problems-data-science-can-solve/master/images/credit.png\" width=\"850\"\u003e\u003c/p\u003e\n\n\u003cp\u003eCredit card companies receive hundreds of thousands of applications for new credit cards every week. These applications contain detailed information on social, economic, and personal attributes of applicants. Classification analysis can allow companies to categorize these applications based on the quality of their credit.\u003c/p\u003e\n\n\u003ch2\u003e3. Anomaly detection: Is this weird?\u003c/h2\u003e\n\n\u003cp\u003eAnomaly detection is a common data science technique used to find unusual patterns that do not conform to expected behavior. It has applications across various industries from intrusion detection (identifying strange patterns in network traffic that could signal a hack) to fraud detection in credit card transactions to fault detection in operating environments.\u003c/p\u003e\n\n\u003ch3\u003eExample: Identifying Fraud\u003c/h3\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-problems-data-science-can-solve/master/images/Image_186_fishanomaly.png\" alt=\"img\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThis approach focuses on finding \u003cstrong\u003eoutliers\u003c/strong\u003e in the data that appear to have unusual patterns. This serves as a first indication of the presence of fraudulent activity. Such approaches are also frequently applied by large social networks like Facebook, Twitter, etc.\u003c/p\u003e\n\n\u003ch2\u003e4. Recommender systems: Which item would a user prefer?\u003c/h2\u003e\n\n\u003cp\u003eRecommender systems are one of the most popular applications of data science today. They are used to predict user preferences towards a product/service. Almost every major tech company (Amazon, Netflix, Google, Facebook) has applied them in some form or the other. You might have noticed phrases like \"If you like this product, you may also like ...\", \"Users who bought this item also bought ...\", and \"Based on your preferences, we recommend following products to you ...\". You got it, these are all recommender systems in action. \u003c/p\u003e\n\n\u003cp\u003eRecommender systems can help a business retain customers by providing them with tailored suggestions specific to their needs. They can help increase sales and create brand loyalty through relevant personalization. When a customer feels as though they are understood by your brand, they are more likely to stay loyal and continue purchasing through your site.\nAccording to a recent study by McKinsey, up to 75% of what consumers watch on Netflix comes from the company‚Äôs recommender system. Retail giant Amazon credits recommender systems with 35% of their revenue. Best Buy decided to focus on their online sales, and in 2016‚Äôs second quarter they reported a 23.7% increase, thanks in part to their recommender system. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWhile you're going to learn to use a wide range of tools and techniques throughout this course, most of them will be used to predict a continuous value, to decide the most likely category for a value, to identify anomalies or to provide recommendations.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-problems-data-science-can-solve\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-problems-data-science-can-solve\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-problems-data-science-can-solve/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"bash-and-git-recap","title":"Bash and Git - Recap","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-collab-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-collab-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this section you took a look at how Git is used for collaboration as part of a development team. This started by practicing navigating directories using the command line and continued by further investigating Git commands. You also practiced creating and maintaining Git repositories including adding, committing, and pushing changes. You saw how to make multiple branches and then merge changes back into the master branch. You also saw how to navigate merge conflicts when the same line of the same file has been edited in both branches trying to be merged. Make sure you continue to head back to the PEP8 and Git documentation for clarification, review, and learn more commands and arguments or style suggestions.\u003c/p\u003e\n\u003ch2\u003eBash and the command line\u003c/h2\u003e\n\u003cp\u003eRecall some of our primary tools for navigating the command line: \u003ccode\u003ecd\u003c/code\u003e, \u003ccode\u003els\u003c/code\u003e, \u003ccode\u003epwd\u003c/code\u003e, \u003ccode\u003emkdir\u003c/code\u003e, and \u003ccode\u003enano\u003c/code\u003e. You can use \u003ccode\u003ecd ..\u003c/code\u003e to move up a directory level and \u003ccode\u003ecd ~/Documents\u003c/code\u003e for folders starting at the user's home directory. You can use \u003ccode\u003els -a\u003c/code\u003e to view hidden files and \u003ccode\u003els -la\u003c/code\u003e for a long listing of all files. (Again the \u003ccode\u003el\u003c/code\u003e argument is for long form and the \u003ccode\u003ea\u003c/code\u003e in both cases for all files, including those beginning with \u003ccode\u003e.\u003c/code\u003e, indicating that they are hidden.) You can also make directories with the \u003ccode\u003emkdir\u003c/code\u003e command. You saw how to use \u003ccode\u003enano\u003c/code\u003e to make and edit files from the command line. Other editors such as emacs and vim can be worthwhile if you are doing more substantial command line editing.\u003c/p\u003e\n\u003ch2\u003eGit\u003c/h2\u003e\n\u003cp\u003eRemember that Git was not only designed as a version control system, but a means for collaborative development. It was originally released in 2005 by Linus Torvalds, to help facilitate development of the Linux kernel. While there is still much to learn about Git, you saw some of the primary concepts all developers interact with when using Git to collaborate on projects.\u003c/p\u003e\n\u003ch3\u003eGit commands\u003c/h3\u003e\n\u003cp\u003eYou've seen a decent amount of Git commands including \u003ccode\u003egit add\u003c/code\u003e, \u003ccode\u003egit commit\u003c/code\u003e, \u003ccode\u003egit branch\u003c/code\u003e, \u003ccode\u003egit checkout\u003c/code\u003e, and \u003ccode\u003egit merge\u003c/code\u003e. Also its important to know how to access documentation so that you can both review and extend your knowledge. For example, to see a list of git commands in general, start with \u003ccode\u003egit --help\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-collab-recap/master/images/git_help.png\" width=\"700\"\u003e\u003c/p\u003e\n\u003cp\u003eYou can also review individual commands with 'git help ' such as \u003ccode\u003egit help add\u003c/code\u003e (press \u003ccode\u003eq\u003c/code\u003e to quit the documentation.)\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-collab-recap/master/images/git_help_add.png\" width=\"1200\"\u003e\u003c/p\u003e\n\u003cp\u003eIn the synopsis, you can see optional parameters such as in \u003ccode\u003egit add --all\u003c/code\u003e which you previously used before.\u003c/p\u003e\n\u003cp\u003eSimilarly, for the commit documentation, take a look at \u003ccode\u003egit help commit\u003c/code\u003e (and subsequently use \u003ccode\u003eq\u003c/code\u003e to quit.)\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-collab-recap/master/images/git_help_commit.png\" width=\"1000\"\u003e\u003c/p\u003e\n\u003cp\u003eHere, you might notice additional arguments that you can begin to use, such as \u003ccode\u003ea\u003c/code\u003e, which you see listed in the synopsis. Then, if you look under the options header, you will see a full description.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-collab-recap/master/images/git_help_commit_options.png\" width=\"900\"\u003e\u003c/p\u003e\n\u003cp\u003eSo for example, you could combine this with the \u003ccode\u003em\u003c/code\u003e option as \u003ccode\u003egit commit -am \"your commit message\"\u003c/code\u003e. (Indeed this is a useful shortcut; by doing this you can bypass the \u003ccode\u003egit add\u003c/code\u003e command in your workflow in updating files being tracked by Git.)\u003c/p\u003e\n\u003cp\u003eAt some point, you will also run into some trouble with Git and have merge conflicts or other idiosyncrasies between versions of your code. You have seen how Git annotates merge conflicts, and can also use \u003ccode\u003egit stash\u003c/code\u003e to temporarily store changes.\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eOnce again, preliminary tools such as the command line and Git are foundational to managing projects and maintaining code. Similarly, knowing how to access further information quickly is also an indispensable soft skill. Be sure to continue to organize work, modularize, and use version control. Also, keep PEP8 in mind and be thoughtful of how you organize, comment, and structure your code. All of these will make you a better programmer and Data Scientist.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\n\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" title=\"Thumbs up!\" alt=\"thumbs up\" data-repository=\"dsc-git-collab-recap\"\u003e\u003cimg id=\"thumbs-down\" title=\"Thumbs down!\" alt=\"thumbs down\" data-repository=\"dsc-git-collab-recap\"\u003e\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-collab-recap/issues/new\"\u003eTell us here!\u003c/a\u003e\u003c/h5\u003e\n\u003c/footer\u003e","frontPage":false},{"exportId":"the-client-server-model","title":"The Client Server Model","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-the-client-server-model\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-the-client-server-model/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll look at the relationship between clients and servers.  The Client/server architecture offers an unlimited number of communication possibilities, and it is what makes the Internet \u003cstrong\u003epossible\u003c/strong\u003e. We'll cover a basic understanding of the client/server model which will later be used for calling an API. It is beyond the scope of this lesson to cover an exhaustive resource for client/server architecture--instead, we'll focus on the primary principles of client/server communication.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eMap the client server model process\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eThe Client Server Model\u003c/h2\u003e\n\n\u003cp\u003eThe client server model of communication technologies is a set of distributed application architecture and network operations that manages the workloads between the providers of a service, called \u003cstrong\u003eservers\u003c/strong\u003e, and service requester, called \u003cstrong\u003eclients\u003c/strong\u003e. \u003c/p\u003e\n\n\u003cp\u003eAlthough the client server model can be used by programs within an individual computer, we'll focus on the aspect that deals with networked environments. In this case, the client set up a connection to the server over a local area network (LAN), a wide-area network (WAN) such as the Internet. Have you ever played Xbox Live or used the PlayStation Network? Your Xbox One is the client, and when it logs into the network, it contacts the Xbox Live servers to retrieve gaming resources like updates, video, and game demos.\u003c/p\u003e\n\n\u003cp\u003eA typical multi-layered client server architecture that most of us use in everyday life can be shown as below. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-client-server-model/master/images/new_cs3.png\" width=\"400\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eWhat is a Client?\u003c/h3\u003e\n\n\u003cp\u003eA client is a computer hardware device or software that requests a service made available by a server. The server is often (but not always) located on a separate physical computer.\u003c/p\u003e\n\n\u003ch3\u003eWhat is a Server?\u003c/h3\u003e\n\n\u003cp\u003eA server is a physical computer dedicated to run services to serve the needs of clients. Depending on the service that is running, it could be a file server, database server, home media server, print server, email server or a \u003cstrong\u003eweb server\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch2\u003eClient/Server Model on the Web\u003c/h2\u003e\n\n\u003cp\u003eThe idea of a Client and Server communicating over a network is what makes viewing websites  and interacting with Web applications (like Gmail, Facebook, LinkedIn) possible. This model is a way to describe the give-and-take relationship between the client and server in a Web application and governs how information passes between computers. \u003c/p\u003e\n\n\u003cp\u003eLet's see what a basic web application looks like that takes in a request from a web client and serves accordingly. \u003c/p\u003e\n\n\u003ch2\u003eWeb Applications\u003c/h2\u003e\n\n\u003cp\u003eA Web application (Web app) is an application program that is stored on a remote server and delivered over the Internet through a browser interface. Web services are Web apps by definition and many, although not all, websites contain Web apps. Any website component that performs some function for the user qualifies as a Web app. Google‚Äôs search engine is a web app, yet its root concept is hardly different from a phone directory that enables you to search for names or numbers. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-client-server-model/master/images/new_apps.png\" width=\"400\"\u003e\u003c/p\u003e\n\n\u003cp\u003eMost web apps actually use a browser interface for interaction, i.e. end users request access and request information/service from these applications through a modern web browser interface. There are hundreds of ways to build and configure a Web application but most of them follow the same basic structure: a web client, a web server, and a database.\u003c/p\u003e\n\n\u003ch3\u003eThe Web client\u003c/h3\u003e\n\n\u003cp\u003eThe client is what the end user interacts with. \"Client-side\" code is actually responsible for most of what a user actually sees. For requesting some information as a web page, the client side may be responsible for: includes:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e Defining the structure of the Web page \u003c/li\u003e\n\u003cli\u003e Setting the look and feel of the Web page \u003c/li\u003e\n\u003cli\u003e Implementing a mechanism for responding to user interactions (clicking buttons, entering text, etc.)\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eMost of these tasks are managed by HTML/CSS/JavaScript-like technologies to structure the information, style of the page and provide interactive objects for navigation and focus. \n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-client-server-model/master/images/new_clientserver.png\" width=\"400\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eThe Web Server\u003c/h3\u003e\n\n\u003cp\u003eA web server in a Web application is what listens to requests coming in from the clients. When you set up an HTTP (HyperText Transfer Protocol - Language of the internet) server, we set it up to listen to a port number. A port number is always associated with the IP address of a computer. You can think of ports as separate channels on a computer that we can use to perform different tasks: one port could be surfing \u003ca href=\"http://www.facebook.com\"\u003ewww.facebook.com\u003c/a\u003e while another fetches your email. This is possible because each of the applications (the Web browser and the email client) use different port numbers.\u003c/p\u003e\n\n\u003cp\u003eOnce you've set up an HTTP server to listen to a specific port, the server waits for client requests coming to that specific port. After authenticating the client, the server performs any actions stated by the request and sends any requested data via an HTTP response.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-client-server-model/master/./images/new_server.png\" width=\"800\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eThe Database\u003c/h3\u003e\n\n\u003cp\u003eDatabases are the foundations of Web architecture. An SQL/NoSQL or a similar type of database is a place to store information so that it can easily be accessed, managed, and updated. If you're building a social media site, for example, you might use a database to store information about your users, posts, comments, etc. When a visitor requests a page, the data inserted into the page comes from the site's database, allowing real-time user interactions with sites like Facebook or apps like Gmail.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-client-server-model/master/images/new_CSModes.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn the example image above, we can see the above-mentioned setup in action. A browser sends a request to a web server by calling its domain i.e. \u003ca href=\"http://www.google.com\"\u003ewww.google.com\u003c/a\u003e. Based on who the requester is, the server collects necessary information for an SQL database. This information is wrapped as HTML code and sent back to the client. The web browser reads the structuring and styling information embedded within HTML and displays the page to the user accordingly. \u003c/p\u003e\n\n\u003cp\u003eThere is a lot of details on client/server architectures and how they manifest themselves on the Internet. We'll focus a bit more on the ideas highlighted in this section by setting up a client and making requests in Python. These skills will help us request data from the servers for our analytical experiments. here are some extra resources for you if you want to dig deeper into the client server model and how it is set up for many different architectures. \u003c/p\u003e\n\n\u003ch2\u003eFurther Reading\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.lifewire.com/introduction-to-client-server-networks-817420\"\u003eIntroduction to Client Server Networks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.researchgate.net/publication/271295146_Client-Server_Model\"\u003eClient Server Model\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://spin.atomicobject.com/2015/04/06/web-app-client-side-server-side/\"\u003eWeb Application Architecture\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we looked at the basics of the client server model and focused on how this model is implemented for web-based applications. We looked at the role of web clients, web servers, and databases that carry client information. In the following lessons, we'll see how to implement these ideas using Python! \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-the-client-server-model\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-the-client-server-model\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-the-client-server-model/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"getting-started-with-data-science-introduction","title":"Getting Started with Data Science - Introduction","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-introduction-v2-2-intro\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-v2-2-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-v2-2-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eCongratulations on making it this far! Now that you have mastered fundamentals of programming with Python, descriptive statistics, and data visualization, we're going to start digging in to the process of \"doing data science\".\u003c/p\u003e\n\u003ch2\u003eData Science Fundamentals\u003c/h2\u003e\n\u003cp\u003eIn the first half of this section, we will introduce a lot of new ideas about what we mean by \"data science\". What is the process? What kinds of problems can data science solve?\u003c/p\u003e\n\u003cp\u003eWe will also go over some key professional concerns of data scientists, including following code best practices and being ethical in our use of data.\u003c/p\u003e\n\u003ch2\u003eProfessional Data Science Environment Setup\u003c/h2\u003e\n\u003cp\u003eSo far, all of your lessons have been completed in a cloud environment that \"just works\". You open a lesson and are immediately able to run through your own copy of the code without worrying about where the code came from, how it is stored, whether you have the appropriate software downloaded, etc.\u003c/p\u003e\n\u003cp\u003eThis is very convenient for educational purposes, but is not very representative of a real-world data science environment. So, in the second half of this section, we show you how to get all of the tools set up so that your computer has a professional data science environment!\u003c/p\u003e\n\u003cp\u003eThe tools we cover in this section include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePython\u003c/li\u003e\n\u003cli\u003eJupyter Notebook\u003c/li\u003e\n\u003cli\u003eAnaconda\u003c/li\u003e\n\u003cli\u003eGit\u003c/li\u003e\n\u003cli\u003eGitHub\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eYou have actually already been using all of these tools \"under the hood\", but these lessons will walk through what they are all used for and how to install and use them on your computer.\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eRemember, it's okay to feel a little uncomfortable. We are going to throw a lot of new concepts at you, and some of them won't fully make sense until much further down the line. Remember that you'll continue to practice these day after day, until they become second nature!\u003c/p\u003e","frontPage":false},{"exportId":"topic-9-lesson-priorities-live","title":"Topic 9 Lesson Priorities (Live)","type":"WikiPage","content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 74.067%; height: 213px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete Before \u003cem\u003eAPIs\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 49.864%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.63563%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 49.864%; height: 10px;\"\u003e\u003cstrong\u003e\u003ca title=\"APIs - Introduction\" href=\"pages/apis-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/apis-introduction\" data-api-returntype=\"Page\"\u003eAPIs - Introduction\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; height: 10px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 49.864%; height: 29px;\"\u003e\u003ca title=\"Introduction to APIs\" href=\"pages/introduction-to-apis\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/introduction-to-apis\" data-api-returntype=\"Page\"\u003eIntroduction to APIs\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 49.864%; height: 29px;\"\u003e\u003ca title=\"The Client Server Model\" href=\"pages/the-client-server-model\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/the-client-server-model\" data-api-returntype=\"Page\"\u003eThe Client Server Model\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 49.864%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"HTTP Request/Response Cycle - Codealong\" href=\"assignments/gae87562a923e0917e0f34cc7f8b5bf9f\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9202\" data-api-returntype=\"Assignment\"\u003eHTTP Request/Response Cycle - Codealong\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 49.864%; height: 29px;\"\u003e\u003ca title=\"HTTP Request/Response Cycle - Lab\" href=\"assignments/g545d29befb66ab7e5ce40d116a4cdb97\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9203\" data-api-returntype=\"Assignment\"\u003eHTTP Request/Response Cycle - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 49.864%; height: 29px;\"\u003e\u003ca title=\"OAuth - Open Authorization\" href=\"pages/oauth-open-authorization\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/oauth-open-authorization\" data-api-returntype=\"Page\"\u003eOAuth - Open Authorization\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 49.864%; height: 29px;\"\u003e\u003ca title=\"Using the Yelp API - Codealong\" href=\"assignments/g3f286a96febb061ba6be14ac7fb869c1\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9205\" data-api-returntype=\"Assignment\"\u003eUsing the Yelp API - Codealong\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 74.067%; height: 97px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eAPIs\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 49.864%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.63563%; text-align: center; height: 29px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 49.864%;\"\u003e\u003cstrong\u003e\u003ca title=\"APIs Exit Ticket\" href=\"quizzes/ge3317592072b310e053474d59dcd3911\"\u003eAPIs Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 49.864%; height: 10px;\"\u003e\u003ca title=\"Reading API Documentation\" href=\"assignments/g388c452759978dc3090f0b74c219f9a5\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9206\" data-api-returntype=\"Assignment\"\u003eReading API Documentation\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; height: 10px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 49.864%; height: 29px;\"\u003e\u003ca title=\"Folium - Codealong\" href=\"assignments/gb193e466f0f425b1ac898b5b831c0918\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9207\" data-api-returntype=\"Assignment\"\u003eFolium - Codealong\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 49.864%;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: APIs\" href=\"quizzes/gb62403a6223131d89f1a2dd2aeb96708\"\u003eQuiz: APIs\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 49.864%;\"\u003e\u003cstrong\u003e\u003ca title=\"‚≠êÔ∏è APIs - Cumulative Lab\" href=\"quizzes/g40c88c59236cfd29c6f374ec2743d46d\"\u003e‚≠êÔ∏è APIs - Cumulative Lab\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; text-align: center;\"\u003e\u003cstrong\u003e1st*\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 49.864%; height: 29px;\"\u003e\u003cstrong\u003e\u003ca title=\"APIs - Recap\" href=\"pages/apis-recap\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/apis-recap\" data-api-returntype=\"Page\"\u003eAPIs - Recap\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.63563%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003e*Cumulative labs may be used for pairing exercises and might not be published yet; contact your instructor if you have questions\u003c/strong\u003e\u003c/p\u003e","frontPage":false},{"exportId":"pandas-groupby","title":"Pandas Groupby","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-groupby\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-groupby/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll learn how to use the \u003ccode\u003e.groupby()\u003c/code\u003e method in Pandas to summarize datasets.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse groupby methods to aggregate different groups in a dataframe\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eUsing \u003ccode\u003e.groupby()\u003c/code\u003e\n\u003c/h2\u003e\n\n\u003cp\u003eConsider an example of the titanic DataFrame:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-pandas-groupby/master/images/titanic_1.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eDuring the Exploratory Data Analysis phase, one of the most common tasks you'll want to do is split the dataset into subgroups and compare them to see if you can notice any trends.  For instance, you may want to group the passengers together by gender or age. You can do this by using the \u003ccode\u003e.groupby()\u003c/code\u003e method built-in to pandas DataFrames. \u003c/p\u003e\n\n\u003cp\u003eTo group passengers by gender, you would type:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.groupby('Sex')\n\ndf.groupby(df['Sex'])\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that this alone will not display a result -- although you have split the dataset into groups, you don't have a meaningful way to display information until you chain an \u003cstrong\u003e\u003cem\u003eAggregation Function\u003c/em\u003e\u003c/strong\u003e onto the groupby.  This allows you to compute summary statistics!\u003c/p\u003e\n\n\u003cp\u003eYou can quickly use an aggregation function by chaining the call to the end of the \u003ccode\u003e.groupby()\u003c/code\u003e method.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.groupby('Sex').sum()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe code above returns displays the following DataFrame:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-pandas-groupby/master/images/titanic_2.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can use aggregation functions to quickly help us compare subsets of our data.  For example, the aggregate statistics displayed above allow you to quickly notice that there were more female survivors overall than male survivors.\u003c/p\u003e\n\n\u003ch2\u003eAggregation functions\u003c/h2\u003e\n\n\u003cp\u003eThere are many built-in aggregate methods provided for you in the \u003ccode\u003epandas\u003c/code\u003e package, and you can even write and apply your own. Some of the most common aggregate methods you may want to use are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003e.min()\u003c/code\u003e: returns the minimum value for each column by group\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.max()\u003c/code\u003e: returns the maximum value for each column by group\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.mean()\u003c/code\u003e: returns the average value for each column by group\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.median()\u003c/code\u003e: returns the median value for each column by group\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.count()\u003c/code\u003e: returns the count of each column by group\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eYou can also see a list of all of the built-in aggregation methods by creating a grouped object and then using tab completion to inspect the available methods:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003egrouped_df = df.groupby('Sex')\ngrouped_df.\u0026lt;TAB\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis will display the following output:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eIn [26]: grouped_df.\u0026lt;TAB\u0026gt;\ngb.agg        gb.boxplot    gb.cummin     gb.describe   gb.filter     gb.get_group  gb.height     gb.last       gb.median     gb.ngroups    gb.plot       gb.rank       gb.std        gb.transform\ngb.aggregate  gb.count      gb.cumprod    gb.dtype      gb.first      gb.groups     gb.hist       gb.max        gb.min        gb.nth        gb.prod       gb.resample   gb.sum        gb.var\ngb.apply      gb.cummax     gb.cumsum     gb.fillna     gb.gender     gb.head       gb.indices    gb.mean       gb.name       gb.ohlc       gb.quantile   gb.size       gb.tail       gb.weight\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis is a comprehensive list of all built-in methods available to grouped objects. Note that some are aggregation methods, while others, such as \u003ccode\u003egb.fillna()\u003c/code\u003e, allow us to fill missing values to individual groups independently.  \u003c/p\u003e\n\n\u003ch2\u003eMultiple groups\u003c/h2\u003e\n\n\u003cp\u003eYou can also split data into multiple different levels of groups by passing in an array containing the name of every column you want to group by -- for instance, by every combination of both \u003ccode\u003eSex\u003c/code\u003e and \u003ccode\u003ePclass\u003c/code\u003e.    \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.groupby(['Sex', 'Pclass']).mean()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe code above would return the following DataFrame:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-pandas-groupby/master/images/titanic_3.png\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eSelecting information from grouped objects\u003c/h2\u003e\n\n\u003cp\u003eSince the resulting object returned is a DataFrame, you can also slice a selection of columns you're interested in from the DataFrame returned. \u003c/p\u003e\n\n\u003cp\u003eThe example below demonstrates the syntax for returning the mean of the \u003ccode\u003eSurvived\u003c/code\u003e class for every combination of \u003ccode\u003eSex\u003c/code\u003e and \u003ccode\u003ePclass\u003c/code\u003e:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.groupby(['Sex', 'Pclass'])['Survived'].mean()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe code above returns the following DataFrame:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-pandas-groupby/master/images/titanic_4.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe above example slices by column, but you can also slice by index. Take a look:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003egrouped = df.groupby(['Sex', 'Pclass'])['Survived'].mean()\nprint(grouped['female'])\n\nprint(grouped['female'][1])\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that you need to provide only the value \u003ccode\u003efemale\u003c/code\u003e as the index, and are returned all the groups where the passenger is female, regardless of the \u003ccode\u003ePclass\u003c/code\u003e value. The second example shows the results for female passengers with a 1st-class ticket. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you learned about how to split a DataFrame into subgroups using the \u003ccode\u003e.groupby()\u003c/code\u003e method. You also learned to generate aggregate views of these groups by applying built-in methods to a groupby object.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-pandas-groupby\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-pandas-groupby\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-pandas-groupby/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"the-data-science-process","title":"The Data Science Process","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-the-data-science-process\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-the-data-science-process/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch1\u003eThe Data Science Process\u003c/h1\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eJust as it's important to understand the kinds of problems that can be solved by data science, it's also important to have a sense of the process used to conduct data science. In this lesson, we'll outline the lifecycle of a typical data science project - from business understanding through data visualization.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the full data science process\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eThe Data Science Process\u003c/h2\u003e\n\n\u003cp\u003eThere is much more to data science than just selecting, applying and tuning Machine Learning algorithms. A data science project will often include the following stages:\n\u003cbr\u003e\n\u003cbr\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_process.png\" width=\"950\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cbr\u003e\n\u003cbr\u003e\nIn this section, you will go through each of these stages and see what is involved.\u003c/p\u003e\n\n\u003ch2\u003eBusiness Understanding / Domain Knowledge\u003c/h2\u003e\n\n\u003cp\u003eBefore trying to solve a data related problem, it is important that a Data Scientist/Analyst has a clear understanding of the problem domain and the kinds of question(s) that need to be answered by their analysis. Some of the questions that the Data Scientist might be asked include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eHow much or how many? E.g. Identifying the number of new customers likely to join your company in the next quarter. (Regression analysis)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eWhich category? E.g. Assigning a document to a given category for a document management system. (Classification analysis)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eWhich group? E.g. Creating a number of groups (segments) of your customers based on their monetary value. (Clustering)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eIs this weird? E.g. Detecting suspicious activities of customers by a credit card company to identify potential fraud. (Anomaly detection)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eWhich items would a user prefer? E.g. Recommending new products (such as movies, books or music) to existing customers (Recommendation systems)\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cbr\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_domain.png\" width=\"450\"\u003e\n\u003cbr\u003e\u003c/p\u003e\n\n\u003ch2\u003eData Mining\u003c/h2\u003e\n\n\u003cp\u003eAfter identifying the objective for your analysis and agreeing on analytical question(s) that need to be answered, the next step is to identify and gather the required data. \u003c/p\u003e\n\n\u003cp\u003eData mining is a process of identifying and collecting data of interest from different sources - databases, text files, APIs, the Internet, and even printed documents. Some of the questions that you may ask yourself at this stage are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWhat data do I need in order to answer my analytical question?\u003c/li\u003e\n\u003cli\u003eWhere can I find this data?\u003c/li\u003e\n\u003cli\u003eHow can I obtain the data from the data source?\u003c/li\u003e\n\u003cli\u003eHow do I sample from this data?\u003c/li\u003e\n\u003cli\u003eAre there any privacy/legal issues that I must consider prior to using this data?\n\u003cbr\u003e\n\u003cbr\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_datamining.png\" width=\"650\"\u003e\n\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eData Cleaning\u003c/h2\u003e\n\n\u003cp\u003eData cleaning is usually the most time-consuming stage of the Data Science process. This stage may take up to 50-80% of a Data Scientist's time as there are a vast number of possible problems that make the data \"dirty\" and unsuitable for analysis. Some of the problems you may see in data are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eInconsistencies in data\u003c/li\u003e\n\u003cli\u003eMisspelled text data\u003c/li\u003e\n\u003cli\u003eOutliers\u003c/li\u003e\n\u003cli\u003eImbalanced data\u003c/li\u003e\n\u003cli\u003eInvalid/outdated data\u003c/li\u003e\n\u003cli\u003eMissing data\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThis stage requires the development of a careful strategy on how to deal with these issues. Such a strategy may vary substantially between different analyses depending on the nature of problems being solved. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_data_cleaning_corrected.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eData Exploration\u003c/h2\u003e\n\n\u003cp\u003eData exploration or Exploratory Data Analysis (EDA) helps highlight the patterns and relations in data. Exploratory analysis may involve the following activities:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCalculating basic descriptive statistics such as the mean, the median, and the mode\u003c/li\u003e\n\u003cli\u003eCreating a range of plots including histograms, scatter plots, and distribution curves to identify trends in the data\u003c/li\u003e\n\u003cli\u003eOther interactive visualizations to focus on a specific segments of data \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_exploration.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eFeature Engineering\u003c/h2\u003e\n\n\u003cp\u003eA \"Feature\" is a measurable attribute of the phenomenon being observed - the number of bedrooms in a house or the weight of a vehicle. Based on the nature of the analytical question asked in the first step, a Data Scientist may have to engineer additional features not found in the original dataset. Feature engineering is the process of using expert knowledge to transform raw data into meaningful features that directly address the problem you are trying to solve. For example, taking weight and height to calculate Body Mass Index for the individuals in the dataset. This stage will substantially influence the accuracy of the predictive model you construct in the next stage. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_engineering.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003ch2\u003ePredictive Modeling\u003c/h2\u003e\n\n\u003cp\u003eModeling is the stage where you use mathematical and/or statistical approaches to answer your analytical question. Predictive Modeling refers to the process of using probabilistic statistical methods to try to predict the outcome of an event. For example, based on employee data, an organization can develop a predictive model to identify employee attrition rate in order to develop better retention strategies.\u003c/p\u003e\n\n\u003cp\u003eChoosing the \"right\" model is often a challenging decision as there is never a single right answer. Selecting a model involves balancing the accuracy and computational cost of the analysis process. For example, some recent approaches in predictive modeling such as deep learning have been shown to offer vastly improved accuracy of results, but with a very high computational cost.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_predictive.png\" width=\"250\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eData Visualization\u003c/h2\u003e\n\n\u003cp\u003eAfter deriving the required results from a statistical model, visualizations are normally used to summarize and present the findings of the analysis process in a form which is easily understandable by non-technical decision makers. \u003c/p\u003e\n\n\u003cp\u003eData visualization could be thought of as an evolution of visual communication techniques as it deals with the visual representation of data. There are a wide range of different data visualization techniques, from bar graphs, line graphs and scatter plots to alluvial diagrams and spatio-temporal visualizations, each of which will work better for presenting certain types of information.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-the-data-science-process/master/images/image_visualization.png\" width=\"650\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we looked at the end-to-end Data Science process to give a sense of the activities that Data Scientists engage with.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-the-data-science-process\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-the-data-science-process\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-the-data-science-process/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"the-bash-shell","title":"The Bash Shell","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-bash-shell\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-bash-shell/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWhen conducting Data Science (or programming in general), it‚Äôs helpful to get oriented with the command line, or bash shell. On mac computers, this is the terminal application. You've actually already seen some of this when working through how to download lessons from Learn and GitHub onto your local computer! The command line serves as a low-level interpreter through which you, the user, can send commands directly to the computer. As a computer user, you previously have probably sent commands to the computer through a graphical user interface (GUI) such as a web browser, text editor, photo editor, or any other of the myriad of computer programs now in existence. While the command line is initially daunting with its cryptic looking text, we will quickly see some of its advantages.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eNavigate between directories using the Bash shell\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eShell\u003c/h2\u003e\n\n\u003cp\u003eTo start, open up your shell program. For mac, this is the terminal, and for Windows we recommend git bash. Note that the \"command prompt\" on Windows may look similar but it is actually another language.\u003c/p\u003e\n\n\u003ch2\u003eMac\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-bash-shell/master/images/mac_terminal.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eWindows\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-bash-shell/master/images/git_bash.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eWorkflow Hints\u003c/h2\u003e\n\n\u003cp\u003eWhen going back and forth between this lesson and your shell, it is useful to either use split screen or to know the shortcuts to switch between applications on your computer. \u003c/p\u003e\n\n\u003cp\u003eShortcuts to change programs/applications:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eMac: (cmd+tab)\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eWindows: (alt+tab)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003epwd\u003c/h2\u003e\n\n\u003cp\u003eRemember, \u003cstrong\u003epwd\u003c/strong\u003e stands for \u003cstrong\u003eprint working directory\u003c/strong\u003e. This is essential to determine where you are within the file structure.  \u003c/p\u003e\n\n\u003ch2\u003ecd\u003c/h2\u003e\n\n\u003cp\u003eFrom there, remember that \u003cstrong\u003ecd\u003c/strong\u003e stands for \u003cstrong\u003echange directory\u003c/strong\u003e. You can navigate to the home directory with \u003ccode\u003ecd\u003c/code\u003e alone, or go up one level with \u003ccode\u003ecd ..\u003c/code\u003e. You can also use the \u003ccode\u003e~\u003c/code\u003e symbol to refer to your home directory. For example, \u003ccode\u003ecd ~/Documents\u003c/code\u003e will take you to the Documents folder in your home directory no matter where you are. \u003c/p\u003e\n\n\u003ch2\u003els\u003c/h2\u003e\n\n\u003cp\u003eYou can use the \u003cstrong\u003els\u003c/strong\u003e command, which stands for \u003cstrong\u003elist files\u003c/strong\u003e to print all the files in the current working directory. \u003c/p\u003e\n\n\u003ch2\u003eTab completion\u003c/h2\u003e\n\n\u003cp\u003eAnother useful feature when working on the command line is tab completion. This also works in many other programming environments such as Jupyter notebooks.\u003c/p\u003e\n\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://www.ks.uiuc.edu/Training/Tutorials/Reference/unixprimer.html\"\u003eMore Basic Shell Commands\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://linux.die.net/man/1/bash\"\u003eLinux Bash Man Page\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://tiswww.case.edu/php/chet/bash/bashref.html\"\u003eDetailed Bash\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we reviewed some of the basic bash commands in order to navigate through files and folders on your computer. From here, we're ready to get started with Git, an important version control system used by many programmers, developers, and Data Scientists.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-bash-shell\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-bash-shell\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-bash-shell/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"table-of-contents-live","title":"Table of Contents (Live)","type":"WikiPage","content":"\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 0: Welcome\" href=\"modules/g853611164f15b95f60a986b6ec229fc2\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43380\" data-api-returntype=\"Module\"\u003eTopic 0: Welcome\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 1: Getting Started with Data Science\" href=\"modules/gb56ea62caa669cb8a22ba6c6577a8549\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43381\" data-api-returntype=\"Module\"\u003eTopic 1: Getting Started with Data Science\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003e\u003ca title=\"Topic 1 Lesson Priorities (Live)\" href=\"pages/topic-1-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/topic-1-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eTopic 1 Lesson Priorities\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 2: Bash and Git\" href=\"modules/gd00f7473182381bf5d3bf2ec0358096f\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43382\" data-api-returntype=\"Module\"\u003eTopic 2: Bash and Git\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003e\u003ca title=\"Topic 2 Lesson Priorities (Live)\" href=\"pages/topic-2-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/topic-2-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eTopic 2 Lesson Priorities\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 3: Data Analysis in Base Python\" href=\"modules/g798dff3510ce5c3611d5289919360ea6\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43383\" data-api-returntype=\"Module\"\u003eTopic 3: Data Analysis in Base Python\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003e\u003ca title=\"Topic 3 Lesson Priorities (Live)\" href=\"pages/topic-3-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/topic-3-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eTopic 3 Lesson Priorities\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 4: Data Analysis in Pandas\" href=\"modules/g8c2df3870940e917de3c16b2e88376b7\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43384\" data-api-returntype=\"Module\"\u003eTopic 4: Data Analysis in Pandas\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003e\u003ca title=\"Topic 4 Lesson Priorities (Live)\" href=\"pages/topic-4-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/topic-4-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eTopic 4 Lesson Priorities\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 5: Data Cleaning in Pandas\" href=\"modules/gb253ee1696bdd9cce223fed5e589a630\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43385\" data-api-returntype=\"Module\"\u003eTopic 5: Data Cleaning in Pandas\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003e\u003ca title=\"Topic 5 Lesson Priorities (Live)\" href=\"pages/topic-5-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/topic-5-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eTopic 5 Lesson Priorities\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 6: Getting Started with SQL\" href=\"modules/g98b53f0f86b445c61c8446066aa60910\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43386\" data-api-returntype=\"Module\"\u003eTopic 6: Getting Started with SQL\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003e\u003ca title=\"Topic 6 Lesson Priorities (Live)\" href=\"pages/topic-6-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/topic-6-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eTopic 6 Lesson Priorities\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 7: SQL Table Relations\" href=\"modules/ge332ce73dc486a92a4d89647893f0efa\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43387\" data-api-returntype=\"Module\"\u003eTopic 7: SQL Table Relations\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003e\u003ca title=\"Topic 7 Lesson Priorities (Live)\" href=\"pages/topic-7-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/topic-7-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eTopic 7 Lesson Priorities\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 8: Other Database Structures\" href=\"modules/gc534a61f2b9a11056437f449a1fcdd9f\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43388\" data-api-returntype=\"Module\"\u003eTopic 8: Other Database Structures\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003e\u003ca title=\"Topic 8 Lesson Priorities (Live)\" href=\"pages/topic-8-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/topic-8-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eTopic 8 Lesson Priorities\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 9: APIs\" href=\"modules/g2d8a046e995c851ade19d8a750ecbe48\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43389\" data-api-returntype=\"Module\"\u003eTopic 9: APIs\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003e\u003ca title=\"Topic 9 Lesson Priorities (Live)\" href=\"pages/topic-9-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/topic-9-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eTopic 9 Lesson Priorities\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"Topic 10: HTML, CSS and Web Scraping\" href=\"modules/g6a3aa465bf267289b3b5c32435c69db0\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43390\" data-api-returntype=\"Module\"\u003eTopic 10: HTML, CSS and Web Scraping\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 40px;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003e\u003ca title=\"Topic 10 Lesson Priorities (Live)\" href=\"pages/topic-10-lesson-priorities-live\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/topic-10-lesson-priorities-live\" data-api-returntype=\"Page\"\u003eTopic 10 Lesson Priorities\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca title=\"üèÜ Milestones\" href=\"modules/g15c954d4a30ba76f0a45a01c4d263387\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43378\" data-api-returntype=\"Module\"\u003eüèÜ Milestones\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca title=\"APPENDIX: Pandas\" href=\"modules/g5b7183538a54f5150f35f60d5d7c44b5\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/modules/43391\" data-api-returntype=\"Module\"\u003eAPPENDIX\u003c/a\u003e\u003c/p\u003e","frontPage":true},{"exportId":"kaggle-and-the-ames-housing-dataset","title":"Kaggle and The Ames Housing Dataset","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eKaggle hosts numerous Data Science competitions where you can grab datasets and practice your skills at creating machine learning algorithms to answer useful questions. Here we'll sign up for an account and begin investigating a classic Data Science problem using the Ames housing dataset.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a Kaggle account and download a dataset \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSign up\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eNavigate to \u003ca href=\"https://www.kaggle.com\"\u003ekaggle.com\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset/master/images/kagglehome.png\" width=\"800\"\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eClick \"Sign in\" and then \u003c/li\u003e\n\u003cli\u003eClick \"Create one\" to make a new account\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset/master/images/kagglelogin1.png\" width=\"300\"\u003e\n\u003c/li\u003e\n\u003cli\u003eFill out the basic information\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset/master/images/kagglelogin2.png\" width=\"300\"\u003e\n\u003c/li\u003e\n\u003cli\u003eAccept the Privacy and Terms agreement\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCongratulations!\u003c/h2\u003e\n\n\u003cp\u003eYou should now be signed up for Kaggle where you'll have access to a range of datasets, competitions, and other Data Science resources! Welcome to the community!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn our upcoming lab, you'll then be working with this dataset: \u003ca href=\"https://www.kaggle.com/c/house-prices-advanced-regression-techniques\"\u003ehttps://www.kaggle.com/c/house-prices-advanced-regression-techniques\u003c/a\u003e. To download it, click on the \"data\" tab and then click the \"download all\" to get a copy of the data.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-kaggle-and-boston-housing-dataset\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-kaggle-and-boston-housing-dataset\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-kaggle-and-boston-housing-dataset/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"my-little-rainbow","title":"My Little Rainbow","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-my-little-rainbow-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-my-little-rainbow-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you're going to make a rainbow with HTML \u003ccode\u003e\u0026lt;div\u0026gt;\u003c/code\u003e elements. Through this process, you'll learn about HTML elements, CSS styling, CSS selectors, how color works in CSS and importing stylesheets.  That might sound like a lot but it isn't.\u003c/p\u003e\n\n\u003cp\u003eBefore you start, here's some basic info about HTML and CSS. Skip to \u003ca href=\"#making-a-rainbow\"\u003eMaking a Rainbow\u003c/a\u003e if you feel comfortable enough with HTML and CSS.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the purpose of IDs in HTML\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eAdd ID elements to HTML tags\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eSelect and style HTML elements with CSS\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eHTML Basics\u003c/h2\u003e\n\n\u003cp\u003eHyper Text Markup Language, or HTML, is a way to demarcate a document into different parts. Each part is \u003cem\u003emarked\u003c/em\u003e by elements (using tags). Each element has its own special connotation that the browser uses to \u003cem\u003erender\u003c/em\u003e the HTML document. Use this \u003ca href=\"https://web.stanford.edu/group/csp/cs21/htmlcheatsheet.pdf\"\u003echeat sheet\u003c/a\u003e on HTML elements for guidance.\u003c/p\u003e\n\n\u003ch2\u003eElements\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eAll begin with \u003ccode\u003e\u0026lt;\u003c/code\u003e and end with \u003ccode\u003e\u0026gt;\u003c/code\u003e, e.g., \u003ccode\u003e\u0026lt;div\u0026gt;\u003c/code\u003e (this last part is a tag).\u003c/li\u003e\n\u003cli\u003eMost have an opening tag such as \u003ccode\u003e\u0026lt;div\u0026gt;\u003c/code\u003e and a closing tag \u003ccode\u003e\u0026lt;/div\u0026gt;\u003c/code\u003e.\n\n\u003cul\u003e\n\u003cli\u003eThe \u003ccode\u003e/\u003c/code\u003e indicates to the browser that that tag is a closing tag.\u003c/li\u003e\n\u003cli\u003eThe element is everything between the tags and the tags themselves.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSome tags are self-closing like the line break element \u003ccode\u003e\u0026lt;br\u0026gt;\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eElements can have IDs and classes to aid the browser in finding specific tags.\n\n\u003cul\u003e\n\u003cli\u003eMust begin with a letter A-Z or a-z.\u003c/li\u003e\n\u003cli\u003eCan be followed by: letters (\u003ccode\u003eA-Za-z\u003c/code\u003e), digits (\u003ccode\u003e0-9\u003c/code\u003e), hyphens (\u003ccode\u003e-\u003c/code\u003e), and underscores (\u003ccode\u003e_\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003eIDs \u003cstrong\u003ecan\u003c/strong\u003e only be used once per page, e.g.: \u003ccode\u003e\u0026lt;div id=\"this-special-div\"\u0026gt;\u0026lt;/div\u0026gt;\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eClasses can be used as many times as you want, e.g.: \u003ccode\u003e\u0026lt;div class=\"a-less-special-div\"\u0026gt;\u0026lt;/div\u0026gt;\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eElements nested inside other elements are called children.\n\n\u003cul\u003e\n\u003cli\u003eChildren inherit attributes from their parents.\u003c/li\u003e\n\u003cli\u003eDon't nest everything. \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eElements next to one another are siblings.\n\n\u003cul\u003e\n\u003cli\u003eSiblings do not inherit from one another but are important for selecting in CSS.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHere is an example of element relations:\n\u003ccode\u003ehtml\n\u0026lt;div\u0026gt;  \u0026lt;!-- the parent element --\u0026gt;\n  \u0026lt;p\u0026gt;\u0026lt;/p\u0026gt;  \u0026lt;!-- the first sibling element/the first child--\u0026gt;\n  \u0026lt;p\u0026gt;\u0026lt;/p\u0026gt;  \u0026lt;!-- the second sibling element/the second child --\u0026gt;\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2\u003eCSS Basics\u003c/h2\u003e\n\n\u003cp\u003eCascading Style Sheets, or CSS, is a language created to style an HTML document by telling the browser how specific elements should look. CSS does this by selecting elements based on their tag, ids, classes, or all of the above. The reason for CSS is the separation of concerns. You want HTML only to be concerned with how it displays and demarcates information, and we let CSS worry about how to make that information look pretty.\u003c/p\u003e\n\n\u003ch2\u003eCSS selectors\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eThey select elements to assign them styles.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e*\u003c/code\u003e (wildcard) selects every element.\u003c/li\u003e\n\u003cli\u003eAn element, such as \u003ccode\u003ediv\u003c/code\u003e, will select all elements of that type.\u003c/li\u003e\n\u003cli\u003eThey select an id like \u003ccode\u003e#some-id\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eClasses are selected like this \u003ccode\u003e.some-class\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eTo select all children elements of a parent do something like this \u003ccode\u003ediv p\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eTo select multiple different elements separate them by commas like this \u003ccode\u003ediv, p, a\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHere's an example of CSS styling:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"CSS\"\u003e* {\n  color: red;  /* color in CSS refers to font color */\n}  /* all elements will have red font */\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eMaking a Rainbow\u003c/h2\u003e\n\n\u003cp\u003eFirst off make sure you have \u003ca href=\"https://github.com/learn-co-curriculum/dsc-my-little-rainbow-lab\"\u003eforked\u003c/a\u003e and cloned this repo. Next, create a new branch, and switch to it; it's \u003ccode\u003egit checkout -b your_solution_branch_name\u003c/code\u003e in case you forgot.\u003c/p\u003e\n\n\u003cp\u003eIn that directory, you'll see three files. \u003ccode\u003eindex.html\u003c/code\u003e, \u003ccode\u003emain.css\u003c/code\u003e, and this \u003ccode\u003eREADME.md\u003c/code\u003e.  Open them in your text editor via your command line.  Also, open \u003ccode\u003eindex.html\u003c/code\u003e in your browser; if everything is working correctly you should see a white page. Good job!\u003c/p\u003e\n\n\u003ch2\u003eMaking the Divs Visible\u003c/h2\u003e\n\n\u003cp\u003eIf you use the inspector or look at the file in your text editor, you'll see that the basic file structure is there.  So why can't we see anything?!?!?  That's because the divs have no styling on them right now.  And that's because we never told the browser to include a CSS file that would apply any styles. \u003c/p\u003e\n\n\u003cp\u003eLet's fix this by adding the stylesheet to the \u003ccode\u003ehead\u003c/code\u003e like so,\n\u003ccode\u003eHTML\n\u0026lt;head\u0026gt;\n... \n  \u0026lt;link rel=\"stylesheet\" type=\"text/css\" href=\"main.css\"\u0026gt;\n...\n\u0026lt;/head\u0026gt;\n\u003c/code\u003e\nThe link is a self-closing tag that will create a relative path with the \u003ccode\u003ehref\u003c/code\u003e attribute.  A relative path means the browser knows that the \u003ccode\u003emain.css\u003c/code\u003e file is in the same place as \u003ccode\u003eindex.html\u003c/code\u003e.  The \u003ccode\u003ehead\u003c/code\u003e is a hidden part of the page that tells the browser where to find any other files it needs to display the page correctly, the \u003ccode\u003etitle\u003c/code\u003e for the tab, and any other possible important information.\u003c/p\u003e\n\n\u003cp\u003eNow if you refresh the \u003ccode\u003eindex.html\u003c/code\u003e page in your browser you should see an ugly black rainbow.  Gerd Jerb!\u003c/p\u003e\n\n\u003cp\u003eOkay so you've got the basic outline because in the \u003ccode\u003emain.css\u003c/code\u003e all the \u003ccode\u003ediv\u003c/code\u003e elements were selected and styled, but the colors are wrong because the default border color is black.  To fix this we need to learn a little bit more about colors, because while we could just set \u003ccode\u003ecolor: red;\u003c/code\u003e we should learn how to make colors without words.  We should just use numbers and not just any set of numbers, but numbers with base pair of 16 rather than base pair of 10 like we use every day.  These numbers are called hexadecimal numbers and we can use them to make colors.\u003c/p\u003e\n\n\u003ch2\u003eSome Stuff You Should Know About Hex Colors (and Web Colors in General).\u003c/h2\u003e\n\n\u003cp\u003eHex colors begin with \u003ccode\u003e#\u003c/code\u003e and are followed by, generally, 6 numbers, but some of these numbers are actually letters.  The lowest single-digit number in hex is 0 and the highest single-digit number is f.  This table might help to visualize what we mean by this.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eDecimal Numbers:      0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16\nHexadecimal Numbers:  0, 1, 2, 3, 4, 5, 6, 7, 8, 9,  a,  b,  c,  d,  e,  f, 10\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eHex colors work by creating Red, Green, Blue (RGB) values.  Traditional RGB colors are on a scale of 0 to 255 for each of the three colors in the spectrum.  Hex colors are considered true colors since it can represent ~16 million colors, but your eye can only see 10 million of those.  So \u003ccode\u003e#000000\u003c/code\u003e translates to black since 0 reds, 0 green, 0 blues represents the absence of all colors, and \u003ccode\u003e#ffffff\u003c/code\u003e makes white since 255 reds, 255 greens, and 255 blues is the maximum of each of the colors.  \u003c/p\u003e\n\n\u003cp\u003eHex colors can be shortened to just three numbers when each RGB value is the same for each digit. So \u003ccode\u003e#11dd99\u003c/code\u003e can be written as \u003ccode\u003e#1d9\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eColoring the Rainbow\u003c/h2\u003e\n\n\u003cp\u003eTo get roygbiv onto our rainbow we'll need seven hex colors.\nRed: \u003ccode\u003e#f00\u003c/code\u003e; Orange: \u003ccode\u003e#ffa500\u003c/code\u003e; Yellow: \u003ccode\u003e#ff0\u003c/code\u003e; Green: \u003ccode\u003e#00bc3f\u003c/code\u003e; Blue: \u003ccode\u003e#06f\u003c/code\u003e; Indigo: \u003ccode\u003e#8a2be2\u003c/code\u003e; Violet: \u003ccode\u003e#d300c9\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eWith those colors, all we have to do next is select each div individually.  That is a perfect use for ids since they're meant to style one specific element only.  So that means we'll need to add an id for each div, so a logical name for each div would be the color that they have to be.  It could be something random, but good names make for semantic code. So let's give the outermost div the id red. We'll do this like so.\n\u003ccode\u003ehtml\n\u0026lt;div id=\"red\"\u0026gt;\n  ...\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd to give that id some CSS attributes we'll go into \u003ccode\u003emain.css\u003c/code\u003e, select the id, and mark its color as red like this.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e#red { /* this selects any elements with the red id */\n  border-top-color: #f00;\n}\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eSo to make sure the rainbow isn't so monochromatic you now need to repeat the above steps with the final six colors of the rainbow, and when you do you should have something like \u003ca href=\"http://i0.kym-cdn.com/photos/images/original/000/118/087/2468904593_6a7c692ab6.jpg\"\u003ethis\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWell done! In this lab, you independently modified HTML and CSS files in order to update a webpage. Specifically, you got some experience understanding and working with HTML IDs. You also used CSS to style HTML elements.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-my-little-rainbow-lab\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-my-little-rainbow-lab\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-my-little-rainbow-lab/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"html-css-and-web-scraping-introduction","title":"HTML, CSS and Web Scraping - Introduction","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-intro-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-intro-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you'll begin to investigate content from the web. You'll start by learning a bit of HTML and CSS, the foundations for the web, and from there you'll take a look at how to scrape information from the web in order to systematically create and build datasets that may not be otherwise available to you.\u003c/p\u003e\n\n\u003ch2\u003eHTML, CSS and Web Scraping\u003c/h2\u003e\n\n\u003cp\u003eWhile many companies provide access to information via APIs, sometimes you have to scrape the information that you need for your analysis from web pages designed to be read by people. \u003c/p\u003e\n\n\u003ch3\u003eHTML\u003c/h3\u003e\n\n\u003cp\u003eHTML stands for HyperText Markup Language - the \"language of the web\". You'll start by learning HTML syntax and practice exploring HTML documents. After that, you'll look into the process for handling new HTML elements that you might not have encountered before.\u003c/p\u003e\n\n\u003ch3\u003eCSS\u003c/h3\u003e\n\n\u003cp\u003eCSS or Cascading Style Sheets is how you make web pages look snazzy. You'll see more about how proper web development workflows separate content from presentation.\u003c/p\u003e\n\n\u003ch3\u003eWeb Scraping\u003c/h3\u003e\n\n\u003cp\u003eFinally, you'll practice using Beautiful Soup - a package for scraping websites.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eYou will often find that the information you want to retrieve isn't available via an API. When that's the case, it's incredibly important to be proficient with web scraping so that you can retrieve the information you need for your analysis.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-html-css-scraping-intro-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-html-css-scraping-intro-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-intro-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"nosql-databases","title":"NoSQL Databases","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn about some of the various kinds of NoSQL databases, and their use cases.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain why NoSQL is useful\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eExplore real-world use cases of NoSQL databases\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy NoSQL?\u003c/h2\u003e\n\n\u003cp\u003eRelational databases are a cornerstone of a modern technology. They're reliable, dependable, and they seem to be pretty much everywhere. Since their invention at IBM by Edgar Codd in 1970, they've rapidly grown to be used all over the place. Their creation allowed companies to track, store, and analyze data in ways that simply couldn't be done before. For the majority of situations, they're a great choice. However, as technology has progressed into the era of internet and smartphones, we've run into many different sorts of data that aren't a natural fit for a relational format. Let's examine a few of these situations, and see why NoSQL might be a better choice. \u003c/p\u003e\n\n\u003cp\u003eLet's assume that we need to store chat logs between customer service and customers through a web interface. These chats could be very short, or very long -- some chats may only be 2 or 3 messages, while others may conceivably be in the hundreds or thousands. For each message in the chat, we want to store metadata associated with the message, so that we can know things like which party sent the message, the time it was sent, the time the other party read the message, etc. This is a great use case for a NoSQL database, because it would be a very poor fit for a relational database. For starters, each chat can be any size, meaning that we can't just clearly define a table that links which messages belong to which chat. If every chat had only five messages, we might be able to make it work, with a column for \"message 1\", \"message 2\", and so on -- but we can't, because a chat has no set size, and can always grow larger in the future. A relational database would also waste a lot of space storing redundant information, and getting all the messages in a chat could result in some nasty runtimes for our SQL query if this data was stored in separate tables in something like the third normal format. \u003c/p\u003e\n\n\u003cp\u003eFor each of the database types below, we'll explore some brief real-world examples of when they're the ideal choice. As with the example above, the common thread that runs among all of them is that they aren't a great fit for a relational database. \u003c/p\u003e\n\n\u003ch2\u003eDocument Stores\u003c/h2\u003e\n\n\u003cp\u003eA \u003cstrong\u003e\u003cem\u003eDocument Store\u003c/em\u003e\u003c/strong\u003e is a database that stores records as unique documents in the database. These documents can be arbitrarily long, and can even contain other documents inside of them! The chat log example we saw above is a prime use case for a document store. In a document store, we could store each message and its accompanying metadata as a document, and then embed each of those documents in order in a chat document. In this way, we can easily access the data as needed. \u003c/p\u003e\n\n\u003cp\u003eIn these Document Stores, each document contains key-value pairs, with the actual data being stored in as the value. This makes Document Stores incredibly flexible, because each document can be unique. There is no constraint saying each document must have the same keys! This makes it great for working with data where we don't know what shape it will take (as we saw above, with chat logs that can be arbitrarily long or short), or perhaps when we don't know what data will be stored at all. This would be a problem in a relational database, because we would need to know what column the data belongs in before we could store it. With a Document Store, we can just create a key on the fly for the data that matters to us!\u003c/p\u003e\n\n\u003cp\u003eNote that while this flexibility makes it easy for us to store data on the fly, this also makes it harder for us to query data and get exactly what we need. Since each different document can potentially have its own \u003cstrong\u003e\u003cem\u003eSchema\u003c/em\u003e\u003c/strong\u003e, this means that we have to know what we are looking for. This also means that we have to be diligent in our naming conventions, because \u003ccode\u003echatLog\u003c/code\u003e is different than \u003ccode\u003eChatLog\u003c/code\u003e. This means that if we run a query across all documents to get all data with the key \u003ccode\u003echatLog\u003c/code\u003e, we'll completely miss any data where they key is written as \u003ccode\u003eChatLog\u003c/code\u003e!\u003c/p\u003e\n\n\u003ch5\u003ePopular  Document Store Databases: MongoDB and Couchbase\u003c/h5\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/mongo-db-logo.png\" height=\"60%\" width=\"60%\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/couchbase-logo.png\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eKey-Value Stores and Column Stores\u003c/h2\u003e\n\n\u003cp\u003eAlthough \u003cstrong\u003e\u003cem\u003eKey-Value Stores\u003c/em\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003cem\u003eColumn Stores\u003c/em\u003e\u003c/strong\u003e are two different kinds of databases, they both store their data in ways you're already familiar with, because you've seen them in Python and Pandas!  \u003cstrong\u003e\u003cem\u003eKey-Value Stores\u003c/em\u003e\u003c/strong\u003e work exactly like they sound -- just like a Python dictionary! They are powered by a hash table under the hood, and to access data, you just pass in the unique key for the value that you want. \u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eColumn Stores\u003c/em\u003e\u003c/strong\u003e work a bit more like how pandas stores data under the hood. Recall that in pandas, a DataFrame is stored as a collection of \u003ccode\u003eSeries\u003c/code\u003e objects, with each column getting it's own series. The same general principle is at work for Column Stores -- each column is stored separately, allowing for very fast reads when querying data. \u003c/p\u003e\n\n\u003ch5\u003ePopular Key-Value Store Database: Amazon DynamoDB\u003c/h5\u003e\n\n\u003ch5\u003ePopular Column Store Database: Google BigTable\u003c/h5\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/bigtable.png\" height=\"60%\" width=\"60%\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/dynamodb.png\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eGraph Databases\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eGraph Databases\u003c/em\u003e\u003c/strong\u003e are based on the idea of the kind of graphs you might have seen in higher-level math classes -- the kind that are made up of \u003cstrong\u003e\u003cem\u003eNodes\u003c/em\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003cem\u003eEdges\u003c/em\u003e\u003c/strong\u003e. These sorts of databases excel at storing data where there are multiple associations between the entities stored in the database. The most obvious use case here is social media. Think for a second about what it would take to represent all of your friends on Facebook or Twitter in a relational database. This would be a pretty gargantuan data engineering task! However, with Graph Databases, it's quite easy. In a graph database, every user is a node, and each connection between you and one of the nodes representing one of your Facebook friends is an edge. In each node, we can store an arbitrary amount of metadata, which allows us to store things like user information. These sorts of databases really shine when you need to ask questions about the connections between users or objects in a database. For instance, what if we wanted to determine who the greatest influencers are among the Data Science community on Facebook? Even thinking about how you might approach this problem in a relational database is a surefire way to get a headache, but this sort of query is quite easy in a Graph Database -- one approach might be to examine all the Nodes with a metadata tag listing their job as \"Data Scientist\", and then examine who has the most shared connections among this community. \u003c/p\u003e\n\n\u003ch5\u003ePopular Graph Databases: Neo4J and OrientDB\u003c/h5\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/neo4j-logo.png\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/orientdb-logo.png\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eRDDs and Big Data\u003c/h2\u003e\n\n\u003cp\u003eThe Term \"RDD\" is short for \u003cstrong\u003e\u003cem\u003eResilient Distributed Dataset\u003c/em\u003e\u003c/strong\u003e, and it's the backbone behind all the fuss surrounding \"Big Data\". The most popular platforms that support RDDs are Hadoop and Spark, which are related to one another. Spark is built on top of Hadoop and allows users a cleaner, faster way of dealing with distributed datasets. A \u003cem\u003eResilient Distributed Dataset\u003c/em\u003e is a collection of an arbitrary number of server clusters that share a full dataset distributed between them. With multiple servers comes multiple opportunities for things like server failures, and our dataset is no good if we have no guarantee that part of our dataset might be missing when we go to query for it. Relational databases are stored on a single server, which means that when the server is down, there's no doing anything until it comes back up. However, what if our Hadoop cluster contains 100 servers, and 2 are down when we write our query?  Without a way of making sure our RDD is \u003cstrong\u003e\u003cem\u003eFault Tolerant\u003c/em\u003e\u003c/strong\u003e, we could get incorrect information back because we think we've queried the entire dataset, but don't realize that two servers weren't up to contribute their data to the query. The way that RDDs like Hadoop and Spark deal with this is by chopping the data into different labeled blocks, and then storing multiple different backups of each block across all the different server clusters. For example, let's say that we've divided our dataset into blocks labeled, A, B, and C. Server 1 will host block A, but will also contain a backup of block B, and a backup of Block C, in that order. Server 2 will host Block B, but will contain backups of Block B and Block C, while Server 3 will host C first and contain backups of A and B. When things are working smoothly, Server 1 will run the query passed only on block A, Server 2 on Block B, etc. If Server B goes down, then our query will run on Blocks A and C because of Servers 1 and 3 first, and then the backup will kick in and Server 1 will then run the query on Block B. \u003c/p\u003e\n\n\u003cp\u003eIf you've never worked with RDDs before, this probably sounds slow and unnecessarily redundant. On small or normal-sized datasets, you're absolutely right. However, in this day and age, there has been a massive explosion in the amount of data created and stored every day. When working with truly \u003cem\u003eBig Data\u003c/em\u003e, the distributed architecture provides massive speedups to query times by distributing the workload across multiple servers. \u003c/p\u003e\n\n\u003cp\u003eAs an example, let's pretend that you're a Data Scientist for a major retailer that sells everything under the sun at discount prices -- we'll call this company WallMart. At the end of every day, your boss wants to know the total number of sales in each department. If your data was stored in a relational database, this would mean executing a query on a single, truly massive relational database, which can only work as fast as its processor allows. Each query would have to go through trillions of rows to find what it needs, aggregate the sales for each category, and then return the answer. Running this query on a traditional relational database would likely take days, or even weeks! \u003c/p\u003e\n\n\u003cp\u003eHowever, this would be a very different story with an RDD like Hadoop or Spark. Instead of running this on a single machine, we can just put a small server in each store location to keep track of all that store's data and transactions. When we need to run a query, our distributed system will ask each store's server to get the total number of sales for each department \u003cem\u003esimultaneously\u003c/em\u003e. For a single store, this is a much smaller query, so it will run quite quickly. Then, once we have the totals for each department from each store, we can just combine them together into grand totals for each, getting us the answer we needed in seconds instead of days! The idea of having each server run some query or function at the same time, and then combining the results is based on the idea of \u003cstrong\u003e\u003cem\u003eMapReduce\u003c/em\u003e\u003c/strong\u003e, which is the secret sauce behind RDDs. When we ask each server to run the function or query at the same time, this is the \"Map\" step. When we combine the results from each server into a single aggregate, this is the \"Reduce\" step. \u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/hadoop.png\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-databases/master/images/spark.png\" height=\"10%\" width=\"10%\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned about the various sorts of NoSQL Databases in the market today. We dug into the similarities and differences between them all, and also looked at a few examples where a NoSQL Database is a more natural fit for storing data than a traditional relational database. \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-nosql-databases\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-nosql-databases\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"sql-table-relations-introduction","title":"SQL Table Relations - Introduction","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-sql-relations-intro\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-relations-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-relations-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eNow that you've learned the fundamentals of writing SQL queries, it's time to level up! One of the most powerful aspects of SQL is their \u003cem\u003erelational\u003c/em\u003e nature, meaning that they not only store data, they store relationships between different tables of data. In this section you will learn to use the \u003ccode\u003eJOIN\u003c/code\u003e clause and \u003cem\u003esubquery\u003c/em\u003e concept to write queries that span multiple tables. Then at the end you will complete some SQL practice specifically intended to prepare you for the kinds of SQL questions you're likely to see in technical interviews.\u003c/p\u003e  \u003ch2\u003eRelational Databases\u003c/h2\u003e  \u003cp\u003eYou have already seen this image several times:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-sql-relations-intro/master/Database-Schema.png\" alt=\"database ERD\"\u003e\u003c/p\u003e  \u003cp\u003eWe also previously described the idea that each table has a \u003cstrong\u003eprimary key\u003c/strong\u003e (indicated in the diagram above using \u003ccode\u003e*\u003c/code\u003e) and many tables have one or more \u003cstrong\u003eforeign keys\u003c/strong\u003e that link records in these tables to records in other tables.\u003c/p\u003e  \u003cp\u003eBut, why is it set up that way? What problem is it solving?\u003c/p\u003e  \u003cp\u003eLet's walk through a case study to understand this better.\u003c/p\u003e  \u003ch3\u003eRelational Databases - Payroll Case Study\u003c/h3\u003e  \u003cp\u003eLet's say that you've been hired by a big and important company to handle the payroll for all of their employees. Every two weeks, you need to look up each and every employee and how much they get paid. You need to send them a check \u003cem\u003eand\u003c/em\u003e send a notice of that check to their manager. (They have a very flat hierarchy, where everyone is either a manager or a regular employee. Managers do not have managers and regular employees do not manage anyone.)\u003c/p\u003e  \u003cp\u003eIn addition, let's say that managers get paid every month, instead of every two weeks. So, once a month we need to go through the list of employees again, find just the managers, and send them their checks.\u003c/p\u003e  \u003cp\u003eIn such a situation, we would need a place to store information about all of the managers and employees. Using a spreadsheet, your storage system might look something like this:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-sql-relations-intro/master/spreadsheet_1.png\" alt=\"spreadsheet with columns, name, pay, manager\"\u003e\u003c/p\u003e  \u003cp\u003eThis tells you \u003cem\u003ealmost\u003c/em\u003e everything you need, since it would allow you to filter who is a manager and who isn't, plus the payment amounts. But it doesn't have enough information for you to be able to send notices to employees' managers, since it just says who is an employee and who is a manager, but not the relationships.\u003c/p\u003e  \u003cp\u003eOne idea we might have is to add another column, so that every employee record also lists the name of their manager:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-sql-relations-intro/master/spreadsheet_2.png\" alt=\"spreadsheet with four columns, name, pay, manager, manager name\"\u003e\u003c/p\u003e  \u003cp\u003eNow we technically have all of the information we need, but we can think of a few issues:\u003c/p\u003e  \u003col\u003e \u003cli\u003eThere is some redundancy and wasted space. We don't actually need the \u003ccode\u003eManager?\u003c/code\u003e column, since we can just check whether there is a name in the \u003ccode\u003eManager Name\u003c/code\u003e column...but maybe we don't want to remove that since accidentally putting a manager name in the wrong place could mark someone as a regular employee when they're actually a manager.\u003c/li\u003e \u003cli\u003eThis is not a very robust system if anything changes. What if we get another manager who is also named Steve? Maybe you could enter the new Steve as \"Steve H.\", and you would just need to remember that \"Steve\" refers to the one who was there first.\u003c/li\u003e \u003cli\u003eOr, what if Steve decides he wants to rebrand himself and start going by Steven instead? (You can also think of other reasons why someone would change their legal name.) Then you would need to find all places in the spreadsheet that say \"Steve\" and replace them with \"Steven\".\u003c/li\u003e \u003c/ol\u003e  \u003cp\u003eIf you really only had 5 total employees, it would be manageable to do this work \"by hand\" and just remember what you did. But if you had hundreds or thousands of employees, or you were working with a team of payroll professionals instead of by yourself, you can imagine how this system could get unmanageable pretty quickly!\u003c/p\u003e  \u003ch4\u003eThe Relational Database Solution\u003c/h4\u003e  \u003cp\u003eWe can use SQL to manage this information more effectively. First, we set up a managers table and an employees table with the following schemas:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-sql-relations-intro/master/managers_schema.png\" alt=\"managers schema\"\u003e\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-sql-relations-intro/master/employees_schema.png\" alt=\"employees schema\"\u003e\u003c/p\u003e  \u003cp\u003eBoth the managers table and the employees table have primary keys (indicated by the key icon here) called \u003ccode\u003eid\u003c/code\u003e. Then employees have a foreign key called \u003ccode\u003emanager_id\u003c/code\u003e that links to a record in the managers table.\u003c/p\u003e  \u003cp\u003eThe same data shown above is entered in like this:\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-sql-relations-intro/master/managers_data.png\" alt=\"managers data\"\u003e\u003c/p\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-sql-relations-intro/master/employees_data.png\" alt=\"employees data\"\u003e\u003c/p\u003e  \u003cp\u003eNow, the issues described before are no longer issues:\u003c/p\u003e  \u003col\u003e \u003cli\u003eThere is no redundancy or extra space. You know whether someone is a regular employee or a manager based on which table they are in, and managers don't have an extra empty field for a manager name.\u003c/li\u003e \u003cli\u003eIf we get another manager named Steve, we can just add another record to the managers table. It will have an \u003ccode\u003eid\u003c/code\u003e of 3 and will not be confused with this Steve, who has an \u003ccode\u003eid\u003c/code\u003e of 1.\u003c/li\u003e \u003cli\u003eIf Steve changes his name to Steven, you only need to change one value in one place: the \u003ccode\u003ename\u003c/code\u003e column in Steve's record in the managers table. No need to hunt down the same information stored in multiple places in order to edit it!\u003c/li\u003e \u003c/ol\u003e  \u003ch2\u003eSQL \u003ccode\u003eJOIN\u003c/code\u003e\u003c/h2\u003e  \u003cp\u003eThe SQL \u003ccode\u003eJOIN\u003c/code\u003e clause is the main way that you will write queries that combine data from multiple tables.\u003c/p\u003e  \u003cp\u003eContinuing with the example above, let's say we want to handle payroll for all regular employees. To do that, we need to know their name, pay, and manager name.\u003c/p\u003e  \u003cp\u003eIf we just \u003ccode\u003eSELECT *\u003c/code\u003e from the employees table, it will look like this:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eimport pandas as pd\u003cbr\u003eimport sqlite3\u003cbr\u003e\u003cbr\u003econn = sqlite3.connect(\"payroll.db\")\u003cbr\u003epd.read_sql(\"\"\"SELECT * FROM employees;\"\"\", conn) \u003c/code\u003e\u003c/pre\u003e \u003cdiv\u003e \u003cstyle\u003e     .dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     } \u003c/style\u003e \u003ctable border=\"1\" class=\"dataframe\"\u003e   \u003cthead\u003e     \u003ctr style=\"text-align: right;\"\u003e       \u003cth\u003e\u003c/th\u003e       \u003cth\u003eid\u003c/th\u003e       \u003cth\u003ename\u003c/th\u003e       \u003cth\u003epay\u003c/th\u003e       \u003cth\u003emanager_id\u003c/th\u003e     \u003c/tr\u003e   \u003c/thead\u003e   \u003ctbody\u003e     \u003ctr\u003e       \u003cth\u003e0\u003c/th\u003e       \u003ctd\u003e1\u003c/td\u003e       \u003ctd\u003eBob\u003c/td\u003e       \u003ctd\u003e3000.0\u003c/td\u003e       \u003ctd\u003e1\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e1\u003c/th\u003e       \u003ctd\u003e2\u003c/td\u003e       \u003ctd\u003eKaren\u003c/td\u003e       \u003ctd\u003e4000.0\u003c/td\u003e       \u003ctd\u003e1\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2\u003c/th\u003e       \u003ctd\u003e3\u003c/td\u003e       \u003ctd\u003ePatrick\u003c/td\u003e       \u003ctd\u003e4000.0\u003c/td\u003e       \u003ctd\u003e2\u003c/td\u003e     \u003c/tr\u003e   \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e  \u003cp\u003eThen we could manually query for each manager \u003ccode\u003eid\u003c/code\u003e:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003epd.read_sql(\"\"\"SELECT name FROM managers WHERE id = 1;\"\"\", conn) \u003c/code\u003e\u003c/pre\u003e \u003cdiv\u003e \u003cstyle\u003e     .dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     } \u003c/style\u003e \u003ctable border=\"1\" class=\"dataframe\"\u003e   \u003cthead\u003e     \u003ctr style=\"text-align: right;\"\u003e       \u003cth\u003e\u003c/th\u003e       \u003cth\u003ename\u003c/th\u003e     \u003c/tr\u003e   \u003c/thead\u003e   \u003ctbody\u003e     \u003ctr\u003e       \u003cth\u003e0\u003c/th\u003e       \u003ctd\u003eSteve\u003c/td\u003e     \u003c/tr\u003e   \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e \u003cpre\u003e\u003ccode\u003epd.read_sql(\"\"\"SELECT name FROM managers WHERE id = 2;\"\"\", conn) \u003c/code\u003e\u003c/pre\u003e \u003cdiv\u003e \u003cstyle\u003e     .dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     } \u003c/style\u003e \u003ctable border=\"1\" class=\"dataframe\"\u003e   \u003cthead\u003e     \u003ctr style=\"text-align: right;\"\u003e       \u003cth\u003e\u003c/th\u003e       \u003cth\u003ename\u003c/th\u003e     \u003c/tr\u003e   \u003c/thead\u003e   \u003ctbody\u003e     \u003ctr\u003e       \u003cth\u003e0\u003c/th\u003e       \u003ctd\u003eSpongebob\u003c/td\u003e     \u003c/tr\u003e   \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e  \u003cp\u003eThat works, but it's annoying. Again, you can imagine that not scaling well to hundreds or thousands of employees.\u003c/p\u003e  \u003cp\u003eWith a SQL join, we can do it all at once:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eq = \"\"\"\u003cbr\u003eSELECT *\u003cbr\u003eFROM employees\u003cbr\u003eJOIN managers\u003cbr\u003e    ON employees.manager_id = managers.id\u003cbr\u003e;\u003cbr\u003e\"\"\"\u003cbr\u003epd.read_sql(q, conn) \u003c/code\u003e\u003c/pre\u003e \u003cdiv\u003e \u003cstyle\u003e     .dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     } \u003c/style\u003e \u003ctable border=\"1\" class=\"dataframe\"\u003e   \u003cthead\u003e     \u003ctr style=\"text-align: right;\"\u003e       \u003cth\u003e\u003c/th\u003e       \u003cth\u003eid\u003c/th\u003e       \u003cth\u003ename\u003c/th\u003e       \u003cth\u003epay\u003c/th\u003e       \u003cth\u003emanager_id\u003c/th\u003e       \u003cth\u003eid\u003c/th\u003e       \u003cth\u003ename\u003c/th\u003e       \u003cth\u003epay\u003c/th\u003e     \u003c/tr\u003e   \u003c/thead\u003e   \u003ctbody\u003e     \u003ctr\u003e       \u003cth\u003e0\u003c/th\u003e       \u003ctd\u003e1\u003c/td\u003e       \u003ctd\u003eBob\u003c/td\u003e       \u003ctd\u003e3000.0\u003c/td\u003e       \u003ctd\u003e1\u003c/td\u003e       \u003ctd\u003e1\u003c/td\u003e       \u003ctd\u003eSteve\u003c/td\u003e       \u003ctd\u003e7000.0\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e1\u003c/th\u003e       \u003ctd\u003e2\u003c/td\u003e       \u003ctd\u003eKaren\u003c/td\u003e       \u003ctd\u003e4000.0\u003c/td\u003e       \u003ctd\u003e1\u003c/td\u003e       \u003ctd\u003e1\u003c/td\u003e       \u003ctd\u003eSteve\u003c/td\u003e       \u003ctd\u003e7000.0\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2\u003c/th\u003e       \u003ctd\u003e3\u003c/td\u003e       \u003ctd\u003ePatrick\u003c/td\u003e       \u003ctd\u003e4000.0\u003c/td\u003e       \u003ctd\u003e2\u003c/td\u003e       \u003ctd\u003e2\u003c/td\u003e       \u003ctd\u003eSpongebob\u003c/td\u003e       \u003ctd\u003e10000.0\u003c/td\u003e     \u003c/tr\u003e   \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e  \u003cp\u003eGreat, all of the information in one table!\u003c/p\u003e  \u003cp\u003eWell, that has everything we want, plus some extra information. It's confusing that we have \u003ccode\u003ename\u003c/code\u003e and \u003ccode\u003epay\u003c/code\u003e in there twice. Since we are trying to manage regular employee payroll, we probably only want the pay for those employees, and we should figure out a way to distinguish between the employee's name and the manager's name.\u003c/p\u003e  \u003cp\u003eMost of the time when you have a \u003ccode\u003eJOIN\u003c/code\u003e, you want to specify which columns you actually want, instead of \u003ccode\u003eSELECT *\u003c/code\u003e. Something like this, using aliases to make everything really clear:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eq = \"\"\"\u003cbr\u003eSELECT\u003cbr\u003e    employees.name AS employee_name,\u003cbr\u003e    employees.pay AS employee_pay,\u003cbr\u003e    managers.name AS manager_name\u003cbr\u003eFROM employees\u003cbr\u003eJOIN managers\u003cbr\u003e    ON employees.manager_id = managers.id\u003cbr\u003e;\u003cbr\u003e\"\"\"\u003cbr\u003epd.read_sql(q, conn) \u003c/code\u003e\u003c/pre\u003e \u003cdiv\u003e \u003cstyle\u003e     .dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     } \u003c/style\u003e \u003ctable border=\"1\" class=\"dataframe\"\u003e   \u003cthead\u003e     \u003ctr style=\"text-align: right;\"\u003e       \u003cth\u003e\u003c/th\u003e       \u003cth\u003eemployee_name\u003c/th\u003e       \u003cth\u003eemployee_pay\u003c/th\u003e       \u003cth\u003emanager_name\u003c/th\u003e     \u003c/tr\u003e   \u003c/thead\u003e   \u003ctbody\u003e     \u003ctr\u003e       \u003cth\u003e0\u003c/th\u003e       \u003ctd\u003eBob\u003c/td\u003e       \u003ctd\u003e3000.0\u003c/td\u003e       \u003ctd\u003eSteve\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e1\u003c/th\u003e       \u003ctd\u003eKaren\u003c/td\u003e       \u003ctd\u003e4000.0\u003c/td\u003e       \u003ctd\u003eSteve\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2\u003c/th\u003e       \u003ctd\u003ePatrick\u003c/td\u003e       \u003ctd\u003e4000.0\u003c/td\u003e       \u003ctd\u003eSpongebob\u003c/td\u003e     \u003c/tr\u003e   \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e  \u003cp\u003ePerfect! Now we have a nice, maintainable system, \u003cem\u003eand\u003c/em\u003e we are able to pull exactly the data needed for this task.\u003c/p\u003e  \u003ch2\u003eSQL Subqueries\u003c/h2\u003e  \u003cp\u003eAnother more-advanced technique we will introduce in this section is a SQL subquery. The above query, rewritten to use a subquery instead of \u003ccode\u003eJOIN\u003c/code\u003e, would be:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eq = \"\"\"\u003cbr\u003eSELECT\u003cbr\u003e    name AS employee_name,\u003cbr\u003e    pay AS employee_pay,\u003cbr\u003e    (\u003cbr\u003e        SELECT name\u003cbr\u003e        FROM managers\u003cbr\u003e        WHERE managers.id = employees.manager_id\u003cbr\u003e    ) AS manager_name\u003cbr\u003eFROM employees\u003cbr\u003e;\u003cbr\u003e\"\"\"\u003cbr\u003epd.read_sql(q, conn) \u003c/code\u003e\u003c/pre\u003e \u003cdiv\u003e \u003cstyle\u003e     .dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     } \u003c/style\u003e \u003ctable border=\"1\" class=\"dataframe\"\u003e   \u003cthead\u003e     \u003ctr style=\"text-align: right;\"\u003e       \u003cth\u003e\u003c/th\u003e       \u003cth\u003eemployee_name\u003c/th\u003e       \u003cth\u003eemployee_pay\u003c/th\u003e       \u003cth\u003emanager_name\u003c/th\u003e     \u003c/tr\u003e   \u003c/thead\u003e   \u003ctbody\u003e     \u003ctr\u003e       \u003cth\u003e0\u003c/th\u003e       \u003ctd\u003eBob\u003c/td\u003e       \u003ctd\u003e3000.0\u003c/td\u003e       \u003ctd\u003eSteve\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e1\u003c/th\u003e       \u003ctd\u003eKaren\u003c/td\u003e       \u003ctd\u003e4000.0\u003c/td\u003e       \u003ctd\u003eSteve\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2\u003c/th\u003e       \u003ctd\u003ePatrick\u003c/td\u003e       \u003ctd\u003e4000.0\u003c/td\u003e       \u003ctd\u003eSpongebob\u003c/td\u003e     \u003c/tr\u003e   \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e  \u003cp\u003eWe will go over more details of both \u003ccode\u003eJOIN\u003c/code\u003e and subqueries in the following lessons.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003econn.close() \u003c/code\u003e\u003c/pre\u003e \u003ch2\u003eInterview Practice\u003c/h2\u003e  \u003cp\u003eAs mentioned previously, SQL is a very common topic in the technical interviews you will encounter as a junior data scientist. After introducing \u003ccode\u003eJOIN\u003c/code\u003e clauses and subqueries, this section will include a quiz covering SQL interview questions and a lab that features real-world interview questions pertaining to SQL and relational databases from major companies such as Facebook and Google!\u003c/p\u003e  \u003ch2\u003eSummary\u003c/h2\u003e  \u003cp\u003eIn the previous section, you learned about SQL fundamentals. In this section you will begin to dig into the \u003cem\u003erelational\u003c/em\u003e aspect of SQL databases, and practice retrieving data from multiple tables at once. Then you will get some practice with the kinds of SQL questions that frequently appear in technical interviews.\u003c/p\u003e","frontPage":false},{"exportId":"introducing-python-libraries","title":"Introducing Python Libraries","type":"WikiPage","content":"\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eA library (or a module/package) is a pre-written piece of software that you can re-use rather than having to write that functionality yourself. So instead of having to write the code from scratch to plot a bar chart, you can use the Matplotlib library.\u003c/p\u003e\n\u003cp\u003eIn this lesson, we will look at some of the key libraries used in Python for Data Science.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eExplain the purpose of common Python libraries in the data science toolkit\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003ePython Libraries for Data Science\u003c/h2\u003e\n\u003ch3\u003eScientific Computation\u003c/h3\u003e\n\u003cp\u003eOne of the key requirements for a Data Scientist is to be able to convert data into an easy-to-process format. Data, represented inside a computer, may become too large to be processed efficiently by Python's native lists and dictionaries and using Python's built-in methods. The following libraries add scientific computation abilities to Python for working efficiently with larger data sets.\u003c/p\u003e\n\u003ch3\u003eNumPy\u003c/h3\u003e\n\u003cp\u003eIn Python, the most fundamental package used for scientific computation is \u003cstrong\u003eNumPy\u003c/strong\u003e (Numerical Python). It provides lots of useful functionality for mathematical operations on vectors and matrices in Python. Matrix computation is the primary strength of NumPy.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/numpy.jpeg\" width=\"250\"\u003e\u003c/p\u003e\n\u003cp\u003eThe library provides these mathematical operations using the NumPy \u003cstrong\u003earray\u003c/strong\u003e data type, which enhances performance and speeds up execution when compared to Python's default methods and data types. It contains among other things:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA powerful N-dimensional array object\u003c/li\u003e\n\u003cli\u003eSophisticated (broadcasting) functions\u003c/li\u003e\n\u003cli\u003eTools for integrating C/C++ and Fortran code\u003c/li\u003e\n\u003cli\u003eUseful linear algebra, Fourier transform, and random number capabilities\u003c/li\u003e\n\u003cli\u003eBesides its obvious scientific uses, NumPy can also be used as an efficient multi-dimensional container of generic data. Arbitrary data-types can be defined. This allows NumPy to seamlessly and speedily integrate with a wide variety of databases.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNumpy is also used as a foundation for other, more advanced, libraries as we shall see below.\u003c/p\u003e\n\u003ch3\u003eSciPy\u003c/h3\u003e\n\u003cp\u003eIn the Data Science domain, Python‚Äôs SciPy stack (a collection of software specifically designed for scientific computing) is used heavily for conducting scientific experiments. The SciPy library is as an integral part of this stack.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/scipy.png\" width=\"150\"\u003e\u003c/p\u003e\n\u003cp\u003eSciPy is a library of software for engineering and science applications and contains functions for \u003cstrong\u003elinear algebra\u003c/strong\u003e, \u003cstrong\u003eoptimization\u003c/strong\u003e, \u003cstrong\u003eintegration\u003c/strong\u003e, and \u003cstrong\u003estatistics\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eThe functionality of the SciPy library is built on top of NumPy, and its data structures make heavy use of NumPy. It provides efficient numerical computational routines and comes packaged with a number of specific submodules. The following are a few modules from this library which are very commonly applied to Data Science experiments:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003estats\u003c/code\u003e: Statistical functions\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003elinalg\u003c/code\u003e: Linear algebra routines\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003efftpack\u003c/code\u003e: Discrete Fourier transform algorithms\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003esignal\u003c/code\u003e: Signal processing tools\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eoptimize\u003c/code\u003e: Optimization algorithms including linear programming\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eStatsmodels\u003c/h3\u003e\n\u003cp\u003eStatsmodels is a library for Python that enables its users to conduct data exploration via the use of various methods of estimation of statistical models and performing statistical assertions and analysis.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/statsmodels-logo-300.png\" width=\"250\"\u003e\u003c/p\u003e\n\u003cp\u003eOne of the many useful features it provides is a comprehensive set of descriptive statistics. The library provides insights when diagnosing issues with linear regression models, generalized linear models, discrete choice models, robust linear models, and time series analysis models with various estimators.\u003c/p\u003e\n\u003cp\u003eThe library also provides extensive plotting functions that are designed specifically for statistical analysis and are optimized for good performance with large data sets.\u003c/p\u003e\n\u003ch3\u003ePandas\u003c/h3\u003e\n\u003cp\u003ePandas is a Python package designed to work with ‚Äúrelational‚Äù data and helps replicates the functionality of relational databases in a simple and intuitive way. Pandas is a great tool for data wrangling. It is designed for quick and easy data cleansing, manipulation, aggregation, and visualization.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/pandas-300x300.jpg\" width=\"200\"\u003e\u003c/p\u003e\n\u003cp\u003eThere are two main data structures in the library:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e‚ÄúSeries‚Äù - one-dimensional\u003c/li\u003e\n\u003cli\u003e‚ÄúDataFrames‚Äù - two-dimensional\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThese data types can be manipulated in a number of ways for analytical needs. Here are a few ways in which Pandas may come in handy:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eEasily delete and add columns from DataFrame\u003c/li\u003e\n\u003cli\u003eConvert data structures to DataFrame objects\u003c/li\u003e\n\u003cli\u003eHandle missing data and outliers\u003c/li\u003e\n\u003cli\u003ePowerful grouping and aggregation functionality\u003c/li\u003e\n\u003cli\u003eOffers visualization functionality to plot complex statistical visualizations on the go\u003c/li\u003e\n\u003cli\u003eThe data structures in Pandas are highly compatible with most of the other libraries\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eData Visualization\u003c/h2\u003e\n\u003cp\u003eData visualization is one of the most common tasks that Data Scientists have to perform. Traditionally, drawing visualizations would involve providing pixel level details and complex mathematical functions to create the plots. Luckily, Python has good library support for data visualization from plotting routine visualizations in Matplotlib, to developing graphical dashboards in Plotly and Bokeh. In this course, we will cover the following graphical packages:\u003c/p\u003e\n\u003ch3\u003eMatplotLib\u003c/h3\u003e\n\u003cp\u003eMatplotlib is another SciPy stack package and a library that is tailored for the generation of simple and powerful visualizations. It is a sophisticated package which is making Python (with the help of NumPy, SciPy, and Pandas) an industry standard analytics tool.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/matplotlib.png\" width=\"300\"\u003e\u003c/p\u003e\n\u003cp\u003eMatplotlib is a flexible plotting library for creating interactive 2D and 3D plots that can also be saved as manuscript-quality figures. The API in many ways reflects that of MATLAB, easing the transition of MATLAB users to Python. Many examples, along with the source code to re-create them, are available in the Matplotlib gallery. With a bit of effort you can make just about any visualization, including:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eLine plots\nScatter plots\nBar charts and Histograms\nPie charts\nStem plots\nContour plots\nQuiver plots\nSpectrograms\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThere are also facilities for creating labels, grids, legends, and many other formatting entities with Matplotlib. Basically, everything is customizable.\u003c/p\u003e\n\u003cp\u003eThe library, however, is pretty low-level which means that you will need to write more code for advanced visualizations and will generally need more effort.\u003c/p\u003e\n\u003ch3\u003eSeaborn\u003c/h3\u003e\n\u003cp\u003eSeaborn is complementary to Matplotlib and it specifically targets statistical data visualizations, which may be more time-consuming to implement using Matplotlib. Seaborn extends the functionality of Matplotlib and that‚Äôs why it can address the two biggest issues with Matplotlib - the quality of plots and parameter defaults. A full overview of Seaborn's capabilities (as the image below) can be found \u003ca href=\"https://seaborn.pydata.org/examples/index.html\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/seaborn_2.png\" width=\"500\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf Matplotlib \"tries to make easy things easy and hard things possible,\" then Seaborn tries to make a well-defined set of hard things easy too.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSince Seaborn complements and extends Matplotlib, if you know Matplotlib, you‚Äôll already have most of Seaborn down. Your plots with Seaborn will be more attractive, need less time to create, and will reveal more information.\u003c/p\u003e\n\u003ch2\u003eMachine Learning\u003c/h2\u003e\n\u003ch3\u003eScikit-Learn\u003c/h3\u003e\n\u003cp\u003eScikits are Scientific \"kits\" on top of the SciPy stack. These are designed to add specific functionality to SciPy like image processing and machine learning facilitation. For machine learning, one of the most heavily used packages is \u003cstrong\u003escikit-learn\u003c/strong\u003e. The package makes heavy use of its mathematical operations to model and test complex computational algorithms.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/sklearn.png\" width=\"200\"\u003e\u003c/p\u003e\n\u003cp\u003eScikit-learn (sometimes abbreviated to sklearn) offers a consistent interface to common Machine Learning (ML) algorithms, making it simple to bring ML into production systems. The library combines quality code and good documentation, ease of use and high performance, and has become industry standard for machine learning with Python. The image below highlights the key machine learning algorithms that come packaged with sklearn for problems in classification, regression, clustering, and dimensionality reduction. You can find an interactive version of the machine learning map below \u003ca href=\"https://scikit-learn.org/stable/tutorial/machine_learning_map/index.html\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/drop_shadows_background.png\" width=\"850\"\u003e\u003c/p\u003e\n\u003ch2\u003eDeep Learning‚Ää (Keras / TensorFlow)\u003c/h2\u003e\n\u003cp\u003eFor Deep Learning, one of the most popular and convenient libraries for Python is Keras, which builds on top of TensorFlow.\u003c/p\u003e\n\u003ch3\u003eTensorFlow\u003c/h3\u003e\n\u003cp\u003eDeveloped by a team of ML experts at Google, TensorFlow is an open-source library of data flow graph computations, which are fine-tuned for heavy duty Machine Learning. TensorFlow was designed to meet the performance requirements of Google for training Deep Neural Networks in order to analyze visual and textual data. However, TensorFlow isn't limited to scientific use - it is general enough to use in a variety of real-world applications.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/tf.png\" width=\"320\"\u003e\u003c/p\u003e\n\u003cp\u003eThe key feature of TensorFlow is its multi-layered nodes system that enables quick training of artificial neural networks on big data. This is the library that powers Google‚Äôs voice recognition and object recognition in real time.\u003c/p\u003e\n\u003ch3\u003eKeras\u003c/h3\u003e\n\u003cp\u003eKeras is an open-source library for building Neural Networks with a high-level of interface abstraction. The Keras library is written in Python so Python developers find it much easier to start coding for deep networks in Keras than Tensorflow, which demands a deeper understanding of graph computation. Keras is much more minimalistic and straightforward while still being highly extensible. Under the hood, it can use either Theano (another deep learning library) or TensorFlow.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introducing-python-libraries/master/images/keras.jpg\" width=\"320\"\u003e\u003c/p\u003e\n\u003cp\u003eKeras is really easy to get started with and for quick prototyping, it is highly modular and extensible. Notwithstanding its ease, simplicity, and high-level orientation, Keras is still deep and powerful enough for serious modeling. In the deep learning section of our course, we will introduce you to Keras to help you dive into deep neural networks.\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eA big part of your journey as a Data Scientist will be building comfort and familiarity with the key Python Data Science libraries that we've outlined in this lesson. As the course progresses, you'll get plenty of hands-on experience with each one of them!\u003c/p\u003e","frontPage":false},{"exportId":"separating-content-and-presentation","title":"Separating Content and Presentation","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-separating-content-and-presentation\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-separating-content-and-presentation/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou now know what HTML is and have explored a properly-formatted HTML document. That said, if you look at the HTML pages thus far, you can't help but notice that they look a little plain. To make them more attractive (and responsive), you can use Cascading Style Sheets or CSS!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIdentify the separation of content and presentation\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eExplain the role of CSS\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIdentify the Separation of Content and Presentation\u003c/h2\u003e\n\n\u003cp\u003eHTML lets you mark-up your content with semantic \u003cem\u003estructure\u003c/em\u003e. It forms the skeleton of your web page. It would be great to be able to say, \"Browser, when you see a \u003ccode\u003ep\u003c/code\u003e tag with \u003ccode\u003eid\u003c/code\u003e of \u003ccode\u003emy-name\u003c/code\u003e, make the first letter be huge!\" Or, to get your readers' attention, you might say, \"Browser, if you see \u003cem\u003eany\u003c/em\u003e tag with a \u003ccode\u003eclass\u003c/code\u003e of \u003ccode\u003ewarning\u003c/code\u003e surround it with a red box!\" HTML authors believe that \u003cem\u003ecreating\u003c/em\u003e marked-up documents and \u003cem\u003estyling\u003c/em\u003e marked-up documents are entirely separate tasks. They see a difference between writing \u003cem\u003econtent\u003c/em\u003e (the data within the HTML document) and specifying \u003cem\u003epresentation\u003c/em\u003e, the rules for displaying the rendered elements.\u003c/p\u003e\n\n\u003ch2\u003eExplain the Role of CSS\u003c/h2\u003e\n\n\u003cp\u003eCSS, or \"Cascading Style Sheets,\" tells you how to write rules that define how browsers will present HTML. Rules in CSS won't look like HTML and they usually live in a file apart from our HTML file.\u003c/p\u003e\n\n\u003cp\u003eCSS handles all of the ways you want to customize your content's look and feel from margins and colors, to column-based layout!\u003c/p\u003e\n\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cssguidelin.es/#the-separation-of-concerns\"\u003eCSS Guidelines: The Separation of Concerns\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.csszengarden.com/\"\u003eCSS Zen Garden\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eWeb developers separate the content of our HTML pages from their presentation, which they style with CSS. By keeping the two separate, you not only utilize the best tools for each job, but you can change code for one without disturbing the code for the other.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-separating-content-and-presentation\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-separating-content-and-presentation\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-separating-content-and-presentation/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"css-code-along","title":"CSS Code Along","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-css-code-along\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-css-code-along/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIt's time to see some CSS code in action. \u003ca href=\"https://codepen.io/\"\u003eCodepen\u003c/a\u003e is a great tool to easily test HTML and CSS code that you'll see in practice here.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Codepen to preview and modify HTML and CSS files\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eComment and uncomment CSS and HTML\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCode Example HTML Structure\u003c/h2\u003e\n\n\u003cp\u003eThis \u003ca href=\"https://codepen.io/curiositypaths/pen/WddzQM?editors=1100\"\u003ePen\u003c/a\u003e (saved Codepen document) contains an HTML document with the following structure:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eA \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body\"\u003e\u003ccode\u003e\u0026lt;body\u0026gt;\u003c/code\u003e\u003c/a\u003e element (root of the html content. In Codepen you will not see a body tag, it's implicitly present and wraps all the HTML content)\u003c/li\u003e\n\u003cli\u003eAn \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article\"\u003e\u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e\u003c/a\u003e tag to define our content as self-contained unit (e.g. blog post, newspaper article)\u003c/li\u003e\n\u003cli\u003eAn \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements\"\u003e\u003ccode\u003e\u0026lt;h1\u0026gt;\u003c/code\u003e\u003c/a\u003e tag to wrap the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e's header text\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p\"\u003e\u003ccode\u003e\u0026lt;p\u0026gt;\u003c/code\u003e\u003c/a\u003e tags to wrap the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e's unstructured text\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul\"\u003e\u003ccode\u003e\u0026lt;ul\u0026gt;\u003c/code\u003e\u003c/a\u003e tags to represent unordered lists\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li\"\u003e\u003ccode\u003e\u0026lt;li\u0026gt;\u003c/code\u003e\u003c/a\u003e tags to wrap each list item\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCode Example CSS Structure\u003c/h2\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://codepen.io/curiositypaths/pen/WddzQM?editors=1100\"\u003ePen\u003c/a\u003e also includes commented-out CSS Code to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eSet the background of the \u003ccode\u003e\u0026lt;body\u0026gt;\u003c/code\u003e element (whole document) to \u003ccode\u003e#00b3e6\u003c/code\u003e (light blue)\u003c/li\u003e\n\u003cli\u003eSets the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e element width to \u003ccode\u003e700px\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eCenters the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e element\u003c/li\u003e\n\u003cli\u003eSets the font family of the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e element to \u003ccode\u003eHelvetica Neue\u003c/code\u003e. Alternative fonts are provided in the event \u003ccode\u003eHelvetica Neue\u003c/code\u003e is not available on your computer\u003c/li\u003e\n\u003cli\u003eSet the background of the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e element to \u003ccode\u003ewhite\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eAdd 30px of white space to the perimeter of the \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eSet the \u003ccode\u003efont-size\u003c/code\u003e to \u003ccode\u003e22px\u003c/code\u003e for the element with \u003ccode\u003eid\u003c/code\u003e \u003ccode\u003emain-header\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eSet the \u003ccode\u003efont-style\u003c/code\u003e to \u003ccode\u003eitalic\u003c/code\u003e for elements containing the class \u003ccode\u003eperspective-questions\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCode Along Instructions\u003c/h2\u003e\n\n\u003cp\u003eOpen the \u003ca href=\"https://codepen.io/curiositypaths/pen/WddzQM?editors=1100\"\u003ePen\u003c/a\u003e in a separate browser tab to follow the code along instructions. \u003c/p\u003e\n\n\u003cp\u003eAll the CSS code you need to successfully modify the page is already included but commented out. All you need to do is uncomment all the \u003ccode\u003eCSS declarations\u003c/code\u003e (\u003ccode\u003eproperty-name\u003c/code\u003e:\u003ccode\u003evalue\u003c/code\u003e) one-by-one.\u003c/p\u003e\n\n\u003ch2\u003ePen Screenshot\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-css-code-along/master/images/codepen.jpeg\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eUnstyled HTML Document Screenshot\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-css-code-along/master/images/unstyled-codepen.jpeg\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eStyled HTML Document Screenshot\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-css-code-along/master/images/styled-codepen.jpeg\" width=\"1050\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eCSS Declarations Uncommenting Steps\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-css-code-along/master/images/css-code-codepen.jpg\" width=\"1050\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eAwesome! In this code along you got to preview and practice a standard web development environment and modify CSS code! Specifically, you used Codepen to modify HTML and CSS files. You also learned how commenting/uncommenting works in CSS and HTML!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-css-code-along\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-css-code-along\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-css-code-along/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"data-cleaning-in-pandas-introduction","title":"Data Cleaning in Pandas - Introduction","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-introduction-pandas-etl\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-pandas-etl\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-pandas-etl/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you will learn invaluable skills that will form the foundation of your data processing work. Before you can apply machine learning algorithms or do interesting analyses, you often must clean and transform your data into a suitable format. Such initial data wrangling processes are often referred to as Extract Transform Load (ETL). Our primary tool of choice for performing ETL and basic analyses will be the Pandas package.\u003c/p\u003e\n\n\u003ch2\u003eWhy ETL?\u003c/h2\u003e\n\n\u003cp\u003eETL is an essential first step to data analysis and data science. It also will form the foundation for exploratory data analysis. Often, you will be thrown a dataset that you have little to no information about. In these cases, your first step is to explore the data and get familiar with it. What are the columns? How many observations do you have? Are there missing values? Any outliers? If we have user-level data, how can we explore aggregate trends along features like gender, race, or geography? All of these can be answered by applying ETL to transform raw datasets into alternative useful views.\u003c/p\u003e\n\n\u003ch2\u003eQuick ETL Example\u003c/h2\u003e\n\n\u003cp\u003eWhile you'll see complete examples and explanations for all of these techniques (and more), here's a quick preview of some ETL techniques covered in this section! For more details, continue on to future lessons!\u003c/p\u003e\n\n\u003ch3\u003eImport data\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003epandas\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003epd\u003c/span\u003e\n\u003cspan class=\"n\"\u003edf\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epd\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread_csv\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e'Yelp_Reviews.csv'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eindex_col\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cstyle\u003e\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\u003c/style\u003e\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003ebusiness_id\u003c/th\u003e\n      \u003cth\u003ecool\u003c/th\u003e\n      \u003cth\u003edate\u003c/th\u003e\n      \u003cth\u003efunny\u003c/th\u003e\n      \u003cth\u003ereview_id\u003c/th\u003e\n      \u003cth\u003estars\u003c/th\u003e\n      \u003cth\u003etext\u003c/th\u003e\n      \u003cth\u003euseful\u003c/th\u003e\n      \u003cth\u003euser_id\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1\u003c/th\u003e\n      \u003ctd\u003epomGBqfbxcqPv14c3XH-ZQ\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2012-11-13\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003edDl8zu1vWPdKGihJrwQbpw\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eI love this place! My fiance And I go here atl...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003emsQe1u7Z_XuqjGoqhB0J5g\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2\u003c/th\u003e\n      \u003ctd\u003ejtQARsP6P-LbkyjbO1qNGg\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003e2014-10-23\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003eLZp4UX5zK3e-c5ZGSeo3kA\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003eTerrible. Dry corn bread. Rib tips were all fa...\u003c/td\u003e\n      \u003ctd\u003e3\u003c/td\u003e\n      \u003ctd\u003emsQe1u7Z_XuqjGoqhB0J5g\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e4\u003c/th\u003e\n      \u003ctd\u003eUms3gaP2qM3W1XcA5r6SsQ\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2014-09-05\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003ejsDu6QEJHbwP2Blom1PLCA\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eDelicious healthy food. The steak is amazing. ...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003emsQe1u7Z_XuqjGoqhB0J5g\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e5\u003c/th\u003e\n      \u003ctd\u003evgfcTvK81oD4r50NMjU2Ag\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2011-02-25\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003epfavA0hr3nyqO61oupj-lA\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003eThis place sucks. The customer service is horr...\u003c/td\u003e\n      \u003ctd\u003e2\u003c/td\u003e\n      \u003ctd\u003emsQe1u7Z_XuqjGoqhB0J5g\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e10\u003c/th\u003e\n      \u003ctd\u003eyFumR3CWzpfvTH2FCthvVw\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2016-06-15\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eSTiFMww2z31siPY7BWNC2g\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eI have been an Emerald Club member for a numbe...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eTlvV-xJhmh7LCwJYXkV-cg\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eshape\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e(2610, 9)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eApply lambda functions\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e'Review_Word_Length'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e'text'\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003elambda\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e()))\u003c/span\u003e\n\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cstyle\u003e\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\u003c/style\u003e\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003ebusiness_id\u003c/th\u003e\n      \u003cth\u003ecool\u003c/th\u003e\n      \u003cth\u003edate\u003c/th\u003e\n      \u003cth\u003efunny\u003c/th\u003e\n      \u003cth\u003ereview_id\u003c/th\u003e\n      \u003cth\u003estars\u003c/th\u003e\n      \u003cth\u003etext\u003c/th\u003e\n      \u003cth\u003euseful\u003c/th\u003e\n      \u003cth\u003euser_id\u003c/th\u003e\n      \u003cth\u003eReview_Word_Length\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1\u003c/th\u003e\n      \u003ctd\u003epomGBqfbxcqPv14c3XH-ZQ\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2012-11-13\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003edDl8zu1vWPdKGihJrwQbpw\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eI love this place! My fiance And I go here atl...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003emsQe1u7Z_XuqjGoqhB0J5g\u003c/td\u003e\n      \u003ctd\u003e58\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2\u003c/th\u003e\n      \u003ctd\u003ejtQARsP6P-LbkyjbO1qNGg\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003e2014-10-23\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003eLZp4UX5zK3e-c5ZGSeo3kA\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003eTerrible. Dry corn bread. Rib tips were all fa...\u003c/td\u003e\n      \u003ctd\u003e3\u003c/td\u003e\n      \u003ctd\u003emsQe1u7Z_XuqjGoqhB0J5g\u003c/td\u003e\n      \u003ctd\u003e30\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e4\u003c/th\u003e\n      \u003ctd\u003eUms3gaP2qM3W1XcA5r6SsQ\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2014-09-05\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003ejsDu6QEJHbwP2Blom1PLCA\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eDelicious healthy food. The steak is amazing. ...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003emsQe1u7Z_XuqjGoqhB0J5g\u003c/td\u003e\n      \u003ctd\u003e30\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e5\u003c/th\u003e\n      \u003ctd\u003evgfcTvK81oD4r50NMjU2Ag\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2011-02-25\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003epfavA0hr3nyqO61oupj-lA\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003eThis place sucks. The customer service is horr...\u003c/td\u003e\n      \u003ctd\u003e2\u003c/td\u003e\n      \u003ctd\u003emsQe1u7Z_XuqjGoqhB0J5g\u003c/td\u003e\n      \u003ctd\u003e82\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e10\u003c/th\u003e\n      \u003ctd\u003eyFumR3CWzpfvTH2FCthvVw\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2016-06-15\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eSTiFMww2z31siPY7BWNC2g\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eI have been an Emerald Club member for a numbe...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eTlvV-xJhmh7LCwJYXkV-cg\u003c/td\u003e\n      \u003ctd\u003e32\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eshape\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Previously this was (2610, 9), now we have added a column\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e(2610, 10)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eGroup data\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egroupby\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e'business_id'\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"s\"\u003e'stars'\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003emean\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ebusiness_id\n-050d_XIor1NpCuWkbIVaQ    5.0\n-0qht1roIqleKiQkBLDkbw    1.0\n-3zffZUHoY8bQjGfPSoBKQ    5.0\n-6tvduBzjLI1ISfs3F_qTg    5.0\n-9nai28tnoylwViuJVrYEQ    5.0\nName: stars, dtype: float64\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eCheck for duplicates\u003c/h3\u003e\n\n\u003cp\u003eCheck how many we have:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eduplicated\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003evalue_counts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eFalse    2277\nTrue      333\ndtype: int64\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eVisually inspect them:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Use keep=False to keep all duplicates and sort_values to put duplicates next to each other\n\u003c/span\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eduplicated\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ekeep\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"bp\"\u003eFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)].\u003c/span\u003e\u003cspan class=\"n\"\u003esort_values\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eby\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e'business_id'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cstyle\u003e\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\u003c/style\u003e\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003ebusiness_id\u003c/th\u003e\n      \u003cth\u003ecool\u003c/th\u003e\n      \u003cth\u003edate\u003c/th\u003e\n      \u003cth\u003efunny\u003c/th\u003e\n      \u003cth\u003ereview_id\u003c/th\u003e\n      \u003cth\u003estars\u003c/th\u003e\n      \u003cth\u003etext\u003c/th\u003e\n      \u003cth\u003euseful\u003c/th\u003e\n      \u003cth\u003euser_id\u003c/th\u003e\n      \u003cth\u003eReview_Word_Length\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1729\u003c/th\u003e\n      \u003ctd\u003e-GY2fx-8udXPY8qn2HVBCg\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2016-08-30\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eyQ6P1_CvM94wMLYw1T0UWA\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eJust opened a new account today.  So far I am ...\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003esZfZGrI592euyacKUcwQYg\u003c/td\u003e\n      \u003ctd\u003e55\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1729\u003c/th\u003e\n      \u003ctd\u003e-GY2fx-8udXPY8qn2HVBCg\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2016-08-30\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eyQ6P1_CvM94wMLYw1T0UWA\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eJust opened a new account today.  So far I am ...\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003esZfZGrI592euyacKUcwQYg\u003c/td\u003e\n      \u003ctd\u003e55\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e754\u003c/th\u003e\n      \u003ctd\u003e-LRlx2j9_LB3evsRRcC9MA\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2017-10-07\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003ekUqPsZmWwLIMSstGHhWssA\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eThe vet took the time to explain what was poss...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eVgaYZ7004pTwEDSDWR6u4Q\u003c/td\u003e\n      \u003ctd\u003e33\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e754\u003c/th\u003e\n      \u003ctd\u003e-LRlx2j9_LB3evsRRcC9MA\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2017-10-07\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003ekUqPsZmWwLIMSstGHhWssA\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eThe vet took the time to explain what was poss...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eVgaYZ7004pTwEDSDWR6u4Q\u003c/td\u003e\n      \u003ctd\u003e33\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2767\u003c/th\u003e\n      \u003ctd\u003e-MKWJZnMjSit406AUKf7Pg\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2015-01-03\u003c/td\u003e\n      \u003ctd\u003e2\u003c/td\u003e\n      \u003ctd\u003erJhrQD3-b9GjTso0dxIkwg\u003c/td\u003e\n      \u003ctd\u003e1\u003c/td\u003e\n      \u003ctd\u003eDrove 37 miles on a Saturday at 12:30pm for lu...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003ekzP96uX8TUMmmvLtd-I3RQ\u003c/td\u003e\n      \u003ctd\u003e18\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e...\u003c/th\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2193\u003c/th\u003e\n      \u003ctd\u003ezKw09ftu1730wEIZBZPoFg\u003c/td\u003e\n      \u003ctd\u003e3\u003c/td\u003e\n      \u003ctd\u003e2015-01-04\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eJV-yxKxMFp-d0rLDc_2_6w\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eSo relaxing combined with the meditation  and ...\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003e3mZFkwfa6XV0BBazRTva9w\u003c/td\u003e\n      \u003ctd\u003e31\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e496\u003c/th\u003e\n      \u003ctd\u003ezg5rJfgT4jhzg1d6r2twnA\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2014-06-21\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eZbj0HgdN3AT4l-mbH-EfjA\u003c/td\u003e\n      \u003ctd\u003e3\u003c/td\u003e\n      \u003ctd\u003eBurger week\\r\\n\\r\\n1. Blazing Pineapple Burger...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eUGW-9bbBEB3eP1o6mWD_WA\u003c/td\u003e\n      \u003ctd\u003e62\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e496\u003c/th\u003e\n      \u003ctd\u003ezg5rJfgT4jhzg1d6r2twnA\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2014-06-21\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eZbj0HgdN3AT4l-mbH-EfjA\u003c/td\u003e\n      \u003ctd\u003e3\u003c/td\u003e\n      \u003ctd\u003eBurger week\\r\\n\\r\\n1. Blazing Pineapple Burger...\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003eUGW-9bbBEB3eP1o6mWD_WA\u003c/td\u003e\n      \u003ctd\u003e62\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e988\u003c/th\u003e\n      \u003ctd\u003eziv21pDfyrgdhlrlNIgDfg\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2016-08-11\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003efus9odxu9bjE2lSxfwNfdw\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eGet this!!!  Wow Karlo is amazing and best cus...\u003c/td\u003e\n      \u003ctd\u003e2\u003c/td\u003e\n      \u003ctd\u003eywjqPgnMrDZKOhA33v92Cw\u003c/td\u003e\n      \u003ctd\u003e62\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e988\u003c/th\u003e\n      \u003ctd\u003eziv21pDfyrgdhlrlNIgDfg\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003e2016-08-11\u003c/td\u003e\n      \u003ctd\u003e0\u003c/td\u003e\n      \u003ctd\u003efus9odxu9bjE2lSxfwNfdw\u003c/td\u003e\n      \u003ctd\u003e5\u003c/td\u003e\n      \u003ctd\u003eGet this!!!  Wow Karlo is amazing and best cus...\u003c/td\u003e\n      \u003ctd\u003e2\u003c/td\u003e\n      \u003ctd\u003eywjqPgnMrDZKOhA33v92Cw\u003c/td\u003e\n      \u003ctd\u003e62\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e666 rows √ó 10 columns\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch3\u003eRemove duplicates\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edrop_duplicates\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eshape\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Previously this was (2610, 10), now we have dropped duplicate rows\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e(2277, 10)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eRecheck for duplicates\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eduplicated\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003evalue_counts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eFalse    2277\ndtype: int64\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Duplicates should no longer exist\n\u003c/span\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eduplicated\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ekeep\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"bp\"\u003eFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)].\u003c/span\u003e\u003cspan class=\"n\"\u003esort_values\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eby\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e'business_id'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cstyle\u003e\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\u003c/style\u003e\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003ebusiness_id\u003c/th\u003e\n      \u003cth\u003ecool\u003c/th\u003e\n      \u003cth\u003edate\u003c/th\u003e\n      \u003cth\u003efunny\u003c/th\u003e\n      \u003cth\u003ereview_id\u003c/th\u003e\n      \u003cth\u003estars\u003c/th\u003e\n      \u003cth\u003etext\u003c/th\u003e\n      \u003cth\u003euseful\u003c/th\u003e\n      \u003cth\u003euser_id\u003c/th\u003e\n      \u003cth\u003eReview_Word_Length\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\n\u003ch3\u003eCreate pivot tables\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# This transforms the data into a person by person spreadsheet and what stars they gave various restaurants\n# Most values are NaN (null or missing) because people only review a few restaurants of those that exist\n\u003c/span\u003e\u003cspan class=\"n\"\u003eusr_reviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epivot\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eindex\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e'user_id'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecolumns\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e'business_id'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalues\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e'stars'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003eusr_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cstyle\u003e\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\u003c/style\u003e\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003ebusiness_id\u003c/th\u003e\n      \u003cth\u003e-050d_XIor1NpCuWkbIVaQ\u003c/th\u003e\n      \u003cth\u003e-0qht1roIqleKiQkBLDkbw\u003c/th\u003e\n      \u003cth\u003e-3zffZUHoY8bQjGfPSoBKQ\u003c/th\u003e\n      \u003cth\u003e-6tvduBzjLI1ISfs3F_qTg\u003c/th\u003e\n      \u003cth\u003e-9nai28tnoylwViuJVrYEQ\u003c/th\u003e\n      \u003cth\u003e-C8sSrFqaCxp51pyo-fQLQ\u003c/th\u003e\n      \u003cth\u003e-Dnh48f029YNugtMKkkI-Q\u003c/th\u003e\n      \u003cth\u003e-FLnsWAa4AGEW4NgE8Fqew\u003c/th\u003e\n      \u003cth\u003e-G7MPSNBpxRJmtrJxdwt7A\u003c/th\u003e\n      \u003cth\u003e-GY2fx-8udXPY8qn2HVBCg\u003c/th\u003e\n      \u003cth\u003e...\u003c/th\u003e\n      \u003cth\u003ezdE82PiD6wquvjYLyhOJNA\u003c/th\u003e\n      \u003cth\u003ezdd3hyxB8ylYV6RcNe347Q\u003c/th\u003e\n      \u003cth\u003ezg5rJfgT4jhzg1d6r2twnA\u003c/th\u003e\n      \u003cth\u003eziv21pDfyrgdhlrlNIgDfg\u003c/th\u003e\n      \u003cth\u003ezkhBU5qW_zCy0q4OEtIrsA\u003c/th\u003e\n      \u003cth\u003eztP466jMUMtqLwwHqXbk9w\u003c/th\u003e\n      \u003cth\u003ezw9_mqWBn1QCfZg88w0Exg\u003c/th\u003e\n      \u003cth\u003ezwNLJ2VglfEvGu7DDZjJ4g\u003c/th\u003e\n      \u003cth\u003ezzYaAiC0rLNSDiFQlMKOEQ\u003c/th\u003e\n      \u003cth\u003ezzgSiOnuUjnBnmfR-ZG4ww\u003c/th\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003euser_id\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003e-0biHfjE0soSptbU5G3nug\u003c/th\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e-2K0yp7lBT_JUOzGkpdJ_g\u003c/th\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e-Opvc9hAWllZSSPDUsD7NA\u003c/th\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e-Zdxj4wuj4D_899B7tPE3g\u003c/th\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e-_iULENf28RbqL2k0ja5Xw\u003c/th\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003e...\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n      \u003ctd\u003eNaN\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e5 rows √ó 2192 columns\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this brief introduction, you learned the acronym ETL and got to preview a few examples of ETL processes using pandas. In the upcoming lessons you'll get a much richer understanding of these and other techniques for wrangling your data!\u003c/p\u003e","frontPage":false},{"exportId":"using-sql-with-pandas","title":"Using SQL with Pandas","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-using-sql-with-pandas\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-sql-with-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-sql-with-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eConsider the structure of a \u003cstrong\u003e\u003cem\u003ePandas DataFrame\u003c/em\u003e\u003c/strong\u003e.  \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-using-sql-with-pandas/master/images/df_example2.png\" alt=\"dataframe where each row represents a type of wine\" width=\"850\"\u003e\u003c/p\u003e\n\n\u003cp\u003eNow, let's consider the structure of a table from a \u003cstrong\u003e\u003cem\u003eSQL database\u003c/em\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-using-sql-with-pandas/master/images/sql_example2.png\" alt=\"SQL table where each record represents an employee\"\u003e\u003c/p\u003e\n\n\u003cp\u003eYou've probably noticed by now that they're essentially the same--a table of values, with each row having a unique index and each column having a unique name.  This allows us to quickly and easily access information when using SQL.  In this section, we'll learn how we can use SQL-style queries to query pandas DataFrames!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCompare accessing data in a DataFrame using query methods and conditional logic\u003c/li\u003e\n\u003cli\u003eQuery DataFrames with SQL using the \u003ccode\u003epandasql\u003c/code\u003e library\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eUsing \u003ccode\u003e.query()\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003ePandas DataFrames come with a built-in query method, which allows you to get information from DataFrames quickly without using the cumbersome slicing syntax.  \u003c/p\u003e\n\n\u003cp\u003eSee the following examples:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Getting Data using slicing syntax\n\u003c/span\u003e\u003cspan class=\"n\"\u003efoo_df\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebar_df\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ebar_df\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ebar_df\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e'Col_1'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ebar_df\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e'Col_2'\u003c/span\u003e\u003cspan class=\"p\"\u003e]]]\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# Using The query method\n\u003c/span\u003e\u003cspan class=\"n\"\u003efoo_df\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebar_df\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Col_1 \u0026gt; Col_2\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# These two lines are equivalent!\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNote that if you want to use \u003ccode\u003eand\u003c/code\u003e and \u003ccode\u003eor\u003c/code\u003e statements with the \u003ccode\u003e.query()\u003c/code\u003e method, you'll need to use \u003ccode\u003e\"\u0026amp;\"\u003c/code\u003e and \u003ccode\u003e\"|\"\u003c/code\u003e instead.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003efoo_df\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebar_df\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Col_1 \u0026gt; Col_2 \u0026amp; Col_2 \u0026lt;= Col_3\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eUsing SQL syntax with \u003ccode\u003epandasql\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eSince SQL is such a powerful, comfortable tool for Data Scientists, some people had the bright idea of creating a library that lets users query DataFrames using SQL-style syntax.  This library is called \u003ca href=\"https://pypi.org/project/pandasql/\"\u003epandasql\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eWe can install \u003ccode\u003epandasql\u003c/code\u003e using the bash command \u003ccode\u003epip install pandasql\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3\u003eImporting pandasql\u003c/h3\u003e\n\n\u003cp\u003eIn order to use \u003ccode\u003epandasql\u003c/code\u003e, we need to start by importing a \u003ccode\u003esqldf\u003c/code\u003e object from \u003ccode\u003epandasql\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003epandasql\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003esqldf\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, it's helpful to write a lambda function that will make it quicker and easier to write queries.  Normally, you would have to pass in the global variables every time we use an object.  In order to avoid doing this every time, here's how to write a lambda that does this for you:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003epysqldf\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003elambda\u003c/span\u003e \u003cspan class=\"n\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esqldf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eglobals\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, when you pass a query into \u003ccode\u003epysqldf\u003c/code\u003e, the lambda will also pass along the globals, saving you that repetitive task. \u003c/p\u003e\n\n\u003ch3\u003eWriting Queries\u003c/h3\u003e\n\n\u003cp\u003eTo write a query, you just format it as a multi-line string!\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"\"\"SELECT\n        m.date, m.beef, b.births\n     FROM\n        meats m\n     INNER JOIN\n        births b\n           ON m.date = b.date;\"\"\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn order to query DataFrames, you can just pass in the query string you've created to our \u003ccode\u003esqldf\u003c/code\u003e object that you stored in \u003ccode\u003epysqldf\u003c/code\u003e.  This will return a DataFrame.  \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eresults\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epysqldf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eThese advanced methods for querying DataFrames can make your life a lot easier by simplifying the syntax and allowing us to make use of SQL--use them to save yourself time and give keep your SQL skills strong!\u003c/p\u003e","frontPage":false},{"exportId":"nosql-databases-document-stores","title":"NoSQL Databases: Document Stores","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-document-stores-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-document-stores-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn more about NoSQL databases, and a specific NoSQL category, \u003cem\u003eDocument Stores\u003c/em\u003e. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:     \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe why NoSQL is useful\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDescribe situations when one would use NoSQL databases\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eList different NoSQL databases \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy NoSQL?\u003c/h2\u003e\n\n\u003cp\u003eRelational databases are a cornerstone of a modern technology. They're reliable, dependable, and they seem to be pretty much everywhere. Since their invention at IBM by Edgar Codd in 1970, they've rapidly grown to be used all over the place. Their creation allowed companies to track, store, and analyze data in ways that simply couldn't be done before. For the majority of situations, they're a great choice. However, as technology has progressed into the era of internet and smartphones, we've run into many different sorts of data that aren't a natural fit for a relational format. Let's examine a few of these situations, and see why NoSQL might be a better choice. \u003c/p\u003e\n\n\u003cp\u003eLet's assume that we need to store chat logs between customer service and customers through a web interface. These chats could be very short, or very long -- some chats may only be 2 or 3 messages, while others may conceivably be in the hundreds or thousands. For each message in the chat, we want to store metadata associated with the message, so that we can know things like which party sent the message, the time it was sent, the time the other party read the message, etc. This is a great use case for a NoSQL database, because it would be a very poor fit for a relational database. For starters, each chat can be any size, meaning that we can't just clearly define a table that links which messages belong to which chat. If every chat had only five messages, we might be able to make it work, with a column for \"message 1\", \"message 2\", and so on -- but we can't, because a chat has no set size, and can always grow larger in the future. A relational database would also waste a lot of space storing redundant information, and getting all the messages in a chat could result in some nasty runtimes for our SQL query if this data was stored in separate tables in something like the third normal format. \u003c/p\u003e\n\n\u003cp\u003eThere are several variants of NoSQL databases. They can be categorized into: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDocument Stores\u003c/li\u003e\n\u003cli\u003eKey-Value Stores\u003c/li\u003e\n\u003cli\u003eColumn Stores\u003c/li\u003e\n\u003cli\u003eGraph Databases\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIn this lesson, we will explore \u003cem\u003eDocument Stores\u003c/em\u003e. \u003c/p\u003e\n\n\u003ch2\u003eDocument Stores\u003c/h2\u003e\n\n\u003cp\u003eA \u003cstrong\u003e\u003cem\u003eDocument Store\u003c/em\u003e\u003c/strong\u003e is a database that stores records as unique documents in the database. These documents can be arbitrarily long, and can even contain other documents inside of them! The chat log example we saw above is a prime use case for a document store. In a document store, we could store each message and its accompanying metadata as a document, and then embed each of those documents in order in a chat document. In this way, we can easily access the data as needed. \u003c/p\u003e\n\n\u003cp\u003eIn these Document Stores, each document contains key-value pairs, with the actual data being stored in as the value. This makes Document Stores incredibly flexible, because each document can be unique. There is no constraint saying each document must have the same keys! This makes it great for working with data where we don't know what shape it will take (as we saw above, with chat logs that can be arbitrarily long or short), or perhaps when we don't know what data will be stored at all. This would be a problem in a relational database, because we would need to know what column the data belongs in before we could store it. With a Document Store, we can just create a key on the fly for the data that matters to us!\u003c/p\u003e\n\n\u003cp\u003eNote that while this flexibility makes it easy for us to store data on the fly, this also makes it harder for us to query data and get exactly what we need. Since each different document can potentially have its own \u003cstrong\u003e\u003cem\u003eSchema\u003c/em\u003e\u003c/strong\u003e, this means that we have to know what we are looking for. This also means that we have to be diligent in our naming conventions, because \u003ccode\u003echatLog\u003c/code\u003e is different than \u003ccode\u003eChatLog\u003c/code\u003e. This means that if we run a query across all documents to get all data with the key \u003ccode\u003echatLog\u003c/code\u003e, we'll completely miss any data where they key is written as \u003ccode\u003eChatLog\u003c/code\u003e!\u003c/p\u003e\n\n\u003ch5\u003ePopular  Document Store Databases: MongoDB and Couchbase\u003c/h5\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-document-stores-v2-1/master/images/mongo-db-logo.png\" height=\"60%\" width=\"60%\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-nosql-document-stores-v2-1/master/images/couchbase-logo.png\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned about the various sorts of NoSQL Databases in the market today. We dug into the similarities and differences between them all, and also looked at a few examples where a NoSQL Database is a more natural fit for storing data than a traditional relational database. \u003c/p\u003e\n\n\u003cp\u003eIn this lesson, we looked at examples where a NoSQL database is a more natural fit for storing data than a traditional relational database. We also looked at \u003cem\u003eDocument Stores\u003c/em\u003e, one of the few types of NoSQL databases. \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-nosql-document-stores-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-nosql-document-stores-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-nosql-document-stores-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"sql-database-data-types","title":"SQL Database Data Types","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-sql-database-data-types\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-database-data-types\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-database-data-types/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this lesson, you'll cover the importance of specifying data types, and the different types of data you can store in a SQLite database.\u003c/p\u003e  \u003ch2\u003eObjectives\u003c/h2\u003e  \u003cp\u003eYou will be able to:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eDescribe how data types operate within databases and explain why they are necessary\u003c/li\u003e \u003cli\u003eCompare the 4 different types of data you can store in a SQLite database\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eWhy Do Data Types Matter?\u003c/h2\u003e  \u003cp\u003eYou've seen that when you create a table, you need to include a name for it as well as define at least one column. You define columns in a \u003ccode\u003eCREATE\u003c/code\u003e statement by including a name and a data type to let SQLite know the kind of data you will be storing there. The practice of explicitly declaring a type is known as \"typing.\" \u003c/p\u003e  \u003cp\u003eWhy is it important that you use typing in our database? Simply put, typing allows us to exercise some level of control over our data. Typing not only informs our database of the kind of data you plan to store in a column but it also restricts it. For instance, look at the age column below in our cats table. What do you mean by age? What if you had this:\u003c/p\u003e  \u003ctable\u003e\u003cthead\u003e \u003ctr\u003e \u003cth\u003ename\u003c/th\u003e \u003cth\u003ebreed\u003c/th\u003e \u003cth\u003eage\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e\u003ctbody\u003e \u003ctr\u003e \u003ctd\u003eMaru\u003c/td\u003e \u003ctd\u003eScottish Fold\u003c/td\u003e \u003ctd\u003e3\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eHannah\u003c/td\u003e \u003ctd\u003eTabby\u003c/td\u003e \u003ctd\u003etwo\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eLil' Bub\u003c/td\u003e \u003ctd\u003eAmerican Shorthair\u003c/td\u003e \u003ctd\u003e5.5\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e\u003c/table\u003e  \u003cp\u003eDid you intend age to be represented as a whole-number, a word, or a decimal? If you were asked to add up the ages of all the cats you could simply convert the \u003ccode\u003e'two'\u003c/code\u003e to \u003ccode\u003e2\u003c/code\u003e in your head, but your database can't do that. It doesn't have that ability because the logic involved in converting a word into a number would be dense and inefficient. What about different languages? What about different spellings? Capitalization, typos, or different hyphenation conventions? These are just some reasons this might start to get overwhelming. In other words, because databases are designed to store large amounts of data, they are very concerned with storing, accessing, and acting upon that data as efficiently as possible, which requires typing of columns.\u003c/p\u003e  \u003cp\u003eTyping gives us the ability to perform all kinds of operations with predictable results. For instance, the ability to perform math operations like \u003ccode\u003eSUM\u003c/code\u003e (i.e. summing integers). If you tried, for example,  to \u003ccode\u003eSUM\u003c/code\u003e all of the cats in the above table, SQLite would actually attempt to convert, or cast, their type to something it can \u003ccode\u003eSUM\u003c/code\u003e. It would try to convert anything it can to an \u003ccode\u003eINTEGER\u003c/code\u003e and ignore alpha characters. This can lead to real problems. Without typing, our data might get complicated and messy, and it would be difficult to ask the database questions about large sets of data.\u003c/p\u003e  \u003cp\u003eSimply put, it's important to adhere strictly to only storing data that fits with the data type you have given to a particular column. Once you have assigned a data type, most databases will actually throw errors rather than allowing the invalid data to be inserted.\u003c/p\u003e  \u003ch2\u003eData Types\u003c/h2\u003e  \u003cp\u003eDifferent database systems also have different data types available, which are important and useful to know whenever you are dealing with those systems. SQLite is a good starting point to learn about data types because it only has four basic categories of data types; they are:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eTEXT\u003cbr\u003eINTEGER\u003cbr\u003eREAL\u003cbr\u003eBLOB \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eLet's explore each category in more detail.\u003c/p\u003e  \u003ch3\u003eTEXT\u003c/h3\u003e  \u003cp\u003eAny alphanumeric characters which you want to represent as plain text. The body of this paragraph is text. Your name is text. Your email address is a piece of text. Your height, weight, and age, however, are probably not.\u003c/p\u003e  \u003cp\u003eThis SQL data type roughly corresponds to the \u003ccode\u003estr\u003c/code\u003e data type in Python.\u003c/p\u003e  \u003ch3\u003eINTEGER\u003c/h3\u003e  \u003cp\u003eAnything you want to represent as a whole number. If it's a number and contains no letter or special characters or decimal points then you should store it as an integer. If you use it to perform math or create a comparison between two different rows in our database, then you definitely want to store it as an integer.\u003c/p\u003e  \u003cp\u003eIf it's a number that doesn't represent a quantity (e.g. an ID number or zip code), it depends on the context whether you should store it as an integer. You might never add two house address numbers together, but you might want to sort them numerically. On the other hand, if you have meaningful leading zeroes (e.g. \u003ccode\u003e02134\u003c/code\u003e, which you don't want to treat as equivalent to \u003ccode\u003e2134\u003c/code\u003e), then it's better to store it as text.\u003c/p\u003e  \u003cp\u003eThis SQL data type roughly corresponds to the \u003ccode\u003eint\u003c/code\u003e data type in Python.\u003c/p\u003e  \u003ch3\u003eREAL\u003c/h3\u003e  \u003cp\u003eAnything that's a plain old decimal like 1.3 or 2.25. SQLite will store decimals up to 15 characters long. You can store 1.2345678912345 or 1234.5678912345, but 1.23456789123456789 would only store 1.2345678912345. In other database systems this is called 'double precision.'\u003c/p\u003e  \u003cp\u003eThis SQL data type roughly corresponds to the \u003ccode\u003efloat\u003c/code\u003e data type in Python.\u003c/p\u003e  \u003ch3\u003eBLOB\u003c/h3\u003e  \u003cp\u003eYou may encounter the \u003ccode\u003eBLOB\u003c/code\u003e data type while you're Googling or doing any further reading on SQLite. For now, you will not use \u003ccode\u003eBLOB\u003c/code\u003e. It stands for \"binary large object\" and is generally used for holding binary data such as images or audio files. When we use those kinds of files in this course, we will generally just store them using the computer's file storage system (hard drive), rather than using databases.\u003c/p\u003e  \u003ch2\u003eSQLite and Other SQL Implementations\u003c/h2\u003e  \u003cp\u003eTo increase its compatibility with other database engines (e.g. mySQL or PostgreSQL), SQLite allows the programmer to use other common data types outside of the four mentioned above. This is why we are referring to \u003ccode\u003eTEXT\u003c/code\u003e, \u003ccode\u003eINTEGER\u003c/code\u003e, \u003ccode\u003eREAL\u003c/code\u003e, and \u003ccode\u003eBLOB\u003c/code\u003e as data type \"categories\". All other common data types are lumped into one of the four existing data types recognized by SQLite. \u003c/p\u003e  \u003cp\u003eFor example, \u003ccode\u003eINT\u003c/code\u003e is a common data type used outside of SQLite. SQLite won't complain if you define a column as an \u003ccode\u003eINT\u003c/code\u003e data type. It will simply lump it into the \u003ccode\u003eINTEGER\u003c/code\u003e category and store it as such. Similarly, if something is declared as \u003ccode\u003eVARCHAR\u003c/code\u003e, SQLite will treat it as \u003ccode\u003eTEXT\u003c/code\u003e.\u003c/p\u003e  \u003cp\u003eTo accommodate this, SQLite has a pretty complicated system of categorizing data types that involves \u003cem\u003eStorage Classes\u003c/em\u003e, \u003cem\u003eType Affinities\u003c/em\u003e, and \u003cem\u003eDatatypes\u003c/em\u003e. There is also a fifth data type category called \u003ccode\u003eNUMERIC\u003c/code\u003e that can actually contain any of \u003ccode\u003eTEXT\u003c/code\u003e, \u003ccode\u003eINTEGER\u003c/code\u003e, \u003ccode\u003eREAL\u003c/code\u003e, and \u003ccode\u003eBLOB\u003c/code\u003e types. This one mainly comes up for Python developers when you are working with \u003ccode\u003eBOOLEAN\u003c/code\u003e data (like \u003ccode\u003eTrue\u003c/code\u003e or \u003ccode\u003eFalse\u003c/code\u003e in Python), which becomes a \u003ccode\u003eNUMERIC\u003c/code\u003e column containing 0s and 1s rather than some separate boolean data type.\u003c/p\u003e  \u003cp\u003eFor a deeper dive, check out the \u003ca href=\"http://www.sqlite.org/datatype3.html\"\u003eSQLite3 Documentation on Datatypes\u003c/a\u003e\u003c/p\u003e  \u003ch2\u003eSummary\u003c/h2\u003e  \u003cp\u003eGreat! Now that you've finished this lesson you know why it is important to specify data types, and you know about the different types of data you can store in a SQLite database.\u003c/p\u003e","frontPage":false},{"exportId":"data-privacy-and-data-ethics","title":"Data Privacy and Data Ethics","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-ethics\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-ethics/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eData ethics and data privacy are integral to any data project. There are obvious cases such as protecting the privacy of individuals health records under HIPAA. There are also many gray areas surrounding what constitutes personally identifiable information (PII) which occur throughout many industries including advertising, finance, and consumer goods. You may have noticed that starting around the summer of 2018, you started receiving privacy policy notices on many websites asking you to accept the use of cookies. This was a result of Europe's GDPR legislation. You are also probably aware of the Cambridge Analytica debacle in the 2016 United States presidential election. As a data practitioner, it is your responsibility to uphold data ethics in a fast-changing environment.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDetermine whether or not a data science procedure meets an ethics standard\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eExamples\u003c/h2\u003e\n\n\u003ch3\u003eData Breaches\u003c/h3\u003e\n\n\u003cp\u003eIf the data you are handling is valuable, then security should be a primary concern. Data breaches are all too common and often, such leaks of sensitive information could have been avoided if businesses and organizations followed standard security protocols. While there are thousands of said cases, two of the biggest breaches which have caught the public's attention include Cambridge Analytica's misuse of Facebook data to influence political elections, and Equifax's leaking of roughly 100 million individuals' social security numbers and credit scores. \u003c/p\u003e\n\n\u003ch3\u003eIdentifying PII\u003c/h3\u003e\n\n\u003cp\u003ePII stands for \u003cstrong\u003epersonally identifiable information\u003c/strong\u003e. While some cases such as one's social security number and medical records are clear examples of PII, other pieces of data may or may not qualify as PII depending on the jurisdiction. In the United States for example, there are two federal regulations: the Health Insurance Portability and Accountability Act (HIPAA), and the Privacy Act of 1974. While in theory these acts aim to protect the use, collection, and maintenance of personal data, the scope of what constitutes PII and the subsequent regulations surrounding handling and using said data is generally antiquated. For example, a user's IP address has been categorized as non-PII by several U.S. courts despite it being a unique identifier to most individual's home internet connection. This was further eroded by the rollback of net neutrality laws by the FCC Chairman Ajit Pai in mid-2018. Aside from federal jurisdiction, several states, most notably California have their own data protection laws to the benefit and protection of users and consumers.\u003c/p\u003e\n\n\u003ch3\u003eGDPR\u003c/h3\u003e\n\n\u003cp\u003eGDPR stands for the \u003cstrong\u003egeneral data protection regulation\u003c/strong\u003e. It was passed on April 14th 2016 by the European Union and went into effect on May 25th 2018. GDPR protects the data rights of all European citizens and is an example of how legislation will have to change and adapt to the online digital era of the 21st century. GDPR has implemented more widespread regulations surrounding what constitutes PII and has set fine structures for up to 4% of a company's revenue.\u003c/p\u003e\n\n\u003ch3\u003eData Best Practices\u003c/h3\u003e\n\n\u003cp\u003eThere are two primary practices that you should follow when dealing with PII and other sensitive data. The first is to encrypt sensitive data. When in doubt, encrypt. Secondly, ask yourself what level of information you really need. Large organizations will always include data cleaning teams which will first scrub sensitive data such as names and addresses before passing said data off to analysts and others to mine. Ultimately, any well-thought strategy will include multiple layers, safeguards, and other measures to ensure data is safe and secure.\u003c/p\u003e\n\n\u003ch3\u003eData Collection Processes\u003c/h3\u003e\n\n\u003cp\u003eWhen collecting data, it is important to ensure you are not gathering it in a manner that will generate bias. For example, if Data Scientists are not careful in the way they phrase questions in surveys, they can generate misleading results. If a poll contained the question \"How poorly has Politician X performed when it comes to the economy\" it adds a negative connotation the question. That phrasing might make people say Politician X performed worse than if they had merely been asked \"How has Politician X performed when it comes to the economy?\" \u003c/p\u003e\n\n\u003cp\u003eIn some cases, choosing which variables to collect and how to define them can also contain bias. You‚Äôll notice that in some of the datasets we use, gender is represented as a binary value and race is referenced in an insensitive manner. This is an artifact of the societal conditions at the time the data was collected. As soon-to-be Data Scientists, it will be your responsibility to ensure that data collection is done in an inclusive manner.\u003c/p\u003e\n\n\u003ch3\u003eAlgorithm Bias\u003c/h3\u003e\n\n\u003cp\u003ePeople often trust algorithms and their output based on measurements such as \"this algorithm has 99.9% accuracy\". However, it should also be noted that while algorithms such as linear regression are mathematically sound and powerful tools, the models are simply reflections of the data that is fed in. For example, logistic regression and other algorithms are used to inform a wide range of decisions including whether to provide someone with a loan, the degree of criminal sentencing, or whether to hire an individual for a job. (Do a quick search online for algorithm bias, or check out some of the articles below.) In all of these scenarios, it is again important to remember that the algorithm is simply reflective of the underlying data itself. If an algorithm is trained on a dataset where African Americans have had disproportionate criminal prosecution, the algorithm will continue to perpetuate these racial injustices. Similarly, algorithms trained on data reflecting a gender pay-gap will also continue to promote this bias. With this, substantial thought and analysis regarding problem set up and the resulting model is incredibly important.\u003c/p\u003e\n\n\u003cp\u003eBelow is a handful of resources providing further information regarding some of the topics discussed here.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.propublica.org/article/machine-bias-risk-assessments-in-criminal-sentencing\"\u003eMachine Bias\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.bloomberg.com/opinion/articles/2018-10-16/amazon-s-gender-biased-algorithm-is-not-alone\"\u003eAmazon‚Äôs Gender-Biased Algorithm Is Not Alone\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.bostonglobe.com/business/2017/12/21/the-software-that-runs-our-lives-can-bigoted-and-unfair-but-can-fix/RK4xG4gYxcVNVTIubeC1JI/story.html\"\u003eThe software that runs our lives can be bigoted and unfair. But we can fix it\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.bostonglobe.com/ideas/2017/07/07/why-artificial-intelligence-far-too-human/jvG77QR5xPbpwBL2ApAFAN/story.html\"\u003eWhy artificial intelligence is far too human\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.npr.org/2016/03/14/470427605/can-computers-be-racist-the-human-like-bias-of-algorithms\"\u003eCan Computers Be Racist? The Human-Like Bias Of Algorithms\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eGray Areas and Forward Thinking\u003c/h2\u003e\n\n\u003cp\u003eAside from overtly illegal practices according to current legislation, data privacy and ethics calls into question a myriad of various thought experiments. For example, should IP addresses or cookies be considered PII? How should security camera footage be handled? What about vehicles such as Google street view cars which are capturing video and pictures of public places? Some companies are now even taking pictures of license plates to track car movements. Should they be allowed to maintain massive databases of said information? What regulations should be put on these and other potentially sensitive datasets?  \u003c/p\u003e\n\n\u003cp\u003eAll of these examples question where and when limits should be put on data. Science fiction stories such as 1984, are much more accurate then one might expect. Moreover, injustices and questionable practices still abound. For example, despite public outcry at debacles like Cambridge Analytica, many companies still exist with nearly identical practices such as \u003ca href=\"https://web.archive.org/web/20160305010738/http://applecart.co/\"\u003eApplecart\u003c/a\u003e in New York City, which collects and sells user data to the Republican party, amongst others. \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-ethics/master/images/fix-it.png\" width=\"750\"\u003e\u003c/p\u003e\n\n\u003ch2\u003e\u003ca href=\"https://www.eff.org/deeplinks/2019/02/announcing-fix-it-already\"\u003eFix it Already!\u003c/a\u003e\u003c/h2\u003e\n\n\u003cp\u003eIn staying current, you should also identify some news sources to stay up to date on tech trends.\u003cbr\u003e\nOne great resource is the \u003ca href=\"https://www.eff.org/\"\u003eElectronic Frontier Foundation (EFF)\u003c/a\u003e.  \u003c/p\u003e\n\n\u003cp\u003eEFF recently put together an article called Fix it Already, outlining fixable mishaps by technology companies that continue to be ignored. Take a look at the article \u003ca href=\"https://www.eff.org/deeplinks/2019/02/announcing-fix-it-already\"\u003ehere\u003c/a\u003e and get involved to put pressure on these organizations and your representatives to shape up. Here's a quick preview of their list:  \u003c/p\u003e\n\n\u003cp\u003e\u003c/p\u003e\u003cli\u003e\u003cspan\u003eAndroid should let users \u003ca href=\"https://fixitalready.eff.org/android\"\u003edeny and revoke apps' Internet permissions\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eApple should let users \u003ca href=\"https://fixitalready.eff.org/apple\"\u003eencrypt their iCloud backups\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eFacebook should \u003ca href=\"https://fixitalready.eff.org/facebook\"\u003eleave your phone number where you put it\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eSlack should give \u003ca href=\"https://fixitalready.eff.org/slack\"\u003efree workspace administrators control over data retention\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eTwitter should \u003ca href=\"https://fixitalready.eff.org/twitter\"\u003eend-to-end encrypt direct messages\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eVenmo should let users \u003ca href=\"https://fixitalready.eff.org/venmo\"\u003ehide their friends lists\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eVerizon should \u003ca href=\"https://fixitalready.eff.org/verizon\"\u003estop pre-installing spyware on its users‚Äô phones\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eWhatsApp should \u003ca href=\"https://fixitalready.eff.org/whatsapp\"\u003eget your consent before you‚Äôre added to a group\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eWindows 10 should let users \u003ca href=\"https://fixitalready.eff.org/win10\"\u003ekeep their disk encryption keys to themselves\u003c/a\u003e.\u003c/span\u003e\u003c/li\u003e\n\n\u003ch2\u003eDisclaimer\u003c/h2\u003e\n\n\u003cp\u003eAs a final note, it should also be noted that the nature of online data can also include offensive or inappropriate data at times. For example, if acquiring data from an API such as Twitter, there is potential to encounter lewd or offensive material. While many of these services will eventually screen out and remove particularly egregious cases, plenty of trolls still exist.\u003c/p\u003e\n\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\n\u003cp\u003eThere's a multitude of resources to get involved with data privacy and ethics, but here's a few to get you started.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.eff.org/\"\u003eElectronic Frontier Foundation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:32016R0679\u0026amp;from=EN\"\u003eGDPR\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.hhs.gov/hipaa/for-professionals/index.html\"\u003eHIPAA\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://datadetox.myshadow.org/en/home\"\u003eData Detox\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you got a preview of some of the many issues regarding data privacy and ethics. From GDPR to being aware of your own data aura, there's plenty to keep you busy and on your toes regarding this fascinating perspective on the data industry.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-data-ethics\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-data-ethics\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-data-ethics/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"html-css-and-web-scraping-recap-2","title":"HTML, CSS and Web Scraping -  Recap","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-recap-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-recap-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you learned a lot about web pages and how to exploit their structure for your own web scraping purposes. Take this opportunity to briefly review some of the key takeaways from the section.\u003c/p\u003e\n\n\u003ch2\u003eHTML\u003c/h2\u003e\n\n\u003cp\u003eTo start this section, you investigated the basic structure of an HTML page and saw both the nested structure as well as some of the basic tags that you later leveraged for web scraping. This included \u003ccode\u003ea\u003c/code\u003e tags for links and \u003ccode\u003ediv\u003c/code\u003e tags which act as general containers for other HTML code blocks.\u003c/p\u003e\n\n\u003cp\u003eIf you are interested in taking a deeper dive into the world of HTML, check out the additional HTML lessons in the Appendix which cover more advanced topics. \u003c/p\u003e\n\n\u003ch2\u003eCSS\u003c/h2\u003e\n\n\u003cp\u003eAfter taking an initial look at HTML, you then saw the role CSS plays in styling a web page. You learned that HTML deals with content while CSS deals with style. There is certainly more you could learn regarding CSS but an important take away is that CSS selectors can also be used while web scraping. For example, you can select a tag with \u003ccode\u003eid\u003c/code\u003e or \u003ccode\u003eclass\u003c/code\u003e selector.\u003c/p\u003e\n\n\u003ch2\u003eBeautiful Soup\u003c/h2\u003e\n\n\u003cp\u003eAfter an initial exploration into web development, you then returned to Python and used the requests and Beautiful Soup packages in order to extract data from the web. This was also a great chance for you to practice your data wrangling skills as you often will have to navigate nested data structures and clean messy data, removing spaces, using regular expressions and converting data types. \u003c/p\u003e\n\n\u003ch2\u003ePrecautions\u003c/h2\u003e\n\n\u003cp\u003eRemember to practice caution when scraping websites. Surfing the web at superhuman speeds will get you banned from many domains and may violate the terms \u0026amp; conditions of many websites that require you to login. As such, there are a few considerations you should take along your way.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAre there terms and conditions for using the website?\u003c/li\u003e\n\u003cli\u003eTest your scraping bot on in small samples to debug before scaling to hundreds, thousands or millions of requests.\u003c/li\u003e\n\u003cli\u003eStart thinking about your IP address: getting blacklisted from a website is no fun. Consider using a VPN.\u003c/li\u003e\n\u003cli\u003eSlow your bot down! Add delays along the way with the time package. Specifically, time.sleep(seconds) adds wait time in a program.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eOther Scraping Tools\u003c/h2\u003e\n\n\u003cp\u003eWhile Beautiful Soup is a powerful go-to tool for scraping the web, remember that there are other tools such as Selenium and Scrapy that have their own advantages and disadvantages. While Beautiful Soup is apt to be your primary scraping tool, for now, it is worth noting that there are other options should you feel like you need additional resources such as interacting with dynamic javascript-based websites.\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eThis was an exciting section delving into the world of web scraping! There's always a plethora of information to be mined from the web so go out there and get scraping!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-html-css-scraping-recap-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-html-css-scraping-recap-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-html-css-scraping-recap-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"short-video-pandas-groupby","title":"Short Video: Pandas GroupBy","type":"WikiPage","content":"\u003cdiv style=\"padding:62.5% 0 0 0;position:relative;\"\u003e\u003ciframe src=\"https://player.vimeo.com/video/713399088?h=71fdbf7fc8\u0026amp;badge=0\u0026amp;autopause=0\u0026amp;player_id=0\u0026amp;app_id=58479\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen=\"\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;\" title=\"Pandas GroupBy Function\"\u003e\u003c/iframe\u003e\u003c/div\u003e","frontPage":false},{"exportId":"setting-up-a-professional-data-science-environment-introduction","title":"Setting up a Professional Data Science Environment - Introduction","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-introduction\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-science-env-introduction/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you want to become a professional data scientist, it‚Äôs important to take a little time to ‚Äúset yourself up for success‚Äù by installing and learning to use the right tools on your computer.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eList some tools used by professional data scientists, and why they are useful\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eWhat Tools do Professional Data Scientists Use?\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003ePython\u003c/strong\u003e - There are many languages that can be used for data science, but these days most data scientists are using Python to write their code.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eJupyter Notebook\u003c/strong\u003e - Most of those data scientists use Jupyter Notebook for writing their Python code. Jupyter Notebook is a tool that allows you to mix comments in-between your code snippets so you can document and share your thought process and make it easier for others to review, replicate, and expand on your work. It's also what we're using for almost all of our lessons in this course!\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eAnaconda\u003c/strong\u003e - Anaconda is one of the most popular ways for data scientists to install Python and Jupyter on their computers. It also provides package management and virtual environments so you can get all the latest data science tools running, like NumPy, Scikit-Learn, and Tensorflow, and so you can use different versions of Python and your packages for different projects without them conflicting with each other.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eGit\u003c/strong\u003e - Git is a version control system. It‚Äôs a way of keeping track of all the changes made across your project. Think of it like ‚Äútrack changes‚Äù in Word - but with the ability to track changes across multiple documents. At Flatiron School, we use Git to keep track of all of the lessons we create and all the changes we make to them.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eGitHub\u003c/strong\u003e - GitHub is a website where data scientists (and programmers) can save their work in case their computer breaks, and share it with their team or the world! At Flatiron School, we store all of our lessons on GitHub.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIt‚Äôs going to take us a few minutes to get this all installed, but once we do, not only will you be set-up for working through the course, but you‚Äôll also have a professional data science setup on your computer for any future courses or projects you want to work on!\u003c/p\u003e\n\u003ch2\u003eComputer Prerequisites\u003c/h2\u003e\n\u003cp\u003eThere are many amazing computing devices available these days, but not all of them will allow you to do data science. We love smartphones, flip phones, Chromebooks, tablets (including iPads), Game Boys, Nintendo Switches, Rokus and Arduinos. But you‚Äôre not going to be able to complete this course on any of those devices.\u003c/p\u003e\n\u003cp\u003eYou‚Äôre going to need a computer (laptop or desktop). It should be running a recent (last 3-4 years) version of MacOS, Windows or Linux, and ideally, it should have 8Gb of RAM and at least 20Gb free hard drive space. More information \u003ca id=\"32789\" class=\"instructure_file_link instructure_scribd_file\" href=\"viewer/files/ComputerRequirements.pdf?canvas_download=1\u0026amp;canvas_qs_wrap=1\" target=\"_blank\" data-canvas-previewable=\"true\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/files/32789\" data-api-returntype=\"File\"\u003ein this document\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eIn the next few lessons, you'll install and configure some of the primary tools that you'll use as a data scientist!\u003c/p\u003e","frontPage":false},{"exportId":"combining-dataframes-with-pandas","title":"Combining DataFrames With Pandas","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-combining-dataframes-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-combining-dataframes-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll learn how to combine DataFrames with concatenation. You'll also learn how to read in tables from SQL databases and store them in DataFrames, as well as the various types of joins that exist and how you can perform them in Pandas.  \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse concatenation to combine DataFrames\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDetermine which type of join is preferred for two tables of data and a task\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eUse different types of joins to merge dataframes\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eConcatenating DataFrames\u003c/h2\u003e\n\n\u003cp\u003eRecall that \"concatenation\" means adding the contents of a second collection on to the end of the first collection.  You learned how to do this when working with strings.  For instance:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003eprint('Data ' + 'Science!')\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSince strings are a form of collections in Python, you can concatenate them as above.  \u003c/p\u003e\n\n\u003cp\u003eDataFrames are also collections, so it stands to reason that pandas provides an easy way to concatenate them.  Examine the following diagram from the pandas documentation on concatenation:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-combining-dataframes-pandas/master/images/Image_197_concat.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn this example, three DataFrames have been concatenated, resulting in one larger DataFrame containing the contents in the order they were concatenated.  \u003c/p\u003e\n\n\u003cp\u003eTo perform a concatenation between two or more DataFrames, you pass in an array of the objects to concatenate to the \u003ccode\u003epd.concat()\u003c/code\u003e function, as demonstrated below:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003eto_concat = [df1, df2, df3]\nbig_df = pd.concat(to_concat)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that there are many different optional keyword arguments you can set with \u003ccode\u003epd.concat()\u003c/code\u003e -- for a full breakdown of all the ways you can use this function, take a look at the \u003ca href=\"http://pandas.pydata.org/pandas-docs/stable/merging.html\"\u003epandas documentation\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003eKeys and Indexes\u003c/h3\u003e\n\n\u003cp\u003eEvery table in a database has a column that serves as the \u003cstrong\u003e\u003cem\u003ePrimary Key\u003c/em\u003e\u003c/strong\u003e. In pandas, the index is the primary key for that table. You'll use these keys, along with the \u003cstrong\u003e\u003cem\u003eForeign Key\u003c/em\u003e\u003c/strong\u003e, which points to a primary key value in another table, to execute \u003cstrong\u003e\u003cem\u003eJoins\u003c/em\u003e\u003c/strong\u003e. This allows us to \"line up\" information from multiple tables and combine them into one table. You'll learn more about primary keys and foreign keys in the future when you'll dive into SQL and relational databases, so don't worry too much about these concepts now. That said, you can use similar functionality in Pandas.\u003c/p\u003e\n\n\u003cp\u003eOften, it is useful for us to set a column to act as the index for a DataFrame.  To do this, you would type:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003esome_dataframe.set_index('name_of_index_column', inplace=True)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that this will mutate the dataset in place and set the column with the specified name as the index column of the DataFrame.  If \u003ccode\u003einplace\u003c/code\u003e is not specified it will default to False, meaning that a copy of the DataFrame with the requested changes will be returned, but the original object will remain unchanged. \u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eNOTE:\u003c/em\u003e\u003c/strong\u003e Running cells that make an \u003ccode\u003einplace\u003c/code\u003e change more than once will often cause pandas to throw an error.  If this happens, just restart the kernel.\u003c/p\u003e\n\n\u003cp\u003eBy setting the index columns on DataFrames, you make it easy to join DataFrames later on. Note that this is not always feasible, but it's a useful step when possible.  \u003c/p\u003e\n\n\u003ch3\u003eTypes of Joins\u003c/h3\u003e\n\n\u003cp\u003eJoins are always executed between a \u003cstrong\u003e\u003cem\u003eLeft Table\u003c/em\u003e\u003c/strong\u003e and a \u003cstrong\u003e\u003cem\u003eRight Table\u003c/em\u003e\u003c/strong\u003e.  There are four different types of joins you can execute. Consider the following Venn diagrams:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-combining-dataframes-pandas/master/images/Image_198_joins.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen thinking about joins, it is easy to conceptualize them as Venn diagrams.  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAn \u003cstrong\u003e\u003cem\u003eOuter Join\u003c/em\u003e\u003c/strong\u003e returns all records from both tables \u003c/li\u003e\n\u003cli\u003eAn \u003cstrong\u003e\u003cem\u003eInner Join\u003c/em\u003e\u003c/strong\u003e returns only the records with matching keys in both tables \u003c/li\u003e\n\u003cli\u003eA \u003cstrong\u003e\u003cem\u003eLeft Join\u003c/em\u003e\u003c/strong\u003e returns all the records from the left table, as well as any records from the right table that have a matching key with a record from the left table\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eA \u003cstrong\u003e\u003cem\u003eRight Join\u003c/em\u003e\u003c/strong\u003e returns all the records from the right table, as well as any records from the left table that have a matching key with a record from the right table\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eDataFrames contain a built-in \u003ccode\u003e.join()\u003c/code\u003e method. By default, the table calling the \u003ccode\u003e.join()\u003c/code\u003e method is always the left table.  The following code snippet demonstrates how to execute a join in pandas:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003ejoined_df = df1.join(df2, how='inner')\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that to call \u003ccode\u003e.join()\u003c/code\u003e, you must pass in the right table.  You can also set the type of join to perform with the \u003ccode\u003ehow\u003c/code\u003e parameter.  The options are \u003ccode\u003e'left'\u003c/code\u003e, \u003ccode\u003e'right'\u003c/code\u003e, \u003ccode\u003e'inner'\u003c/code\u003e, and \u003ccode\u003e'outer'\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eIf\u003c/strong\u003e \u003ccode\u003ehow=\u003c/code\u003e \u003cstrong\u003eis not specified, it defaults to \u003ccode\u003e'left'\u003c/code\u003e.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eNOTE:\u003c/em\u003e\u003c/strong\u003e If both tables contain columns with the same name, the join will throw an error due to a naming collision, since the resulting table would have multiple columns with the same name.  To solve this, pass in a value to \u003ccode\u003elsuffix=\u003c/code\u003e or \u003ccode\u003ersuffix=\u003c/code\u003e, which will append this suffix to the offending columns to resolve the naming collisions. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you learned how to use concatenation to join together multiple DataFrames in Pandas.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-combining-dataframes-pandas\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-combining-dataframes-pandas\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-combining-dataframes-pandas/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"topic-7-lesson-priorities-live","title":"Topic 7 Lesson Priorities (Live)","type":"WikiPage","content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 91.5433%; height: 145px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete Before \u003cem\u003eSQL Joins and Aggregation\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 52.2353%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.72432%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 10px;\"\u003e\u003cstrong\u003e\u003ca title=\"SQL Table Relations - Introduction\" href=\"pages/sql-table-relations-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/sql-table-relations-introduction\" data-api-returntype=\"Page\"\u003eSQL Table Relations - Introduction\u003c/a\u003e\u0026nbsp;\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 10px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003cstrong\u003e \u003ca title=\"Join Statements\" href=\"assignments/g068864ff26d451d4ee5eb2c38e036d08\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186742\" data-api-returntype=\"Assignment\"\u003eJoin Statements\u003c/a\u003e \u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"Join Statements - Lab\" href=\"assignments/g3903fbfed2a41d934018cbbdd7ed0d01\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186743\" data-api-returntype=\"Assignment\"\u003eJoin Statements - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003cstrong\u003e \u003ca title=\"One-to-Many and Many-to-Many Joins\" href=\"assignments/gda56bffb0076e22354c1e1de83af6491\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186752\" data-api-returntype=\"Assignment\"\u003eOne-to-Many and Many-to-Many Joins\u003c/a\u003e \u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"One-to-Many and Many-to-Many Joins - Lab\" href=\"assignments/g57bf8c29cc7b86618b6ce63c9d3c09a5\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186753\" data-api-returntype=\"Assignment\"\u003eOne-to-Many and Many-to-Many Joins - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 91.5433%; height: 268px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eSQL Joins and Aggregation\u003c/em\u003e Lecture, Before \u003cem\u003eSQL Subqueries and Dialects\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 52.2353%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.72432%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 20px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 20px;\"\u003e\u003ca title=\"Short Video: SQL JOINs\" href=\"pages/short-video-sql-joins\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/short-video-sql-joins\" data-api-returntype=\"Page\"\u003eShort Video: SQL JOINs\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center; height: 20px;\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 20px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 20px;\"\u003e\u003cstrong\u003e\u003ca title=\"SQL Joins and Aggregation Exit Ticket\" href=\"quizzes/g223bea81a50067215af661997b0f3584\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30584\" data-api-returntype=\"Quiz\"\u003eSQL Joins and Aggregation Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center; height: 20px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003cstrong\u003e \u003ca title=\"SQL Subqueries\" href=\"assignments/g1ac9bd640ae6ab4ec8058467021e64b9\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186776\" data-api-returntype=\"Assignment\"\u003eSQL Subqueries\u003c/a\u003e \u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"SQL Subqueries - Lab\" href=\"assignments/g8eda097a51ee87a8709e3c1bd003519a\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186777\" data-api-returntype=\"Assignment\"\u003eSQL Subqueries - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"Using SQL with Pandas\" href=\"pages/using-sql-with-pandas\"\u003e\u003cstrong\u003e Using SQL with Pandas \u003c/strong\u003e\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"Using SQL with Pandas - Lab\" href=\"assignments/gdfea68ebb0233e75a6778f72fdc58e5f\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186784\" data-api-returntype=\"Assignment\"\u003eUsing SQL with Pandas - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 30px;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: SQL Table Relations\" href=\"quizzes/g6ef98c02cfbd946adcbcb05c06b14ea4\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30566\" data-api-returntype=\"Quiz\"\u003eQuiz: SQL Table Relations\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center; height: 30px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"SQL Interview Questions - Lab\" href=\"assignments/gfd2719f1fe4b1f4a4269b6a18ab80d51\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/assignments/186775\" data-api-returntype=\"Assignment\"\u003eSQL Interview Questions - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 91.5433%; height: 64px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eSQL Subqueries and Dialects\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 52.2353%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 7.72432%; text-align: center; height: 27px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 20px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 10px;\"\u003e\u003cstrong\u003e\u003ca title=\"SQL Subqueries and Implementations Exit Ticket\" href=\"quizzes/gc5eeecddc4f0a940430321c456354a46\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30558\" data-api-returntype=\"Quiz\"\u003eSQL Subqueries and Implementations Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center; height: 10px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 52.2353%;\"\u003e\u003cstrong\u003e\u003ca title=\"‚≠êÔ∏è SQL - Cumulative Lab\" href=\"quizzes/gf4a06fa591eddfefef12f253ccb5564c\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30573\" data-api-returntype=\"Quiz\"\u003e‚≠êÔ∏è SQL - Cumulative Lab\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center;\"\u003e\u003cstrong\u003e1st*\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 52.2353%;\"\u003e\u003ca title=\"Quiz: SQL Interview Questions\" href=\"quizzes/g026c693c452a47d4d76973d6b77d8923\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/quizzes/30555\" data-api-returntype=\"Quiz\"\u003eQuiz: SQL Interview Questions\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; text-align: center;\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 52.2353%; height: 27px;\"\u003e\u003ca title=\"SQL Table Relations - Recap\" href=\"pages/sql-table-relations-recap\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/5824/pages/sql-table-relations-recap\" data-api-returntype=\"Page\"\u003eSQL Table Relations - Recap\u003c/a\u003e\u0026nbsp;\u003c/td\u003e\n\u003ctd style=\"width: 7.72432%; height: 27px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003e*Cumulative labs may be used for pairing exercises and might not be published yet; contact your instructor if you have questions\u003c/strong\u003e\u003c/p\u003e","frontPage":false},{"exportId":"html5-semantic-elements-2","title":"HTML5 Semantic Elements","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/html5-semantic-elements-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/html5-semantic-elements-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou've seen several HTML tags such as \u003ccode\u003ehead\u003c/code\u003e, \u003ccode\u003ebody\u003c/code\u003e, \u003ccode\u003etitle\u003c/code\u003e, and \u003ccode\u003ep\u003c/code\u003e which help organize the various sections of a webpage. The arbitrary container element to organize other pieces of HTML is a \u003ccode\u003ediv\u003c/code\u003e. While flexible and versatile, too many \u003ccode\u003ediv\u003c/code\u003e tags make an HTML document look cluttered and confusing. Even when you identify or classify them with specific names, it's a lot to keep track of. It would be clearer for both developers and browsers to use more descriptive HTML elements to arrange content. That's where semantic elements come in. They allow you to say, \"this isn't \u003cem\u003ejust\u003c/em\u003e a division of text, it's a \u003cem\u003eheader\u003c/em\u003e.\" In this lesson, you'll learn more about these \u003cem\u003esemantic\u003c/em\u003e elements.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the historical reasoning behind semantic elements\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDemonstrate HTML5 semantic element use\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eExplain the Historical Reasoning Behind Semantic Elements\u003c/h2\u003e\n\n\u003cp\u003eWhen developers first began defining containers to structure HTML, they had only\none generic element available to them: the \u003ccode\u003ediv\u003c/code\u003e. Creating complex page layouts\nthen required dozens of \u003ccode\u003ediv\u003c/code\u003e elements that were often difficult to organize or\nlocate within the code. HTML authors needed a way to distinguish one \u003ccode\u003ediv\u003c/code\u003e from another,\nwhich led to \u003ccode\u003eid\u003c/code\u003e and \u003ccode\u003eclass\u003c/code\u003e attributes on elements being misused in an attempt\nto communicate what the \u003ccode\u003ediv\u003c/code\u003e was doing. For example, a document usually has\nonly one header, so it seemed sensible to write \u003ccode\u003ediv id=\"header\"\u003c/code\u003e as a way to\nsay something stronger than, \"this is a text division.\" Developers wanted to\nsay, \"this is a special division of introduction,\" but lacked the specific language\nto express it. They wanted those sections to have a \u003cem\u003esemantic meaning\u003c/em\u003e (more on that later). But the\nHTML language simply didn't have the ability to meet this need.\u003c/p\u003e\n\n\u003cp\u003eNevertheless, many HTML authors\nthought that this was a good idea and an informal standard sprang up around\nadding \u003ccode\u003eid\u003c/code\u003e attributes on elements to express their \"semantic meaning.\"\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;div id=\"header\"\u0026gt;\n  \u0026lt;div class=\"wrapper\"\u0026gt;...\u0026lt;/div\u0026gt;\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWhen the W3C (the organization that oversees the specifications for HTML and\nCSS) started writing the specification for HTML5 they wanted to create new\nelements that would eliminate the need to label so many \u003ccode\u003ediv\u003c/code\u003e elements. The\ngoals were to make the code more readable for developers and more descriptive\nfor browsers. It turned out that many developers were already using the same\nnames to label their elements, such as \u003ccode\u003eid=\"header\"\u003c/code\u003e, \u003ccode\u003eid=\"footer\"\u003c/code\u003e, \u003ccode\u003eid=\"nav\"\u003c/code\u003e,\n\u003ccode\u003eclass=\"article\"\u003c/code\u003e, etc. So HTML5 provided semantic elements that explicitly\ndescribed those functions for developers to use instead.\u003c/p\u003e\n\n\u003cp\u003eWe once used to have to identify a \u003ccode\u003ediv\u003c/code\u003e as our header section.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;div id=\"header\"\u0026gt;...\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNow we use the \u003ccode\u003eheader\u003c/code\u003e element.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;header\u0026gt;\u0026lt;/header\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWhy do we call these \u003cem\u003esemantic\u003c/em\u003e elements? Semantic elements are elements that\nwe use when the content within the element all has the same related \u003cem\u003emeaning\u003c/em\u003e.\nIn our \u003ccode\u003eheader\u003c/code\u003e example above, all the content we would put within the \u003ccode\u003eheader\u003c/code\u003e\nelement would relate to introductory content, such as titles or navigation.\u003c/p\u003e\n\n\u003ch2\u003eDemonstrate HTML5 Semantic Element Use\u003c/h2\u003e\n\n\u003cp\u003eLet's take a layout that uses \u003ccode\u003ediv\u003c/code\u003e elements and convert it to use semantic\nelements instead. This is the markup we begin with:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;div class=\"wrapper\"\u0026gt;\n  \u0026lt;div id=\"header\"\u0026gt;\n     \u0026lt;div id=\"nav\"\u0026gt;...\u0026lt;/div\u0026gt;\n  \u0026lt;/div\u0026gt;\n  \u0026lt;div id=\"main\"\u0026gt;\n    \u0026lt;div id=\"music\"\u0026gt;\n      \u0026lt;div id=\"rock\"\u0026gt;...\u0026lt;/div\u0026gt;\n      \u0026lt;div id=\"jazz\"\u0026gt;...\u0026lt;/div\u0026gt;\n    \u0026lt;/div\u0026gt;\n  \u0026lt;/div\u0026gt;\n  \u0026lt;div id=\"aside\"\u0026gt;...\u0026lt;/div\u0026gt;\n  \u0026lt;div id=\"footer\"\u0026gt;...\u0026lt;/div\u0026gt;\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNow we'll replace each instance of a \u003ccode\u003ediv\u003c/code\u003e with a semantic element that matches\nthe type of content we want it to contain.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"html\"\u003e\u0026lt;div class=\"wrapper\"\u0026gt;\n  \u0026lt;header\u0026gt;\n     \u0026lt;nav\u0026gt;...\u0026lt;/nav\u0026gt;\n  \u0026lt;/header\u0026gt;\n  \u0026lt;main\u0026gt;\n    \u0026lt;section id=\"music\"\u0026gt;\n      \u0026lt;article id=\"rock\"\u0026gt;...\u0026lt;/article\u0026gt;\n      \u0026lt;article id=\"jazz\"\u0026gt;...\u0026lt;/article\u0026gt;\n    \u0026lt;/section\u0026gt;\n  \u0026lt;/main\u0026gt;\n  \u0026lt;aside\u0026gt;...\u0026lt;/aside\u0026gt;\n  \u0026lt;footer\u0026gt;...\u0026lt;/footer\u0026gt;\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNotice that in cases where the content within the element is not semantically\nrelated or we have the need to create a generic box such as the \u003ccode\u003ewrapper\u003c/code\u003e, we\ncan still use \u003ccode\u003ediv\u003c/code\u003e elements as we please. As a developer, keep in mind that\nwhile these elements are intended for certain content, there are no hard rules\nabout how to configure them. You should feel comfortable configuring them in any\nway that makes the most sense to you and best suits your layout needs.\u003c/p\u003e\n\n\u003ch2\u003eAdditional Resources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.google.com/presentation/d/1tl0aB0EUOhLMi1Xr19UCAUTCY20FRqEDv-oDGg2cTkg/edit?usp=sharing\"\u003ePresentation Slides\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/embed/V28xLFEYaSQ\"\u003eHTML5 Semantic Elements Lecture Video\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://diveintohtml5.info/semantics.html#new-elements\"\u003eDive into HTML5 - Semantic Elements\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\"\u003eMDN - HTML - Element Reference\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIf the content within an element is all semantically related, it is best\npractice to use the appropriate HTML5 semantic element if one applies. This\ncleans up our code and makes it more readable for developers and more\ndescriptive to browsers. There are a variety of semantic elements you can use to\nstructure your content, and you can also still use \u003ccode\u003ediv\u003c/code\u003e elements to create\ngeneric boxes or grouping elements as needed.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"html5-semantic-elements-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"html5-semantic-elements-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/html5-semantic-elements-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"topic-10-lesson-priorities-live","title":"Topic 10 Lesson Priorities (Live)","type":"WikiPage","content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 84.4976%; height: 365px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete Before \u003cem\u003eWeb Scraping\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 42.5917%; text-align: center; height: 36px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 8.4431%; text-align: center; height: 36px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 30px;\"\u003e\u003ca title=\"HTML, CSS and Web Scraping - Introduction\" href=\"pages/html-css-and-web-scraping-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/html-css-and-web-scraping-introduction\" data-api-returntype=\"Page\"\u003eHTML, CSS and Web Scraping - Introduction\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 30px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;Low priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003cstrong\u003e \u003ca title=\"HTML Introduction\" href=\"pages/html-introduction\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/html-introduction\" data-api-returntype=\"Page\"\u003eHTML Introduction\u003c/a\u003e \u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003ca title=\"Researching HTML Elements\" href=\"pages/researching-html-elements\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/researching-html-elements\" data-api-returntype=\"Page\"\u003eResearching HTML Elements\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;3rd priority\u0026quot;}\"\u003e3rd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003ca title=\"Separating Content and Presentation\" href=\"pages/separating-content-and-presentation\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/separating-content-and-presentation\" data-api-returntype=\"Page\"\u003eSeparating Content and Presentation\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;Low priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003ca title=\"Intro to CSS\" href=\"pages/intro-to-css\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/intro-to-css\" data-api-returntype=\"Page\"\u003eIntro to CSS\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 19px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 19px;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: HTML and CSS\" href=\"quizzes/g3aaa2419a0e91e48f5519efee68b4ad8\"\u003eQuiz: HTML and CSS\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; text-align: center; height: 19px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003ca title=\"CSS Code Along\" href=\"pages/css-code-along\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/css-code-along\" data-api-returntype=\"Page\"\u003eCSS Code Along\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003ca title=\"My Little Rainbow\" href=\"pages/my-little-rainbow\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/my-little-rainbow\" data-api-returntype=\"Page\"\u003eMy Little Rainbow\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003cstrong\u003e \u003ca title=\"An Introduction to Web Scraping and Beautiful Soup\" href=\"assignments/g929713dd1af9fc2b9f950bea74bfed91\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9212\" data-api-returntype=\"Assignment\"\u003eAn Introduction to Web Scraping and Beautiful Soup\u003c/a\u003e \u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003ca title=\"Web Scraping in Practice\" href=\"assignments/g1189239c8242ab899aef150f3a38ad91\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9213\" data-api-returntype=\"Assignment\"\u003eWeb Scraping in Practice\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cspan data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\" data-sheets-userformat=\"{\u0026quot;2\u0026quot;:4737,\u0026quot;3\u0026quot;:{\u0026quot;1\u0026quot;:0},\u0026quot;10\u0026quot;:2,\u0026quot;12\u0026quot;:0,\u0026quot;15\u0026quot;:\u0026quot;Arial\u0026quot;}\"\u003e2nd\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003ca title=\"Web Scraping - Lab\" href=\"assignments/g68ba82ad814827072a596a16f5a23162\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9214\" data-api-returntype=\"Assignment\"\u003eWeb Scraping - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 19px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 19px;\"\u003e\u003cstrong\u003e\u003ca title=\"Quiz: CSS and Web Scraping\" href=\"quizzes/g579c15aeb78a7b141ee969ff3c3fb8d7\"\u003eQuiz: CSS and Web Scraping\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; text-align: center; height: 19px;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ctable style=\"border-collapse: collapse; width: 84.4976%; height: 133px;\" border=\"1\"\u003e\u003ccaption\u003ePriorities to Complete After \u003cem\u003eWeb Scraping\u003c/em\u003e Lecture\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr style=\"height: 36px;\"\u003e\n\u003cth style=\"width: 42.5917%; text-align: center; height: 36px;\" scope=\"col\"\u003e\u003cstrong\u003eLesson\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"width: 8.4431%; text-align: center; height: 36px;\" scope=\"col\"\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"width: 42.5917%;\"\u003e\u003cstrong\u003e\u003ca title=\"Web Scraping Exit Ticket\" href=\"quizzes/gd38d10bad4771160acf5dbb6f783526a\"\u003eWeb Scraping Exit Ticket\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; text-align: center;\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 10px;\"\u003e\u003ca title=\"Scraping Images\" href=\"assignments/g0f436701a06fd6779fe89c2c2e38d605\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9215\" data-api-returntype=\"Assignment\"\u003eScraping Images\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 10px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003ca title=\"Scraping Concerts - Lab\" href=\"assignments/gdba3a83b7a603fbad59a3cb201a527f5\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/assignments/9228\" data-api-returntype=\"Assignment\"\u003eScraping Concerts - Lab\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;2nd priority\u0026quot;}\"\u003e2nd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr style=\"height: 30px;\"\u003e\n\u003ctd style=\"width: 42.5917%; height: 29px;\"\u003e\u003cstrong\u003e \u003ca title=\"HTML, CSS and Web Scraping -  Recap\" href=\"pages/html-css-and-web-scraping-recap-2\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/html-css-and-web-scraping-recap-2\" data-api-returntype=\"Page\"\u003eHTML, CSS and Web Scraping - Recap\u003c/a\u003e \u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"width: 8.4431%; height: 29px; text-align: center;\" data-sheets-value=\"{\u0026quot;1\u0026quot;:2,\u0026quot;2\u0026quot;:\u0026quot;1st priority\u0026quot;}\"\u003e\u003cstrong\u003e1st\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e","frontPage":false},{"exportId":"welcome","title":"Welcome","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-welcome-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-welcome-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003cp\u003eWelcome to Flatiron School's Data Science Program! Over the next 800-1000 hours you will learn everything you need to know to get started as a professional Data Scientist. Before you get started we wanted to share an important thought. This is going to be the most rewarding learning experience you've ever had, we promise. Let's get started!\u003c/p\u003e\n\n\u003ch2\u003eLearning How To Learn\u003c/h2\u003e\n\n\u003cp\u003eThe most common misconception we get when people start this course is that we will teach you programming, math, modeling and visualization. Don't get us wrong, we are going to teach you those things, but that's actually not the most important set of skills you're going to learn.\u003c/p\u003e\n\n\u003cp\u003eOver your career as a professional data scientist you're going to end up programming in languages and using modeling techniques that haven't even been invented yet. So, the most important thing we can (and we will) teach you is \u003cstrong\u003ehow to learn\u003c/strong\u003e. While covering topics like Python, Statistics, and Regression, we'll work with you to build the skills required to read and understand error messages and to google for answers so once you get a job as a data scientist, when you have to learn a new language, library, or model, you'll know how to quickly get started. We'll also teach you your first set of tools so that you can contribute immediately using them as a professional data scientist.\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-welcome-intro\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-welcome-intro\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-welcome-intro/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"git-resources","title":"Git Resources","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-resources\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-resources/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eNow that you've gotten a solid introduction to git, it's time to give you a resource trove! Take a look at these resources if you want to learn more. They're optional but great to make note of and come back to.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse resources to expand Git and Markdown skills\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eGit and Markdown Resources\u003c/h2\u003e\n\u003ch3\u003eGit Basics\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e(\u003ca href=\"https://gist.github.com/aviflombaum/0d1c335291350a2e4036\"\u003eGist of Git resources\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Getting-Started-A-Short-History-of-Git\"\u003eGetting Started 1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Getting-Started-About-Version-Control\"\u003eGetting Started 2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Basics-Recording-Changes-to-the-Repository\"\u003eGit Basics 1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Basics-Viewing-the-Commit-History\"\u003eViewing The Commit History\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Basics-Working-with-Remotes\"\u003eRemotes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://bloggytoons.com/posts/2013/10/10/git-kitchen-wchef-ramsay\"\u003eGit Kitchen\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Branching-What-a-Branch-Is\"\u003eBranches\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Branching-Basic-Branching-and-Merging\"\u003eMerging\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Branching-Branch-Management\"\u003eBranch Management\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://git-scm.com/book/en/Git-Branching-Branching-Workflows\"\u003eWorkflows\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAdditional Git Resources\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://rogerdudler.github.io/git-guide/\"\u003eGit Guide\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://pcottle.github.io/learnGitBranching/\"\u003eGit Branching\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://marklodato.github.io/visual-git-guide/index-en.html\"\u003eVisual Git\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.youtube.com/watch?v=3QnD2c4Xovk\u0026amp;feature=plcp\"\u003ePublic Private Key Video\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eMarkdown\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://github.github.com/github-flavored-markdown\"\u003eGitHub Flavored Markdown\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://daringfireball.net/projects/markdown/basics\"\u003eDaring Fireball MD Basics\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://daringfireball.net/projects/markdown/syntax\"\u003eDaring Fireball MD Syntax\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://bywordapp.com/markdown/guide.html\"\u003eByword MultiMarkdown Guide\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4\u003eMarkdown plugins and apps\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/revolunet/sublimetext-markdown-preview\"\u003eSublime MD Preview Plugin\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://mouapp.com/\"\u003eMou MD writer app\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://atom.io\"\u003eAtom text editor\u003c/a\u003e has a markdown preview built in.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eNot a lesson in the traditional sense, but a great list of resources for you now or going forward on git resources! (Also of note, Markdown is the text formating used to display readme's on GitHub, hence the .md extension of README.md.) Cheers!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\n\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" title=\"Thumbs up!\" alt=\"thumbs up\" data-repository=\"dsc-git-resources\"\u003e\u003cimg id=\"thumbs-down\" title=\"Thumbs down!\" alt=\"thumbs down\" data-repository=\"dsc-git-resources\"\u003e\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-git-resources/issues/new\"\u003eTell us here!\u003c/a\u003e\u003c/h5\u003e\n\u003c/footer\u003e","frontPage":false},{"exportId":"nosql-databases-summary","title":"NoSQL Databases - Summary","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-recap-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-recap-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe began this section by comparing and contrasting relational/SQL databases with the NoSQL databases. The four different kinds of NoSQL databases are: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDocument Stores\u003c/li\u003e\n\u003cli\u003eKey-Value Stores\u003c/li\u003e\n\u003cli\u003eColumn Stores\u003c/li\u003e\n\u003cli\u003eGraph Databases\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eMongoDB\u003c/h2\u003e\n\n\u003cp\u003eNext, we explored how to install \u003cstrong\u003e\u003cem\u003eMongoDB\u003c/em\u003e\u003c/strong\u003e and get the \u003cstrong\u003e\u003cem\u003eMongoDB Server\u003c/em\u003e\u003c/strong\u003e up and running. We learned some commands that we could use to interact with mongo right there in the server shell, and then focused on connecting to our MongoDB server with Python. \u003c/p\u003e\n\n\u003cp\u003eYou should remember the following high-level takeaways from MongoDB:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eYou use the \u003ccode\u003epymongo\u003c/code\u003e library and a little boilerplate code to connect to the MongoDB database. \u003c/li\u003e\n\u003cli\u003eIn MongoDB, records are referred to as \u003cstrong\u003e\u003cem\u003eDocuments\u003c/em\u003e\u003c/strong\u003e. \u003c/li\u003e\n\u003cli\u003eWe can create groups of documents called \u003cstrong\u003e\u003cem\u003eCollections\u003c/em\u003e\u003c/strong\u003e. \u003c/li\u003e\n\u003cli\u003eRecords are inserted by passing in our data as Python dictionaries. \n\n\u003cul\u003e\n\u003cli\u003eWe can insert a single record with our collection object's \u003ccode\u003e.insert_one()\u003c/code\u003e method. \u003c/li\u003e\n\u003cli\u003eWe can insert many records by creating a list of dictionaries and passing the entire list to the collection object's \u003ccode\u003e.insert_many()\u003c/code\u003e method. \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWe can write queries by using the collection object's \u003ccode\u003e.find()\u003c/code\u003e method. \u003c/li\u003e\n\u003cli\u003eWe can \u003cstrong\u003e\u003cem\u003efilter\u003c/em\u003e\u003c/strong\u003e our queries by passing in the key-value pairs to filter by. \u003c/li\u003e\n\u003cli\u003eWe can also use logic on our filters by making use of \u003cstrong\u003e\u003cem\u003emodifiers\u003c/em\u003e\u003c/strong\u003e. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eCongrats! You are now a (No)SQL wizard! It doesn't matter whether the data you want is stored in a SQL or a NoSQL database, you can access it with ease. \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-nosql-databases-section-recap-v2-1\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-nosql-databases-section-recap-v2-1\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-nosql-databases-section-recap-v2-1/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"blogging-overview","title":"Blogging Overview","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-blogging-overview\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-blogging-overview\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-blogging-overview/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this lesson, we discuss how to write good blog posts that meet Flatiron School's requirements.\u003c/p\u003e  \u003ch2\u003eObjectives\u003c/h2\u003e  \u003cp\u003eThis lesson covers...\u003c/p\u003e  \u003cul\u003e \u003cli\u003eWhy blogging is valuable\u003c/li\u003e \u003cli\u003eTopics to blog about\u003c/li\u003e \u003cli\u003eWhat makes for a good blog post\u003c/li\u003e \u003cli\u003eHow to start your blog\u003c/li\u003e \u003cli\u003eFlatiron School blog requirements \u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eWhy Should I Blog?\u003c/h2\u003e  \u003cp\u003eBlogging has many benefits:\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\u003cp\u003e\u003cstrong\u003eDevelop your written communication skills.\u003c/strong\u003e Your writing ability will be critical to your success when completing job applications and presenting your work to colleagues. Blogging is great practice for identifying and clearly communicating the most important points of any subject.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cstrong\u003eDemonstrate your talent to employers.\u003c/strong\u003e Potential employers will review your blog to determine whether to offer you an interview or a job. Some students have even been invited to interview or exempted from technical interviews based on their blogs.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cstrong\u003eStrengthen your knowledge.\u003c/strong\u003e Blogging helps you explore new topics, deepen your understanding, and crystallize what you've learned.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cstrong\u003eHelp your peers and the broader community.\u003c/strong\u003e Have you ever Googled a question you had and found the answer on a blog? Writing blog posts helps others who are following in your footsteps!\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eWhat Should I Blog About?\u003c/h2\u003e  \u003cp\u003eHere are some blog topic ideas:\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\u003cp\u003eWhy did you decide to learn data science?\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eDescribe how a DS technique works, when you might use it, and its strengths/weaknesses.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eSummarize an End of Phase Project by explaining your problem, the dataset, your methodology, and your results.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eDive into something that you want to learn more about, maybe because you find it challenging or it wasn't covered in the course.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eWrite a tutorial to help aspiring data scientists to implement a tool or method.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003eFind an interesting data science paper and summarize why it is important. This can be a new paper from the past few months, or you can refer to \u003ca href=\"https://docs.google.com/spreadsheets/d/1UYmAT13AAknrOatzLeeAsN4tS7ENjn2fpJNGzOZ67rQ/edit?usp=sharing\"\u003ethis spreadsheet\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eWhat Does A Good Blog Post Look Like?\u003c/h2\u003e  \u003cp\u003eWe recommend you take a look at our \u003ca href=\"https://drive.google.com/drive/folders/1UBiRCRLzVP5CHU3PJNwoMZAe3ajUBm2a?usp=sharing\"\u003eblog templates\u003c/a\u003e and \u003ca href=\"https://docs.google.com/document/d/1eqL8Dsj7dH7s_MRnf_4-3kCiSz72POHTfb-sBRN5Zhs/edit?usp=sharing\"\u003eexamples\u003c/a\u003e to get an idea for what makes a blog post good.\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\u003cp\u003eStrike a balance between providing a meaningful investigation of your topic and being concise. Constrain the scope so it will be interesting and digestible in about 1000-3000 words (this is not a firm limit).\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\n\u003cp\u003eUse clear and consistent formatting to make your content accessible and professional-looking.\u003c/p\u003e  \u003cul\u003e \u003cli\u003eWhen presenting code, use code snippets instead of screenshots.\u003c/li\u003e \u003cli\u003eMake URLs into hyperlinks that are easy for readers to click into.\u003c/li\u003e \u003cli\u003eUse headings to provide structure and flow to your post.\u003c/li\u003e \u003c/ul\u003e\n\u003c/li\u003e \u003cli\u003e\u003cp\u003eCite and link to resources you used to write your post.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eHow Do I Start My Blog?\u003c/h2\u003e  \u003cp\u003eIf you already have a professional blog that you'd like to use for your data science content, you can add your posts to that. Otherwise, you will need to start a new blog. If you have a personal blog, you should avoid using it for this purpose so that you can continue using it for personal content without worrying about how it might be perceived by potential employers.\u003c/p\u003e  \u003cp\u003eThere are multiple blogging platforms to choose from that make it easy to start a blog, here are some of our favorites:\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\u003ca href=\"https://www.blogger.com/\"\u003eBlogger\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href=\"https://dev.to/\"\u003edev.to\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href=\"https://pages.github.com/\"\u003eGitHub Pages\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href=\"https://medium.com/\"\u003eMedium\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href=\"https://wordpress.com/\"\u003eWordpress\u003c/a\u003e\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eDifferent platforms have different pros and cons, so do a little research to decide what is best for you.\u003c/p\u003e  \u003ch2\u003eBlog Requirements\u003c/h2\u003e  \u003cp\u003eTo succeed in your career transition and graduate from Flatiron School, you must complete the following activities. These requirements are designed to give you the best opportunity to deepen your knowledge, practice communication skills, and showcase yourself to potential employers.\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\u003cp\u003eSet up a publicly accessible blog \u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003ePublish at least four blog posts on it, including \u003cstrong\u003eone per Phase for Phases 1-4\u003c/strong\u003e\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\n\u003cp\u003eSubmit URLs to your posts \u003cstrong\u003eby the end of each Phase\u003c/strong\u003e in the Blog Post assignments\u003c/p\u003e  \u003cul\u003e \u003cli\u003eThese assignments are located in the Milestones topics of the Phase 1-4 Canvas courses\u003c/li\u003e \u003c/ul\u003e\n\u003c/li\u003e \u003cli\u003e\n\u003cp\u003eWrite blog posts that...\u003c/p\u003e  \u003cul\u003e \u003cli\u003eDiscuss data science topics\u003c/li\u003e \u003cli\u003eAre composed primarily of original material you wrote\u003c/li\u003e \u003cli\u003eInclude proper attribution\u003c/li\u003e \u003cli\u003eHave high-quality content and formatting\u003c/li\u003e \u003cli\u003eAre something you would proudly show to a potential employer\u003c/li\u003e \u003c/ul\u003e\n\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eAfter you submit your blog posts, your teacher will grade them as Complete or Incomplete. Your blogs must all be submitted on time and receive Complete grades in order to continue through your program.\u003c/p\u003e  \u003cp\u003e‚ú®Have fun and happy blogging!‚ú®\u003c/p\u003e","frontPage":false},{"exportId":"introduction-to-apis","title":"Introduction to APIs","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-to-apis\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-to-apis/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eAPIs\u003c/em\u003e\u003c/strong\u003e (short for \u003cstrong\u003e\u003cem\u003eApplication Programming Interfaces\u003c/em\u003e\u003c/strong\u003e) are an important aspect of the modern internet. APIs are what allows everything on the internet to play nicely with each other and work together. In this lesson, we'll learn all about what APIs are, what they are used for, and how they work. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to : \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain what an API is\u003c/li\u003e\n\u003cli\u003eList use cases for different types of APIs\u003c/li\u003e\n\u003cli\u003eSummarize why companies build APIs\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eApplication Programming Interface (API)\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAPI stands for \u003cstrong\u003eApplication Programming Interface\u003c/strong\u003e. \u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAn API is a communication protocol between 2 software systems. It describes the mechanism through which if one system \u003cstrong\u003erequests\u003c/strong\u003e some information using a predefined format, a remote system \u003cstrong\u003eresponds\u003c/strong\u003e with an outcome that gets sent back to the first system. \u003c/p\u003e\n\n\u003cp\u003eAPIs are a way of allowing 2 applications to interact with each other. This is an incredibly common task in modern web-based programs. For instance, if you've ever connected your facebook profile to another service such as Spotify or Instagram, this is done through APIs. An API represents a way for 2 pieces of software to interact with one another. Under the hood, the actual request and response is done as an \u003cstrong\u003e\u003cem\u003eHTTP Request\u003c/em\u003e\u003c/strong\u003e. The following diagram shows the \u003cstrong\u003e\u003cem\u003eHTTP Request/Response Cycle\u003c/em\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introduction-to-apis/master/images/new_client-server-illustration.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAPIs are a way of standardizing interactions with software. From the provider's standpoint, it makes sure that everyone will interact with their software in a way that they are expecting. From the user's standpoint, it provides easy instructions and methods for working with 3rd party software, which opens up a ton of useful benefits by allowing us to get data from other sources, or add functionality by incorporating services from 3rd party software!\u003c/p\u003e\n\n\u003ch3\u003eAn Example\u003c/h3\u003e\n\n\u003cp\u003ePokemon Go has been one of the most popular smartphone games, which requires a large ecosystem with complete information of routes and roads across the globe. Developers of the Pokemon could not have possibly coded such a complete world map. Instead, they used Google maps API and built their app on top of it. The following image shows the complete architecture that allows players of pokemon go to play a game which, in turn, responds by making geographical information related API calls to google maps.\u003cbr\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-introduction-to-apis/master/images/new_api4.png\" width=\"750\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eWhat is an API made of ?\u003c/h3\u003e\n\n\u003cp\u003eAPIs are very common in the tech world, which means that are many, many different kinds that you're going to run into. While each API you work with will be unique in some way, there are some common traits you can expect to see overall. An API has three main components as listed below:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eAccess Permissions:\u003c/strong\u003e Is the user allowed to ask for data or services?\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eRequest:\u003c/strong\u003e The service being asked for (e.g., if I give you current location using GPS, tell me the map around that place - as we see in Pokemon Go).  A Request has two main parts:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eMethods:\u003c/strong\u003e Once the access is permitted, what questions can be asked.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eParameters:\u003c/strong\u003e Additional details that can be sent with requests or responses\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eResponse:\u003c/strong\u003e The data or service as a result of the request.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWe'll look more deeply at how to use these components in the upcoming lessons for this section. For now, our goal is to understand that APIs:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eProvide a standardized way of letting us interact with 3rd party software/services\u003c/li\u003e\n\u003cli\u003eConsist of a \u003cstrong\u003e\u003cem\u003eRequest\u003c/em\u003e\u003c/strong\u003e and a \u003cstrong\u003e\u003cem\u003eResponse\u003c/em\u003e\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003eCan have special \u003cstrong\u003e\u003cem\u003eAccess Permissions\u003c/em\u003e\u003c/strong\u003e depending on the API and the user making the request. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we looked at an introduction to APIs, their basic understanding and main types of APIs.  In the following lessons, we dig into this in a bit more detail and see how to make API calls in Python. \u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-introduction-to-apis\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-introduction-to-apis\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-introduction-to-apis/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"git-practice","title":"Git Practice","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-git-practice\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-practice\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-git-practice/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you've seen a little bit of the bash shell and cloned a Git repository from GitHub, its time to practice a full workflow cycle in a little more detail. In this lesson, we'll start by taking a look at how to create a new Git repository if you are not working from an existing one. From there, we'll further investigate how the concepts of \u003ccode\u003egit add\u003c/code\u003e, \u003ccode\u003egit commit\u003c/code\u003e, and \u003ccode\u003egit push\u003c/code\u003e work in practice.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a new git repository\u003c/li\u003e\n\u003cli\u003eCompare local and remote repositories\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003egit add\u003c/code\u003e, \u003ccode\u003egit commit\u003c/code\u003e, and \u003ccode\u003egit push\u003c/code\u003e to make changes to a repository\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCreating a New Git Repository\u003c/h2\u003e\n\n\u003cp\u003eIn order to create a new Git repository, start by going to \u003ccode\u003ehttps://github.com/new\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e(Alternatively, you can click the New button under the repositories tab of you profile page)\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-practice/master/images/repos_page_new_button.png\" width=\"550\"\u003e\u003c/p\u003e\n\n\u003cp\u003eEither way, you'll then end up at the \u003ccode\u003ehttps://github.com/new\u003c/code\u003e page:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-practice/master/images/github_new.png\" width=\"550\"\u003e\u003c/p\u003e\n\n\u003cp\u003eHere, you have several fields to go through:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eNaming the repository\n\n\u003col\u003e\n\u003cli\u003eFor this example, make the repository name \u003ccode\u003egit_practice\u003c/code\u003e \u003c/li\u003e\n\u003c/ol\u003e\u003c/li\u003e\n\u003cli\u003eDescription\n\n\u003col\u003e\n\u003cli\u003eOptional as described; leave it blank for now\u003c/li\u003e\n\u003c/ol\u003e\u003c/li\u003e\n\u003cli\u003eThe public vs private \n\n\u003col\u003e\n\u003cli\u003eDo you want this code to be publicly visible to everyone on GitHub or do you wish to keep it private?\u003c/li\u003e\n\u003cli\u003ePublic is probably fine for this\u003c/li\u003e\n\u003c/ol\u003e\u003c/li\u003e\n\u003cli\u003eInitialize this repository with a README\n\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eThis option is very important!\u003c/strong\u003e\n\n\u003col\u003e\n\u003cli\u003eIf you check this box then you will clone the online repository as we did before and work from there\u003c/li\u003e\n\u003cli\u003eIf you don't check this box, then you will start from your local computer and then attach that work to the online repository.\u003c/li\u003e\n\u003c/ol\u003e\u003c/li\u003e\n\u003c/ol\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eFor now, name the repository \u003ccode\u003egit_practice\u003c/code\u003e, select public and \u003cstrong\u003edo NOT check the readme box\u003c/strong\u003e.\nThen click create repository.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-practice/master/images/git_practice_new.png\" width=\"550\"\u003e\u003c/p\u003e\n\n\u003cp\u003eYou'll see a page like this:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNote: The screenshots here use the word \u003ccode\u003emaster\u003c/code\u003e which is a legacy term that is still used in GitHub. It is more common now, and what you are likely to see, is \u003ccode\u003emain\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-practice/master/images/git_practice_blank_repo.png\" width=\"550\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThis says it all!\u003c/p\u003e\n\n\u003cp\u003eHere's an explanation of the steps we're going to follow:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e Create a directory (GitHub doesn't tell you to do this, but we want to organize and contain what we're sending to the web) \u003c/li\u003e\n\u003cli\u003e \u003ccode\u003eecho \"# git_practice\" \u0026gt;\u0026gt; README.md\u003c/code\u003e: \u003ccode\u003eecho\u003c/code\u003e is a bash command which will create a markdown file \u003ccode\u003eREADME.md\u003c/code\u003e with the text \u003ccode\u003e\"# git_practice\"\u003c/code\u003e \u003c/li\u003e\n\u003cli\u003e\u003ccode\u003egit init\u003c/code\u003e: This turns the current directory into a Git repository\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003egit add README.md\u003c/code\u003e: Now that the current folder is a Git repository from \u003ccode\u003egit init\u003c/code\u003e, we can add files for Git to track \u003c/li\u003e\n\u003cli\u003e\u003ccode\u003egit commit -m \"first commit\"\u003c/code\u003e: Once files have been added to Git, we commit them. The \u003ccode\u003e-m\u003c/code\u003e option is for leaving a comment which is required \u003c/li\u003e\n\u003cli\u003e\u003ccode\u003egit remote add origin url_goes_here\u003c/code\u003e: By default, git does not have to be connected to an online platform like GitHub. You can use Git locally for version control too. There are also other online Git platforms like Bitbucket and GitLab. Here, you're adding a link to GitHub's online hosting so that you can also sync your work with the cloud. This is super handy for sharing your work with others, collaborating, or any of the other reasons why cloud services are used \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eAgain, now that you have an overview, let's have at it!\u003c/p\u003e\n\n\u003ch2\u003eCreate a new directory for your repo\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eOpen up your command line (mac: terminal, windows: git bash) \u003c/li\u003e\n\u003cli\u003eNavigate to the appropriate directory such as /Documents/Flatiron/Module_2_Git_Bash (or however you plan to organize your course materials)\u003c/li\u003e\n\u003cli\u003eCreate a new folder for this lesson \u003ccode\u003emkdir git_practice\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eNavigate into your new folder\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003ecd git_practice\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2\u003eInitialize this folder as a git repository\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003egit init\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2\u003eCreate a README\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eecho \"# git_practice\" \u0026gt;\u0026gt; README.md\u003c/code\u003e as described works perfectly well\u003c/li\u003e\n\u003cli\u003eAlternatively, if you're feeling adventurous, you can try a text editor such as nano, vim, or emacs \n\n\u003cul\u003e\n\u003cli\u003eIf you're going the adventurous route, try \u003ccode\u003enano README.txt\u003c/code\u003e for now and then type \"# git_practice\" in the file. Press \"Ctrl+X\" to quit and press \"Y\" to confirm you wish to save your changes \u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eGit Status\u003c/h2\u003e\n\n\u003cp\u003eWhile not required, let's get familiar with what's going on with \u003ccode\u003egit status\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eGit Add\u003c/h2\u003e\n\n\u003cp\u003eAdd your file. You can use \u003ccode\u003egit add README.md\u003c/code\u003e or \u003ccode\u003egit add --all\u003c/code\u003e (if there were multiple files, you would add all of them). \u003c/p\u003e\n\n\u003ch2\u003eGit Status\u003c/h2\u003e\n\n\u003cp\u003eAgain, not required but helpful to get familiar with everything. Try it again and note the difference: \u003ccode\u003egit status\u003c/code\u003e. \u003c/p\u003e\n\n\u003ch2\u003eGit Commit\u003c/h2\u003e\n\n\u003cp\u003eNow that we've added the files, we're ready to finalize them to our version history. Commit them with \u003ccode\u003egit commit -m \"your message here\"\u003c/code\u003e. \u003c/p\u003e\n\n\u003ch2\u003eAdd a Remote Location\u003c/h2\u003e\n\n\u003cp\u003eAgain, remember that Git itself is a version control system that can be used anywhere. GitHub is an online hosting platform allowing us to take Git repositories to the cloud to share and collaborate. By adding a remote location, we are able to sync our work between online and offline and collaborate with others. The \u003ccode\u003eorigin\u003c/code\u003e is simply a default naming convention symbolizing that the online version will be the central source of truth for this repository.\u003c/p\u003e\n\n\u003cp\u003eWith that, we can set it up with\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003egit remote add origin the_url_for_the_repo\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eGenerally, it's easiest to simply copy and paste from the code provided by GitHub.\u003c/p\u003e\n\n\u003ch2\u003ePushing our changes\u003c/h2\u003e\n\n\u003cp\u003eWe've already added our \u003cstrong\u003eREADME.md\u003c/strong\u003e file to Git and commited the changes. While these changes are present and up to date (take a look at \u003ccode\u003egit status\u003c/code\u003e again), they are not reflected online yet as we haven't synced our updates with our online version. To do this, type \u003ccode\u003egit push origin master\u003c/code\u003e.  \u003c/p\u003e\n\n\u003cp\u003eIf you are wondering what \u003ccode\u003emaster\u003c/code\u003e is, it's the name of our branch. You can use branches in git to seperate versions of code from each other. A common example comes from web development for production environments. The \u003ccode\u003emaster\u003c/code\u003e branch usually contains the working code for the website or app in production, and then other branches can be created for developing updates and new features, while not breaking the current working version. \u003ccode\u003emaster\u003c/code\u003e is the default branch for all Git repositories, and we'll take a further look into branches in general in the upcoming lessons.\u003c/p\u003e\n\n\u003ch2\u003ePreviewing Changes\u003c/h2\u003e\n\n\u003cp\u003eNow that you've pushed your changes online, refresh the GitHub page. You should now see a little page like this:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-git-practice/master/images/git_repo.png\" width=\"550\"\u003e\u003c/p\u003e\n\n\u003cp\u003eCongratulations! You just created your first Git repository!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we continued to practice our bash skills with the command line and started practicing our version control skills with Git. We created our first Git repository from scratch, and practiced adding, commiting, and pushing those changes to GitHub.\u003c/p\u003e","frontPage":false},{"exportId":"presentation-content","title":"Presentation Content","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-project-presentation-content\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-presentation-content\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-presentation-content/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eWhat counts as presentation content? Anything written or spoken during a presentation! Content includes everything from slide titles to the slide notes that guide your talk. There is no consistent formula for the perfect presentation every time. There are only guidelines for creating \u003cem\u003ebetter\u003c/em\u003e presentation materials.\u003c/p\u003e  \u003ch2\u003eObjectives\u003c/h2\u003e  \u003cul\u003e \u003cli\u003eCreate a description of the example project's target audience\u003c/li\u003e \u003cli\u003eConnect the presentation components with a narrative arc\u003c/li\u003e \u003cli\u003eList the content sections that are expected in a data science presentation\u003c/li\u003e \u003cli\u003eCreate an outline for the presentation\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eDescribing the Target Audience\u003c/h2\u003e  \u003cp\u003eCreating a good presentation is an exercise in empathy: putting yourself in the mindset of the audience before you start to create slides. Before you draft the outline of your presentation, describe the target audience for the presentation by answering these questions:\u003c/p\u003e  \u003ctable\u003e\u003cthead\u003e \u003ctr\u003e \u003cth\u003e\u003cstrong\u003eQuestion\u003c/strong\u003e\u003c/th\u003e \u003cth\u003e\u003cstrong\u003eExample Answer\u003c/strong\u003e\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e\u003ctbody\u003e \u003ctr\u003e \u003ctd\u003e1. Who will be receiving your presentation, and what is their role in the company?\u003c/td\u003e \u003ctd\u003eMid-level manager\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e2. What is their background: technical or non-technical?\u003c/td\u003e \u003ctd\u003eWith a non-technical background\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e3. How will your presentation affect their work or a decision they need to make?\u003c/td\u003e \u003ctd\u003eMake wait time shorter, reduce work load, prioritize workload, save lives, etc.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e4. What is their attention span?\u003c/td\u003e \u003ctd\u003eExtremely short\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e5. What is the goal of the presentation?\u003c/td\u003e \u003ctd\u003eTo convince the manager that your results will have such a large impact on the business, that you should be allowed to continue the future work of your analysis\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e\u003c/table\u003e  \u003cp\u003eEvery bit of slide content will be filtered through the answers to those questions! \u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eExtremely short attention span?\u003c/strong\u003e ---\u0026gt; Concise text, attention grabbing titles, hook in the listener/reader\u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eNon technical background?\u003c/strong\u003e ---\u0026gt; Drop jargon, include only the most relevant information\u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eSign-off on your work continuing?\u003c/strong\u003e ---\u0026gt; Focus on the real life impact of your work. Always tie your results to real world numbers and how the answers you provide are solutions to real problems.\u003c/p\u003e  \u003ch3\u003eWhat If You Don't Know the Answer?\u003c/h3\u003e  \u003cp\u003eIn the Flatiron DS program, just like in the DS industry, sometimes you will just have to make your best guess. Look at the information provided when you are given the project, and infer what you can. Do some Google searching about the domain/industry if you aren't familiar with it, and be prepared to think on the fly.\u003c/p\u003e  \u003cp\u003eIf you don't know the actual person who will be the audience of your presentation, it can be helpful to develop a \u003cem\u003epersona\u003c/em\u003e  essentially, a fictional character who represents your audience. Check out \u003ca href=\"https://www.interaction-design.org/literature/article/personas-why-and-how-you-should-use-them\"\u003ethis article\u003c/a\u003e for more information on personas.\u003c/p\u003e  \u003ch2\u003eNarrative Arc\u003c/h2\u003e  \u003cp\u003eIn storytelling and narration there is conflict, resolution, and the journey in between. Your data science presentation can be arranged the same way. Plus, maintaining a narrative arc throughout your presentation will keep the audience engaged and help them retain information.\u003c/p\u003e  \u003ch3\u003eNarrative Arc Case Study\u003c/h3\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-project-presentation-content/master/images/Dont-Let-the-Pigeon-Drive-the-Bus-14-1024x518.jpg\" alt=\"'LET ME DRIVE THE BUS' says the pigeon in the book, 'Don't Let the Pigeon Drive the Bus' by Mo Willems\"\u003e\u003c/p\u003e  \u003cp\u003eA great example of this is the children's book \u003ca href=\"http://pigeonpresents.com/books/dont-let-the-pigeon-drive-the-bus/\"\u003e\u003cstrong\u003eDon't Let the Pigeon Drive the Bus!\u003c/strong\u003e\u003c/a\u003e by Mo Willems. \u003ca href=\"https://www.youtube.com/watch?v=n-dHeNfXtgc\"\u003eHere is a link to hear the book read aloud\u003c/a\u003e.\u003c/p\u003e  \u003cul\u003e \u003cli\u003eTitle reveals the main point of the story. It's catchy. It's not \u003cstrong\u003eAn Observation of Avian Conflict in Transportation Permissions\u003c/strong\u003e\u003c/li\u003e \u003cli\u003eProblem is established from the beginning - We've been told by the bus driver that the pigeon wants to drive, but we are not supposed to let him\u003c/li\u003e \u003cli\u003eIt's a children's book, so we can assume that a \u003cstrong\u003esuccessful\u003c/strong\u003e ending is one where we succeed in not letting the pigeon drive the bus\u003c/li\u003e \u003cli\u003eThe book is filled with the pigeon's attempts to convince us to let him drive the bus\u003c/li\u003e \u003cli\u003eThe bus driver returns and thanks us for not letting pigeon drive the bus\u003c/li\u003e \u003c/ul\u003e  \u003ch4\u003eHow is this related?\u003c/h4\u003e  \u003cul\u003e \u003cli\u003eHave a catchy title that reveals the answer and your findings\u003c/li\u003e \u003cli\u003eEstablish the business problem and scenario at the beginning in detail (the conflict)\u003c/li\u003e \u003cli\u003eWith the answer already revealed, go through the most meaningful work that impacted the final result (the journey)\u003c/li\u003e \u003cli\u003eAt the end, revisit the original problem and tie the entire presentation together (the resolution and ever after)\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eIn practical terms, the narrative arc of your presentation should have three parts:\u003c/p\u003e  \u003col\u003e \u003cli\u003eBeginning: tell them what you're going to tell them  \u003cul\u003e \u003cli\u003eThe problem\u003c/li\u003e \u003cli\u003eThe solution\u003c/li\u003e \u003cli\u003eThe data and tools you will use to solve it\u003c/li\u003e \u003c/ul\u003e\u003c/li\u003e \u003cli\u003eMiddle: tell them  \u003cul\u003e \u003cli\u003eA deeper description of the data and relevant variables\u003c/li\u003e \u003cli\u003eWhat type of approach your analysis took (descriptive statistics, inferential statistics, prediction, etc.)\u003c/li\u003e \u003cli\u003eThe findings of your analysis\u003c/li\u003e \u003c/ul\u003e\u003c/li\u003e \u003cli\u003eEnd: tell them what you told them  \u003cul\u003e \u003cli\u003eHow your solution solves the business problem (i.e. recommendations)\u003c/li\u003e \u003cli\u003eHow much better your solution is than the baseline/status quo\u003c/li\u003e \u003cli\u003eWhat impacts your confidence in the solution, limitations\u003c/li\u003e \u003cli\u003eHow to build off your work with next steps and future work\u003c/li\u003e \u003c/ul\u003e\u003c/li\u003e \u003c/ol\u003e  \u003ch3\u003eExercise\u003c/h3\u003e  \u003cp\u003eBefore putting anything into the presentation slides, review your notebook to address each section above. Speaking out loud, in \u003cem\u003ethree sentences or less\u003c/em\u003e, what is the information needed for each bullet point?\u003c/p\u003e  \u003ch2\u003eDrafting an Outline of a Presentation\u003c/h2\u003e  \u003cp\u003eNow that you have all the essential information, you can begin to organize content into an outline. At this point do not worry about what goes on your slide versus what goes in your voice over. This step focuses on pairing \u003cstrong\u003eone key point\u003c/strong\u003e with \u003cstrong\u003eeach slide\u003c/strong\u003e in your presentation.\u003c/p\u003e  \u003cp\u003eUse your audience persona to shape what you put in your presentation. A research scientist in the technical department of a company will have more interest in deep statistical tests than the CEO. If you are presenting to a coworker you sit next to, having a contact slide might be weird.\u003c/p\u003e  \u003cp\u003eWith a slide for each point, at a minimum you should have:\u003c/p\u003e  \u003cul\u003e \u003cli\u003e[ ] introduction\u003c/li\u003e \u003cli\u003e[ ] business context\u003c/li\u003e \u003cli\u003e[ ] data \u003c/li\u003e \u003cli\u003e[ ] process steps\u003c/li\u003e \u003cli\u003e[ ] results \u0026amp; business application (recommendations)\u003c/li\u003e \u003cli\u003e[ ] evaluation \u0026amp; future improvement ideas\u003c/li\u003e \u003cli\u003e[ ] contact information\u003c/li\u003e \u003c/ul\u003e  \u003ch3\u003eExercise:\u003c/h3\u003e  \u003cp\u003eTake some time to organize the key points of your analysis into an outline.\u003c/p\u003e  \u003ch2\u003eConclusion\u003c/h2\u003e  \u003cp\u003eYou have now learned about the fundamentals of presentation content! Up next, you'll learn more about slide design, in order to turn your outline into a professional presentation.\u003c/p\u003e","frontPage":false},{"exportId":"statistical-methods-in-pandas-2","title":"Statistical Methods in Pandas","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-statistical-methods-in-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-statistical-methods-in-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll learn how to use some of the key summary statistics methods in Pandas.\u003c/p\u003e\n\n\u003ch2\u003eObjectives:\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCalculate summary statistics for a series and DataFrame \u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003e.apply()\u003c/code\u003e or \u003ccode\u003e.applymap()\u003c/code\u003e methods to apply a function to a pandas series or DataFrame\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eGetting DataFrame-Level Summary Statistics\u003c/h2\u003e\n\n\u003cp\u003eWhen working with a new dataset, the first step is always to begin to understand what makes up that dataset. The Pandas DataFrame class contains two built-in methods that make this very easy for us. \u003c/p\u003e\n\n\u003ch3\u003eUsing \u003ccode\u003edf.info()\u003c/code\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eThe \u003ccode\u003edf.info()\u003c/code\u003e method provides us with summary \u003cstrong\u003e\u003cem\u003emetadata\u003c/em\u003e\u003c/strong\u003e about our DataFrame -- that is, it gives us data about our dataset, such as how many rows and columns it contains, and what data types they are stored as.  Let's demonstrate this by reading in the Titanic dataset and calling the \u003ccode\u003e.info()\u003c/code\u003e method on the DataFrame. \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003eimport pandas as pd\ndf = pd.read_csv('titanic.csv', index_col=0)\ndf.info()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e\u0026lt;class 'pandas.core.frame.DataFrame'\u0026gt;\nInt64Index: 891 entries, 0 to 890\nData columns (total 12 columns):\nPassengerId    891 non-null int64\nSurvived       891 non-null int64\nPclass         891 non-null object\nName           891 non-null object\nSex            891 non-null object\nAge            714 non-null float64\nSibSp          891 non-null int64\nParch          891 non-null int64\nTicket         891 non-null object\nFare           891 non-null float64\nCabin          204 non-null object\nEmbarked       889 non-null object\ndtypes: float64(2), int64(4), object(6)\nmemory usage: 90.5+ KB\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eAs we can see from the output above, the \u003ccode\u003e.info()\u003c/code\u003e method provides us with great information about the characteristics of the DataFrame, without telling us anything about the data it actually contains. \u003c/p\u003e\n\n\u003cp\u003eExamine the output above, and take note of the important things it tells us about the DataFrame, such as:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe number of columns and rows in the DataFrame\u003c/li\u003e\n\u003cli\u003eThe data type of the data each column contains\u003c/li\u003e\n\u003cli\u003eHow many values each column contains (NaNs are not counted)\u003c/li\u003e\n\u003cli\u003eThe memory footprint of the DataFrame\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThis sort of information about a dataset is called \u003cstrong\u003e\u003cem\u003emetadata\u003c/em\u003e\u003c/strong\u003e, since it's data about our data. \u003c/p\u003e\n\n\u003ch3\u003eUsing \u003ccode\u003e.describe()\u003c/code\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eThe next step in Exploratory Data Analysis (EDA) is usually to dig into the summary statistics of the dataset, and get a feel for the data each column contains.  Rather than force us to deal with the tedium of doing this individually for every column, Pandas DataFrames provide the handy \u003ccode\u003edf.describe()\u003c/code\u003e method which calculates the basic summary statistics for each column for us automatically. \u003c/p\u003e\n\n\u003cp\u003eSee the example in the cell below.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.describe()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cdiv\u003e\n\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003ePassengerId\u003c/th\u003e\n      \u003cth\u003eSurvived\u003c/th\u003e\n      \u003cth\u003eAge\u003c/th\u003e\n      \u003cth\u003eSibSp\u003c/th\u003e\n      \u003cth\u003eParch\u003c/th\u003e\n      \u003cth\u003eFare\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003ecount\u003c/th\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n      \u003ctd\u003e714.000000\u003c/td\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003emean\u003c/th\u003e\n      \u003ctd\u003e446.000000\u003c/td\u003e\n      \u003ctd\u003e0.383838\u003c/td\u003e\n      \u003ctd\u003e29.699118\u003c/td\u003e\n      \u003ctd\u003e0.523008\u003c/td\u003e\n      \u003ctd\u003e0.381594\u003c/td\u003e\n      \u003ctd\u003e32.204208\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003estd\u003c/th\u003e\n      \u003ctd\u003e257.353842\u003c/td\u003e\n      \u003ctd\u003e0.486592\u003c/td\u003e\n      \u003ctd\u003e14.526497\u003c/td\u003e\n      \u003ctd\u003e1.102743\u003c/td\u003e\n      \u003ctd\u003e0.806057\u003c/td\u003e\n      \u003ctd\u003e49.693429\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003emin\u003c/th\u003e\n      \u003ctd\u003e1.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e0.420000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e25%\u003c/th\u003e\n      \u003ctd\u003e223.500000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e20.125000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e7.910400\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e50%\u003c/th\u003e\n      \u003ctd\u003e446.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e28.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e14.454200\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e75%\u003c/th\u003e\n      \u003ctd\u003e668.500000\u003c/td\u003e\n      \u003ctd\u003e1.000000\u003c/td\u003e\n      \u003ctd\u003e38.000000\u003c/td\u003e\n      \u003ctd\u003e1.000000\u003c/td\u003e\n      \u003ctd\u003e0.000000\u003c/td\u003e\n      \u003ctd\u003e31.000000\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003emax\u003c/th\u003e\n      \u003ctd\u003e891.000000\u003c/td\u003e\n      \u003ctd\u003e1.000000\u003c/td\u003e\n      \u003ctd\u003e80.000000\u003c/td\u003e\n      \u003ctd\u003e8.000000\u003c/td\u003e\n      \u003ctd\u003e6.000000\u003c/td\u003e\n      \u003ctd\u003e512.329200\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\n\u003cp\u003eAs we can see, the output of the \u003ccode\u003e.describe()\u003c/code\u003e method is very handy, and gives us relevant information such as:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ea \u003ccode\u003ecount\u003c/code\u003e of the number of values in each column, making it identify columns with missing values\u003c/li\u003e\n\u003cli\u003eThe mean and standard deviation of each column\u003c/li\u003e\n\u003cli\u003eThe minimum and maximum values found in each column\u003c/li\u003e\n\u003cli\u003eThe median (50%) and quartile values (25% \u0026amp; 75%) for each column\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eUse the \u003ccode\u003e.describe()\u003c/code\u003e method to quickly help you get a feel for your datasets when you start the Exploratory Data Analysis process. \u003c/p\u003e\n\n\u003ch2\u003eCalculating Individual Column Statistics\u003c/h2\u003e\n\n\u003cp\u003eIf we need to calculate individual statistics about a column, we can also do this easily.  Pandas DataFrames and Series objects come with a plethora of built-in methods to instantly calculate summary statistics for us. \u003c/p\u003e\n\n\u003cp\u003eSee the code blocks below for examples:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf.mean()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003ePassengerId    446.000000\nSurvived         0.383838\nAge             29.699118\nSibSp            0.523008\nParch            0.381594\nFare            32.204208\ndtype: float64\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Fare'].mean()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e32.2042079685746\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Age'].quantile(.9)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e50.0\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Age'].median()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e28.0\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThere are many different statistical methods built into Pandas DataFrames -- these are just a few! We will not list all of them, but here are some common ones you'll probably make use of early and often:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003e.mode()\u003c/code\u003e -- the mode of the column\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.count()\u003c/code\u003e -- the count of the total number of entries in a column\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.std()\u003c/code\u003e --  the standard deviation for the column\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.var()\u003c/code\u003e -- the variance for the column\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.sum()\u003c/code\u003e -- the sum of all values in the column\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.cumsum()\u003c/code\u003e -- the cumulative sum, where each cell index contains the sum of all indices lower than, and including, itself.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eSummary Statistics for Categorical Columns\u003c/h3\u003e\n\n\u003cp\u003eObviously, we cannot calculate most summary statistics on columns that contain non-numeric data -- there's no way for us to find the mean of the letters in the \u003ccode\u003eEmbarked\u003c/code\u003e column, for instance.  However, there are some summary statistics we can use to help us better understand our categorical columns. \u003c/p\u003e\n\n\u003cp\u003eSee the examples in the cell below:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Embarked'].unique()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003earray(['S', 'C', 'Q', nan], dtype=object)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edf['Embarked'].value_counts()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003eS    644\nC    168\nQ     77\nName: Embarked, dtype: int64\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThese methods are extremely useful when dealing with categorical data! \u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e.unique()\u003c/code\u003e shows us all the unique values contained in the column. \u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e.value_counts()\u003c/code\u003e shows us a count for how many times each unique value is present in a dataset, giving us a feel for the distribution of values in the column. \u003c/p\u003e\n\n\u003ch3\u003eCalculating on the Fly with \u003ccode\u003e.apply()\u003c/code\u003e and \u003ccode\u003e.applymap()\u003c/code\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eSometimes, we'll need to make changes to our dataset, or to compute functions on our data that aren't built-in to Pandas.  We can do this by passing lambda values into the \u003ccode\u003eapply()\u003c/code\u003e method when working with Pandas series, and the \u003ccode\u003e.applymap()\u003c/code\u003e method when working with Pandas DataFrames. \u003c/p\u003e\n\n\u003cp\u003eNote that both of these do not mutate the original dataset -- instead, they return a copy of the Series or DataFrame containing the result. \u003c/p\u003e\n\n\u003cp\u003eSee the example in the cell below:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003estring_df = df.applymap(lambda x: str(x))\nstring_df.info()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e\u0026lt;class 'pandas.core.frame.DataFrame'\u0026gt;\nInt64Index: 891 entries, 0 to 890\nData columns (total 12 columns):\nPassengerId    891 non-null object\nSurvived       891 non-null object\nPclass         891 non-null object\nName           891 non-null object\nSex            891 non-null object\nAge            891 non-null object\nSibSp          891 non-null object\nParch          891 non-null object\nTicket         891 non-null object\nFare           891 non-null object\nCabin          891 non-null object\nEmbarked       891 non-null object\ndtypes: object(12)\nmemory usage: 90.5+ KB\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003edisplay(df['Age'].apply(lambda x: x**2).head())\n\ndf['Age'].head()\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e0     484.0\n1    1444.0\n2     676.0\n3    1225.0\n4    1225.0\nName: Age, dtype: float64\n\n\n\n\n\n0    22.0\n1    38.0\n2    26.0\n3    35.0\n4    35.0\nName: Age, dtype: float64\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you learned how to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand and use the \u003ccode\u003edf.describe()\u003c/code\u003e and \u003ccode\u003edf.info()\u003c/code\u003e summary statistics methods \u003c/li\u003e\n\u003cli\u003eUse built-in Pandas methods for calculating summary statistics \u003c/li\u003e\n\u003cli\u003eApply a function to every element in a Series or DataFrame using \u003ccode\u003es.apply()\u003c/code\u003e and \u003ccode\u003edf.applymap()\u003c/code\u003e \u003c/li\u003e\n\u003c/ul\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-statistical-methods-in-pandas\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-statistical-methods-in-pandas\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-statistical-methods-in-pandas/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false},{"exportId":"data-analysis-in-pandas-introduction","title":"Data Analysis in Pandas - Introduction","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-analysis-pandas-intro\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-analysis-pandas-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-analysis-pandas-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eIn this section, you'll be introduced to pandas, one of the most powerful and widely used libraries for data analysis in Python.\u003c/p\u003e  \u003ch2\u003ePython Libraries\u003c/h2\u003e  \u003cp\u003eIn some cases, such as opening a JSON file to extract a single value, base Python has all of the functionality you need. Other times when the task is more complex, writing your own code to do it can get overwhelming pretty quickly.\u003c/p\u003e  \u003cp\u003eLuckily one of the great benefits of the Python language is that it has a very active open-source community, which means tons of great libraries and frameworks we can use to do the heavy lifting. One of the main reasons that Python is such a great choice for data science is that the scientific community has written plenty of great packages for various advanced purposes. This means that when we use Python, we have access to a wealth of robust, effective tools written and maintained by an army of volunteers and professionals.\u003c/p\u003e  \u003ch2\u003ePandas\u003c/h2\u003e  \u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-analysis-pandas-intro/master/pandas.png\" alt=\"pandas logo\"\u003e\u003c/p\u003e  \u003cp\u003eThe pandas library will likely be your most-used library over the course of this program. It is a flexible, powerful data analysis library that is especially well-suited to handling tabular data (meaning data that is represented as rows and columns). The name is reminiscent of the term \"panel data\" as well as \"Python data analysis\".\u003c/p\u003e  \u003ch3\u003e\u003ccode\u003ecsv.DictReader\u003c/code\u003e to Pandas\u003c/h3\u003e  \u003cp\u003eThe central pandas library feature we will use is the \u003cstrong\u003edataframe\u003c/strong\u003e (also styled DataFrame). A dataframe represents tabular data with an integrated index, so data can be selected an manipulated using rows or columns. For some tasks, this means that the syntax can be significantly simpler and more efficient than the equivalent base Python syntax.\u003c/p\u003e  \u003cp\u003eLet's go over a quick comparison of using pandas vs. the built-in \u003ccode\u003ecsv\u003c/code\u003e module.\u003c/p\u003e  \u003cp\u003eWe'll use this dataset about Olympic track and field medal-winners from \u003ca href=\"https://www.kaggle.com/jayrav13/olympic-track-field-results\"\u003ekaggle\u003c/a\u003e. The first five rows look like this:\u003c/p\u003e  \u003ctable\u003e\u003cthead\u003e \u003ctr\u003e \u003cth\u003eGender\u003c/th\u003e \u003cth\u003eEvent\u003c/th\u003e \u003cth\u003eLocation\u003c/th\u003e \u003cth\u003eYear\u003c/th\u003e \u003cth\u003eMedal\u003c/th\u003e \u003cth\u003eName\u003c/th\u003e \u003cth\u003eNationality\u003c/th\u003e \u003cth\u003eResult\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e\u003ctbody\u003e \u003ctr\u003e \u003ctd\u003eM\u003c/td\u003e \u003ctd\u003e10000M Men\u003c/td\u003e \u003ctd\u003eRio\u003c/td\u003e \u003ctd\u003e2016\u003c/td\u003e \u003ctd\u003eG\u003c/td\u003e \u003ctd\u003eMohamed FARAH\u003c/td\u003e \u003ctd\u003eGBR\u003c/td\u003e \u003ctd\u003e25:05.17\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eM\u003c/td\u003e \u003ctd\u003e10000M Men\u003c/td\u003e \u003ctd\u003eRio\u003c/td\u003e \u003ctd\u003e2016\u003c/td\u003e \u003ctd\u003eS\u003c/td\u003e \u003ctd\u003ePaul Kipngetich TANUI\u003c/td\u003e \u003ctd\u003eKEN\u003c/td\u003e \u003ctd\u003e27:05.64\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eM\u003c/td\u003e \u003ctd\u003e10000M Men\u003c/td\u003e \u003ctd\u003eRio\u003c/td\u003e \u003ctd\u003e2016\u003c/td\u003e \u003ctd\u003eB\u003c/td\u003e \u003ctd\u003eTamirat TOLA\u003c/td\u003e \u003ctd\u003eETH\u003c/td\u003e \u003ctd\u003e27:06.26\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eM\u003c/td\u003e \u003ctd\u003e10000M Men\u003c/td\u003e \u003ctd\u003eBeijing\u003c/td\u003e \u003ctd\u003e2008\u003c/td\u003e \u003ctd\u003eG\u003c/td\u003e \u003ctd\u003eKenenisa BEKELE\u003c/td\u003e \u003ctd\u003eETH\u003c/td\u003e \u003ctd\u003e27:01.17\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eM\u003c/td\u003e \u003ctd\u003e10000M Men\u003c/td\u003e \u003ctd\u003eBeijing\u003c/td\u003e \u003ctd\u003e2008\u003c/td\u003e \u003ctd\u003eS\u003c/td\u003e \u003ctd\u003eSileshi SIHINE\u003c/td\u003e \u003ctd\u003eETH\u003c/td\u003e \u003ctd\u003e27:02.77\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e\u003c/table\u003e  \u003cp\u003eTo open and read the first 5 lines with the \u003ccode\u003ecsv\u003c/code\u003e module, that would look like this:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eimport csv\u003cbr\u003e\u003cbr\u003ewith open(\"olympic_medals.csv\") as f:\u003cbr\u003e    reader = csv.DictReader(f)\u003cbr\u003e    olympics_data = list(reader)\u003cbr\u003e\u003cbr\u003e# Print the first 5 rows of data\u003cbr\u003efor index in range(5):\u003cbr\u003e    print(olympics_data[index]) \u003c/code\u003e\u003c/pre\u003e\u003cpre\u003e\u003ccode\u003e{'Gender': 'M', 'Event': '10000M Men', 'Location': 'Rio', 'Year': '2016', 'Medal': 'G', 'Name': 'Mohamed FARAH', 'Nationality': 'GBR', 'Result': '25:05.17'}\u003cbr\u003e{'Gender': 'M', 'Event': '10000M Men', 'Location': 'Rio', 'Year': '2016', 'Medal': 'S', 'Name': 'Paul Kipngetich TANUI', 'Nationality': 'KEN', 'Result': '27:05.64'}\u003cbr\u003e{'Gender': 'M', 'Event': '10000M Men', 'Location': 'Rio', 'Year': '2016', 'Medal': 'B', 'Name': 'Tamirat TOLA', 'Nationality': 'ETH', 'Result': '27:06.26'}\u003cbr\u003e{'Gender': 'M', 'Event': '10000M Men', 'Location': 'Beijing', 'Year': '2008', 'Medal': 'G', 'Name': 'Kenenisa BEKELE', 'Nationality': 'ETH', 'Result': '27:01.17'}\u003cbr\u003e{'Gender': 'M', 'Event': '10000M Men', 'Location': 'Beijing', 'Year': '2008', 'Medal': 'S', 'Name': 'Sileshi SIHINE', 'Nationality': 'ETH', 'Result': '27:02.77'} \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eWe have a list of dictionaries, where every dictionary has the same keys.\u003c/p\u003e  \u003cp\u003eLet's say we want to select all data for the 3rd \u003cstrong\u003erow\u003c/strong\u003e (record). That's simple enough ‚Äî we can just use list indexing:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eolympics_data[2] \u003c/code\u003e\u003c/pre\u003e\u003cpre\u003e\u003ccode\u003e{'Gender': 'M',\u003cbr\u003e 'Event': '10000M Men',\u003cbr\u003e 'Location': 'Rio',\u003cbr\u003e 'Year': '2016',\u003cbr\u003e 'Medal': 'B',\u003cbr\u003e 'Name': 'Tamirat TOLA',\u003cbr\u003e 'Nationality': 'ETH',\u003cbr\u003e 'Result': '27:06.26'} \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eNow, what if we want to select all data for the 3rd \u003cstrong\u003ecolumn\u003c/strong\u003e (i.e. the values associated with the \u003ccode\u003e'Location'\u003c/code\u003e keys)? That's not impossible, but it will require some kind of loop or list comprehension. Something like this:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e# Cutting it off at 100 for readability\u003cbr\u003eprint([row['Location'] for row in olympics_data][:100]) \u003c/code\u003e\u003c/pre\u003e\u003cpre\u003e\u003ccode\u003e['Rio', 'Rio', 'Rio', 'Beijing', 'Beijing', 'Beijing', 'Sydney', 'Sydney', 'Sydney', 'Barcelona', 'Barcelona', 'Barcelona', 'Los Angeles', 'Los Angeles', 'Los Angeles', 'Montreal', 'Montreal', 'Montreal', 'Mexico', 'Mexico', 'Mexico', 'Rome', 'Rome', 'Rome', 'Helsinki', 'Helsinki', 'Helsinki', 'Berlin', 'Berlin', 'Berlin', 'Amsterdam', 'Amsterdam', 'Amsterdam', 'Antwerp', 'Antwerp', 'Antwerp', 'London', 'London', 'London', 'Athens', 'Athens', 'Athens', 'Atlanta', 'Atlanta', 'Atlanta', 'Moscow', 'Moscow', 'Moscow', 'Munich', 'Munich', 'Munich', 'Tokyo', 'Tokyo', 'Tokyo', 'Melbourne / Stockholm', 'Melbourne / Stockholm', 'Melbourne / Stockholm', 'London', 'London', 'London', 'Los Angeles', 'Los Angeles', 'Los Angeles', 'Paris', 'Paris', 'Paris', 'Stockholm', 'Stockholm', 'Stockholm', 'Rio', 'Rio', 'Rio', 'Beijing', 'Beijing', 'Beijing', 'Sydney', 'Sydney', 'Sydney', 'Barcelona', 'Barcelona', 'Barcelona', 'Los Angeles', 'Los Angeles', 'Los Angeles', 'Montreal', 'Montreal', 'Montreal', 'Mexico', 'Mexico', 'Mexico', 'Rome', 'Rome', 'Rome', 'Helsinki', 'Helsinki', 'Helsinki', 'Berlin', 'Berlin', 'Berlin', 'Amsterdam'] \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eWith pandas, accessing columns is just as simple as accessing rows. For example, if we convert \u003ccode\u003eolympics_data\u003c/code\u003e (a list of dictionaries) in a dataframe, then view the first five rows:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eimport pandas as pd\u003cbr\u003e\u003cbr\u003edf = pd.DataFrame(olympics_data)\u003cbr\u003edf.head() \u003c/code\u003e\u003c/pre\u003e \u003cdiv\u003e \u003cstyle\u003e     .dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     } \u003c/style\u003e \u003ctable border=\"1\" class=\"dataframe\"\u003e   \u003cthead\u003e     \u003ctr style=\"text-align: right;\"\u003e       \u003cth\u003e\u003c/th\u003e       \u003cth\u003eGender\u003c/th\u003e       \u003cth\u003eEvent\u003c/th\u003e       \u003cth\u003eLocation\u003c/th\u003e       \u003cth\u003eYear\u003c/th\u003e       \u003cth\u003eMedal\u003c/th\u003e       \u003cth\u003eName\u003c/th\u003e       \u003cth\u003eNationality\u003c/th\u003e       \u003cth\u003eResult\u003c/th\u003e     \u003c/tr\u003e   \u003c/thead\u003e   \u003ctbody\u003e     \u003ctr\u003e       \u003cth\u003e0\u003c/th\u003e       \u003ctd\u003eM\u003c/td\u003e       \u003ctd\u003e10000M Men\u003c/td\u003e       \u003ctd\u003eRio\u003c/td\u003e       \u003ctd\u003e2016\u003c/td\u003e       \u003ctd\u003eG\u003c/td\u003e       \u003ctd\u003eMohamed FARAH\u003c/td\u003e       \u003ctd\u003eGBR\u003c/td\u003e       \u003ctd\u003e25:05.17\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e1\u003c/th\u003e       \u003ctd\u003eM\u003c/td\u003e       \u003ctd\u003e10000M Men\u003c/td\u003e       \u003ctd\u003eRio\u003c/td\u003e       \u003ctd\u003e2016\u003c/td\u003e       \u003ctd\u003eS\u003c/td\u003e       \u003ctd\u003ePaul Kipngetich TANUI\u003c/td\u003e       \u003ctd\u003eKEN\u003c/td\u003e       \u003ctd\u003e27:05.64\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2\u003c/th\u003e       \u003ctd\u003eM\u003c/td\u003e       \u003ctd\u003e10000M Men\u003c/td\u003e       \u003ctd\u003eRio\u003c/td\u003e       \u003ctd\u003e2016\u003c/td\u003e       \u003ctd\u003eB\u003c/td\u003e       \u003ctd\u003eTamirat TOLA\u003c/td\u003e       \u003ctd\u003eETH\u003c/td\u003e       \u003ctd\u003e27:06.26\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e3\u003c/th\u003e       \u003ctd\u003eM\u003c/td\u003e       \u003ctd\u003e10000M Men\u003c/td\u003e       \u003ctd\u003eBeijing\u003c/td\u003e       \u003ctd\u003e2008\u003c/td\u003e       \u003ctd\u003eG\u003c/td\u003e       \u003ctd\u003eKenenisa BEKELE\u003c/td\u003e       \u003ctd\u003eETH\u003c/td\u003e       \u003ctd\u003e27:01.17\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e4\u003c/th\u003e       \u003ctd\u003eM\u003c/td\u003e       \u003ctd\u003e10000M Men\u003c/td\u003e       \u003ctd\u003eBeijing\u003c/td\u003e       \u003ctd\u003e2008\u003c/td\u003e       \u003ctd\u003eS\u003c/td\u003e       \u003ctd\u003eSileshi SIHINE\u003c/td\u003e       \u003ctd\u003eETH\u003c/td\u003e       \u003ctd\u003e27:02.77\u003c/td\u003e     \u003c/tr\u003e   \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e  \u003cp\u003eWe just imported the pandas library as \u003ccode\u003epd\u003c/code\u003e, the standard alias, then used the \u003ccode\u003eDataFrame\u003c/code\u003e constructor to make a dataframe out of our existing list of dictionaries.\u003c/p\u003e  \u003cp\u003eNow we can extract all of the information from the 3rd column with a simpler syntax:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003edf['Location'] \u003c/code\u003e\u003c/pre\u003e\u003cpre\u003e\u003ccode\u003e0           Rio\u003cbr\u003e1           Rio\u003cbr\u003e2           Rio\u003cbr\u003e3       Beijing\u003cbr\u003e4       Beijing\u003cbr\u003e         ...   \u003cbr\u003e2389     Athens\u003cbr\u003e2390     Athens\u003cbr\u003e2391    Atlanta\u003cbr\u003e2392    Atlanta\u003cbr\u003e2393    Atlanta\u003cbr\u003eName: Location, Length: 2394, dtype: object \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eBut it's also very easy to extract information by row, just like it was with the list of dictionaries:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003edf.iloc[2] \u003c/code\u003e\u003c/pre\u003e\u003cpre\u003e\u003ccode\u003eGender                    M\u003cbr\u003eEvent            10000M Men\u003cbr\u003eLocation                Rio\u003cbr\u003eYear                   2016\u003cbr\u003eMedal                     B\u003cbr\u003eName           Tamirat TOLA\u003cbr\u003eNationality             ETH\u003cbr\u003eResult             27:06.26\u003cbr\u003eName: 2, dtype: object \u003c/code\u003e\u003c/pre\u003e \u003cp\u003eWe can also skip the \u003ccode\u003ecsv\u003c/code\u003e module and \u003ccode\u003eolympics_data\u003c/code\u003e variable altogether, and just read the data from the CSV file directly. All you need to do is specify the file path:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003edf = pd.read_csv(\"olympic_medals.csv\")\u003cbr\u003edf \u003c/code\u003e\u003c/pre\u003e \u003cdiv\u003e \u003cstyle\u003e     .dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     } \u003c/style\u003e \u003ctable border=\"1\" class=\"dataframe\"\u003e   \u003cthead\u003e     \u003ctr style=\"text-align: right;\"\u003e       \u003cth\u003e\u003c/th\u003e       \u003cth\u003eGender\u003c/th\u003e       \u003cth\u003eEvent\u003c/th\u003e       \u003cth\u003eLocation\u003c/th\u003e       \u003cth\u003eYear\u003c/th\u003e       \u003cth\u003eMedal\u003c/th\u003e       \u003cth\u003eName\u003c/th\u003e       \u003cth\u003eNationality\u003c/th\u003e       \u003cth\u003eResult\u003c/th\u003e     \u003c/tr\u003e   \u003c/thead\u003e   \u003ctbody\u003e     \u003ctr\u003e       \u003cth\u003e0\u003c/th\u003e       \u003ctd\u003eM\u003c/td\u003e       \u003ctd\u003e10000M Men\u003c/td\u003e       \u003ctd\u003eRio\u003c/td\u003e       \u003ctd\u003e2016\u003c/td\u003e       \u003ctd\u003eG\u003c/td\u003e       \u003ctd\u003eMohamed FARAH\u003c/td\u003e       \u003ctd\u003eGBR\u003c/td\u003e       \u003ctd\u003e25:05.17\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e1\u003c/th\u003e       \u003ctd\u003eM\u003c/td\u003e       \u003ctd\u003e10000M Men\u003c/td\u003e       \u003ctd\u003eRio\u003c/td\u003e       \u003ctd\u003e2016\u003c/td\u003e       \u003ctd\u003eS\u003c/td\u003e       \u003ctd\u003ePaul Kipngetich TANUI\u003c/td\u003e       \u003ctd\u003eKEN\u003c/td\u003e       \u003ctd\u003e27:05.64\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2\u003c/th\u003e       \u003ctd\u003eM\u003c/td\u003e       \u003ctd\u003e10000M Men\u003c/td\u003e       \u003ctd\u003eRio\u003c/td\u003e       \u003ctd\u003e2016\u003c/td\u003e       \u003ctd\u003eB\u003c/td\u003e       \u003ctd\u003eTamirat TOLA\u003c/td\u003e       \u003ctd\u003eETH\u003c/td\u003e       \u003ctd\u003e27:06.26\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e3\u003c/th\u003e       \u003ctd\u003eM\u003c/td\u003e       \u003ctd\u003e10000M Men\u003c/td\u003e       \u003ctd\u003eBeijing\u003c/td\u003e       \u003ctd\u003e2008\u003c/td\u003e       \u003ctd\u003eG\u003c/td\u003e       \u003ctd\u003eKenenisa BEKELE\u003c/td\u003e       \u003ctd\u003eETH\u003c/td\u003e       \u003ctd\u003e27:01.17\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e4\u003c/th\u003e       \u003ctd\u003eM\u003c/td\u003e       \u003ctd\u003e10000M Men\u003c/td\u003e       \u003ctd\u003eBeijing\u003c/td\u003e       \u003ctd\u003e2008\u003c/td\u003e       \u003ctd\u003eS\u003c/td\u003e       \u003ctd\u003eSileshi SIHINE\u003c/td\u003e       \u003ctd\u003eETH\u003c/td\u003e       \u003ctd\u003e27:02.77\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e...\u003c/th\u003e       \u003ctd\u003e...\u003c/td\u003e       \u003ctd\u003e...\u003c/td\u003e       \u003ctd\u003e...\u003c/td\u003e       \u003ctd\u003e...\u003c/td\u003e       \u003ctd\u003e...\u003c/td\u003e       \u003ctd\u003e...\u003c/td\u003e       \u003ctd\u003e...\u003c/td\u003e       \u003ctd\u003e...\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2389\u003c/th\u003e       \u003ctd\u003eW\u003c/td\u003e       \u003ctd\u003eTriple Jump Women\u003c/td\u003e       \u003ctd\u003eAthens\u003c/td\u003e       \u003ctd\u003e2004\u003c/td\u003e       \u003ctd\u003eS\u003c/td\u003e       \u003ctd\u003eHrysopiyi DEVETZI\u003c/td\u003e       \u003ctd\u003eGRE\u003c/td\u003e       \u003ctd\u003e15.25\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2390\u003c/th\u003e       \u003ctd\u003eW\u003c/td\u003e       \u003ctd\u003eTriple Jump Women\u003c/td\u003e       \u003ctd\u003eAthens\u003c/td\u003e       \u003ctd\u003e2004\u003c/td\u003e       \u003ctd\u003eB\u003c/td\u003e       \u003ctd\u003eTatyana LEBEDEVA\u003c/td\u003e       \u003ctd\u003eRUS\u003c/td\u003e       \u003ctd\u003e15.14\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2391\u003c/th\u003e       \u003ctd\u003eW\u003c/td\u003e       \u003ctd\u003eTriple Jump Women\u003c/td\u003e       \u003ctd\u003eAtlanta\u003c/td\u003e       \u003ctd\u003e1996\u003c/td\u003e       \u003ctd\u003eG\u003c/td\u003e       \u003ctd\u003eInessa KRAVETS\u003c/td\u003e       \u003ctd\u003eUKR\u003c/td\u003e       \u003ctd\u003e15.33\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2392\u003c/th\u003e       \u003ctd\u003eW\u003c/td\u003e       \u003ctd\u003eTriple Jump Women\u003c/td\u003e       \u003ctd\u003eAtlanta\u003c/td\u003e       \u003ctd\u003e1996\u003c/td\u003e       \u003ctd\u003eS\u003c/td\u003e       \u003ctd\u003eInna LASOVSKAYA\u003c/td\u003e       \u003ctd\u003eRUS\u003c/td\u003e       \u003ctd\u003e14.98\u003c/td\u003e     \u003c/tr\u003e     \u003ctr\u003e       \u003cth\u003e2393\u003c/th\u003e       \u003ctd\u003eW\u003c/td\u003e       \u003ctd\u003eTriple Jump Women\u003c/td\u003e       \u003ctd\u003eAtlanta\u003c/td\u003e       \u003ctd\u003e1996\u003c/td\u003e       \u003ctd\u003eB\u003c/td\u003e       \u003ctd\u003eSarka KASPARKOVA\u003c/td\u003e       \u003ctd\u003eCZE\u003c/td\u003e       \u003ctd\u003e14.98\u003c/td\u003e     \u003c/tr\u003e   \u003c/tbody\u003e \u003c/table\u003e \u003cp\u003e2394 rows √ó 8 columns\u003c/p\u003e \u003c/div\u003e  \u003ch3\u003eFeatures of Pandas\u003c/h3\u003e  \u003cp\u003eThe code snippets above demonstrate two of the library highlights from the pandas \u003ca href=\"https://pandas.pydata.org/about/\"\u003eabout page\u003c/a\u003e:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eA fast and efficient \u003cstrong\u003eDataFrame\u003c/strong\u003e object for data manipulation with integrated indexing;\u003c/li\u003e \u003cli\u003eTools for \u003cstrong\u003ereading and writing data between in-memory data structures and different formats\u003c/strong\u003e: CSV and text files, Microsoft Excel, SQL databases, and the fast HDF5 format;\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eOther highlights include:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eIntelligent data alignment and integrated \u003cstrong\u003ehandling of missing data\u003c/strong\u003e: gain automatic label-based alignment in computations and easily manipulate messy data into an orderly form;\u003c/li\u003e \u003cli\u003eFlexible \u003cstrong\u003ereshaping and pivoting\u003c/strong\u003e of data sets;\u003c/li\u003e \u003cli\u003eIntelligent label-based \u003cstrong\u003eslicing\u003c/strong\u003e, fancy indexing, and \u003cstrong\u003esubsetting\u003c/strong\u003e of large data sets;\u003c/li\u003e \u003cli\u003eAggregating or transforming data with a powerful \u003cstrong\u003egroup by\u003c/strong\u003e engine allowing split-apply-combine operations on data sets;\u003c/li\u003e \u003cli\u003eHigh performance \u003cstrong\u003emerging and joining\u003c/strong\u003e of data sets;\u003c/li\u003e \u003cli\u003e\u003cstrong\u003eTime series\u003c/strong\u003e-functionality: date range generation and frequency conversion, moving window statistics, date shifting and lagging. Even create domain-specific time offsets and join time series without losing data;\u003c/li\u003e \u003cli\u003eHighly \u003cstrong\u003eoptimized for performance\u003c/strong\u003e, with critical code paths written in Cython or C.\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eWe will begin to dive into these features in this section!\u003c/p\u003e","frontPage":false},{"exportId":"sql-table-relations-recap","title":"SQL Table Relations - Recap","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-sql-relations-recap\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-relations-recap\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-relations-recap/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eAnother section down, great job! In this section you learned about SQL queries that use \u003ccode\u003eJOIN\u003c/code\u003e clauses and subqueries to return data from multiple tables at once. You also got some additional SQL practice resembling what you might need to do in a technical interview.\u003c/p\u003e  \u003ch2\u003eKey Takeaways\u003c/h2\u003e  \u003ch3\u003eRelational Data\u003c/h3\u003e  \u003cp\u003eOne of the powerful aspects of SQL is that \u003cstrong\u003ea given database can contain multiple, related tables\u003c/strong\u003e. Records across tables can be connected based on \u003cstrong\u003eforeign keys\u003c/strong\u003e ‚Äî values in one table that reference a unique identifier in another table.\u003c/p\u003e  \u003cp\u003eRelational data means that you don't need to store multiple copies of the same information, and that updates can be made more easily and efficiently.\u003c/p\u003e  \u003cp\u003eSometimes multiple tables must be joined together to answer a single question, based on how the various tables are related to each other.\u003c/p\u003e  \u003ch3\u003e\u003ccode\u003eJOIN\u003c/code\u003e Clause\u003c/h3\u003e  \u003cp\u003eThe \u003ccode\u003eJOIN\u003c/code\u003e clause is typically used to \u003cstrong\u003econnect records from multiple tables\u003c/strong\u003e. SQL will not automatically understand how the tables are related, so you need to specify this using either the \u003ccode\u003eON\u003c/code\u003e clause (e.g. \u003ccode\u003eON employees.office_id = offices.id\u003c/code\u003e), or, if the column names are identical in both tables, using the \u003ccode\u003eUSING\u003c/code\u003e clause (e.g. \u003ccode\u003eUSING(office_id)\u003c/code\u003e).\u003c/p\u003e  \u003cp\u003eOften it is useful to \u003cstrong\u003ealias\u003c/strong\u003e table names (e.g. \u003ccode\u003eJOIN orderdetails AS od\u003c/code\u003e) when you are using \u003ccode\u003eJOIN\u003c/code\u003e clauses in order to shorten the syntax. Similar to aliases for columns, the \u003ccode\u003eAS\u003c/code\u003e is optional when using SQLite (and may be required or not allowed in other contexts).\u003c/p\u003e  \u003ch3\u003eSubqueries\u003c/h3\u003e  \u003cp\u003eIn some cases \u003cstrong\u003esubqueries can be used for the same tasks as \u003ccode\u003eJOIN\u003c/code\u003e clauses\u003c/strong\u003e. To do that, you don't use \u003ccode\u003eJOIN\u003c/code\u003e, and instead add a nested \u003ccode\u003eSELECT\u003c/code\u003e query inside of your main \u003ccode\u003eSELECT\u003c/code\u003e query, which selects from another table.\u003c/p\u003e  \u003cp\u003eSubqueries are also useful \u003cstrong\u003eif you want to filter or order by an aggregate, but not select an aggregate\u003c/strong\u003e. For example, if you had a database of guest appearances on a late night show, and you wanted to select the dates of appearances of guests who had been on the show 10 or more times (maybe you're theorizing that repeat guests are more frequent on Mondays), you couldn't just use \u003ccode\u003eGROUP BY\u003c/code\u003e and \u003ccode\u003eHAVING\u003c/code\u003e because that would return \u003cem\u003eguests\u003c/em\u003e (all appearance dates grouped together) and you want the actual appearance dates.\u003c/p\u003e  \u003cp\u003eAs you can see from the example above, subqueries can be useful even if you are only working with a single table, if you want to use an aggregate in your analysis but not have your query return an aggregate.\u003c/p\u003e  \u003ch3\u003eTechnical Interview Prep\u003c/h3\u003e  \u003cp\u003eYou can expect to run into SQL questions in job interviews. Often times when asked to write a query, you'll be given a hypothetical situation and asked to write a query, without having an ERD or tables to look at. When working through these questions, it's important to clarify your assumptions, and to ask questions to make sure that your assumptions are actually correct!\u003c/p\u003e  \u003cp\u003eOnce you have the information you need, be sure to write clean, well-structured SQL code. This includes things like:\u003c/p\u003e  \u003cul\u003e \u003cli\u003eCapitalizing SQL keywords (technically \u003ccode\u003eselect\u003c/code\u003e and \u003ccode\u003eSELECT\u003c/code\u003e both work the same, but it's easier to read if you use capitalization consistently)\u003c/li\u003e \u003cli\u003eUsing whitespace consistently (unlike Python, whitespace is not important in SQL ‚Äî try your best to use new lines and indentation to spread out your code and help you spot errors)\u003c/li\u003e \u003cli\u003eUsing semantic variable names (renaming things like \u003ccode\u003eCOUNT(*)\u003c/code\u003e to something readable, and using sensible names for foreign keys such as \u003ccode\u003eoffice_id\u003c/code\u003e for a foreign key that links to the \u003ccode\u003eoffices\u003c/code\u003e table)\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003eThis is also a situation where thinking out loud and engaging your interviewer is a great strategy. They're likely trying to evaluate how you would work on a team, just as much as they're trying to evaluate your technical knowledge or your ability to get data from a relational database.\u003c/p\u003e  \u003ch4\u003eOpen-ended Questions in Interviews\u003c/h4\u003e  \u003cp\u003eYou may also encounter open-ended SQL questions where there is no single correct solution. When faced with these sorts of interview questions, have an opinion, and be ready to back it up with your rationale! For these sorts of questions, interviewers are often trying to evaluate \u003cem\u003ehow\u003c/em\u003e you approach problems and evaluate your thought process, so helping them understand your thought process is very important!\u003c/p\u003e  \u003ch4\u003eThe Internet Is Your Friend\u003c/h4\u003e  \u003cp\u003eAll of the real-world interview questions you worked through in this section came from popular interview sites such as Glassdoor. If you still feel a bit shaky about your ability to answer SQL/relational database questions in an interview, that's okay ‚Äî practice makes perfect! Don't be afraid to peruse sites like Glassdoor and others to look for the types of SQL questions you can expect to see during the interview process. Just make sure that when you look at the questions, you try to answer them yourself first before looking at the answers that others have posted!\u003c/p\u003e  \u003ch2\u003eSummary\u003c/h2\u003e  \u003cp\u003eCongratulations! You should have a good amount of SQL skills by now. The more practice you get, the more comfortable you will be when you're actually interviewing!\u003c/p\u003e","frontPage":false},{"exportId":"running-jupyter-notebooks-locally","title":"Running Jupyter Notebooks Locally","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-running-jupyter-locally\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-running-jupyter-locally\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-running-jupyter-locally/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this lesson you will practice the workflow you will be using when you want to work \u003cem\u003elocally\u003c/em\u003e instead of in IllumiDesk on Canvas, and also get some hands-on practice with important tools that you will need to be familiar with as a professional Data Scientist: the command line, git, GitHub, and running Jupyter Notebooks locally.\u003c/p\u003e\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse basic commands to navigate the command line\u003c/li\u003e\n\u003cli\u003eUse bash commands to create new files and folders\u003c/li\u003e\n\u003cli\u003eUse git clone to clone a repository\u003c/li\u003e\n\u003cli\u003eWork on your labs locally\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSetting the Stage\u003c/h2\u003e\n\u003cp\u003eRemember how \u003cstrong\u003eCode Lessons\u003c/strong\u003e and \u003cstrong\u003eLabs\u003c/strong\u003e on Canvas use Illumidesk (by clicking the grey button below) to open notebooks and start coding?\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-running-jupyter-locally/master/images/illumidesk_4.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003cp\u003eWhen you're a professional Data Scientist, you won't have access to Illumidesk, but you'll need to get everything up and running to work on your local machine. Luckily, you've already set up a professional data science environment, and in this lesson you'll learn how to actually run your code on your local machine instead of through Illumidesk!\u003c/p\u003e\n\u003ch2\u003eThe Command Line\u003c/h2\u003e\n\u003cp\u003eIn order to be able to work locally, we first need to tell you a tiny bit about command line. On Mac computers, this is the terminal application. On Windows computers, we'll use \"Git Bash\". The command line serves as a low-level interpreter through which you, the user, can send commands directly to the computer. As a computer user, you previously have probably sent commands to the computer through a graphical user interface (GUI) such as a web browser, text editor, photo editor, or any other of the myriad of computer programs now in existence. While the command line is initially daunting with its cryptic looking text, we will quickly see some of the many advantages it can have.\u003c/p\u003e\n\u003cp\u003eOne of the many useful features of the command line will be using \u003cem\u003egit\u003c/em\u003e to clone (download) a local copy of the curriculum hosted on Canvas. This will allow you to work offline and to save changes as you work through exercises and start programming!\u003c/p\u003e\n\u003cp\u003eTo start, \u003cstrong\u003efor Mac users, open the terminal application\u003c/strong\u003e, \u003cstrong\u003efor Windows, open ‚ÄúGit Bash‚Äù\u003c/strong\u003e.\u003c/p\u003e\n\u003ch3\u003epwd\u003c/h3\u003e\n\u003cp\u003eThe first command to try out is \u003cstrong\u003epwd\u003c/strong\u003e which stands for \u003cstrong\u003eprint working directory\u003c/strong\u003e. This will tell you where you currently are in the computer's directory structure. Try it out.\u003c/p\u003e\n\u003ch3\u003ecd\u003c/h3\u003e\n\u003cp\u003eThe next essential command is \u003cstrong\u003ecd\u003c/strong\u003e which stands for \u003cstrong\u003echange directory\u003c/strong\u003e. This allows you to navigate to different folders on your computer's hard drive. Typing \u003ccode\u003ecd\u003c/code\u003e by itself (or \u003ccode\u003ecd ~\u003c/code\u003e) will automatically take you to your home directory. Typing \u003ccode\u003ecd\u003c/code\u003e and a folder name will take you to that folder. Typing \u003ccode\u003ecd ..\u003c/code\u003e will move you one folder up in the hierarchy. Play around and trying moving between folders for a minute or two.\u003c/p\u003e\n\u003ch3\u003eTab Completion\u003c/h3\u003e\n\u003cp\u003eAn extraordinarly useful feature when working with the command line is tab completion. This allows you to hit the tab button to autocomplete names once you have made a unique specification.\u003c/p\u003e\n\u003cp\u003eFor example, if you navigate to your root directory by running the command \u003ccode\u003ecd\u003c/code\u003e, if you're on a Mac, you will probably have 2 folders within your root directory named \"Downloads\" and \"Documents\" (these are standard folder names created by default in most systems, although you may have renamed them, or your system may be different). With these, or longer folder names, it can sometimes become cumbersome to type the full folder name. instead, you can start typing the command and folder name such as \u003ccode\u003ecd Dow\u003c/code\u003e and then press \u003cstrong\u003etab\u003c/strong\u003e to autocomplete. Like magic, the command line should complete the statement correctly to be \u003ccode\u003ecd Downloads\u003c/code\u003e. (Note: this will not work if you have another folder that begins with \"Dow\". Similarly, if you just typed \u003ccode\u003ecd D\u003c/code\u003e or \u003ccode\u003ecd Do\u003c/code\u003e followed by \u003cstrong\u003etab\u003c/strong\u003e, the command line will not autocomplete, as the selection is not unique, because \u003cstrong\u003eD\u003c/strong\u003e or \u003cstrong\u003eDo\u003c/strong\u003e could both refer to either \u003cstrong\u003eDocuments\u003c/strong\u003e or \u003cstrong\u003eDownloads\u003c/strong\u003e. Also note that these commands are case sensitive, and folder capitalization much be matched exactly.\u003c/p\u003e\n\u003ch3\u003els\u003c/h3\u003e\n\u003cp\u003eContinuing with navigating the computer's hard drive, it's useful to know how to \u003cstrong\u003elist files\u003c/strong\u003e. This is done with the \u003ccode\u003els\u003c/code\u003e command, short for list.\u003c/p\u003e\n\u003cp\u003eYou can also pass optional parameters to \u003ccode\u003els\u003c/code\u003e such as \u003ccode\u003els -a\u003c/code\u003e which lists \u003cstrong\u003eall files\u003c/strong\u003e (including hidden files), \u003ccode\u003els -l\u003c/code\u003e gives a \u003cstrong\u003elong listing\u003c/strong\u003e of files (including file size and last edit times). You can also pass multiple parameters simultaneously, such as \u003ccode\u003els -al\u003c/code\u003e to produce a detailed listing of all files.\u003c/p\u003e\n\u003ch3\u003e* the wildcard parameter\u003c/h3\u003e\n\u003cp\u003eAlso very useful is the wildcard parameter. For example, if you wanted to list all files in the current working directory that begin with a, you could type \u003ccode\u003els a*\u003c/code\u003e. Here, the asterix (\u003ccode\u003e*\u003c/code\u003e) denotes anything is allowed following the a. Similarly, to list all pdf files in the current working directory you can use \u003ccode\u003els *.pdf\u003c/code\u003e, or to list all text files, you can use \u003ccode\u003els *.txt\u003c/code\u003e.\u003c/p\u003e\n\u003ch3\u003emkdir\u003c/h3\u003e\n\u003cp\u003eFinally, as you continue to navigate the file directory from the command line it can be useful to be able to create new folders. To do this, use the \u003ccode\u003emkdir\u003c/code\u003e command, which stands for \u003cstrong\u003emake directory\u003c/strong\u003e. Try it out with \u003ccode\u003emkdir NewFolderName\u003c/code\u003e. Afterward, use the \u003ccode\u003els\u003c/code\u003e command to see that there is indeed a new folder, and if you wish, move into the new folder using the \u003ccode\u003ecd\u003c/code\u003e command.\u003c/p\u003e\n\u003ch2\u003eCloning GitHub repositories and Canvas lessons\u003c/h2\u003e\n\u003cp\u003eYou have already read a little bit about GitHub and how it's used to share code. Since you can now navigate the file directory using the command line, you're ready to download some course materials from GitHub to your local environment. In practice, you will do the following:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eFork\u003c/strong\u003e the course material repository: Forking is the process of making a personal copy of the Canvas course materials on your own GitHub account.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eClone\u003c/strong\u003e the forked course material repository: Cloning is the process of downloading a repository from Github onto your personal computer.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eDon't worry if this process seems a little confusing. It will be explained in more detail soon. For now, you can just follow the steps below:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a folder on your computer for your course materials and navigate into it\u003cbr\u003e\n\u003cul\u003e\n\u003cli\u003eYou may also want to create a subfolder titled \"phase_1\" and navigate into that\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eReturn to your web browser and navigate to the lesson you want to download\u003c/li\u003e\n\u003cli\u003eClick the GitHub icon\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-running-jupyter-locally/master/images/illumidesk_3.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003cp\u003eYou'll be redirected to the associated GitHub repository.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eClick the fork button\u003c/strong\u003e, as shown, in order to create a copy to your personal account which you can edit and update\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-running-jupyter-locally/master/images/before-fork.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003cp\u003eOne of two things will happen. Either it'll pop up a modal (window) and if you scroll to the bottom of it you'll see it says that you already have a fork. If that's the case, just click on the link to view your existing fork.\u003c/p\u003e\n\u003cp\u003eIf you don't already have a fork, you'll be redirected to your new personal copy of the repository:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-running-jupyter-locally/master/images/after-fork.png\" width=\"600\"\u003e\u003c/p\u003e\n\u003ch2\u003eFinally\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ePress \u003cstrong\u003ecmd + L\u003c/strong\u003e to highlight the url bar and \u003cstrong\u003ecmd + c\u003c/strong\u003e to copy the url (whenever we use \u003cstrong\u003ecmd\u003c/strong\u003e to refer to holding down the command key on a Mac computer, on a Windows computer, hold down the control key instead)\u003c/li\u003e\n\u003cli\u003eReturn to the terminal (you should be in your course materials folder or your \"phase_1\" subfolder)\u003c/li\u003e\n\u003cli\u003eType: \u003ccode\u003egit clone\u003c/code\u003e and paste your repo url (\u003cstrong\u003ecmd + v\u003c/strong\u003e for Mac; for Windows, in git bash, \u003cstrong\u003eshift + insert\u003c/strong\u003e)\u003c/li\u003e\n\u003cli\u003eEt Voila! The repository and all of its contents will be downloaded locally to your computer!\u003c/li\u003e\n\u003cli\u003eRemember that you need to \u003ccode\u003ecd\u003c/code\u003e into the new repository once you've downloaded it\u003c/li\u003e\n\u003cli\u003eThe next step is to open your Jupyter Notebook locally (\u003cstrong\u003enot on Canvas/Illumidesk\u003c/strong\u003e) using the command line\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eStarting the Jupyter Notebook\u003c/h2\u003e\n\u003cp\u003eMake sure to activate your conda virtual environment in your terminal first by typing \u003ccode\u003esource activate learn-env\u003c/code\u003e. Then type \u003ccode\u003ejupyter notebook\u003c/code\u003e in your command line and press enter. Next, your default browser will open a new window or tab and you will see the list of files that are in your current directory (\u003cem\u003eremember you want to be in the GitHub repo directory that we just downloaded\u003c/em\u003e).\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e To stop a Jupyter Notebook, go to your command line where the notebook is running and press the \u003cstrong\u003econtrol\u003c/strong\u003e key + the letter \u003cstrong\u003ec\u003c/strong\u003e (\u003ccode\u003ectrl\u003c/code\u003e+\u003ccode\u003ec\u003c/code\u003e).\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThen click on the \u003ccode\u003eindex.ipynb\u003c/code\u003e file which is the Jupyter Notebook we will be using in this and future labs and lessons. This will open a new tab where you will see the same content you saw in IllumiDesk on Canvas!\u003c/p\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eIn this lesson, you learned about the command line, cloning GitHub repositorites, and how to work with Jupyter notebooks locally. In the next lab, you'll put what you learned into practice!\u003c/p\u003e","frontPage":false}],"assignments":[{"exportId":"g0a64daf9497a06e8b498a063e05c799c","title":"Accessing Data within Pandas","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-accessing-data-with-pandas\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-accessing-data-with-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-accessing-data-with-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we're going to dig into various methods for accessing data from our Pandas Series and DataFrames.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse pandas methods and attributes to access information about a dataset\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eIndex pandas dataframes with .loc, .iloc, and column names\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eUse a boolean mask to index pandas series and dataframes \u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g33625ac3776e3bcf751370d9fc3b1723","title":"Accessing Data within Pandas - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-accessing-data-with-pandas-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-accessing-data-with-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-accessing-data-with-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll look at a dataset which contains information on World Cup matches. Let's use the pandas commands learned in the previous lesson to learn more about our data!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse pandas methods and attributes to access information about a dataset \u003c/li\u003e\n\u003cli\u003eIndex pandas dataframes with .loc, .iloc, and column names \u003c/li\u003e\n\u003cli\u003eUse a boolean mask to index pandas series and dataframes\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gd606df2ef270cd64229a7b706e4fed85","title":"Analyzing Macbeth with Pandas","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-analyzing-macbeth-project-pandas-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-analyzing-macbeth-project-pandas-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g929713dd1af9fc2b9f950bea74bfed91","title":"An Introduction to Web Scraping and Beautiful Soup","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-web-scraping-with-beautiful-soup\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-with-beautiful-soup\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-with-beautiful-soup/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you've gotten a taste of HTML and CSS, it's time to reverse engineer that knowledge to extract data from the web. In this lesson, you'll learn how to use Beautiful Soup, a Python package used for web scraping. You'll also get some hands-on scraping practice.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the DOM and its relationship to HTML\u003c/li\u003e\n\u003cli\u003eSelect specific elements from HTML using Beautiful Soup\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g40b6e66c6ac8b27b60c89364c1716c87","title":"Combining DataFrames With Pandas - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-combining-dataframes-pandas-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-combining-dataframes-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-combining-dataframes-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll gain practice combining DataFrames through concatenation.  You'll also practice executing various types of joins to selectively combine the information stored in the tables!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eIn this lab you will:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse concatenation to combine DataFrames\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDetermine which type of join is preferred for two tables of data and a task\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eUse different types of joins to merge dataframes\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g1add67b78281ae2a2eb3f75501c424c3","title":"Connecting to SQL Databases","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-intro-to-sqlite\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-intro-to-sqlite\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-intro-to-sqlite/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you've gotten a brief introduction to SQL, its time to get some hands-on practice connecting to a database and executing some queries.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eConnect to a SQLite database through the \u003ccode\u003esqlite3\u003c/code\u003e command-line interface\u003c/li\u003e\n\u003cli\u003eConnect to a SQLite database through the \u003ccode\u003esqlite3\u003c/code\u003e Python library\u003c/li\u003e\n\u003cli\u003eView information about database tables and column names\u003c/li\u003e\n\u003cli\u003eRetrieve all information from a SQL table\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g24d05e47f4390531bc8dc930f333d2e9","title":"CSV","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-csv\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-csv\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-csv/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson we will cover the CSV (comma-separated values) data format, one of the most simple and popular data serialization formats used in data science.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe features of the CSV format and the Python \u003ccode\u003ecsv\u003c/code\u003e module\u003c/li\u003e\n\u003cli\u003eUse Python to read and parse data from CSV files\u003c/li\u003e\n\u003cli\u003eInterpret the schemas of CSV files\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g9f939ac2496cd23a9d2236b40858d109","title":"Database Admin 101","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-database-admin-101\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-database-admin-101\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-database-admin-101/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you've seen how to access and retrieve information from a SQL database, let's investigate how you could create or alter an existing database. Although there is still much to learn, this will lead you into the realm of database administration.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a SQL database\u003c/li\u003e\n\u003cli\u003eCreate a SQL table\u003c/li\u003e\n\u003cli\u003eCreate rows in a SQL table\u003c/li\u003e\n\u003cli\u003eAlter entries in a SQL table\u003c/li\u003e\n\u003cli\u003eDelete entries in a SQL table\u003c/li\u003e\n\u003cli\u003eDetermine when it is necessary to commit changes to a database\u003c/li\u003e\n\u003cli\u003eCommit changes via \u003ccode\u003esqlite3\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g31949e3e33b48d18e70e6c57f6bebb96","title":"Database Admin 101 - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-database-admin-101-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-database-admin-101-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-database-admin-101-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll go through the process of designing and creating a database. From there, you'll begin to populate this table with mock data provided to you.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse knowledge of the structure of databases to create a database and populate it\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g8f522c1d81e2ab4f41d7ae4e8fbeea45","title":"Data Cleaning with Pandas Checkpoint","type":"Assignment","content":"","submissionTypes":"an external tool","graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g8563fda27ea892529bdc75d88463655b","title":"Data Visualization with Pandas","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-visualization-with-pandas\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-visualization-with-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-visualization-with-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we will be looking at data visualization using pandas and Matplotlib - modules that we have already seen and used. Pandas uses Matplotlib under the hood for data visualization, and provides some handy yet efficient methods for visualizing data from DataFrames.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eMake visualizations using pandas built-in methods \u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gf5f34dde719812cc47fa22f4b23a2b39","title":"Dealing with Missing Data - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-dealing-missing-data-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dealing-missing-data-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dealing-missing-data-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll work through strategies for data cleaning and dealing with missing values (\u003ccode\u003eNaN\u003c/code\u003es).\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eIn this lab you will:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIdentify missing values in a dataframe using built-in methods \u003c/li\u003e\n\u003cli\u003eExplain why missing values are a problem in data science \u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb51784d7a69a0c8c29987cb96607eca0","title":"Exploring and Transforming JSON Schemas","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-exploring-and-transforming-json-schemas\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-exploring-and-transforming-json-schemas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-exploring-and-transforming-json-schemas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll formalize your knowledge for how to explore a JSON file whose structure and schema is unknown to you. This often happens in practice when you are handed a file or stumble upon one with little documentation.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the JSON module to load and parse JSON documents\u003c/li\u003e\n\u003cli\u003eExplore and extract data using unknown JSON schemas\u003c/li\u003e\n\u003cli\u003eConvert JSON to a pandas dataframe\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g2e4f113fb8a929893f5dc33a077850cf","title":"Exploring and Transforming JSON Schemas - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-exploring-and-transforming-json-schemas-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-exploring-and-transforming-json-schemas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-exploring-and-transforming-json-schemas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\n\n\u003cp\u003eIn this lab, you'll practice exploring a JSON file whose structure and schema is unknown to you. We will provide you with limited information, and you will explore the dataset to answer the specified question.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the \u003ccode\u003ejson\u003c/code\u003e module to load and parse JSON documents\u003c/li\u003e\n\u003cli\u003eExplore and extract data using unknown JSON schemas\u003c/li\u003e\n\u003cli\u003eConvert JSON to a pandas dataframe\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gf51f7ff13bc3c4e413c7ca73a07fae54","title":"File Input and Output in Python","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-file-io\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-file-io\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-file-io/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll learn about interacting with files in Python. First you'll start by reviewing the core concepts of opening, closing, reading, and writing files, and how this process is similar and different between the familiar GUI software and using Python code. Then you'll walk through some specific examples of reading and writing files with Python, ending with a series of examples using different libraries to open different types of files.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand the core concepts of file I/O\u003c/li\u003e\n\u003cli\u003eRead data from files into Python\u003c/li\u003e\n\u003cli\u003eWrite data from Python into files\u003c/li\u003e\n\u003cli\u003eDescribe key file types and how to interact with them in Python\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g055514bc26de5d911bf7626fff266d7b","title":"Filtering Data with SQL","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-filtering-v2-4\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-filtering-v2-4\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-filtering-v2-4/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eAfter \u003ccode\u003eSELECT\u003c/code\u003e and \u003ccode\u003eFROM\u003c/code\u003e, the next SQL clause you're most likely to use as a data scientist is \u003ccode\u003eWHERE\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWith just a \u003ccode\u003eSELECT\u003c/code\u003e expression, we can specify which \u003cstrong\u003ecolumns\u003c/strong\u003e we want to select, as well as transform the column values using aliases, built-in functions, and other expressions.\u003c/p\u003e\n\n\u003cp\u003eHowever if we want to filter the \u003cstrong\u003erows\u003c/strong\u003e that we want to select, we also need to include a \u003ccode\u003eWHERE\u003c/code\u003e clause.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRetrieve a subset of records from a table using a \u003ccode\u003eWHERE\u003c/code\u003e clause\u003c/li\u003e\n\u003cli\u003eFilter results using conditional operators such as \u003ccode\u003eBETWEEN\u003c/code\u003e, \u003ccode\u003eIS NULL\u003c/code\u003e, and \u003ccode\u003eLIKE\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eApply an aggregate function to the result of a filtered query\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gd45c31c98f6c1a9458d872d0b982e0aa","title":"Filtering Data with SQL - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-filtering-lab-v2-4\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-filtering-lab-v2-4\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-filtering-lab-v2-4/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNASA wants to go to Mars! Before they build their rocket, NASA needs to track information about all of the planets in the Solar System. In this lab, you'll practice querying the database with various \u003ccode\u003eSELECT\u003c/code\u003e statements. This will include selecting different columns and implementing other SQL clauses like \u003ccode\u003eWHERE\u003c/code\u003e to return the data desired.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-filtering-lab-v2-4/master/images/planets.png\" alt=\"image of solar system\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will practice the following:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRetrieve a subset of records from a table using a \u003ccode\u003eWHERE\u003c/code\u003e clause\u003c/li\u003e\n\u003cli\u003eFilter results using conditional operators such as \u003ccode\u003eBETWEEN\u003c/code\u003e, \u003ccode\u003eIS NULL\u003c/code\u003e, and \u003ccode\u003eLIKE\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eApply an aggregate function to the result of a filtered query\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g75f6e7009ad15d0846d2826775cb78b4","title":"Filtering, Ordering, and Limiting Data with SQL - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-filtering-and-ordering-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-filtering-and-ordering-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-filtering-and-ordering-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you will practice writing SQL \u003ccode\u003eSELECT\u003c/code\u003e queries that limit results based on conditions, using \u003ccode\u003eWHERE\u003c/code\u003e, \u003ccode\u003eORDER BY\u003c/code\u003e, and \u003ccode\u003eLIMIT\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will practice the following:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eOrder the results of your queries by using \u003ccode\u003eORDER BY\u003c/code\u003e (\u003ccode\u003eASC\u003c/code\u003e \u0026amp; \u003ccode\u003eDESC\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003eLimit the number of records returned by a query using \u003ccode\u003eLIMIT\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eWrite SQL queries to filter and order results\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb193e466f0f425b1ac898b5b831c0918","title":"Folium - Codealong","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-folium-codealong\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-folium-codealong\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-folium-codealong/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this codealong, we'll take a look at how to create an interactive map using the Folium package. From there, we'll return to APIs in the final lab for the day where you'll make an interactive map from your requests to the API!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate maps using Folium\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ga9fe2f3118742827eba3424f67a46c3e","title":"Functions Practice: Building a Calculator","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-building-a-calculator\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-project-building-a-calculator/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ge21d8bf641243230e5a6e1bd29bfc0f5","title":"Grouping Data with SQL","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-grouping-data-with-sql\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-grouping-data-with-sql\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-grouping-data-with-sql/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSometimes you may wish to find the mean, median, min, or max of a column feature. For example, there could be a customer relational database that you've been working with and you may wonder if there are differences in overall sales across offices or regions. We can use aggregate functions in SQL to assist with performing these analyses.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the relationship between aggregate functions and \u003ccode\u003eGROUP BY\u003c/code\u003e statements\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003eGROUP BY\u003c/code\u003e statements in SQL to apply aggregate functions like: \u003ccode\u003eCOUNT\u003c/code\u003e, \u003ccode\u003eMAX\u003c/code\u003e, \u003ccode\u003eMIN\u003c/code\u003e, and \u003ccode\u003eSUM\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate an alias in a SQL query\u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003eHAVING\u003c/code\u003e clause to compare different aggregates\u003c/li\u003e\n\u003cli\u003eCompare the difference between the \u003ccode\u003eWHERE\u003c/code\u003e and \u003ccode\u003eHAVING\u003c/code\u003e clause\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gfe1ba86c5b9da7fdee1d1c620a9527d9","title":"Grouping Data with SQL - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-grouping-data-with-sql-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-grouping-data-with-sql-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-grouping-data-with-sql-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll query data from a table populated with Babe Ruth's career hitting statistics.  Then you'll use aggregate functions to pull interesting information from the table that basic queries cannot track. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the relationship between aggregate functions and \u003ccode\u003eGROUP BY\u003c/code\u003e statements\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003eGroup BY\u003c/code\u003e statements in SQL to apply aggregate functions like: \u003ccode\u003eCOUNT\u003c/code\u003e, \u003ccode\u003eMAX\u003c/code\u003e, \u003ccode\u003eMIN\u003c/code\u003e, and \u003ccode\u003eSUM\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate an alias in a SQL query\u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003eHAVING\u003c/code\u003e clause to compare different aggregates\u003c/li\u003e\n\u003cli\u003eCompare the difference between the \u003ccode\u003eWHERE\u003c/code\u003e and \u003ccode\u003eHAVING\u003c/code\u003e clause\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gae87562a923e0917e0f34cc7f8b5bf9f","title":"HTTP Request/Response Cycle - Codealong","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-http-request-response-codealong\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-http-request-response-codealong\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-http-request-response-codealong/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWhen developing a Web application, as we saw in the previous lesson, the request/response cycle is a useful guide to see how all the components of the app fit together. The request/response cycle traces how a user's request flows through the app. Understanding the request/response cycle is helpful to figure out which files to edit when developing an app (and where to look when things aren't working). This lesson will show how this setup works using python. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the HTTP request/response cycle\u003c/li\u003e\n\u003cli\u003eList the status codes of responses and their meanings\u003c/li\u003e\n\u003cli\u003eObtain and interpret status codes from responses\u003c/li\u003e\n\u003cli\u003eMake HTTP GET and POST requests in python using the \u003ccode\u003erequests\u003c/code\u003e library\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g545d29befb66ab7e5ce40d116a4cdb97","title":"HTTP Request/Response Cycle - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-http-request-response-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-http-request-response-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-http-request-response-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll make use of the \u003ccode\u003erequests\u003c/code\u003e module commands and properties seen in the previous lesson, to extract information for a web service called \u003cstrong\u003e\"Open Notify\"\u003c/strong\u003e to access NASA's space data. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the HTTP request/response cycle\u003c/li\u003e\n\u003cli\u003eList the status codes of responses and their meanings\u003c/li\u003e\n\u003cli\u003eObtain and interpret status codes from responses\u003c/li\u003e\n\u003cli\u003eMake HTTP GET and POST requests in python using the \u003ccode\u003erequests\u003c/code\u003e library\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g6ba2152a25eb0ea3ca4aeb2ddc8d42e4","title":"Importing Data Using Pandas","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-importing-data-using-pandas\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-importing-data-using-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-importing-data-using-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003ePandas is a popular library for efficiently wrangling data. It is particularly optimized to work with two-dimensional tabular data that is organized in rows and columns. In this lesson, you will learn how to import tabular data as a Pandas DataFrame object, how to access and manipulate the data in DataFrame objects, and how to export DataFrames to some common file formats. \u003c/p\u003e\n\n\u003cp\u003eFor more information on Pandas, refer to \u003ca href=\"https://pandas.pydata.org/pandas-docs/stable/\"\u003ehttps://pandas.pydata.org/pandas-docs/stable/\u003c/a\u003e .\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse pandas to import data from a CSV and and an Excel spreadsheet\u003c/li\u003e\n\u003cli\u003eUse pandas to export a DataFrame to a file\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gd69ca565852456f473df35aa1070740b","title":"Importing Data Using Pandas - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-importing-data-using-pandas-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-importing-data-using-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-importing-data-using-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll get some practice with loading files with summary or metadata, and if you find that easy, the optional \"level up\" content covers loading data from a corrupted csv file!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse pandas to import data from a CSV and and an Excel spreadsheet\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g068864ff26d451d4ee5eb2c38e036d08","title":"Join Statements","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-join-statements\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-join-statements\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-join-statements/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you will learn about several types of \u003ccode\u003eJOIN\u003c/code\u003e statements.  Joins are the primary mechanism for combining data from multiple tables. In order to do this, you define the common attribute(s) between tables in order for them to be combined.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWrite SQL queries that make use of various types of joins\u003c/li\u003e\n\u003cli\u003eCompare and contrast the various types of joins\u003c/li\u003e\n\u003cli\u003eDiscuss how primary and foreign keys are used in SQL\u003c/li\u003e\n\u003cli\u003eDecide and perform whichever type of join is best for retrieving desired data\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g3903fbfed2a41d934018cbbdd7ed0d01","title":"Join Statements - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-join-statements-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-join-statements-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-join-statements-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll practice your knowledge of \u003ccode\u003eJOIN\u003c/code\u003e statements, using various types of joins and various methods for specifying the links between them.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWrite SQL queries that make use of various types of joins\u003c/li\u003e\n\u003cli\u003eCompare and contrast the various types of joins\u003c/li\u003e\n\u003cli\u003eDiscuss how primary and foreign keys are used in SQL\u003c/li\u003e\n\u003cli\u003eDecide and perform whichever type of join is best for retrieving desired data\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ga04c79d1eaf15c23f148e5d332dde21b","title":"JSON","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-json-v2-1\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll continue investigating new formats for data. Specifically, you'll investigate one of the most popular data formats for the web: JSON files.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe features of the JSON format and the Python \u003ccode\u003ejson\u003c/code\u003e module\u003c/li\u003e\n\u003cli\u003eUse Python to load and parse JSON documents\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g1cdf2e88ec7422089bef9ddf8b50fc83","title":"JSON - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-json-lab-v2-1\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-lab-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-json-lab-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll practice navigating JSON data structures.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ePractice using Python to load and parse JSON documents\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gd6d4e0c786c87244d6921427f55c08c4","title":"Lambda Functions","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-lambda-functions\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lambda-functions\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lambda-functions/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eLambda functions are often a convenient way to write \u003cem\u003ethrow-away\u003c/em\u003e functions on the fly. If you need to write a more complicated function you may still need to use the more formal \u003ccode\u003edef\u003c/code\u003e method, but lambda functions provide a quick and concise way to write functions.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe the purpose of lambda functions, when they should be employed, and their limitations\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate lambda functions to use as arguments of other functions\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003e.map()\u003c/code\u003e or \u003ccode\u003e.apply()\u003c/code\u003e method to apply a function to a pandas series or DataFrame\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gd3689c7e14e78885d849191b09bd3a2d","title":"Lambda Functions - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-lambda-functions-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lambda-functions-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lambda-functions-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll get some hands-on practice creating and using lambda functions.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eIn this lab you will:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate lambda functions to use as arguments of other functions\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003e.map()\u003c/code\u003e or \u003ccode\u003e.apply()\u003c/code\u003e method to apply a function to a pandas series or DataFrame\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gf6c6c749bcd0e8319c495a160a859682","title":"MongoDB","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-mongodb\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-mongodb\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-mongodb/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn about the popular NoSQL database \u003cstrong\u003e\u003cem\u003eMongoDB\u003c/em\u003e\u003c/strong\u003e, including how to install it on our machine, connect to a mongo database, add how to use it to \u003cstrong\u003e\u003cem\u003eC\u003c/em\u003e\u003c/strong\u003ereate / \u003cstrong\u003e\u003cem\u003eR\u003c/em\u003e\u003c/strong\u003eead / \u003cstrong\u003e\u003cem\u003eU\u003c/em\u003e\u003c/strong\u003epdate / \u003cstrong\u003e\u003cem\u003eD\u003c/em\u003e\u003c/strong\u003eelete (\u003cstrong\u003eCRUD\u003c/strong\u003e) data!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a MongoDB database\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eInsert data into a MongoDB database\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eRead data from a MongoDB database\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eUpdate data in a MongoDB database\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gfa8f25d1005d166d0c7ca504d8790728","title":"MongoDB - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-mongodb-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-mongodb-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-mongodb-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll get some hands-on experience with MongoDB!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a MongoDB database\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eInsert data into a MongoDB database\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eRead data from a MongoDB database\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eUpdate data in a MongoDB database\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g90331b557510c3edfebb291368728f55","title":"More on Missing Data","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-more-on-missing-data\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-on-missing-data\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-on-missing-data/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you've seen various methods of how to deal with missing data, its time to further discuss how to choose an appropriate methodology given a particular scenario. Commonly, many people will immediately turn to imputing the mean or median of a feature with missing values. This can be a valid and effective methodology, hence why it is standard, but does have caveats. For example, doing so will reduce the overall variance of your dataset which should be taken into account when performing subsequent analyses or training a machine learning algorithm on the dataset.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eEvaluate and execute the best strategy for dealing with missing, duplicate, and erroneous values for a given dataset\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDetermine how the distribution of data is affected by imputing values\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eInspect data for duplicates or extraneous values and remove them\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g6e8159c5e97542fc6e498b96f3983647","title":"More on Missing Data - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-more-on-missing-data-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-on-missing-data-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-on-missing-data-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll continue to practice techniques for dealing with missing data. Moreover, you'll observe the impact on distributions of your data produced by various techniques for dealing with missing data.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eIn this lab you will: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eEvaluate and execute the best strategy for dealing with missing, duplicate, and erroneous values for a given dataset\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDetermine how the distribution of data is affected by imputing values \u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gda56bffb0076e22354c1e1de83af6491","title":"One-to-Many and Many-to-Many Joins","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-one-to-many-and-many-to-many-joins\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-one-to-many-and-many-to-many-joins\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-one-to-many-and-many-to-many-joins/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003ePreviously, you learned about the typical case where one joins on a primary or foreign key. In this section, you'll explore other types of joins using one-to-many and many-to-many relationships!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain one-to-many and many-to-many joins as well as implications for the size of query results\u003c/li\u003e\n\u003cli\u003eQuery data using one-to-many and many-to-many joins\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g57bf8c29cc7b86618b6ce63c9d3c09a5","title":"One-to-Many and Many-to-Many Joins - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-one-to-many-and-many-to-many-joins-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-one-to-many-and-many-to-many-joins-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-one-to-many-and-many-to-many-joins-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll practice your knowledge of one-to-many and many-to-many relationships!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain one-to-many and many-to-many joins as well as implications for the size of query results\u003c/li\u003e\n\u003cli\u003eQuery data using one-to-many and many-to-many joins\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g094287fd7ad527253aaf69cfe63613d9","title":"Ordering and Limiting Data with SQL","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-ordering-and-limiting\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-ordering-and-limiting\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-ordering-and-limiting/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll learn how to sort your query results using an \u003ccode\u003eORDER BY\u003c/code\u003e clause, and an additional technique for filtering the results of your SQL queries using the \u003ccode\u003eORDER BY\u003c/code\u003e clause combined with the \u003ccode\u003eLIMIT\u003c/code\u003e clause.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eOrder the results of your queries by using \u003ccode\u003eORDER BY\u003c/code\u003e (\u003ccode\u003eASC\u003c/code\u003e \u0026amp; \u003ccode\u003eDESC\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003eLimit the number of records returned by a query using \u003ccode\u003eLIMIT\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eWrite SQL queries to filter and order results\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gfed45802704e0b7865e825dba6faff25","title":"PEP8","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-PEP8\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-PEP8\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-PEP8/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003ePEP stands for Python Enhancement Proposals. Check them out \u003ca href=\"https://www.python.org/dev/peps/\"\u003ehere\u003c/a\u003e! We'll start by talking about PEP8, which is the Style Guide for Python code. This discusses many points which are also important for collaboration. Git is useful for sharing and integrating code bases, but if code is poorly written it can still be cryptic and difficult to decipher. By following styling guidelines such as those outlined in PEP8, we can all create more legible code that can be shared in a streamlined fashion.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eList the conventions defined in PEP8 \u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g9711a839a76ceeaa2cf9d6a1c5d580ca","title":"Pivot Tables With Pandas","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-pivot-tables-pandas\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pivot-tables-pandas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pivot-tables-pandas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn about the various ways we can index and structure our data sets to make it easier to process or understand.  We start by learning about the difference between the \u003cstrong\u003e\u003cem\u003eWide\u003c/em\u003e\u003c/strong\u003e format and the \u003cstrong\u003e\u003cem\u003eLong\u003c/em\u003e\u003c/strong\u003e format, compare basic flattened index structures with multi-hierarchical index structures, and then create them ourselves using aggregation functions and pivot tables!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe what is meant by long and wide format data \u003c/li\u003e\n\u003cli\u003eUse multi-hierarchical indexing to access aggregated data \u003c/li\u003e\n\u003cli\u003eUse pivot to create a more organized aggregated DataFrame \u003c/li\u003e\n\u003cli\u003eUse stack and unstack to move between different level of multi-indexing \u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g25a675bd128d1200bf205aa7d6423c6e","title":"Pivot Tables with Pandas - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-pivot-tables-pandas-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pivot-tables-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pivot-tables-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll learn how to make use of our newfound knowledge of pivot tables to work with real-world data.  \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eIn this lab you will:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe what is meant by long and wide format data \u003c/li\u003e\n\u003cli\u003eUse multi-hierarchical indexing to access aggregated data \u003c/li\u003e\n\u003cli\u003eUse pivot to create a more organized aggregated DataFrame \u003c/li\u003e\n\u003cli\u003eUse stack and unstack to move between different level of multi-indexing \u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g388c452759978dc3090f0b74c219f9a5","title":"Reading API Documentation","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-reading-api-documentation\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-reading-api-documentation\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-reading-api-documentation/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe've now covered an example API request, but how on Earth would you know how to do that on your own? The answer is through documentation! All APIs will have associated documentation, and while there are substantial similarities, all will be different to one degree or another. The best way to get more comfortable is to practice! So with that, let's take a look at the yelp documentation associated with our previous example.  \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eInterpret API documentation into Python code\u003c/li\u003e\n\u003cli\u003eMake requests using OAuth\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g06602ad5753453390080bacce3e51ac0","title":"Roll Call Attendance","type":"Assignment","content":"","submissionTypes":"an external tool","graded":true,"pointsPossible":100.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g2079b79db5f5e3608e7b2979d6657035","title":"Running Jupyter Notebooks Locally - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-running-jupyter-locally-lab\" target=\"_blank\"\u003e \u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e \u003c/a\u003e \u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-running-jupyter-locally-lab/issues/new\" target=\"_blank\"\u003e \u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e \u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eFollow the directions from the previous lesson to open this notebook on your local computer!\u003c/p\u003e\n\u003cp\u003eStart by clicking the \u003cimg src=\"viewer/files/Uploaded%20Media/GitHub-Mark-32px.png\" alt=\"Github logo\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/files/1513121\" data-api-returntype=\"File\"\u003e\u0026nbsp;button above, to view the repository content on GitHub.\u003c/p\u003e","submissionTypes":null,"graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gdba3a83b7a603fbad59a3cb201a527f5","title":"Scraping Concerts - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-scraping-concerts-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-scraping-concerts-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-scraping-concerts-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you've seen how to scrape a simple website, it's time to again practice those skills on a full-fledged site!\u003c/p\u003e\n\n\u003cp\u003eIn this lab, you'll practice your scraping skills on an online music magazine and events website called Resident Advisor.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a full scraping pipeline that involves traversing over many pages of a website, dealing with errors and storing data\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g0f436701a06fd6779fe89c2c2e38d605","title":"Scraping Images","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-scraping-images\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-scraping-images\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-scraping-images/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou've definitely started to hone your skills at scraping now! With that, let's look at another data format you're apt to want to pull from the web: images! In this lesson, you'll see how to save images from the web as well as display them in a Pandas DataFrame for easy perusal!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eSelect specific elements from HTML using Beautiful Soup\u003c/li\u003e\n\u003cli\u003eIdentify and scrape images from a web page\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ge031f1ae87298d0a98f8e73c6b53640b","title":"Selecting Data with SQL","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-selecting-data-v2-4\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-selecting-data-v2-4\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-selecting-data-v2-4/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eAs a data scientist, the SQL query you'll likely use most often is \u003ccode\u003eSELECT\u003c/code\u003e. This lesson introduces how to use \u003ccode\u003eSELECT\u003c/code\u003e to subset and transform the columns of a database table.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRetrieve a subset of columns from a table\u003c/li\u003e\n\u003cli\u003eCreate an alias in a SQL query\u003c/li\u003e\n\u003cli\u003eUse SQL CASE statements to transform selected columns\u003c/li\u003e\n\u003cli\u003eUse built-in SQL functions to transform selected columns\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g61496e3b4859571a2a4a6833958223a4","title":"SQL Checkpoint","type":"Assignment","content":"","submissionTypes":"an external tool","graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gfd2719f1fe4b1f4a4269b6a18ab80d51","title":"SQL Interview Questions - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-sql-interview-questions-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-interview-questions-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-interview-questions-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll test our SQL skills against some real-world interview questions from major companies!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWrite SQL queries to filter and order results\u003c/li\u003e\n\u003cli\u003eDecide and perform whichever type of join is best for retrieving desired data\u003c/li\u003e\n\u003cli\u003eWrite subqueries to decompose complex queries\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g1ac9bd640ae6ab4ec8058467021e64b9","title":"SQL Subqueries","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-sql-subqueries\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-subqueries\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-subqueries/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSQL queries can get complex. For example, you might have been a little thrown off by the many to many join in the last lab. There, you had to join four tables. This is just the tip of the iceberg. Depending on how your database is set up, you might have to join subset views of multiple tables. When queries get complex like this, it is often useful to use the concept of subqueries to help break the problem into smaller, more digestible tasks.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWrite subqueries to decompose complex queries\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g8eda097a51ee87a8709e3c1bd003519a","title":"SQL Subqueries - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-sql-subqueries-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-subqueries-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-subqueries-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you've seen how subqueries work, it's time to get some practice writing them! Not all of the queries will require subqueries, but all will be a bit more complex and require some thought and review about aggregates, grouping, ordering, filtering, joins and subqueries. Good luck!  \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWrite subqueries to decompose complex queries\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g1e22660ff8e0c256c1c8bd0b38286da1","title":"Statistical Methods in Pandas - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-statistical-methods-in-pandas-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-statistical-methods-in-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-statistical-methods-in-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab you'll get some hands-on experience using some of the key summary statistics methods in Pandas.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCalculate summary statistics for a series and DataFrame \u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003e.apply()\u003c/code\u003e or \u003ccode\u003e.applymap()\u003c/code\u003e methods to apply a function to a pandas series or DataFrame\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb1cfc9a196f8005c2890c519ebbae8f1","title":"Subplots and Enumeration - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-subplots-and-enumeration-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-subplots-and-enumeration-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g340e2dc031191ea636e890ed22a10dc8","title":"Understanding Pandas Series and DataFrames","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-pandas-series-and-dataframes\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-series-and-dataframes\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-series-and-dataframes/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we're digging into \u003ccode\u003eSeries\u003c/code\u003e and \u003ccode\u003eDataFrames\u003c/code\u003e, the two main data types you'll work with in the pandas library.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the \u003ccode\u003e.map()\u003c/code\u003e and \u003ccode\u003e.apply()\u003c/code\u003e methods to apply a function to a pandas Series or DataFrame \u003c/li\u003e\n\u003cli\u003ePerform operations to change the structure of pandas DataFrames \u003c/li\u003e\n\u003cli\u003eChange the index of a pandas DataFrame \u003c/li\u003e\n\u003cli\u003eChange data types of columns in pandas DataFrames \u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ga351a61f8d4fc357cea294ffd6742dd7","title":"Understanding Pandas Series and DataFrames - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-pandas-series-and-dataframes-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-series-and-dataframes-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-series-and-dataframes-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, let's get some hands-on practice working with data cleanup using Pandas.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the \u003ccode\u003e.map()\u003c/code\u003e and \u003ccode\u003e.apply()\u003c/code\u003e methods to apply a function to a pandas Series or DataFrame \u003c/li\u003e\n\u003cli\u003ePerform operations to change the structure of pandas DataFrames \u003c/li\u003e\n\u003cli\u003eChange the index of a pandas DataFrame \u003c/li\u003e\n\u003cli\u003eChange data types of columns in pandas DataFrames \u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g5dfe270350325ff596475df83cbbd2e2","title":"Unlock Phase 1","type":"Assignment","content":"\u003cp\u003eContent will be available when your cohort starts\u003c/p\u003e","submissionTypes":null,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gdfea68ebb0233e75a6778f72fdc58e5f","title":"Using SQL with Pandas - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-using-sql-with-pandas-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-sql-with-pandas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-sql-with-pandas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you will practice using SQL statements and the \u003ccode\u003e.query()\u003c/code\u003e method provided by Pandas to manipulate datasets.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCompare accessing data in a DataFrame using query methods and conditional logic\u003c/li\u003e\n\u003cli\u003eQuery DataFrames with SQL using the \u003ccode\u003epandasql\u003c/code\u003e library\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g3f286a96febb061ba6be14ac7fb869c1","title":"Using the Yelp API - Codealong","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-using-yelp-api-codealong\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-yelp-api-codealong\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-yelp-api-codealong/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that we've discussed HTTP requests and OAuth, it's time to practice applying those skills to a production level API. In this codealong, we'll take you through the process of signing up for an OAuth token and then using that to make requests to the Yelp API!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eMake requests using OAuth\u003c/li\u003e\n\u003cli\u003eUse the JSON module to load and parse JSON documents\u003c/li\u003e\n\u003cli\u003eConvert JSON to a pandas dataframe\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g1189239c8242ab899aef150f3a38ad91","title":"Web Scraping In Practice","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-web-scraping-in-practice\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-in-practice\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-in-practice/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you've gotten a brief introduction to Beautiful Soup and how to select various elements from a web page, it's time to practice scraping a website. You'll start to see that scraping is a dynamic process that involves investigating the web page(s) at hand and developing scripts tailored to those structures.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eNavigate HTML documents using Beautiful Soup's children and sibling relations\u003c/li\u003e\n\u003cli\u003eSelect specific elements from HTML using Beautiful Soup\u003c/li\u003e\n\u003cli\u003eUse regular expressions to extract items with a certain pattern within Beautiful Soup\u003c/li\u003e\n\u003cli\u003eDetermine the pagination scheme of a website and scrape multiple pages\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g68ba82ad814827072a596a16f5a23162","title":"Web Scraping - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-web-scraping-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-web-scraping-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you've seen a more extensive example of developing a web scraping script, it's time to further practice and formalize that knowledge by writing functions to parse specific pieces of information from the web page and then synthesizing these into a larger loop that will iterate over successive web pages in order to build a complete dataset.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eNavigate HTML documents using Beautiful Soup's children and sibling relations\u003c/li\u003e\n\u003cli\u003eSelect specific elements from HTML using Beautiful Soup\u003c/li\u003e\n\u003cli\u003eUse regular expressions to extract items with a certain pattern within Beautiful Soup\u003c/li\u003e\n\u003cli\u003eDetermine the pagination scheme of a website and scrape multiple pages\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gf3caae422ef7dee572f98221d8a62f41","title":"Working with Known JSON Schemas","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-working-with-known-json-schemas\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-working-with-known-json-schemas\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-working-with-known-json-schemas/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou've started taking a look at JSON files and you'll continue to explore how to navigate and traverse these files. One common use case of JSON files will be when you are connecting to various websites through their established APIs to retrieve data from them. With these, you are typically given a schema for how the data is structured and then will use this knowledge to retrieve pertinent information.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the JSON module to load and parse JSON documents\u003c/li\u003e\n\u003cli\u003eExtract data using predefined JSON schemas\u003c/li\u003e\n\u003cli\u003eConvert JSON to a pandas dataframe\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gbf5a923d347522f919e93620881c0252","title":"Working with Known JSON Schemas - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-working-with-known-json-schemas-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-working-with-known-json-schemas-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-working-with-known-json-schemas-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll practice working with JSON files whose schema you know beforehand.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the \u003ccode\u003ejson\u003c/code\u003e module to load and parse JSON documents\u003c/li\u003e\n\u003cli\u003eExtract data using predefined JSON schemas\u003c/li\u003e\n\u003cli\u003eConvert JSON to a pandas dataframe\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gee49ec748d2b6c3293ac50914f83e0a2","title":"XML","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-xml-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-xml-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g4c272fe3c38baec50362a6695a172a6b","title":"XML - Lab","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-xml-lab-v2-1\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-xml-lab-v2-1/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null}],"discussion_topics":[],"quizzes":[{"exportId":"g59977d542efdb84dde70b1e3bc1a671f","title":"Aggregating and Combining DataFrames Exit Ticket","type":"Quizzes::Quiz","content":"","assignmentExportId":"g221b5c6e2b52e2e672ff976345bf5ccb","questionCount":8,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g40c88c59236cfd29c6f374ec2743d46d","title":"‚≠êÔ∏è APIs - Cumulative Lab","type":"Quizzes::Quiz","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-apis-lab\" target=\"_blank\"\u003e \u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e \u003c/a\u003e \u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-apis-lab/issues/new\" target=\"_blank\"\u003e \u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e \u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eWork on this lab on your local computer. If you're not sure how to clone the source code, refer to the instructions in \u003ca title=\"Running Jupyter Notebooks Locally\" href=\"pages/running-jupyter-notebooks-locally\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/running-jupyter-notebooks-locally\" data-api-returntype=\"Page\"\u003eRunning Jupyter Notebooks Locally\u003c/a\u003e. If you're not sure how to submit the link, refer to the instructions in \u003ca title=\"‚≠êÔ∏è Data Serialization Formats - Cumulative Lab\" href=\"quizzes/gd382b571f354991be10756bfc79dd939\"\u003e‚≠êÔ∏è Data Serialization Formats - Cumulative Lab\u003c/a\u003e\u003c/p\u003e","assignmentExportId":"g601d0a191f59d1af487bb824f05d46fd","questionCount":1,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g45e2eb98ac8f48b70905148b24529dd9","title":"Bash Exit Ticket","type":"Quizzes::Quiz","content":"","assignmentExportId":"g031dacd688eae230e78c682a673206c4","questionCount":8,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g2a4459472e02be064bae46fe92d56ec5","title":"Data Analysis with CSVs Exit Ticket","type":"Quizzes::Quiz","content":"","assignmentExportId":"g338275f019a7c0d0d8ad37cc3bdc010e","questionCount":7,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g92eed2d6e4f3c5b60a9abd3ec8aff16a","title":"Data Analysis with JSONs Exit Ticket ","type":"Quizzes::Quiz","content":"","assignmentExportId":"ga68cd6ad71853f37986ebc6e5ffad717","questionCount":8,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g344243053420d69c7ffad8c81e13c8d5","title":"Data Science Environments Exit Ticket","type":"Quizzes::Quiz","content":"","assignmentExportId":"g10caf87cc51921545898a32660183594","questionCount":8,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gd382b571f354991be10756bfc79dd939","title":"‚≠êÔ∏è Data Serialization Formats - Cumulative Lab","type":"Quizzes::Quiz","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-serialization-lab\" target=\"_blank\"\u003e \u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e \u003c/a\u003e \u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-serialization-lab/issues/new\" target=\"_blank\"\u003e \u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e \u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eWork on this lab on your local computer. If you're not sure how to clone the source code, refer to the instructions in \u003ca title=\"Running Jupyter Notebooks Locally\" href=\"pages/running-jupyter-notebooks-locally\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/running-jupyter-notebooks-locally\" data-api-returntype=\"Page\"\u003eRunning Jupyter Notebooks Locally\u003c/a\u003e.\u003c/p\u003e\n\u003ch3\u003eSubmission Instructions\u003c/h3\u003e\n\u003cp\u003eWhen you are finished with the lab, complete the following steps to submit your work:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSave the changes to the notebook by clicking the Save icon, shown below highlighted in red \u003cbr\u003e\u003cimg src=\"viewer/files/Uploaded%20Media/Screen%20Shot%202021-07-28%20at%205.41.06%20PM.png\" alt=\"Screenshot of Data Serialization Formats Cumulative Lab with red box highlighting the save button\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/files/1863232\" data-api-returntype=\"File\"\u003e\u003c/li\u003e\n\u003cli\u003eClose the notebook browser tab(s)\u003c/li\u003e\n\u003cli\u003eShut down the notebook server by typing control-C in the terminal window where it is currently running\u003c/li\u003e\n\u003cli\u003eCommit your changes in Git by typing \u003cbr\u003e\u003ccode\u003egit commit -am \"Finished lab\"\u003c/code\u003e \u003cbr\u003ein the terminal and hitting Enter\u003c/li\u003e\n\u003cli\u003ePush your changes to GitHub by typing \u003cbr\u003e\u003ccode\u003egit push origin master\u003c/code\u003e \u003cbr\u003ein the terminal and hitting Enter\u003c/li\u003e\n\u003cli\u003eOpen the GitHub view of your fork of the lab in the browser. For example, if your username were \u003ccode\u003ehoffm386\u003c/code\u003e, you would go to \u003ca href=\"https://github.com/hoffm386/dsc-data-serialization-lab\" target=\"_blank\"\u003ehttps://github.com/hoffm386/dsc-data-serialization-lab\u003c/a\u003e in the browser for this particular lab. Click on \u003ccode\u003eindex.ipynb\u003c/code\u003e and double-check that your code updates are there. (The updates will not be in the README, only in the \u003ccode\u003e.ipynb\u003c/code\u003e file.)\u003c/li\u003e\n\u003cli\u003eSubmit the link to your fork of the lab in the textbox on Canvas\u003cbr\u003e\u0026nbsp;\u003cimg src=\"viewer/files/Uploaded%20Media/Screen%20Shot%202021-08-24%20at%206.42.54%20PM.png\" alt=\"Screenshot of \u0026quot;Question 1\u0026quot;, which should appear below the instructions\" width=\"319\" height=\"320\"\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3\u003eTroubleshooting\u003c/h3\u003e\n\u003cp\u003e\u003cspan style=\"background-color: #fbeeb8;\"\u003eIf you are able to submit the URL successfully, you do not need to follow the below steps!\u003c/span\u003e\u003c/p\u003e\n\u003ch4\u003eNot a Git Repository\u003c/h4\u003e\n\u003cp\u003eIf you try to run \u003ccode\u003egit commit -am \"Finished lab\"\u003c/code\u003e and get the error message \u003ccode\u003efatal: not a git repository\u003c/code\u003e, double-check that you are running the code from the correct directory. If you type \u003ccode\u003epwd\u003c/code\u003e in the terminal and hit Enter, the path that is printed out should include the directory of the lab ‚Äî in this case, \u003ccode\u003edsc-data-serialization-lab\u003c/code\u003e. For example, a valid path would be \u003ccode\u003e/Users/myname/Development/DS/dsc-data-serialization-lab\u003c/code\u003e, since that ends with the lab directory, whereas \u003ccode\u003e/Users/myname/Development/DS/\u003c/code\u003e would not be a valid path. Use commands like \u003ccode\u003els\u003c/code\u003e and \u003ccode\u003ecd\u003c/code\u003e to navigate to the appropriate directory, then continue with the steps above, starting with step 4.\u003c/p\u003e\n\u003cp\u003ePermission Denied\u003c/p\u003e\n\u003cp\u003eIf you try to run \u003ccode\u003egit push origin master\u003c/code\u003e and get a \u003ccode\u003ePermission denied\u003c/code\u003e error message, you are likely trying to push to the curriculum version of the lab, not your personal fork. Follow these steps to fix this:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eIn the browser, go to the curriculum repository for this lab by clicking the \u003cimg id=\"1513121\" src=\"viewer/files/Uploaded%20Media/GitHub-Mark-32px.png\" alt=\"GitHub-Mark-32px.png\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/files/1513121\" data-api-returntype=\"File\"\u003e icon above\u003c/li\u003e\n\u003cli\u003eClick the Fork button. If you already have a fork, this will take you to it. If you haven't made a fork yet, this will make the fork and take you to it\u003c/li\u003e\n\u003cli\u003eOn the page of your fork, copy the clone link. For example, \u003ca href=\"https://github.com/hoffm386/dsc-data-serialization-lab.git\" target=\"_blank\"\u003ehttps://github.com/hoffm386/dsc-data-serialization-lab.git\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eBack in the terminal where you were trying to run \u003ccode\u003egit push\u003c/code\u003e, type \u003cbr\u003e\u003ccode\u003egit remote add myfork \u0026lt;URL\u0026gt;\u003c/code\u003e \u003cbr\u003eWhere \u003ccode\u003e\u0026lt;URL\u0026gt;\u003c/code\u003e is replaced with the clone link you copied. For example, \u003ccode\u003egit remote add myfork https://github.com/hoffm386/dsc-data-serialization-lab.git\u003c/code\u003e. Then hit Enter. This means you have created a connection between your local repository and your fork\u003c/li\u003e\n\u003cli\u003eNow, push your code to your fork by typing \u003cbr\u003e\u003ccode\u003egit push myfork master\u003c/code\u003e \u003cbr\u003ein the terminal and hitting Enter\u003c/li\u003e\n\u003cli\u003eProceed with the steps above, starting with step 6\u003c/li\u003e\n\u003c/ol\u003e","assignmentExportId":"g77df2e3160db05dbd597830e669ef696","questionCount":1,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g7fa50505224c8ed215a2e2ecfe57ab7e","title":"Descriptive Analysis Exit Ticket","type":"Quizzes::Quiz","content":"","assignmentExportId":"g25055c04d787a50e60ad8f422df6de7c","questionCount":7,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g82c8665ac84c8238cf8996a60e998020","title":"‚≠êÔ∏è EDA with Pandas - Cumulative Lab","type":"Quizzes::Quiz","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-eda-lab\" target=\"_blank\"\u003e \u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e \u003c/a\u003e \u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-eda-lab/issues/new\" target=\"_blank\"\u003e \u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e \u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eWork on this lab on your local computer. If you're not sure how to clone the source code, refer to the instructions in \u003ca title=\"Running Jupyter Notebooks Locally\" href=\"pages/running-jupyter-notebooks-locally\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/running-jupyter-notebooks-locally\" data-api-returntype=\"Page\"\u003eRunning Jupyter Notebooks Locally\u003c/a\u003e. If you're not sure how to submit the link, refer to the instructions in \u003ca title=\"‚≠êÔ∏è Data Serialization Formats - Cumulative Lab\" href=\"quizzes/gd382b571f354991be10756bfc79dd939\"\u003e‚≠êÔ∏è Data Serialization Formats - Cumulative Lab\u003c/a\u003e.\u003c/p\u003e","assignmentExportId":"g71279af1f9c90c8163cc88ed81341f3d","questionCount":1,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g0676d1cd424d2d148b28d57bbe490338","title":"Git Exit Ticket","type":"Quizzes::Quiz","content":"","assignmentExportId":"g617f66134b910f0fae0f7c7316d649c9","questionCount":8,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g1be6f06d4a1dcfca22a12139749b5105","title":"‚≠êÔ∏è Pandas Data Cleaning - Cumulative Lab","type":"Quizzes::Quiz","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-data-cleaning-lab\" target=\"_blank\"\u003e \u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e \u003c/a\u003e \u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-pandas-data-cleaning-lab/issues/new\" target=\"_blank\"\u003e \u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e \u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eWork on this lab on your local computer. If you're not sure how to clone the source code, refer to the instructions in \u003ca title=\"Running Jupyter Notebooks Locally\" href=\"pages/running-jupyter-notebooks-locally\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/running-jupyter-notebooks-locally\" data-api-returntype=\"Page\"\u003eRunning Jupyter Notebooks Locally\u003c/a\u003e. If you're not sure how to submit the link, refer to the instructions in \u003ca title=\"‚≠êÔ∏è Data Serialization Formats - Cumulative Lab\" href=\"quizzes/gd382b571f354991be10756bfc79dd939\"\u003e‚≠êÔ∏è Data Serialization Formats - Cumulative Lab\u003c/a\u003e\u003c/p\u003e","assignmentExportId":"g5a60789d395ad51a0e238bcb4149a574","questionCount":1,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g42901c242a191446780fab69d267afce","title":"Pandas Data Cleaning Exit Ticket","type":"Quizzes::Quiz","content":"","assignmentExportId":"g0fce46c20958f0f08cc5c561b5dee4cf","questionCount":8,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gc4aa66be11cc73395c3fcdd4e70da7b2","title":"Pandas DataFrames Exit Ticket","type":"Quizzes::Quiz","content":"","assignmentExportId":"g01519c7d66d759b3429a1e9deb8982d4","questionCount":8,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gc29d9ce2ff9c715a75278780ea856aa6","title":"Python Data Manipulation Exit Ticket","type":"Quizzes::Quiz","content":"","assignmentExportId":"gd98c284b756f6a49ec3fb8921b7a378a","questionCount":8,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gbb274ab685bca70f3b0cf4db4df8d524","title":"üîÑ Quiz: Aggregating and Reshaping with Pandas","type":"Quizzes::Quiz","content":"","assignmentExportId":"g60fa6bf791eeb37ffd6775ac54205729","questionCount":10,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":10.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb62403a6223131d89f1a2dd2aeb96708","title":"Quiz: APIs","type":"Quizzes::Quiz","content":"","assignmentExportId":"g0c53b6a28b96dface74f0ee0ff4e8041","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gdf1958170fb1be12193296399ab484d2","title":"Quiz: Bash and Git Fundamentals","type":"Quizzes::Quiz","content":"","assignmentExportId":"ge9ba676807899bec91cbc7f9d78f6249","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g579c15aeb78a7b141ee969ff3c3fb8d7","title":"üîÑ Quiz: CSS and Web Scraping","type":"Quizzes::Quiz","content":"","assignmentExportId":"gf93649a5cfda90baeb0bcebe8a9fe157","questionCount":10,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":10.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g0f269a778bfec639d5bc74b32b8ff84d","title":"Quiz: Data Analysis with Base Python ","type":"Quizzes::Quiz","content":"","assignmentExportId":"gc07b04a5f68d1d3ba548be39fcabc86c","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gcd66c3b1b8dab1f536ef606cdf62ee0b","title":"Quiz: Data Analysis with Pandas","type":"Quizzes::Quiz","content":"","assignmentExportId":"ga543d322836323630da1c9756c6d394e","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g3fc96605f5d6cc55db8e217edd865729","title":"Quiz: Data Science Basics","type":"Quizzes::Quiz","content":"","assignmentExportId":"g96119bdb0262ed9d0485b15baff3b45f","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g919915f93846219b96688242093bc527","title":"Quiz: Data Serialization Formats ","type":"Quizzes::Quiz","content":"","assignmentExportId":"g5d8c9cb706cfc5136854d3bdcd92cb7e","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g212414a665f29e1ec4a5f5c3b6a55400","title":"Quiz: Dealing with Missing Data","type":"Quizzes::Quiz","content":"","assignmentExportId":"ga3636571b40831c51a260c9ae5f29ba7","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g3870afccc1c53ad18c76df204a41f4fd","title":"Quiz: Getting Started with SQL","type":"Quizzes::Quiz","content":"","assignmentExportId":"g8e33c0615cca39ace3adec973d9cd44a","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gc063a86905e9f4ca9cd5caec4b8601e3","title":"Quiz: Git Collaboration","type":"Quizzes::Quiz","content":"","assignmentExportId":"g0b62797edc80228b9ae7b5c67c55c54e","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g3aaa2419a0e91e48f5519efee68b4ad8","title":"Quiz: HTML and CSS","type":"Quizzes::Quiz","content":"","assignmentExportId":"g30ba60ab4f0e0e44b209edf491e6c6e3","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gd3ad2db29d6e944fc35b8af150599e62","title":"Quiz: NoSQL Interview Questions","type":"Quizzes::Quiz","content":"","assignmentExportId":"g88eac4e66a98d24890615280f201432d","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ge4ebebf95dee70ef95a317eb200a8bbc","title":"Quiz: Pandas Fundamentals","type":"Quizzes::Quiz","content":"","assignmentExportId":"gb7786a7f42e192c1b3faa970583b0afe","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ga453b697c32536aa3d4b985a1dce583b","title":"Quiz: Professional Data Science Environment","type":"Quizzes::Quiz","content":"","assignmentExportId":"gc2b464d5b246d34c9bb22b4af9dd68d9","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gcbfca6c57f956e3e24e228e00d2ff65d","title":"Quiz: SQL Filtering and Database Management","type":"Quizzes::Quiz","content":"","assignmentExportId":"gc1901e768e31ebbcfd72d58338119bce","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g026c693c452a47d4d76973d6b77d8923","title":"Quiz: SQL Interview Questions","type":"Quizzes::Quiz","content":"\u003cp\u003eThis quiz contains questions on topics you can expect to see in an interview pertaining to SQL and Relational Databases. Some of them are multiple choice, while some are short answer. For these short answer questions, double click on the Jupyter Notebook and type your answer below the line.\u003c/p\u003e\n\u003ch2\u003e\u003ca id=\"user-content-question-1\" class=\"anchor\" href=\"https://github.com/learn-co-curriculum/dsc-sql-interview-questions-quiz#question-1\" aria-hidden=\"true\"\u003e\u003c/a\u003e\u003c/h2\u003e","assignmentExportId":"gd41d8cd98f00b204e9800998ecf8427e","questionCount":6,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":6.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g6ef98c02cfbd946adcbcb05c06b14ea4","title":"Quiz: SQL Table Relations","type":"Quizzes::Quiz","content":"","assignmentExportId":"g226fa36b3f67c8b288a2588dff97ba20","questionCount":5,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gf4a06fa591eddfefef12f253ccb5564c","title":"‚≠êÔ∏è SQL - Cumulative Lab","type":"Quizzes::Quiz","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-lab\" target=\"_blank\"\u003e \u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e \u003c/a\u003e \u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-sql-lab/issues/new\" target=\"_blank\"\u003e \u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e \u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eWork on this lab on your local computer. If you're not sure how to clone the source code, refer to the instructions in \u003ca title=\"Running Jupyter Notebooks Locally\" href=\"pages/running-jupyter-notebooks-locally\" data-api-endpoint=\"https://learning.flatironschool.com/api/v1/courses/153/pages/running-jupyter-notebooks-locally\" data-api-returntype=\"Page\"\u003eRunning Jupyter Notebooks Locally\u003c/a\u003e. If you're not sure how to submit the link, refer to the instructions in \u003ca title=\"‚≠êÔ∏è Data Serialization Formats - Cumulative Lab\" href=\"quizzes/gd382b571f354991be10756bfc79dd939\"\u003e‚≠êÔ∏è Data Serialization Formats - Cumulative Lab\u003c/a\u003e\u003c/p\u003e","assignmentExportId":"g8c33dc074f6d22c3918b7f0eac7a55e2","questionCount":1,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g223bea81a50067215af661997b0f3584","title":"SQL Joins and Aggregation Exit Ticket","type":"Quizzes::Quiz","content":"","assignmentExportId":"g11be8ae182047d3d8a85ab62ce377771","questionCount":8,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g48b48a569b57fd9cecaaeee99eba2db5","title":"SQL Queries Exit Ticket","type":"Quizzes::Quiz","content":"","assignmentExportId":"gba5cdde9895f9bdcacbec08a73936190","questionCount":8,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gc5eeecddc4f0a940430321c456354a46","title":"SQL Subqueries and Implementations Exit Ticket","type":"Quizzes::Quiz","content":"","assignmentExportId":"g1d74e1c02abbe5c91b77cef5236dc4bd","questionCount":7,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null}],"files":[{"type":"folder","name":"course_image","size":null,"files":[]},{"type":"folder","name":"Uploaded Media","size":null,"files":[{"type":"file","name":"Screen Shot 2021-07-28 at 5.41.06 PM.png","size":61484,"files":null},{"type":"file","name":"Screen Shot 2021-08-24 at 6.42.54 PM.png","size":47006,"files":null},{"type":"file","name":"GitHub-Mark-32px.png","size":1714,"files":null}]},{"type":"file","name":"ComputerRequirements.pdf","size":92559,"files":null}]}