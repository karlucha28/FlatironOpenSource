window.COURSE_DATA = {"language":"en","lastDownload":"2022-10-31T12:00:29-04:00","title":"Data Science Prep","modules":[{"id":45005,"name":"Introduction","status":"completed","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"ge8306dc12c3d5218cbc8319d2cc03667","items":[{"id":434403,"title":"Welcome to Prep!","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-prework-intro\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-prework-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-prework-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-prework-intro\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-prework-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-prework-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eWelcome to Flatiron School! We're thrilled that you've joined our community of learners!\u003c/p\u003e\n\u003cp data-renderer-start-pos=\"236\"\u003ePrep is required to start at Flatiron School and students have access to this useful material even prior to applying. Please note some resources mentioned throughout are only available to enrolled students, such as community and technical coach support.\u003c/p\u003e\n\u003cp data-renderer-start-pos=\"496\"\u003eIf you’re researching the programs and not yet enrolled, keep in mind that this is the same pre-course work enrolled students are working through. Some of this information will seem granular, just work through as much as you can and know that you will have time to revisit content should you go through our admissions process.\u003c/p\u003e\n\u003ch2\u003eGoals of Prep\u003c/h2\u003e\n\u003cp\u003eWe've set up a \"prep\" course for you to complete before your first day of the Data Science bootcamp.\u003c/p\u003e\n\u003cp\u003eThis material is intended to help you prepare for the program, with an introduction to both the \u003cstrong\u003etechnical content\u003c/strong\u003e and the \u003cstrong\u003edelivery format\u003c/strong\u003e you'll be using at Flatiron School.\u003c/p\u003e\n\u003ch3\u003eTechnical Content\u003c/h3\u003e\n\u003cp\u003eMany people in our program have already spent some time dabbling with coding and data analysis by using the amazing and plentiful resources all around the internet. In developing the content here, though, we make no assumptions about background. This prep content is designed for those who have analytic ability but not any specific coding skill. Lessons build off each other, providing the tools and concepts necessary to complete future lessons.\u003c/p\u003e\n\u003cp\u003eWhat we don't do, however, is dumb anything down. We believe in your infinite capacity to learn. We do our best to offer a curriculum that is clear, digestible, engaging, challenging, and deep. The curriculum you'll encounter at Flatiron School is rigorous and will demand that you be patient, resourceful, and gritty.\u003c/p\u003e\n\u003cp\u003eFrom the beginning, we'll make sure you have the support and tools you need; you just need to bring the grit.\u003c/p\u003e\n\u003cp\u003eThe prep course focuses on foundational content that comes up again and again in the Data Science program:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePython fundamentals\u003c/li\u003e\n\u003cli\u003eDescriptive statistics\u003c/li\u003e\n\u003cli\u003ePython libraries (NumPy and Matplotlib) for numerical computing and data visualization\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIf you're getting stuck, keep in mind that we will also review these topics in the first week or so of the Data Science program. Make sure you keep notes on what was confusing, and prepare to ask questions when the program starts.\u003c/p\u003e\n\u003ch3\u003eDelivery Format\u003c/h3\u003e\n\u003cp\u003eIn addition to covering technical topics, the prep is also intended to help you orient yourself to our curriculum delivery format.\u003c/p\u003e\n\u003cp\u003eIn general, think of the online material as the \"textbook\" that you'll read before lectures and use to practice your Data Science skills.\u003c/p\u003e\n\u003cp\u003eTypically when learning something about code, you have to first deal with configuring your computer, getting it set up to work with the programming language you're writing in. This is often referred to as \u003cem\u003esetting up your environment\u003c/em\u003e. You will have to do this eventually, but for now, \u003cstrong\u003eCanvas + IllumiDesk\u003c/strong\u003e will provide the environment you need to get started. We will give you a place to code within the browser; you get to focus on coding, not setup.\u003c/p\u003e\n\u003cp\u003eThe next lesson will cover how to use Canvas + IllumiDesk, including the different types of lessons, how to open lessons in IllumiDesk, and how to view solution code.\u003c/p\u003e\n\u003cp\u003eFor now, all you need to know is that every time you complete a lesson on Canvas — including this one! — you should click the \"Mark as done\" button on that page, so we can track your progress.\u003c/p\u003e\n\u003cp\u003eBefore clicking, the button should look like this:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://github.com/learn-co-curriculum/dsc-prework-intro/raw/b3feece3ce125ec15651b775bec2512afc72d276/images/mark_as_done.png\" alt=\"mark as done button\"\u003e\u003c/p\u003e\n\u003cp\u003eAfter clicking, it should look like this:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://github.com/learn-co-curriculum/dsc-prework-intro/raw/b3feece3ce125ec15651b775bec2512afc72d276/images/done.png\" alt=\"done button\"\u003e\u003c/p\u003e\n\u003ch2\u003ePrep Expectations for Students\u003c/h2\u003e\n\u003ch3\u003eRequired Lesson Completion\u003c/h3\u003e\n\u003cp\u003ePrep is the first \u003cstrong\u003erequired\u003c/strong\u003e element of our data science curriculum. You are expected to complete, at minimum, all lessons through the end of the Statistical Measures section.\u003c/p\u003e\n\u003cp\u003eThe way we \u003cstrong\u003emeasure\u003c/strong\u003e lesson completion is based on you \u003cstrong\u003eclicking the \"Mark as done\" button\u003c/strong\u003e (pictured above) for each lesson. Don't worry too much about understanding 100% of the lesson content, and feel free to click the button once you've made a reasonable attempt — you can always come back and re-read it later.\u003c/p\u003e\n\u003cp\u003eThe time you spend on each lesson (reading content, writing code, etc.) is up to you — in theory, you could click through the entire prep course and never actually do any of the lessons. But you should be aware, when we ask alumni and current students what they wish they had done differently, one of the most common answers is not investing enough time in these foundational skills!\u003c/p\u003e\n\u003ch3\u003ePrep Pre-Test\u003c/h3\u003e\n\u003cp\u003eBefore you embark on your learning journey, we will ask you to complete our Prep Pre-Test. This Pre-Test is being used as a benchmark for your learning during the pre-work. How much you score on the Pre-Test doesn't matter, you don't even have to pass the pre-test. The Pre-Test is just a way for us to go back and look at how much learning is happening during the Prep. You will not see the answers to the questions or your score once you've completed the Pre-Test, because it is not important for continuing. What \u003cem\u003eis\u003c/em\u003e important, however, is how much you score on the \u003cstrong\u003ePrep Post-Test\u003c/strong\u003e after completing the Prep.\u003c/p\u003e\n\u003ch3\u003ePrep Post-Test\u003c/h3\u003e\n\u003cp\u003eOnce you have completed all lessons in the Statistical Measures section (as well as all lessons that come before it), the Prep Post-Test section with the Post-Test quiz will unlock.\u0026nbsp;\u003c/p\u003e\n\u003cp\u003eThe Post-Test is very similar to the Pre-Test, as it is testing for the same learning goals. The goal of the post-test is checking your understanding of the material, for both you and your Flatiron School instructors. After taking it, you will be able to see whether your answers were correct, along with explanations for each question.\u0026nbsp;\u003c/p\u003e\n\u003cp\u003eYou are required to \u003cstrong\u003escore 80% on the post-test prior to starting the program\u003c/strong\u003e. The post-test is a diagnostic assessment that can help you understand what to study during the time before the program starts, and to help Flatiron School understand what kind of support you will need.\u003c/p\u003e\n\u003cp\u003eNote: While you are not \u003cem\u003erequired\u003c/em\u003e to complete the Data Visualization section prior to taking the assessment, the assessment will include some questions about data visualization. If this is a new topic for you, or you're feeling \"rusty\", we encourage you to complete all sections before taking the post-test.\u003c/p\u003e\n\u003ch4\u003eTroubleshooting Post-Test Access\u003c/h4\u003e\n\u003cp\u003eIf you think that the post-test should be unlocked but are having trouble accessing it, double-check that you have completed all of the prerequisites. In other words, the Introduction, Python Essentials, Python Loops \u0026amp; Functions, and Statistical Measures sections should all look like this:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://github.com/learn-co-curriculum/dsc-prework-intro/raw/b3feece3ce125ec15651b775bec2512afc72d276/images/section_completed.png\" alt=\"section completed\"\u003e\u003c/p\u003e\n\u003cp\u003eIf you don't see the green check mark, it means you haven't completed that section. In order to access the post-test, make sure you have marked everything as done.\u003c/p\u003e\n\u003cp\u003eIf this doesn't resolve your issue, you will be able to take the post-test on Day 1 of the program, with teacher troubleshooting support.\u003c/p\u003e\n\u003ch2\u003eLearning Methods\u003c/h2\u003e\n\u003cp\u003eHere are some best practices to follow when working through this material:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eWork through each section, \u003cstrong\u003eenough that you can remember the material\u003c/strong\u003e, before moving on to the next section. \u003cstrong\u003eThis may require repeating specific labs\u003c/strong\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSay out loud what each piece of code is doing. Part of learning to code is seeing the narrative of what is going on instead of just lines of specific instructions.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFor example, for \u003ccode\u003ex = [5,6,7]\u003c/code\u003e you would say, out loud, \"a list of integers from 5 to 7 is assigned to a variable named 'x' \"\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCheck the solutions only when you're done with the lab. Remember, getting stuck and working through individual pieces of code and concepts is part of the process.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you can't figure out why your code isn't working, look back to the section of prep that teaches that code, or try googling for information about the specific syntax you're trying to use. (\"90% of programming is googling StackOverflow\").\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you get completely stuck and need to check the solutions to move forward, just look at the specific solution for the piece you got stuck on, instead of reading the solutions for the entire lab.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn coding in general and Python specifically, there are lots of ways to accomplish any given task. It is a common occurrence to encounter code in the solutions that accomplishes the same result as the code you wrote but in a different way. Your code isn't necessarily wrong just because it's different from the solution! Consider why the solution code might be written differently than your code, even though it accomplishes the same thing.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eRecap\u003c/h2\u003e\n\u003cp\u003eIn this prep course you'll be introduced to some of the technical content and the delivery format used in the main Data Science course.\u003c/p\u003e\n\u003cp\u003eNot only does completing the prep allow for an easier adjustment to the first few weeks, it also provides a solid foundation that allows better progress through the more-challenging material later on in the bootcamp, and ultimately to have a better capstone project to show to potential employers.\u003c/p\u003e\n\u003cp\u003eBe intentional with your strategy as you move through the material, particularly how you use the solution code. We'll explain how to access that solution code in the next lesson.\u003c/p\u003e\n\u003cp\u003eEnjoy the prep, and good luck!\u003c/p\u003e","exportId":"welcome-to-prep"},{"id":434405,"title":"The Structure of This Course","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":true,"content":"\u003ch1\u003eThe Structure of This Course\u003c/h1\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson you will learn about how this course is structured in Canvas. Additionally, you will be introduced to Jupyter Notebooks and what they are for the very first time!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand the difference between a Canvas Assignment and Page\u003c/li\u003e\n\u003cli\u003eUnderstand how Pages host Lessons and Assignments host Code Lessons and Labs\u003c/li\u003e\n\u003cli\u003eGet introduced to Jupyter Notebooks\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSetting the Stage\u003c/h2\u003e\n\n\u003cp\u003eThere are two main types of materials in this course: \u003cstrong\u003ePages\u003c/strong\u003e and \u003cstrong\u003eAssignments\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eYou can recognize a \u003cstrong\u003ePage\u003c/strong\u003e by the following icon:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course-prework/master/images/page.png\" width=\"70\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd an \u003cstrong\u003eAssignment\u003c/strong\u003e by the following icon:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course-prework/master/images/assignment.png\" width=\"70\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003ePages\u003c/strong\u003e contain \u003cem\u003eLessons\u003c/em\u003e, and these lessons are mainly about giving you tons of information to absorb. In these lessons you'll be reading text and sometimes watching videos (note that what you're reading now is a Page). There is really not much more about it, all you need to do is to read them in Canvas. Enjoy!\u003c/p\u003e\n\n\u003cp\u003eOften, you'll be required to write code. This is where \u003cstrong\u003eAssignments\u003c/strong\u003e come in. Assignments come in two forms:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cem\u003eCode Lessons\u003c/em\u003e: Code Lessons require you to be able to run code, but you will not be instructed to write code yourself. Code Lessons are very much like Lessons, but there is an interactive component to it as you'll be running some code that was provided for you.\u003c/li\u003e\n\u003cli\u003e\u003cem\u003eLabs\u003c/em\u003e: Labs ask you to write code yourself! We provide example solutions for each lab to help you if you get stuck.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eYou can easily tell if an assignment is a \u003cem\u003eCode Lesson\u003c/em\u003e or a \u003cem\u003eLab\u003c/em\u003e from the title and the organization. If the title ends with \"Lab\", it's a lab. Additionally, Labs are indented. In the image below, you see a Code Lesson followed by a Lab.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course-prework/master/images/labs.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eNote that there is a third type of content that hasn't been discussed: a \u003cstrong\u003eQuiz\u003c/strong\u003e. Quizzes are less prevalent than Assignments or Pages, but they're important, as they contain questions for you to answer to reinforce your learning!\u003c/p\u003e\n\n\u003cp\u003eThe quiz icon looks like this:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course-prework/master/images/quiz.png\" width=\"70\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eAssignments: Meet IllumiDesk!\u003c/h2\u003e\n\n\u003cp\u003eWith any assignment that you open, this is what you'll see:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course-prework/master/images/illumidesk.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn order to go to the assignment, you need to load the assignment in a new window by clicking on the grey bar:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course-prework/master/images/illumidesk_4.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eClicking on the grey bar will take you into IllumiDesk to work on a \u003cstrong\u003eJupyter Notebook\u003c/strong\u003e, a document-like application that allows you to do live coding!\u003c/p\u003e\n\n\u003cp\u003eThis is what a Jupyter Notebook looks like:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course-prework/master/images/jupyter.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eLab Solutions\u003c/h2\u003e\n\n\u003cp\u003eWe provide solutions for each Lab to help you get unstuck when all else fails. Learning how to persevere and solve coding problems is one of the most important skills you will learn as a data scientist! That said, sometimes it's not worth your time or energy to keep trying to solve a problem, especially if the problem ends up being something minor like a typo. In general, if you're not making any progress with a Lab after 10-20 minutes then you should reach out to peers for help. If that doesn't get you unstuck, \u003cem\u003ethen\u003c/em\u003e look at a solution. Read just enough of the solution to get unstuck, then continue on your own.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eBe careful about when \u0026amp; how you use these!\u003c/strong\u003e You may be tempted to go look at the solution immediately when you don't know what to do or your code isn't working.  You won't always be able to look up a correct solution to problems you encounter during a technical interview or on the job, so don't let yourself fall into the habit.\u003c/p\u003e\n\n\u003cp\u003eTo access a Lab solution, click the GitHub icon to go to the Lab's GitHub repository.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course-prework/master/images/github_lab_repo.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eFrom the GitHub repository, click the branch dropdown to switch to the \u003ccode\u003esolution\u003c/code\u003e branch.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course-prework/master/images/github_branches.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eGreat - enough \u003cem\u003etalking\u003c/em\u003e, let's dive right into your first Jupyter Notebook in the next Assignment!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you learned about how Assignments and Pages are the two main building blocks of the Data Science Program in Canvas, hosting Lessons, Code Lessons and Labs. Next up, we'll explore our first Code Lesson in a Jupyter Notebook!\u003c/p\u003e","exportId":"the-structure-of-this-course"},{"id":434407,"title":"Your First Jupyter Notebook!","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-prework-jupyter-notebook\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-prework-jupyter-notebook/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","exportId":"gecdc73540778446cef0eba984e8f2e62"}]},{"id":45006,"name":"Prep Pre-test","status":"completed","unlockDate":null,"prereqs":[],"requirement":"one","sequential":false,"exportId":"gcced01c267009e84da62150fcb7261e5","items":[{"id":434412,"title":"Prep Pre-Test","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"g3460575fb0cf3a5226b53882c368ff4f","questionCount":21,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":21.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003ch3\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eThis Pre-Test is designed to help you and your instructors check your understanding of the material prior to starting the Pre-work. Completing it will unlock the Prework curriculum. You will not see your score after completion of this test, this test is purely used to measure your progress between taking this Pre-Test and taking the Post-Test after completing the Pre-Work.\u003c/p\u003e\n\u003ch3\u003eTiming\u003c/h3\u003e\n\u003cp\u003eThis is not a timed test, but it is intended to be taken in one sitting. We don't guarantee that Canvas will keep track of your progress if, for example, you leave the quiz open overnight. Your instructors will be able to see how long it took you to complete the assessment, but you want to prioritize thinking carefully about your answers rather than finishing as quickly as possible.\u003c/p\u003e\n\u003ch3\u003eAcademic Honesty\u003c/h3\u003e\n\u003cp\u003eThis multiple-choice assessment is \u003cstrong\u003eopen book\u0026nbsp;\u003c/strong\u003ebut should be completed\u003cstrong\u003e\u0026nbsp;individually, without assistance\u003c/strong\u003e. The goal is ensuring that we have an accurate assessment of your ability to use the concepts and techniques covered in the prework.\u003c/p\u003e\n\u003ch4\u003e\"Do\"s:\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eRead each question and all answer options carefully.\u003c/li\u003e\n\u003cli\u003eRefer back to \u003cstrong\u003elessons and labs\u003c/strong\u003e you completed in the pre-work. (You can open multiple tabs of Canvas at once, keeping the assessment open while looking up the content.)\u003c/li\u003e\n\u003cli\u003eRefer back to any \u003cstrong\u003enotes\u003c/strong\u003e you took while completing the lessons and labs.\u003c/li\u003e\n\u003cli\u003eRefer to the \u003ca class=\"instructure_file_link inline_disabled\" href=\"https://docs.python.org/3/library/index.html\" target=\"_blank\"\u003ePython\u003cstrong\u003e documentation\u003c/strong\u003e\u003c/a\u003e. In particular, (1) \u003ca class=\"instructure_file_link inline_disabled\" href=\"https://docs.python.org/3/library/functions.html\" target=\"_blank\"\u003ebuilt-in functions documentation\u003c/a\u003e, (2) \u003ca class=\"instructure_file_link inline_disabled\" href=\"https://docs.python.org/3/library/stdtypes.html\" target=\"_blank\"\u003ebuilt-in types documentation\u003c/a\u003e, and (3) \u003ca class=\"instructure_file_link inline_disabled\" href=\"https://docs.python.org/3/library/string.html\" target=\"_blank\"\u003estring documentation\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4\u003e\"Don't\"s:\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eDon't ask anyone for help \u003c/strong\u003ewith answering the questions. This includes friends, family, Flatiron School admissions reps, online forums, etc.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDon't\u003c/strong\u003e \u003cstrong\u003euse a Jupyter Notebook or other Python tool\u003c/strong\u003e to answer the questions. In many cases you can find the correct answer by \"brute force\" entering all of the answer choices, but this doesn't tell us whether \u003cem\u003eyou\u003c/em\u003e will actually be able to read and write Python code.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDon't use Google\u003c/strong\u003e (or another search engine) to look up answers online. Everything you need is in the provided materials + the Python documentation. If you Google for the answer instead of remembering it or looking it up in the provided materials, it diminishes the strength of the assessment, and it teaches your brain that you don't actually need to know the information — that you can always just look it up.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eYou are on your honor!\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e","exportId":"g56cc3eaa18a2be60827c1754d6112037"}]},{"id":45007,"name":"Python Essentials","status":"completed","unlockDate":null,"prereqs":[45006],"requirement":"all","sequential":false,"exportId":"g639c2b0e15f85c2763882b6fe5fabb4d","items":[{"id":434416,"title":"Introduction to Variables: Variable Assignment","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-variable-assignment-intro\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-variable-assignment-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-variable-assignment-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\"There are only two hard things in Computer Science: cache invalidation and naming things.\"\u003c/p\u003e\n\n\u003cp\u003e-- Phil Karlton\u003c/p\u003e\n\n\u003cp\u003e\"...But ordinary language is all right.\" \u003c/p\u003e\n\n\u003cp\u003e-- Ludwig Wittgenstein\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAssign and declare a Python variable\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g22cb228bfd30d535fc6741fe731ac000"},{"id":434418,"title":"Introduction to Variables: Strings","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-strings\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eAs we already know from living in the digital age and the lessons we've already seen, programming is a powerful tool for answering questions about data. It allows us to collect, clean up and format our data and then perform calculations on that data.\nMuch of our digital information is in the form of text, for example song lyrics and emails. To clean up and format that text with Python, we need to become familiar with our first type of data, the String.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eBy the end of this lesson, you will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eApply string methods to make changes to a string\u003c/li\u003e\n\u003cli\u003eInspect documentation with various methods\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g6c314b693f3ec9555805308db5ba8837"},{"id":434420,"title":"Introduction to Variables: Strings - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-strings-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eOkay, we have learned about our first data type, the String! Now let's do a little practice with strings. We'll use the methods and functions we introduced in the previous lesson to flex our string-manipulating muscles!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eApply string methods to make changes to a string\u003c/li\u003e\n\u003cli\u003eUse concatenation to combine strings\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g2a83bfc0ee03862edc77dd9e1a8865a7"},{"id":434421,"title":"Introduction to Variables: Numeric Types and Booleans","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-floats-ints-booleans\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-floats-ints-booleans\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-floats-ints-booleans/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSo, we know that we have a type for representing text, the String. But what if we want to represent other types of data, like Numbers? We are Data Scientists after all, and we'll be working with numbers a lot. In this lesson, we'll introduce both Numbers and Booleans, data types we will frequently use in Python.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse different numeric data types\u003c/li\u003e\n\u003cli\u003eDistinguish the difference between numeric data types\u003c/li\u003e\n\u003cli\u003ePerform basic mathematical operations with numeric data types\u003c/li\u003e\n\u003cli\u003eUse Boolean data types\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gb234d5ac09db3cb158f8cf05f9340791"},{"id":434422,"title":"Introduction to Variables: Strings and Numeric Types - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-strings-floats-ints-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings-floats-ints-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings-floats-ints-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that we have learned about working with different types of data in Python: strings, numbers (ints and floats), and booleans, let's put that knowledge to the test. In this lab we'll imagine that we were at a nice social gathering and exchanged business cards with a few people. One of the business cards belongs to Art Vandelay, a new travel agent. We want to use our programming skills to format this information correctly. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eApply string methods to make changes to a string\u003c/li\u003e\n\u003cli\u003eUse concatenation to combine strings\u003c/li\u003e\n\u003cli\u003ePerform basic mathematical operations with numeric data types\u003c/li\u003e\n\u003c/ul\u003e","exportId":"ge00931a4c90f5a02ef00a71d6b59eb13"},{"id":434424,"title":"Introduction to Variables: Variable Assignment - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-variable-assignment-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-variable-assignment-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-variable-assignment-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that we know about variables, we want to put them to use by associating them with some data.  Here, we will be using variables to store information related to a vacation that we would like to go on.\u003c/p\u003e\n\n\u003cp\u003eJust as before, we ask you to run the code and ensure that it matches what is commented out.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAssign and declare a python variable\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g278a18876f40090e2f62003cc57bd784"},{"id":434426,"title":"Control Flow: Conditionals","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-conditionals\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-conditionals\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-conditionals/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe have talked about different data types, how to use them, and the kinds of operations that we can perform on them. We have also talked about using Booleans (\u003ccode\u003eTrue\u003c/code\u003e or \u003ccode\u003eFalse\u003c/code\u003e) to inform decisions in our programming. Often when we want to implement a decision in our code, we'll use conditionals. Conditionals allow us to break up our code in a way that we can selectively perform operations like assigning a value or even just printing text.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Python conditional statements\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g4928f221fcb04697a7dd69cc606b9f0d"},{"id":434428,"title":"Control Flow: Conditionals - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-conditionals-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-conditionals-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-conditionals-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you have been introduced to conditionals, let's put your knowledge to test and create some conditional statements that selectively assign values to variables based on whether they pass the conditions we set.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Python conditional statements\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g8dfa542361828aac922b54cd775fd3be"},{"id":434430,"title":"Working with Lists","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-lists\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lists\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lists/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSo far, we have worked with individual pieces of data like the string 'hello'. In this lesson, we'll see how we can group pieces of data together using lists.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse indexing to access elements in a list\u003c/li\u003e\n\u003cli\u003eApply list methods to make changes to a list\u003c/li\u003e\n\u003cli\u003eChange elements of a list\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g7ee6ec49e524001dfba2e30501ef5c1e"},{"id":434432,"title":"Working with Lists - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-lists-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lists-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lists-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that we have a sense of how to read from a list and alter a list in Python, let's put this knowledge to use. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse indexing to access elements in a list\u003c/li\u003e\n\u003cli\u003eApply list methods to make changes to a list\u003c/li\u003e\n\u003cli\u003eChange elements of a list\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g9a6060309a171b671b0554c1c3ec3943"},{"id":434433,"title":"Working With Dictionaries","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-dictionaries\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dictionaries\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dictionaries/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eAfter introducing and working with Lists, you might be wondering if there are other kinds of collections in Python that we should know about. Well, there are! In this lesson, we will introduce \u003cstrong\u003edictionaries\u003c/strong\u003e. As we know, lists represent a collection of information that is ordered, like a list of the most watched TV shows.  However, in different situations, we may want our data to represent attributes of an entity, such as the various attributes of a single TV show like its name, genre, starring actors, etc.  For such scenarios, a \u003cstrong\u003edictionary\u003c/strong\u003e is more natural. Dictionaries are collections of \u003cstrong\u003ekey-value pairs\u003c/strong\u003e. Rather then specifying a positional index as with lists, we specify a key for a dictionary and are returned with the value associated with that key. For example, in a list, we could retrieve the third item with \u003ccode\u003elist_name[2]\u003c/code\u003e (remember indexing starts at 0), while in a dictionary, we would have to specify a key such as \u003ccode\u003edict_name['key_name']\u003c/code\u003e to retrieve the associated value attached to that key. This is similar to traditional dictionaries: you look up a specific word (the key) to find its associated definition (the value).\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAssign values in a dictionary\u003c/li\u003e\n\u003cli\u003eAccess keys and values in a dictionary\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gca186dafac976cf51ffb8bdae825fcfa"},{"id":434435,"title":"Working with Dictionaries - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-dictionaries-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dictionaries-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dictionaries-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that we know about dictionaries in Python, it is time to practice using them. In this lesson, you'll use your knowledge of dictionaries to retrieve and assign data about various cities.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAssign values in a dictionary\u003c/li\u003e\n\u003cli\u003eAccess keys and values in a dictionary\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g06542309468316d710fbbab77f39c4bf"},{"id":434437,"title":"Built-in Python Operators, Functions and Methods","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-python-operators-functions-and-methods\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-operators-functions-and-methods\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-operators-functions-and-methods/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eAs a Data Scientist, you will spend a lot of time writing code in Python. In this lesson, we're going to introduce some features built right into the language that will allow you to perform common tasks more quickly and easily.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse built-in Python functions and methods\u003c/li\u003e\n\u003cli\u003eDescribe the difference between a function and a method\u003c/li\u003e\n\u003cli\u003eUse comparison operators to compare objects\u003c/li\u003e\n\u003cli\u003eUse logical operators to incorporate multiple conditions\u003c/li\u003e\n\u003cli\u003eUse identity operators to confirm the identity of an object\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gf461545aabfa2c2854af2c13d5cb6189"},{"id":434439,"title":"Built-in Python Operators, Functions, and Methods - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-python-operators-functions-and-methods-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-operators-functions-and-methods-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-operators-functions-and-methods-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe've looked at some of the built-in methods, functions, and the operators in Python. These are all very powerful tools we can (and will) use in our code. Below, we'll put these new tools to use to solve the tests in this lab.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eIn this lab you will:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse built-in Python functions and methods\u003c/li\u003e\n\u003cli\u003eUse comparison operators to compare objects\u003c/li\u003e\n\u003cli\u003eUse logical operators to incorporate multiple conditions\u003c/li\u003e\n\u003cli\u003eUse identity operators to confirm the identity of an object\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g40acebb99993caab78adfc9a83a2a6cd"},{"id":434441,"title":"Python Essentials - Cumulative Lab","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-python-essentials-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-essentials-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-essentials-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eCongratulations, you made it through the new content for the first section of the prep! This cumulative lab will help you review and practice everything you've learned in this section — \"putting it all together\" into an analysis with real-world data.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRecall the data types covered so far\u003c/li\u003e\n\u003cli\u003ePractice extracting information from a nested dataset\u003c/li\u003e\n\u003cli\u003ePractice generating insights with conditional logic\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gb20f3650861ea56be8b9852bb376d026"}]},{"id":45009,"name":"Python Loops \u0026 Functions","status":"completed","unlockDate":null,"prereqs":[45006],"requirement":"all","sequential":false,"exportId":"g3fde15dcc1a0e31e70e1540afacaf2cf","items":[{"id":434444,"title":"Looping Over Collections","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-looping-over-collections\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-looping-over-collections\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-looping-over-collections/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eLoops allow us to iterate over each element in a collection, like a list. Perhaps we could already do that by writing out a line of code for each element in the collection, but that wouldn't be very efficient, would it? No, not at all. With loops, we can write one line of code that operates on each element in a collection. Pretty cool, right? Let's get started!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse a \u003ccode\u003efor\u003c/code\u003e loop to iterate over a collection\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g87dbaa82fbcc8fd0c47ff2fc6904ca9e"},{"id":434445,"title":"Looping Over Collections - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-looping-over-collections-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-looping-over-collections-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-looping-over-collections-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we will be practicing what we know about \u003ccode\u003efor\u003c/code\u003e loops. We will use them to reduce the amount of code we write by hand to iterate through collections. We will use data from the excel file, \u003ccode\u003ecities.xlsx\u003c/code\u003e, that has data on different cities, their populations, and their areas. Finally, we will use this information to plot and compare each city. Let's get started!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse a \u003ccode\u003efor\u003c/code\u003e loop to iterate over a collection\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g2234809843bef3c2ea9327c0d2d395d4"},{"id":434447,"title":"While Loops, Break and Continue","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-while-loops-break-and-continue\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-while-loops-break-and-continue\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-while-loops-break-and-continue/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eEarlier in the course, we learned how to iterate over collections. But is there a way to have a loop \u003cstrong\u003ewithout\u003c/strong\u003e a collection to iterate over? Well, another way to create a loop is with \u003cstrong\u003ewhile\u003c/strong\u003e loops. We can use a while loop to perform the same action over and over until a condition is no longer \u003ccode\u003eTrue\u003c/code\u003e. We don't even need an \u003cem\u003eiterable\u003c/em\u003e or collection to iterate over. We can just define a condition and perform the given code block until the condition is no longer \u003ccode\u003eTrue\u003c/code\u003e. Pretty cool, right?   \u003c/p\u003e\n\n\u003cp\u003eOr what if we would like to have a loop that stops at a certain point? Let's say we only want to collect half of the elements of a list, or stop a list once we find the first matching element? To perform operations like these we'll need \u003ccode\u003ebreak\u003c/code\u003e and \u003ccode\u003econtinue\u003c/code\u003e statements. These statements \u003cstrong\u003econtrol the flow\u003c/strong\u003e of our loops and will help us make our loops even more effective.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse a \u003ccode\u003ewhile\u003c/code\u003e loop\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003ebreak\u003c/code\u003e and \u003ccode\u003econtinue\u003c/code\u003e to add control flow to a \u003ccode\u003ewhile\u003c/code\u003e loop\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g50de168d89045aafb7ca7c967cc2a97e"},{"id":434449,"title":"While Loops, Break and Continue - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-while-loops-break-and-continue-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-while-loops-break-and-continue-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-while-loops-break-and-continue-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we will practice using \u003ccode\u003ewhile\u003c/code\u003e loops, and \u003ccode\u003ebreak\u003c/code\u003e and \u003ccode\u003econtinue\u003c/code\u003e statements in our code. We will use our control flow statements to iterate through collections and filter out or selectively operate on each element. We'll use \u003ccode\u003ewhile\u003c/code\u003e loops to perform operations until a given condition is no longer true. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse a \u003ccode\u003ewhile\u003c/code\u003e loop\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003ebreak\u003c/code\u003e and \u003ccode\u003econtinue\u003c/code\u003e to add control flow to a \u003ccode\u003ewhile\u003c/code\u003e loop\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g3dd670b73a274c7c9423708dbfc707cb"},{"id":434451,"title":"Using Nested Loops","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-using-nested-loops\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-nested-loops\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-nested-loops/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we will be looking at how to perform nested iteration (or looping). What does this mean exactly? Well, we know that a nested data structure is having one form of data nested inside another. For example, a nested list would be a list that contains another list, or a dictionary that has a key that points to a list.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# nested lists\n\u003c/span\u003e\u003cspan class=\"n\"\u003elist_of_lists\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]]\u003c/span\u003e\n\u003cspan class=\"n\"\u003edict_nested_list\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e'name'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\"example\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e'colors'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\"blue\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"green\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"yellow\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"red\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo, with that example, we can infer that a nested loop would be a loop inside another loop. Sounds exciting, right? Let's take a look at some nested loops.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse a nested loop when it is appropriate\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g3f4b63494c9e1b2c738b60f3b9a2669c"},{"id":434453,"title":"Using Nested Loops - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-using-nested-loops-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-nested-loops-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-nested-loops-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll practice using nested loops to iterate over nested data structures and create new collections. To do this, you'll be using data from a soccer match to practice our nested loops.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse a nested loop when it is appropriate\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g5f6dd0d64e743ed2db9cf4c09df4be7d"},{"id":434455,"title":"Creating Functions","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-creating-functions\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-creating-functions\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-creating-functions/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that we learned about loops, it would be nice to have the ability to \u003cem\u003ereuse\u003c/em\u003e our code to help us solve different problems. Functions allow us to do just that. They also give us the ability to name a sequence of operations (or block of code), thus making our code expressive. Let's see how this works, and why something like this is useful.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDeclare and use a basic function\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g4eb83428653f369c46826824ab875b1b"},{"id":434457,"title":"Creating Functions - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-creating-functions-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-creating-functions-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-creating-functions-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eAs you know, we can use functions to name snippets of our code, thus making our code more expressive. We can also use functions to allow us to reuse our code. In this lab we will practice using functions for both of those purposes.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDeclare and use a basic function\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g7bafc274de04402dda321458de913803"},{"id":434459,"title":"Functions with Arguments","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-functions-with-arguments\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-functions-with-arguments\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-functions-with-arguments/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eFunction arguments are a powerful tool in programming.  As we'll see, arguments make our functions more flexible and reusable by explicitly allowing different inputs to be used in a function and changing the output of the function based on these inputs.\u003c/p\u003e\n\n\u003cp\u003eWhen used correctly, function arguments bring clarity to what inputs a function needs to operate, as well as how a function uses these inputs.  \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDeclare and use a function with arguments\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gf95cef7bfd71e59dda5daa202c74b13c"},{"id":434461,"title":"Functions With Arguments - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-functions-with-arguments-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-functions-with-arguments-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-functions-with-arguments-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we have decided to visit one of our travel destinations! This time we have chosen to visit Albuquerque, but we aren't very familiar with this city and are quite hungry after our long flight. We will be working with information we pulled from the Yelp database to help us find a restaurant where we can satisfy our hunger. While Yelp is great for learning about what to do in Albuquerque, it gives us back a lot of information. We'll use what we know about functions and dictionaries to format and read our data more easily. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDeclare and use a function with arguments\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g59472624b01d8a531dca93296e1ba886"},{"id":434462,"title":"User Input and Output in Python","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-user-input-and-output-in-python\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-user-input-and-output-in-python\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-user-input-and-output-in-python/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSometimes, you'll want Python to ask users for a certain input. This is where user inputs can help!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIncorporate input/output functionality in code to allow for user interaction \u003c/li\u003e\n\u003c/ul\u003e","exportId":"g85f256e270c95705db4022a5aea57190"},{"id":434463,"title":"Python Loops and Functions - Cumulative Lab","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-python-loops-and-functions-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-loops-and-functions-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-loops-and-functions-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou made it through another section — excellent work! This cumulative lab will return to the Amazon product review dataset and allow you to flex your new skills.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRecall what you learned in the previous section\u003c/li\u003e\n\u003cli\u003ePractice writing loops to pull multiple pieces of data from a dataset\u003c/li\u003e\n\u003cli\u003ePractice writing functions for organization and avoiding repetition\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g96ab94758e4e03adcde4d4c510a71b4a"}]},{"id":45012,"name":"Statistical Measures","status":"completed","unlockDate":null,"prereqs":[45006],"requirement":"all","sequential":false,"exportId":"gf17f9d675760790fb6bca5b62a4eaf62","items":[{"id":434465,"title":"Introduction to Numpy","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-introduction-to-numpy\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-to-numpy\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-to-numpy/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, we'll take a more formal look at \u003cem\u003eNumPy\u003c/em\u003e. Besides being ubiquitous in Data Science, NumPy also provides us with blistering fast and efficient, list-like, data types called N-Dimensional Arrays or \u003cstrong\u003endarrays\u003c/strong\u003e or more simply arrays. This list-like data type is effectively a lighter weight version of a Python \u003cstrong\u003elist\u003c/strong\u003e, as it uses less of your computer's memory, which makes it more efficient, especially when dealing with large datasets. Don't worry if that seems a little vague. We will take a closer look at NumPy and how its arrays work in this lesson.\u003c/p\u003e\n\n\u003cp\u003eAn important note: \u003cem\u003ePandas\u003c/em\u003e was actually built on top of \u003cem\u003eNumPy\u003c/em\u003e! So many of the functionalities that \u003cem\u003eNumPy\u003c/em\u003e has, are also part of \u003cem\u003ePandas\u003c/em\u003e. It is still important to cover \u003cem\u003eNumPy\u003c/em\u003e separately as \u003cem\u003eNumPy\u003c/em\u003e arrays are very important building blocks in many Data Science applications!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe why NumPy is used at times over standard Python \u003c/li\u003e\n\u003cli\u003eInstantiate a NumPy array with specified values \u003c/li\u003e\n\u003cli\u003eUse broadcasting to perform a math operation on an entire NumPy array \u003c/li\u003e\n\u003c/ul\u003e","exportId":"gbce3a85b4946723fa7e972c7009a5452"},{"id":434467,"title":"Getting Started with NumPy","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-getting-started-with-numpy\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-with-numpy\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-with-numpy/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNumPy is one of the main libraries for performing scientific computing in Python. Using NumPy, you can create high-performance multi-dimensional arrays, and several tools to work with these arrays. \u003c/p\u003e\n\n\u003cp\u003eA NumPy array can store a grid of values. All the values must be of the same type. NumPy arrays are n-dimensional, and the number of dimensions is denoted by the \u003cem\u003erank\u003c/em\u003e of the NumPy array. The shape of an array is a tuple of integers which holds the size of the array along each of the dimensions.\u003c/p\u003e\n\n\u003cp\u003eFor more information on NumPy, refer to \u003ca href=\"http://www.numpy.org/\"\u003ehttp://www.numpy.org/\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse broadcasting to perform a math operation on an entire numpy array\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003ePerform vector and matrix operations with numpy \u003c/li\u003e\n\u003cli\u003eAccess the shape of a numpy array\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eUse indexing with numpy arrays\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g5ab9267793311cfa9be3b541c0535fe8"},{"id":434468,"title":"Getting Started with NumPy - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-getting-started-with-numpy-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-with-numpy-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-with-numpy-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that we have introduced NumPy, let's put it to practice. In this lab, you are going to be creating arrays, performing operations on them, and returning new arrays all using the NumPy library. Let's get started!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eInstantiate a numpy array with specified values \u003c/li\u003e\n\u003cli\u003eUse broadcasting to perform a math operation on an entire numpy array \u003c/li\u003e\n\u003c/ul\u003e","exportId":"g840dc22b3347e8ce48d1e648c387c642"},{"id":434469,"title":"Measures of Central Tendency","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-measures-of-central-tendency\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-measures-of-central-tendency\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-measures-of-central-tendency/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWhen we are working with a small set of data values, it is often possible to discuss these values individually. However, when we are dealing or working with large sets of data in real-world problems, we prefer to have some features that can summarize and represent the data in a concise format.\u003c/p\u003e\n\n\u003cp\u003eIn this lesson, we will look at such measures first for a single data variable. e.g., the salary of workers in a particular factory. These measures will include measures of central tendency and measures of dispersion.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCompare the different measures of central tendency\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gd1ad79706f97b569e1df3b384b7ab3d3"},{"id":434470,"title":"Measures of Dispersion","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-measures-of-dispersion\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-measures-of-dispersion\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-measures-of-dispersion/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003ePreviously, you learned about three measures of central tendency: the mean, median, and mode. These metrics can give you a general understanding of where data values lie within the range of the whole dataset but they don't tell you the whole story. In fact, they can often be misleading!\u003c/p\u003e\n\n\u003cp\u003eTo truly understand your data, you also need \u003cstrong\u003eMeasures of Dispersion\u003c/strong\u003e, namely: absolute deviation, standard deviation, and variance. These measures tell you how tightly (or loosely) your data is clustered around its center. Generally, measures of dispersion report on how \"noisy\" your dataset is. \u003c/p\u003e\n\n\u003cp\u003eIn this lesson, you'll learn about the different measures of dispersion and explore how they are related to each other as well as other summary statistics.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCompare the different measures of dispersion\u003c/li\u003e\n\u003cli\u003eCreate a box plot and use it to interpret the spread of data\u003c/li\u003e\n\u003c/ul\u003e","exportId":"ge406c894213061f1e4575ee71fa00abf"},{"id":434471,"title":"Implementing Statistics with Functions - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-implementing-statistics-with-functions-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-implementing-statistics-with-functions-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-implementing-statistics-with-functions-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab you'll dive deep into calculating the measures of central tendency and dispersion introduced in previous lessons. You will code the formulas for these functions in Python which will require you to use the programming skills that you have gained in the other lessons of this section. Let's get started!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCalculate the measures of dispersion for a dataset\u003c/li\u003e\n\u003cli\u003eCompare the different measures of dispersion\u003c/li\u003e\n\u003cli\u003eCalculate the measures of central tendency for a dataset\u003c/li\u003e\n\u003cli\u003eCompare the different measures of central tendency\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g0893f7f6607c9016fdbcf31cf6281e1b"},{"id":434472,"title":"Measures of Central Tendency - Quiz","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"gd41d8cd98f00b204e9800998ecf8427e","questionCount":6,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":6.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cp\u003e\u003cspan\u003eWhile we recommend using Python to find the answers to these questions, it is not required. You are more than welcome to use a calculator or pencil and paper to solve them, too.\u003c/span\u003e\u003c/p\u003e","exportId":"gafffd0253eddac832bd97470ee598a56"},{"id":434473,"title":"Measures of Dispersion - Quiz","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"gd41d8cd98f00b204e9800998ecf8427e","questionCount":3,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":3.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"","exportId":"g005a0293848ed983a215877b582fd645"},{"id":434474,"title":"Covariance and Correlation","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-correlation-covariance\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-correlation-covariance\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-correlation-covariance/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll learn how the \u003cstrong\u003evariance\u003c/strong\u003e of a variable is used to calculate \u003cstrong\u003ecovariance\u003c/strong\u003e and \u003cstrong\u003ecorrelation\u003c/strong\u003e as key measures used in statistics to find causal relationships between variables. Based on these measures, you can find out if two variables are associated with each other, and to what extent. This lesson will help you develop a conceptual understanding, necessary calculations, and some precautions while using these measures. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDistinguish between correlation and causation \u003c/li\u003e\n\u003cli\u003eInterpret correlation and its relationship to covariance\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eCalculate covariance and correlation\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g2f9f93d746a031d0889f94a9973f66b7"},{"id":434475,"title":"Covariance and Correlation - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-correlation-covariance-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-correlation-covariance-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-correlation-covariance-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you will calculate covariance and correlation for some data in Python lists by using the formulas shown in the previous lesson. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCalculate covariance and correlation\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDeclare and use a function with arguments\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gbb17d39717b44a0a378feb26874c19c8"},{"id":434476,"title":"Statistical Measures - Cumulative Lab","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-statistical-measures-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-statistical-measures-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-statistical-measures-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eAnother section down! Let's pull together the statistical measures learned so far to analyze a dataset and produce some business recommendations.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRecall the concepts and applications of measures of central tendency and dispersion\u003c/li\u003e\n\u003cli\u003ePractice applying and interpreting measures of central tendency and dispersion\u003c/li\u003e\n\u003cli\u003eRecall the concepts and applications of covariance and correlation\u003c/li\u003e\n\u003cli\u003ePractice applying and interpreting covariance and correlation\u003c/li\u003e\n\u003c/ul\u003e","exportId":"ga5342dbefc1721bb053cd22306f3b6b3"}]},{"id":45014,"name":"Data Visualization","status":"completed","unlockDate":null,"prereqs":[45006],"requirement":"all","sequential":false,"exportId":"g9e9ed910fb4246c05d43ef67608180cc","items":[{"id":434477,"title":"Data Visualization","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-viz\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eThis lesson introduces data visualization using Python and the popular Matplotlib plotting library. You will explore the fundamental features of standard Matplotlib plots and how to use them for creating and customizing visualizations. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Matplotlib to create a scatter plot\u003c/li\u003e\n\u003cli\u003eUse Matplotlib to create a histogram\u003c/li\u003e\n\u003cli\u003eInterpret a histogram to gain insight about a distribution of data\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g92249d43c08c58e79f0cbd6e6487bf9d"},{"id":434478,"title":"Data Visualization - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-viz-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eThis lab will give you some structured practice performing data visualization!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Matplotlib to create a bar graph\u003c/li\u003e\n\u003cli\u003eUse Matplotlib to create a scatter plot\u003c/li\u003e\n\u003cli\u003eUse Matplotlib to create a histogram\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gf4bf01c88225a8f8d7b7a8d8f3a9e6f5"},{"id":434479,"title":"Customizing Visualizations with Matplotlib","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-more-practice-with-matplotlib\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-practice-with-matplotlib\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-practice-with-matplotlib/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe had a quick introduction to plotting with \u003ccode\u003ematplotlib\u003c/code\u003e in previous lessons. This lesson covers plotting with Python and \u003ccode\u003ematplotlib\u003c/code\u003e using a more structured approach. In this section, we'll look into the components of standard Matplotlib plots used for creating and customizing visualizations. The lesson will also provide you with lots of example code to get you started with data visualization and customizations. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a line plot with Matplotlib\u003c/li\u003e\n\u003cli\u003ePlot multiple graphs on the same axes\u003c/li\u003e\n\u003cli\u003eCustomize axes limits and ticks\u003c/li\u003e\n\u003cli\u003eCustomize line styles and colors\u003c/li\u003e\n\u003cli\u003eUnderstand the distinction between Matplotlib figure and axes\u003c/li\u003e\n\u003cli\u003eCreate multiple subplots within a Matplotlib figure\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g9442cfe7529613453d3d9fc94525f9a0"},{"id":434480,"title":"Customizing Visualizations with Matplotlib - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-more-practice-with-matplotlib-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-practice-with-matplotlib-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-practice-with-matplotlib-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eThis lab requires you to draw some basic visualizations using the techniques from the previous lesson. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate subplots using a Matplotlib figure\u003c/li\u003e\n\u003cli\u003eUse different linestyles within a Matplotlib visualization\u003c/li\u003e\n\u003cli\u003eCreate labels and titles for visualizations\u003c/li\u003e\n\u003cli\u003eCreate a lineplot using linspace\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g81b853d378438443f9f5b76cfca94998"},{"id":434481,"title":"Data Visualization - Best Practices and Common Mistakes","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn some best practices for creating high-quality data visualizations, as well as some common mistakes to avoid!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eChoose a type of visualization that is appropriate for a given set of data\u003c/li\u003e\n\u003cli\u003eDescribe how some types of visualizations can be misleading to viewers\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCreating High-Quality Data Visualizations\u003c/h2\u003e\n\n\u003cp\u003eCreating your own data visualizations can be trickier than it looks. Not because they're hard to code, but because there are so many different stylistic choices you have to make! Most of Data Science is based in math, where there is a probably correct answer. Unfortunately, there is no \"right answer\" when it comes to building the best data visualization for a given task or project. However, there are some good rules we can follow, and some common mistakes we can avoid. The goal of this lesson is to get you thinking about both of them by looking at some real-world examples. \u003c/p\u003e\n\n\u003ch2\u003eDon't: Use a Pie Chart\u003c/h2\u003e\n\n\u003cp\u003eFrom the Wikipedia page on Pie Charts:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\"Pie charts are very widely used in the business world and the mass media. However, they have been criticized, and many experts recommend avoiding them, pointing out that research has shown it is difficult to compare different sections of a given pie chart, or to compare data across different pie charts. Pie charts can be replaced in most cases by other plots such as the bar chart, box plot or dot plots.\"\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThis is the \u003cem\u003esecond paragraph\u003c/em\u003e on the page. What does this tell us? Pie charts are such a bad choice for data visualizations that it's own Wikipedia page starts with a warning against using them!\u003c/p\u003e\n\n\u003cp\u003eSo why are Pie Charts a bad choice? The simple answer is because humans don't think in radians, and we aren't good at judging the area of a circle. For instance, take a look at the following infographic:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/bad_data_viz.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eInfographic from \u003ca href=\"https://www.vox.com/2014/8/20/6040435/als-ice-bucket-challenge-and-why-we-give-to-charity-donate\"\u003eVox\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIt takes a little while to get a feel for the information this misguided data visualization is trying to get across. It's hard to compare the different items, which is a problem, because the entire goal of this visualization is to show comparisons between the different diseases! \u003c/p\u003e\n\n\u003ch2\u003eDo: Choose the Right Tool for the Job\u003c/h2\u003e\n\n\u003cp\u003eConsider the following Pie Charts:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/piechart.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe pie charts all look pretty much the same. It's hard for us to tell the differences between them, especially when it comes to ranking the different colored sections by size in the each chart. However, when we examine the bar charts below the image,the differences in each become immediately apparent--you couldn't miss them if you tried. \u003c/p\u003e\n\n\u003cp\u003eWhen deciding what visualization to use, consider what information you're trying to communicate, and then pick the plot that communicates that information in the most obvious manner. \u003c/p\u003e\n\n\u003ch2\u003eDon't: Get Your Percentages Wrong\u003c/h2\u003e\n\n\u003cp\u003eThis one seems like an easy mistake to avoid, but it still happens all the time. Double check your math, and always double check your calculations! Nothing destroys a Data Scientist's credibility in front of a crowd like simple arithmetic errors or visualizations that don't match your numbers. \u003c/p\u003e\n\n\u003cp\u003eConsider the following infographic, and try to figure out what is wrong with it:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/new_percentages.png\" height=\"75%\" width=\"75%\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThere are two things wrong with this infographic. The first is that the percentages add up to 243%, which makes no sense. We can intuit that respondents were allowed to choose more than one category, but that's too ambiguous on its own, and doesn't tell us anything!\u003c/p\u003e\n\n\u003cp\u003eThe second issue with this visualization is that the area taken up by each colored section doesn't fit with their corresponding percentages. In a good data visualization, if 78%  of the respondents chose the category represented by purple, then 78% of the person should be purple!  Mismatches like this undermine the message of your visualization because they are confusing and ambiguous. Avoid them!\u003c/p\u003e\n\n\u003ch2\u003eDon't: Make Your Visualizations Too Busy or Unique\u003c/h2\u003e\n\n\u003cp\u003eOne of the easier mistakes to make is to make visualizations that simply have so much going on that they are almost impossible to interpret. Consider the line graph below. Take a minute and try to make sense of it.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/new_bad-time-series.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAlmost impossible, right? Mistakes like this can be avoided by breaking information up into a series of smaller graphs, or by picking a more appropriate type of visualzation, when possible. \u003c/p\u003e\n\n\u003cp\u003eAnother big mistake is to try and create new, unique visualizations that people haven't seen before. While it may seem like a good idea to get creative, fight the urge. You don't see weird, unique stuff often for a reason--because they don't work well. Stick to formats people are used to. Switching up things to try and be unique can make your visualization confusing, or in the case below, purposefully misleading!\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/new_gun-deaths-in-FL.png\" width=\"400\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn this visualization, the author broke the common convention of having a line go up as a number goes up. Instead, the line goes down as the number of gun deaths in Florida increases. However, most people that view this visualization leave with the exact opposite impression, because they are paying more attention to the direction of the line than they are to the numbers on the y-axis. That's because we focus on \u003cstrong\u003e\u003cem\u003ePreattentive Attributes\u003c/em\u003e\u003c/strong\u003e first!\u003c/p\u003e\n\n\u003ch2\u003eDo: Use Preattentive Attributes\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003ePreattentive Attributes\u003c/em\u003e\u003c/strong\u003e are things that our eyes are drawn to. We can't help but notice them, because our brains are wired to. There will be times when you need a visualization to communicate a specific piece of information, that you want to make as obvious as possible. The best way to do this is to pick the right preattentive attribute to highlight this!\u003c/p\u003e\n\n\u003cp\u003eTake a look at some of the examples in the chart below: \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/new_preattentive-attributes.png\" width=\"700\"\u003e\u003c/p\u003e\n\n\u003cp\u003eNote that preattentive attributes are not one size fits all. Most of them work well for certain types of data, but not others. Consider the following chart, and refer back to the preattentive attributes listed above and consider how they would look trying to highlight each different type of information. \u003c/p\u003e\n\n\u003ch2\u003eDon't: Use 3D Visualizations\u003c/h2\u003e\n\n\u003cp\u003eThe final mistake we'll cover today is the use of 3D Visualizations. While they may seem like a cool idea, in practice, they are almost always trouble. The reason for this is because they easily cause \u003cstrong\u003e\u003cem\u003eOcclusion\u003c/em\u003e\u003c/strong\u003e, which is just a fancy way of saying that the things in front block the things in back so that you can't see them! For example:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/new_occlusion.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eNote that there may be some times where a 3D visualization may actually be your best choice, but those are almost always going to be related to visualizing a point cloud in a 3D space. If you absolutely have to use a 3D visualization (or any other sort of visualization where occlusion could be a problem), consider changing the opacity of the visualization to make items more see-through. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we saw many examples of bad data visualizations, and learned about how to make great data visualizations by avoiding these mistakes and following the best practices!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-data-viz-best-practices-common-mistakes\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-data-viz-best-practices-common-mistakes\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","exportId":"data-visualization-best-practices-and-common-mistakes"},{"id":434482,"title":"Seaborn","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-seaborn\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-seaborn\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-seaborn/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll be introduced to a second, more powerful data visualization library, \u003cstrong\u003e\u003cem\u003eSeaborn\u003c/em\u003e\u003c/strong\u003e!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eConstruct plots with Seaborn using its pre-built functionality\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhat is Seaborn?\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://seaborn.pydata.org/\"\u003eSeaborn\u003c/a\u003e is a Data Visualization library that makes it really, really easy to create professional-quality statistical visualizations with only one or two lines of code. Seaborn also makes it really easy to modify the \u003cem\u003eaesthetics\u003c/em\u003e of a plot, so that we can make sure all of our visualizations are eye-catching and easy to interpret, which isn't always the case with Matplotlib. \u003c/p\u003e\n\n\u003ch2\u003eSeaborn and Matplotlib\u003c/h2\u003e\n\n\u003cp\u003eIf seaborn is so awesome, you may be wondering why we bothered teaching you Matplotlib at all! The answer is that Seaborn is not a competing library--it's actually built on top of Matplotlib! Whereas Matplotlib provides the basic functionality for creating plots and filling them with different kinds of shapes and colors, Seaborn takes this functionality a step farther by providing a bunch of ready-made mathematical visualizations that are commonly used in Data Science. Best of all, Seaborn is written to be simple to use and easy to understand, so most visualizations only take 1 or 2 lines of code! \u003c/p\u003e\n\n\u003cp\u003eThe plot on the left is a standard plot from Matplotlib. The plot on the right is from Seaborn. What a difference!\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-seaborn/master/images/ugly_plot.png\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-seaborn/master/images/pretty_plot.png\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch3\u003eWhen to Use Each\u003c/h3\u003e\n\n\u003cp\u003eWhen you're just performing some basic EDA and exploring a dataset, there are times when matplotlib may be most useful to you. If that's the case, don't be afraid to stick to matplotlib. However, Seaborn shines in two particular areas--providing ready-made plots for statistical analysis, and making beautiful plots for presenting to others.  Perhaps, during your EDA, you want to see the regression line between two features. If that's the case, Seaborn should be your choice, because it only takes a single line of code, whereas Matplotlib would be more complicated. \u003c/p\u003e\n\n\u003cp\u003eWhen it comes to presentations, it is highly recommended to use Seaborn. Whether in a PowerPoint Presentation or just a Jupyter Notebook you'll be making publicly available, Seaborn visualizations are easier on the eyes, and worth the time.  As a rule of thumb, if you plan on showing the plot to other people, consider using Seaborn. \u003c/p\u003e\n\n\u003ch2\u003eBasic Plots with Seaborn\u003c/h2\u003e\n\n\u003cp\u003eLike any python library, the first thing we have to do to use Seaborn is to import it. The standard alias for Seaborn is \u003ccode\u003esns\u003c/code\u003e. Once we've imported Seaborn, most visualizations are as simple as calling the function for the plot we want, and passing in the data and necessary parameters. \u003c/p\u003e\n\n\u003cp\u003eThe main parameter you'll need to specify is \u003ccode\u003edata\u003c/code\u003e. This would be where you pass in your DataFrame. Some plots, such as a boxplot, don't need more than that--Seaborn can usually figure the rest out on its own (depending on the shape and complexity of your data). For bivariate plots that show the relationship between two different columns, you'll need to specify which column should be used for the x-axis and which should be used for the y-axis. \u003c/p\u003e\n\n\u003cp\u003eLet's look at some examples from the Seaborn documentation.\u003c/p\u003e\n\n\u003ch3\u003eSimple Univariate Boxplot\u003c/h3\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003eimport seaborn as sns\n\ntips = sns.load_dataset('tips') # Seaborn comes prepackaged with several different datasets that are great for visualizing!\n\nboxplot = sns.boxplot(data=tips[\"total_bill\"])\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-seaborn/master/images/boxplot-1.png\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eBoxplot Grouped by Categorical Variable\u003c/h3\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003esns.boxplot(x=\"day\", y=\"total_bill\", data=tips)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-seaborn/master/images/boxplot-2.png\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eMore Complex Boxplot with Nest Grouping of Categorical Variables\u003c/h3\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003esns.boxplot(x=\"day\", y=\"total_bill\", hue=\"smoker\", data=tips, palette=\"Set3\")\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-seaborn/master/images/boxplot-3.png\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eRegression Plots\u003c/h2\u003e\n\n\u003cp\u003eOne of the coolest features of Seaborn is the ability to create complex plots like \u003cstrong\u003e\u003cem\u003eRegression Plots\u003c/em\u003e\u003c/strong\u003e, which automatically perform regression and fit a line to your data. We'll learn to create these ourselves in the next lab--as you'll see, it's quite simple!\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-seaborn/master/images/regression.png\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned all about Seaborn!\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003e\n\u003c/code\u003e\u003c/pre\u003e","exportId":"seaborn"},{"id":434483,"title":"Seaborn - Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-seaborn-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-seaborn-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-seaborn-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll get some practice working with a second, more advanced visualization library, \u003cstrong\u003e\u003cem\u003eSeaborn\u003c/em\u003e\u003c/strong\u003e!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eConstruct plots with Seaborn using its pre-built functionality\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g17b7b0ae11f05d7dfd06ca8d7549b11a"},{"id":434484,"title":"Data Visualization - Cumulative Lab","type":"Assignment","indent":0,"locked":false,"submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_mark_done","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-viz-cumulative-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz-cumulative-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz-cumulative-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou've completed the data visualization section — excellent work. Now we're going to do some rudimentary analysis of Shakespeare's classic play: Macbeth! You will get practice working with lists and dictionaries, conditionals, visualizing data, and thinking analytically about data.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eApply string methods to make changes to a string\u003c/li\u003e\n\u003cli\u003eUse a \u003ccode\u003efor\u003c/code\u003e loop to iterate over a collection\u003c/li\u003e\n\u003cli\u003eAssign values in a dictionary\u003c/li\u003e\n\u003cli\u003eUse data visualizations to present your findings\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gb6c067d136f85be3427acc65fdbe885c"}]},{"id":45015,"name":"Assessment","status":"completed","unlockDate":null,"prereqs":[45005,45007,45009,45012],"requirement":"one","sequential":false,"exportId":"g99c6aec82e0652df15bd8d2a64ce3ab2","items":[{"id":434485,"title":"Prep Post-Test","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"gf70bb672fb06e1d7b2cbb4b8832aaa06","questionCount":21,"timeLimit":null,"attempts":3,"graded":true,"pointsPossible":21.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003ch3\u003eIntroduction\u003c/h3\u003e\n\u003cp data-renderer-start-pos=\"865\"\u003eThis post test is only required for enrolled students to complete. It\u0026nbsp;is designed to help you and your instructors check your understanding of the material prior to starting the program. It will unlock when you have completed enough of the lessons in previous sections.\u003c/p\u003e\n\u003ch3\u003eTiming\u003c/h3\u003e\n\u003cp\u003eThis is not a timed test, but it is intended to be taken in one sitting. We don't guarantee that Canvas will keep track of your progress if, for example, you leave the quiz open overnight. Your instructors will be able to see how long it took you to complete the assessment, but you want to prioritize thinking carefully about your answers rather than finishing as quickly as possible.\u003c/p\u003e\n\u003cp\u003eYou have to complete this test with \u003cstrong data-renderer-mark=\"true\"\u003ea score of at least 80%\u003c/strong\u003e\u0026nbsp;by the \u003cstrong data-renderer-mark=\"true\"\u003eenrollment deadline\u003c/strong\u003e. You can take the test up to 3 times.\u003c/p\u003e\n\u003ch3\u003eAcademic Honesty\u003c/h3\u003e\n\u003cp\u003eThis multiple-choice assessment is \u003cstrong\u003eopen book\u0026nbsp;\u003c/strong\u003ebut should be completed\u003cstrong\u003e\u0026nbsp;individually, without assistance\u003c/strong\u003e. The goal is ensuring that we have an accurate assessment of your ability to use the concepts and techniques covered in the prep.\u003c/p\u003e\n\u003ch4\u003e\"Do\"s:\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eRead each question and all answer options carefully.\u003c/li\u003e\n\u003cli\u003eRefer back to \u003cstrong\u003elessons and labs\u003c/strong\u003e you completed in the pre-work. (You can open multiple tabs of Canvas at once, keeping the assessment open while looking up the content.)\u003c/li\u003e\n\u003cli\u003eRefer back to any \u003cstrong\u003enotes\u003c/strong\u003e you took while completing the lessons and labs.\u003c/li\u003e\n\u003cli\u003eRefer to the \u003ca class=\"instructure_file_link inline_disabled\" href=\"https://docs.python.org/3/library/index.html\" target=\"_blank\"\u003ePython\u003cstrong\u003e documentation\u003c/strong\u003e\u003c/a\u003e. In particular, (1) \u003ca class=\"instructure_file_link inline_disabled\" href=\"https://docs.python.org/3/library/functions.html\" target=\"_blank\"\u003ebuilt-in functions documentation\u003c/a\u003e, (2) \u003ca class=\"instructure_file_link inline_disabled\" href=\"https://docs.python.org/3/library/stdtypes.html\" target=\"_blank\"\u003ebuilt-in types documentation\u003c/a\u003e, and (3) \u003ca class=\"instructure_file_link inline_disabled\" href=\"https://docs.python.org/3/library/string.html\" target=\"_blank\"\u003estring documentation\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4\u003e\"Don't\"s:\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eDon't ask anyone for help \u003c/strong\u003ewith answering the questions. This includes friends, family, Flatiron School admissions reps, online forums, etc.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDon't\u003c/strong\u003e \u003cstrong\u003euse a Jupyter Notebook or other Python tool\u003c/strong\u003e to answer the questions. In many cases you can find the correct answer by \"brute force\" entering all of the answer choices, but this doesn't tell us whether \u003cem\u003eyou\u003c/em\u003e will actually be able to read and write Python code.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDon't use Google\u003c/strong\u003e (or another search engine) to look up answers online. Everything you need is in the provided materials + the Python documentation. If you Google for the answer instead of remembering it or looking it up in the provided materials, it diminishes the strength of the assessment, and it teaches your brain that you don't actually need to know the information — that you can always just look it up.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eYou are on your honor!\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e","exportId":"ge3db7273e812457ff61904186f65fe1d"}]},{"id":45016,"name":"The End!","status":"completed","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g84be98ad1cd3fdc3cd7fe110f21bc58f","items":[{"id":434486,"title":"You Have Completed the Prep!","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":true,"content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-prework-thankyou\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-prework-thankyou/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eThank you for sticking with it! We're excited for you to start.\u003c/p\u003e\n\u003ch2\u003eNext Steps\u003c/h2\u003e\n\u003cp\u003eWe do not expect you to complete any more preparation work before starting the main Data Science program. Please contact your Admissions representative if you're uncertain about start dates or anything else related to getting started.\u003c/p\u003e\n\u003ch2\u003eSupplemental Resources\u003c/h2\u003e\n\u003cp\u003eIf you have additional time or feel that you need additional practice or preparation before the Data Science program starts, we have collected links to some optional supplemental third-party resources below. \u003cstrong\u003e\u003cem\u003eYou are not required to utilize any of these resources, and in general if you have limited time we recommend reviewing the provided prep rather than additional readings or practice.\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003ch3\u003ePython\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003ePython Essentials and Python Loops and Functions\u003c/strong\u003e: The free \u003ca href=\"https://www.kaggle.com/learn/python\"\u003ePython course on Kaggle\u003c/a\u003e covers a lot of the same material we covered in the Python part of the prep, if you want additional practice\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eData Visualization\u003c/strong\u003e: The Matplotlib website has a useful \u003ca href=\"https://matplotlib.org/3.3.3/tutorials/index.html\"\u003etutorials page\u003c/a\u003e, and Kaggle offers a free \u003ca href=\"https://www.kaggle.com/learn/data-visualization\"\u003edata visualization course\u003c/a\u003e that gets into more depth than what we cover\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePandas\u003c/strong\u003e: Pandas is a library for data manipulation that we used in some brief examples in the prep but didn't introduce in depth. We'll be using it a lot in the program, so you might want to look at the \u003ca href=\"https://pandas.pydata.org/pandas-docs/stable/user_guide/10min.html\"\u003euser guide on the pandas website\u003c/a\u003e or Kaggle's free \u003ca href=\"https://www.kaggle.com/learn/pandas\"\u003epandas course\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eStatistics\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eOverview\u003c/strong\u003e: This \u003ca href=\"https://towardsdatascience.com/the-5-basic-statistics-concepts-data-scientists-need-to-know-2c96740377ae\"\u003eblog post\u003c/a\u003e has a good introduction to the statistics concepts you'll need to know as a data scientist\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eProbability\u003c/strong\u003e: Brilliant offers free \u003ca href=\"https://brilliant.org/courses/probability/\"\u003eintro to probability lessons\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eStatistics\u003c/strong\u003e: If you're interested in working through a complete free statistics course, \u003ca href=\"https://www.khanacademy.org/math/statistics-probability\"\u003eKhan Academy\u003c/a\u003e offers one that we recommend\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinear Algebra\u003c/h3\u003e\n\u003cp\u003eThis topic was not introduced in the prep and will be covered in the main course, but some students prefer to study in advance if they have not been exposed to it previously.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eOverview\u003c/strong\u003e: This \u003ca href=\"https://www.analyticsvidhya.com/blog/2017/05/comprehensive-guide-to-linear-algebra/\"\u003eblog post\u003c/a\u003e has a good introduction to the linear algebra concepts you'll need to know as a data scientist\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eThe Essence of Linear Algebra\u003c/strong\u003e: This \u003ca href=\"https://youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab\"\u003eYouTube playlist\u003c/a\u003e from 3Blue1Brown has great visual explanations of the geometric concepts behind linear algebra\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eCalculus\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eIntroduction\u003c/strong\u003e: Brilliant offers free \u003ca href=\"https://brilliant.org/courses/multivariable-calculus/\"\u003emultivariable calculus lessons\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eThe Essence of Calculus\u003c/strong\u003e: Similar to the linear algebra playlist linked above, this \u003ca href=\"https://youtube.com/playlist?list=PLZHQObOWTQDMsr9K-rj53DwVRMYO3t5Yr\"\u003eYouTube playlist\u003c/a\u003e from 3Blue1Brown shows the geometric intuition behind calculus concepts\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCalculus\u003c/strong\u003e: If you're interested in working through a complete free calculus course, \u003ca href=\"https://www.khanacademy.org/math/multivariable-calculus\"\u003eKhan Academy\u003c/a\u003e offers one that we recommend\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eCommand Line / Terminal\u003c/h3\u003e\n\u003cp\u003eThis topic was not introduced in the prep and will be covered in the main course, but some students prefer to study in advance if they have not been exposed to it previously.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eCommand Line Course\u003c/strong\u003e: OpenClassrooms offers a free \u003ca href=\"https://openclassrooms.com/en/courses/4614926-learn-the-command-line-in-terminal\"\u003eshort course on the command line\u003c/a\u003e that is designed for beginners\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCommand Line Game\u003c/strong\u003e: If you would rather learn by playing a game, this \u003ca href=\"https://web.mit.edu/mprat/Public/web/Terminus/Web/main.html\"\u003eterminal game from MIT\u003c/a\u003e is a good choice\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eStructured Query Language (SQL)\u003c/h3\u003e\n\u003cp\u003eThis topic was not introduced in the prep and will be covered in the main course, but some students prefer to study in advance if they have not been exposed to it previously.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eSQL Course\u003c/strong\u003e: Both \u003ca href=\"https://openclassrooms.com/en/courses/2071486-retrieve-data-using-sql\"\u003eOpenClassrooms\u003c/a\u003e and \u003ca href=\"https://www.khanacademy.org/computing/computer-programming/sql\"\u003eKhan Academy\u003c/a\u003e offer intro to SQL courses\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eThank You!\u003c/h2\u003e\n\u003cp\u003eWe hope you have enjoyed your first experience with the technical topics and curriculum delivery tools we use at Flatiron School. We're excited to see you on your first day!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\n\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" title=\"Thumbs up!\" alt=\"thumbs up\" data-repository=\"dsc-prework-thankyou\"\u003e\u003cimg id=\"thumbs-down\" title=\"Thumbs down!\" alt=\"thumbs down\" data-repository=\"dsc-prework-thankyou\"\u003e\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-prework-thankyou/issues/new\"\u003eTell us here!\u003c/a\u003e\u003c/h5\u003e\n\u003c/footer\u003e","exportId":"you-have-completed-the-prep"}]}],"pages":[{"exportId":"welcome-to-prep","title":"Welcome to Prep!","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-prework-intro\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-prework-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-prework-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-prework-intro\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-prework-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-prework-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eWelcome to Flatiron School! We're thrilled that you've joined our community of learners!\u003c/p\u003e\n\u003cp data-renderer-start-pos=\"236\"\u003ePrep is required to start at Flatiron School and students have access to this useful material even prior to applying. Please note some resources mentioned throughout are only available to enrolled students, such as community and technical coach support.\u003c/p\u003e\n\u003cp data-renderer-start-pos=\"496\"\u003eIf you’re researching the programs and not yet enrolled, keep in mind that this is the same pre-course work enrolled students are working through. Some of this information will seem granular, just work through as much as you can and know that you will have time to revisit content should you go through our admissions process.\u003c/p\u003e\n\u003ch2\u003eGoals of Prep\u003c/h2\u003e\n\u003cp\u003eWe've set up a \"prep\" course for you to complete before your first day of the Data Science bootcamp.\u003c/p\u003e\n\u003cp\u003eThis material is intended to help you prepare for the program, with an introduction to both the \u003cstrong\u003etechnical content\u003c/strong\u003e and the \u003cstrong\u003edelivery format\u003c/strong\u003e you'll be using at Flatiron School.\u003c/p\u003e\n\u003ch3\u003eTechnical Content\u003c/h3\u003e\n\u003cp\u003eMany people in our program have already spent some time dabbling with coding and data analysis by using the amazing and plentiful resources all around the internet. In developing the content here, though, we make no assumptions about background. This prep content is designed for those who have analytic ability but not any specific coding skill. Lessons build off each other, providing the tools and concepts necessary to complete future lessons.\u003c/p\u003e\n\u003cp\u003eWhat we don't do, however, is dumb anything down. We believe in your infinite capacity to learn. We do our best to offer a curriculum that is clear, digestible, engaging, challenging, and deep. The curriculum you'll encounter at Flatiron School is rigorous and will demand that you be patient, resourceful, and gritty.\u003c/p\u003e\n\u003cp\u003eFrom the beginning, we'll make sure you have the support and tools you need; you just need to bring the grit.\u003c/p\u003e\n\u003cp\u003eThe prep course focuses on foundational content that comes up again and again in the Data Science program:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePython fundamentals\u003c/li\u003e\n\u003cli\u003eDescriptive statistics\u003c/li\u003e\n\u003cli\u003ePython libraries (NumPy and Matplotlib) for numerical computing and data visualization\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIf you're getting stuck, keep in mind that we will also review these topics in the first week or so of the Data Science program. Make sure you keep notes on what was confusing, and prepare to ask questions when the program starts.\u003c/p\u003e\n\u003ch3\u003eDelivery Format\u003c/h3\u003e\n\u003cp\u003eIn addition to covering technical topics, the prep is also intended to help you orient yourself to our curriculum delivery format.\u003c/p\u003e\n\u003cp\u003eIn general, think of the online material as the \"textbook\" that you'll read before lectures and use to practice your Data Science skills.\u003c/p\u003e\n\u003cp\u003eTypically when learning something about code, you have to first deal with configuring your computer, getting it set up to work with the programming language you're writing in. This is often referred to as \u003cem\u003esetting up your environment\u003c/em\u003e. You will have to do this eventually, but for now, \u003cstrong\u003eCanvas + IllumiDesk\u003c/strong\u003e will provide the environment you need to get started. We will give you a place to code within the browser; you get to focus on coding, not setup.\u003c/p\u003e\n\u003cp\u003eThe next lesson will cover how to use Canvas + IllumiDesk, including the different types of lessons, how to open lessons in IllumiDesk, and how to view solution code.\u003c/p\u003e\n\u003cp\u003eFor now, all you need to know is that every time you complete a lesson on Canvas — including this one! — you should click the \"Mark as done\" button on that page, so we can track your progress.\u003c/p\u003e\n\u003cp\u003eBefore clicking, the button should look like this:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://github.com/learn-co-curriculum/dsc-prework-intro/raw/b3feece3ce125ec15651b775bec2512afc72d276/images/mark_as_done.png\" alt=\"mark as done button\"\u003e\u003c/p\u003e\n\u003cp\u003eAfter clicking, it should look like this:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://github.com/learn-co-curriculum/dsc-prework-intro/raw/b3feece3ce125ec15651b775bec2512afc72d276/images/done.png\" alt=\"done button\"\u003e\u003c/p\u003e\n\u003ch2\u003ePrep Expectations for Students\u003c/h2\u003e\n\u003ch3\u003eRequired Lesson Completion\u003c/h3\u003e\n\u003cp\u003ePrep is the first \u003cstrong\u003erequired\u003c/strong\u003e element of our data science curriculum. You are expected to complete, at minimum, all lessons through the end of the Statistical Measures section.\u003c/p\u003e\n\u003cp\u003eThe way we \u003cstrong\u003emeasure\u003c/strong\u003e lesson completion is based on you \u003cstrong\u003eclicking the \"Mark as done\" button\u003c/strong\u003e (pictured above) for each lesson. Don't worry too much about understanding 100% of the lesson content, and feel free to click the button once you've made a reasonable attempt — you can always come back and re-read it later.\u003c/p\u003e\n\u003cp\u003eThe time you spend on each lesson (reading content, writing code, etc.) is up to you — in theory, you could click through the entire prep course and never actually do any of the lessons. But you should be aware, when we ask alumni and current students what they wish they had done differently, one of the most common answers is not investing enough time in these foundational skills!\u003c/p\u003e\n\u003ch3\u003ePrep Pre-Test\u003c/h3\u003e\n\u003cp\u003eBefore you embark on your learning journey, we will ask you to complete our Prep Pre-Test. This Pre-Test is being used as a benchmark for your learning during the pre-work. How much you score on the Pre-Test doesn't matter, you don't even have to pass the pre-test. The Pre-Test is just a way for us to go back and look at how much learning is happening during the Prep. You will not see the answers to the questions or your score once you've completed the Pre-Test, because it is not important for continuing. What \u003cem\u003eis\u003c/em\u003e important, however, is how much you score on the \u003cstrong\u003ePrep Post-Test\u003c/strong\u003e after completing the Prep.\u003c/p\u003e\n\u003ch3\u003ePrep Post-Test\u003c/h3\u003e\n\u003cp\u003eOnce you have completed all lessons in the Statistical Measures section (as well as all lessons that come before it), the Prep Post-Test section with the Post-Test quiz will unlock.\u0026nbsp;\u003c/p\u003e\n\u003cp\u003eThe Post-Test is very similar to the Pre-Test, as it is testing for the same learning goals. The goal of the post-test is checking your understanding of the material, for both you and your Flatiron School instructors. After taking it, you will be able to see whether your answers were correct, along with explanations for each question.\u0026nbsp;\u003c/p\u003e\n\u003cp\u003eYou are required to \u003cstrong\u003escore 80% on the post-test prior to starting the program\u003c/strong\u003e. The post-test is a diagnostic assessment that can help you understand what to study during the time before the program starts, and to help Flatiron School understand what kind of support you will need.\u003c/p\u003e\n\u003cp\u003eNote: While you are not \u003cem\u003erequired\u003c/em\u003e to complete the Data Visualization section prior to taking the assessment, the assessment will include some questions about data visualization. If this is a new topic for you, or you're feeling \"rusty\", we encourage you to complete all sections before taking the post-test.\u003c/p\u003e\n\u003ch4\u003eTroubleshooting Post-Test Access\u003c/h4\u003e\n\u003cp\u003eIf you think that the post-test should be unlocked but are having trouble accessing it, double-check that you have completed all of the prerequisites. In other words, the Introduction, Python Essentials, Python Loops \u0026amp; Functions, and Statistical Measures sections should all look like this:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://github.com/learn-co-curriculum/dsc-prework-intro/raw/b3feece3ce125ec15651b775bec2512afc72d276/images/section_completed.png\" alt=\"section completed\"\u003e\u003c/p\u003e\n\u003cp\u003eIf you don't see the green check mark, it means you haven't completed that section. In order to access the post-test, make sure you have marked everything as done.\u003c/p\u003e\n\u003cp\u003eIf this doesn't resolve your issue, you will be able to take the post-test on Day 1 of the program, with teacher troubleshooting support.\u003c/p\u003e\n\u003ch2\u003eLearning Methods\u003c/h2\u003e\n\u003cp\u003eHere are some best practices to follow when working through this material:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eWork through each section, \u003cstrong\u003eenough that you can remember the material\u003c/strong\u003e, before moving on to the next section. \u003cstrong\u003eThis may require repeating specific labs\u003c/strong\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSay out loud what each piece of code is doing. Part of learning to code is seeing the narrative of what is going on instead of just lines of specific instructions.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFor example, for \u003ccode\u003ex = [5,6,7]\u003c/code\u003e you would say, out loud, \"a list of integers from 5 to 7 is assigned to a variable named 'x' \"\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCheck the solutions only when you're done with the lab. Remember, getting stuck and working through individual pieces of code and concepts is part of the process.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you can't figure out why your code isn't working, look back to the section of prep that teaches that code, or try googling for information about the specific syntax you're trying to use. (\"90% of programming is googling StackOverflow\").\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you get completely stuck and need to check the solutions to move forward, just look at the specific solution for the piece you got stuck on, instead of reading the solutions for the entire lab.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn coding in general and Python specifically, there are lots of ways to accomplish any given task. It is a common occurrence to encounter code in the solutions that accomplishes the same result as the code you wrote but in a different way. Your code isn't necessarily wrong just because it's different from the solution! Consider why the solution code might be written differently than your code, even though it accomplishes the same thing.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eRecap\u003c/h2\u003e\n\u003cp\u003eIn this prep course you'll be introduced to some of the technical content and the delivery format used in the main Data Science course.\u003c/p\u003e\n\u003cp\u003eNot only does completing the prep allow for an easier adjustment to the first few weeks, it also provides a solid foundation that allows better progress through the more-challenging material later on in the bootcamp, and ultimately to have a better capstone project to show to potential employers.\u003c/p\u003e\n\u003cp\u003eBe intentional with your strategy as you move through the material, particularly how you use the solution code. We'll explain how to access that solution code in the next lesson.\u003c/p\u003e\n\u003cp\u003eEnjoy the prep, and good luck!\u003c/p\u003e","frontPage":false},{"exportId":"the-structure-of-this-course","title":"The Structure of This Course","type":"WikiPage","content":"\u003ch1\u003eThe Structure of This Course\u003c/h1\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson you will learn about how this course is structured in Canvas. Additionally, you will be introduced to Jupyter Notebooks and what they are for the very first time!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand the difference between a Canvas Assignment and Page\u003c/li\u003e\n\u003cli\u003eUnderstand how Pages host Lessons and Assignments host Code Lessons and Labs\u003c/li\u003e\n\u003cli\u003eGet introduced to Jupyter Notebooks\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSetting the Stage\u003c/h2\u003e\n\n\u003cp\u003eThere are two main types of materials in this course: \u003cstrong\u003ePages\u003c/strong\u003e and \u003cstrong\u003eAssignments\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eYou can recognize a \u003cstrong\u003ePage\u003c/strong\u003e by the following icon:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course-prework/master/images/page.png\" width=\"70\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd an \u003cstrong\u003eAssignment\u003c/strong\u003e by the following icon:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course-prework/master/images/assignment.png\" width=\"70\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003ePages\u003c/strong\u003e contain \u003cem\u003eLessons\u003c/em\u003e, and these lessons are mainly about giving you tons of information to absorb. In these lessons you'll be reading text and sometimes watching videos (note that what you're reading now is a Page). There is really not much more about it, all you need to do is to read them in Canvas. Enjoy!\u003c/p\u003e\n\n\u003cp\u003eOften, you'll be required to write code. This is where \u003cstrong\u003eAssignments\u003c/strong\u003e come in. Assignments come in two forms:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cem\u003eCode Lessons\u003c/em\u003e: Code Lessons require you to be able to run code, but you will not be instructed to write code yourself. Code Lessons are very much like Lessons, but there is an interactive component to it as you'll be running some code that was provided for you.\u003c/li\u003e\n\u003cli\u003e\u003cem\u003eLabs\u003c/em\u003e: Labs ask you to write code yourself! We provide example solutions for each lab to help you if you get stuck.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eYou can easily tell if an assignment is a \u003cem\u003eCode Lesson\u003c/em\u003e or a \u003cem\u003eLab\u003c/em\u003e from the title and the organization. If the title ends with \"Lab\", it's a lab. Additionally, Labs are indented. In the image below, you see a Code Lesson followed by a Lab.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course-prework/master/images/labs.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eNote that there is a third type of content that hasn't been discussed: a \u003cstrong\u003eQuiz\u003c/strong\u003e. Quizzes are less prevalent than Assignments or Pages, but they're important, as they contain questions for you to answer to reinforce your learning!\u003c/p\u003e\n\n\u003cp\u003eThe quiz icon looks like this:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course-prework/master/images/quiz.png\" width=\"70\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eAssignments: Meet IllumiDesk!\u003c/h2\u003e\n\n\u003cp\u003eWith any assignment that you open, this is what you'll see:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course-prework/master/images/illumidesk.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn order to go to the assignment, you need to load the assignment in a new window by clicking on the grey bar:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course-prework/master/images/illumidesk_4.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eClicking on the grey bar will take you into IllumiDesk to work on a \u003cstrong\u003eJupyter Notebook\u003c/strong\u003e, a document-like application that allows you to do live coding!\u003c/p\u003e\n\n\u003cp\u003eThis is what a Jupyter Notebook looks like:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course-prework/master/images/jupyter.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eLab Solutions\u003c/h2\u003e\n\n\u003cp\u003eWe provide solutions for each Lab to help you get unstuck when all else fails. Learning how to persevere and solve coding problems is one of the most important skills you will learn as a data scientist! That said, sometimes it's not worth your time or energy to keep trying to solve a problem, especially if the problem ends up being something minor like a typo. In general, if you're not making any progress with a Lab after 10-20 minutes then you should reach out to peers for help. If that doesn't get you unstuck, \u003cem\u003ethen\u003c/em\u003e look at a solution. Read just enough of the solution to get unstuck, then continue on your own.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eBe careful about when \u0026amp; how you use these!\u003c/strong\u003e You may be tempted to go look at the solution immediately when you don't know what to do or your code isn't working.  You won't always be able to look up a correct solution to problems you encounter during a technical interview or on the job, so don't let yourself fall into the habit.\u003c/p\u003e\n\n\u003cp\u003eTo access a Lab solution, click the GitHub icon to go to the Lab's GitHub repository.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course-prework/master/images/github_lab_repo.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eFrom the GitHub repository, click the branch dropdown to switch to the \u003ccode\u003esolution\u003c/code\u003e branch.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-structure-of-this-course-prework/master/images/github_branches.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eGreat - enough \u003cem\u003etalking\u003c/em\u003e, let's dive right into your first Jupyter Notebook in the next Assignment!\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you learned about how Assignments and Pages are the two main building blocks of the Data Science Program in Canvas, hosting Lessons, Code Lessons and Labs. Next up, we'll explore our first Code Lesson in a Jupyter Notebook!\u003c/p\u003e","frontPage":false},{"exportId":"seaborn","title":"Seaborn","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-seaborn\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-seaborn\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-seaborn/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll be introduced to a second, more powerful data visualization library, \u003cstrong\u003e\u003cem\u003eSeaborn\u003c/em\u003e\u003c/strong\u003e!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eConstruct plots with Seaborn using its pre-built functionality\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhat is Seaborn?\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://seaborn.pydata.org/\"\u003eSeaborn\u003c/a\u003e is a Data Visualization library that makes it really, really easy to create professional-quality statistical visualizations with only one or two lines of code. Seaborn also makes it really easy to modify the \u003cem\u003eaesthetics\u003c/em\u003e of a plot, so that we can make sure all of our visualizations are eye-catching and easy to interpret, which isn't always the case with Matplotlib. \u003c/p\u003e\n\n\u003ch2\u003eSeaborn and Matplotlib\u003c/h2\u003e\n\n\u003cp\u003eIf seaborn is so awesome, you may be wondering why we bothered teaching you Matplotlib at all! The answer is that Seaborn is not a competing library--it's actually built on top of Matplotlib! Whereas Matplotlib provides the basic functionality for creating plots and filling them with different kinds of shapes and colors, Seaborn takes this functionality a step farther by providing a bunch of ready-made mathematical visualizations that are commonly used in Data Science. Best of all, Seaborn is written to be simple to use and easy to understand, so most visualizations only take 1 or 2 lines of code! \u003c/p\u003e\n\n\u003cp\u003eThe plot on the left is a standard plot from Matplotlib. The plot on the right is from Seaborn. What a difference!\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-seaborn/master/images/ugly_plot.png\"\u003e\u003c/th\u003e\n\u003cth\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-seaborn/master/images/pretty_plot.png\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch3\u003eWhen to Use Each\u003c/h3\u003e\n\n\u003cp\u003eWhen you're just performing some basic EDA and exploring a dataset, there are times when matplotlib may be most useful to you. If that's the case, don't be afraid to stick to matplotlib. However, Seaborn shines in two particular areas--providing ready-made plots for statistical analysis, and making beautiful plots for presenting to others.  Perhaps, during your EDA, you want to see the regression line between two features. If that's the case, Seaborn should be your choice, because it only takes a single line of code, whereas Matplotlib would be more complicated. \u003c/p\u003e\n\n\u003cp\u003eWhen it comes to presentations, it is highly recommended to use Seaborn. Whether in a PowerPoint Presentation or just a Jupyter Notebook you'll be making publicly available, Seaborn visualizations are easier on the eyes, and worth the time.  As a rule of thumb, if you plan on showing the plot to other people, consider using Seaborn. \u003c/p\u003e\n\n\u003ch2\u003eBasic Plots with Seaborn\u003c/h2\u003e\n\n\u003cp\u003eLike any python library, the first thing we have to do to use Seaborn is to import it. The standard alias for Seaborn is \u003ccode\u003esns\u003c/code\u003e. Once we've imported Seaborn, most visualizations are as simple as calling the function for the plot we want, and passing in the data and necessary parameters. \u003c/p\u003e\n\n\u003cp\u003eThe main parameter you'll need to specify is \u003ccode\u003edata\u003c/code\u003e. This would be where you pass in your DataFrame. Some plots, such as a boxplot, don't need more than that--Seaborn can usually figure the rest out on its own (depending on the shape and complexity of your data). For bivariate plots that show the relationship between two different columns, you'll need to specify which column should be used for the x-axis and which should be used for the y-axis. \u003c/p\u003e\n\n\u003cp\u003eLet's look at some examples from the Seaborn documentation.\u003c/p\u003e\n\n\u003ch3\u003eSimple Univariate Boxplot\u003c/h3\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003eimport seaborn as sns\n\ntips = sns.load_dataset('tips') # Seaborn comes prepackaged with several different datasets that are great for visualizing!\n\nboxplot = sns.boxplot(data=tips[\"total_bill\"])\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-seaborn/master/images/boxplot-1.png\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eBoxplot Grouped by Categorical Variable\u003c/h3\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003esns.boxplot(x=\"day\", y=\"total_bill\", data=tips)\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-seaborn/master/images/boxplot-2.png\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eMore Complex Boxplot with Nest Grouping of Categorical Variables\u003c/h3\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003esns.boxplot(x=\"day\", y=\"total_bill\", hue=\"smoker\", data=tips, palette=\"Set3\")\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-seaborn/master/images/boxplot-3.png\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eRegression Plots\u003c/h2\u003e\n\n\u003cp\u003eOne of the coolest features of Seaborn is the ability to create complex plots like \u003cstrong\u003e\u003cem\u003eRegression Plots\u003c/em\u003e\u003c/strong\u003e, which automatically perform regression and fit a line to your data. We'll learn to create these ourselves in the next lab--as you'll see, it's quite simple!\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-seaborn/master/images/regression.png\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned all about Seaborn!\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"python\"\u003e\n\u003c/code\u003e\u003c/pre\u003e","frontPage":false},{"exportId":"you-have-completed-the-prep","title":"You Have Completed the Prep!","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-prework-thankyou\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-prework-thankyou/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eThank you for sticking with it! We're excited for you to start.\u003c/p\u003e\n\u003ch2\u003eNext Steps\u003c/h2\u003e\n\u003cp\u003eWe do not expect you to complete any more preparation work before starting the main Data Science program. Please contact your Admissions representative if you're uncertain about start dates or anything else related to getting started.\u003c/p\u003e\n\u003ch2\u003eSupplemental Resources\u003c/h2\u003e\n\u003cp\u003eIf you have additional time or feel that you need additional practice or preparation before the Data Science program starts, we have collected links to some optional supplemental third-party resources below. \u003cstrong\u003e\u003cem\u003eYou are not required to utilize any of these resources, and in general if you have limited time we recommend reviewing the provided prep rather than additional readings or practice.\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003ch3\u003ePython\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003ePython Essentials and Python Loops and Functions\u003c/strong\u003e: The free \u003ca href=\"https://www.kaggle.com/learn/python\"\u003ePython course on Kaggle\u003c/a\u003e covers a lot of the same material we covered in the Python part of the prep, if you want additional practice\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eData Visualization\u003c/strong\u003e: The Matplotlib website has a useful \u003ca href=\"https://matplotlib.org/3.3.3/tutorials/index.html\"\u003etutorials page\u003c/a\u003e, and Kaggle offers a free \u003ca href=\"https://www.kaggle.com/learn/data-visualization\"\u003edata visualization course\u003c/a\u003e that gets into more depth than what we cover\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePandas\u003c/strong\u003e: Pandas is a library for data manipulation that we used in some brief examples in the prep but didn't introduce in depth. We'll be using it a lot in the program, so you might want to look at the \u003ca href=\"https://pandas.pydata.org/pandas-docs/stable/user_guide/10min.html\"\u003euser guide on the pandas website\u003c/a\u003e or Kaggle's free \u003ca href=\"https://www.kaggle.com/learn/pandas\"\u003epandas course\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eStatistics\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eOverview\u003c/strong\u003e: This \u003ca href=\"https://towardsdatascience.com/the-5-basic-statistics-concepts-data-scientists-need-to-know-2c96740377ae\"\u003eblog post\u003c/a\u003e has a good introduction to the statistics concepts you'll need to know as a data scientist\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eProbability\u003c/strong\u003e: Brilliant offers free \u003ca href=\"https://brilliant.org/courses/probability/\"\u003eintro to probability lessons\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eStatistics\u003c/strong\u003e: If you're interested in working through a complete free statistics course, \u003ca href=\"https://www.khanacademy.org/math/statistics-probability\"\u003eKhan Academy\u003c/a\u003e offers one that we recommend\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinear Algebra\u003c/h3\u003e\n\u003cp\u003eThis topic was not introduced in the prep and will be covered in the main course, but some students prefer to study in advance if they have not been exposed to it previously.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eOverview\u003c/strong\u003e: This \u003ca href=\"https://www.analyticsvidhya.com/blog/2017/05/comprehensive-guide-to-linear-algebra/\"\u003eblog post\u003c/a\u003e has a good introduction to the linear algebra concepts you'll need to know as a data scientist\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eThe Essence of Linear Algebra\u003c/strong\u003e: This \u003ca href=\"https://youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab\"\u003eYouTube playlist\u003c/a\u003e from 3Blue1Brown has great visual explanations of the geometric concepts behind linear algebra\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eCalculus\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eIntroduction\u003c/strong\u003e: Brilliant offers free \u003ca href=\"https://brilliant.org/courses/multivariable-calculus/\"\u003emultivariable calculus lessons\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eThe Essence of Calculus\u003c/strong\u003e: Similar to the linear algebra playlist linked above, this \u003ca href=\"https://youtube.com/playlist?list=PLZHQObOWTQDMsr9K-rj53DwVRMYO3t5Yr\"\u003eYouTube playlist\u003c/a\u003e from 3Blue1Brown shows the geometric intuition behind calculus concepts\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCalculus\u003c/strong\u003e: If you're interested in working through a complete free calculus course, \u003ca href=\"https://www.khanacademy.org/math/multivariable-calculus\"\u003eKhan Academy\u003c/a\u003e offers one that we recommend\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eCommand Line / Terminal\u003c/h3\u003e\n\u003cp\u003eThis topic was not introduced in the prep and will be covered in the main course, but some students prefer to study in advance if they have not been exposed to it previously.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eCommand Line Course\u003c/strong\u003e: OpenClassrooms offers a free \u003ca href=\"https://openclassrooms.com/en/courses/4614926-learn-the-command-line-in-terminal\"\u003eshort course on the command line\u003c/a\u003e that is designed for beginners\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCommand Line Game\u003c/strong\u003e: If you would rather learn by playing a game, this \u003ca href=\"https://web.mit.edu/mprat/Public/web/Terminus/Web/main.html\"\u003eterminal game from MIT\u003c/a\u003e is a good choice\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eStructured Query Language (SQL)\u003c/h3\u003e\n\u003cp\u003eThis topic was not introduced in the prep and will be covered in the main course, but some students prefer to study in advance if they have not been exposed to it previously.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eSQL Course\u003c/strong\u003e: Both \u003ca href=\"https://openclassrooms.com/en/courses/2071486-retrieve-data-using-sql\"\u003eOpenClassrooms\u003c/a\u003e and \u003ca href=\"https://www.khanacademy.org/computing/computer-programming/sql\"\u003eKhan Academy\u003c/a\u003e offer intro to SQL courses\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eThank You!\u003c/h2\u003e\n\u003cp\u003eWe hope you have enjoyed your first experience with the technical topics and curriculum delivery tools we use at Flatiron School. We're excited to see you on your first day!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\n\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" title=\"Thumbs up!\" alt=\"thumbs up\" data-repository=\"dsc-prework-thankyou\"\u003e\u003cimg id=\"thumbs-down\" title=\"Thumbs down!\" alt=\"thumbs down\" data-repository=\"dsc-prework-thankyou\"\u003e\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-prework-thankyou/issues/new\"\u003eTell us here!\u003c/a\u003e\u003c/h5\u003e\n\u003c/footer\u003e","frontPage":false},{"exportId":"data-visualization-best-practices-and-common-mistakes","title":"Data Visualization - Best Practices and Common Mistakes","type":"WikiPage","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn some best practices for creating high-quality data visualizations, as well as some common mistakes to avoid!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eChoose a type of visualization that is appropriate for a given set of data\u003c/li\u003e\n\u003cli\u003eDescribe how some types of visualizations can be misleading to viewers\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCreating High-Quality Data Visualizations\u003c/h2\u003e\n\n\u003cp\u003eCreating your own data visualizations can be trickier than it looks. Not because they're hard to code, but because there are so many different stylistic choices you have to make! Most of Data Science is based in math, where there is a probably correct answer. Unfortunately, there is no \"right answer\" when it comes to building the best data visualization for a given task or project. However, there are some good rules we can follow, and some common mistakes we can avoid. The goal of this lesson is to get you thinking about both of them by looking at some real-world examples. \u003c/p\u003e\n\n\u003ch2\u003eDon't: Use a Pie Chart\u003c/h2\u003e\n\n\u003cp\u003eFrom the Wikipedia page on Pie Charts:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\"Pie charts are very widely used in the business world and the mass media. However, they have been criticized, and many experts recommend avoiding them, pointing out that research has shown it is difficult to compare different sections of a given pie chart, or to compare data across different pie charts. Pie charts can be replaced in most cases by other plots such as the bar chart, box plot or dot plots.\"\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThis is the \u003cem\u003esecond paragraph\u003c/em\u003e on the page. What does this tell us? Pie charts are such a bad choice for data visualizations that it's own Wikipedia page starts with a warning against using them!\u003c/p\u003e\n\n\u003cp\u003eSo why are Pie Charts a bad choice? The simple answer is because humans don't think in radians, and we aren't good at judging the area of a circle. For instance, take a look at the following infographic:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/bad_data_viz.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eInfographic from \u003ca href=\"https://www.vox.com/2014/8/20/6040435/als-ice-bucket-challenge-and-why-we-give-to-charity-donate\"\u003eVox\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIt takes a little while to get a feel for the information this misguided data visualization is trying to get across. It's hard to compare the different items, which is a problem, because the entire goal of this visualization is to show comparisons between the different diseases! \u003c/p\u003e\n\n\u003ch2\u003eDo: Choose the Right Tool for the Job\u003c/h2\u003e\n\n\u003cp\u003eConsider the following Pie Charts:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/piechart.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe pie charts all look pretty much the same. It's hard for us to tell the differences between them, especially when it comes to ranking the different colored sections by size in the each chart. However, when we examine the bar charts below the image,the differences in each become immediately apparent--you couldn't miss them if you tried. \u003c/p\u003e\n\n\u003cp\u003eWhen deciding what visualization to use, consider what information you're trying to communicate, and then pick the plot that communicates that information in the most obvious manner. \u003c/p\u003e\n\n\u003ch2\u003eDon't: Get Your Percentages Wrong\u003c/h2\u003e\n\n\u003cp\u003eThis one seems like an easy mistake to avoid, but it still happens all the time. Double check your math, and always double check your calculations! Nothing destroys a Data Scientist's credibility in front of a crowd like simple arithmetic errors or visualizations that don't match your numbers. \u003c/p\u003e\n\n\u003cp\u003eConsider the following infographic, and try to figure out what is wrong with it:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/new_percentages.png\" height=\"75%\" width=\"75%\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThere are two things wrong with this infographic. The first is that the percentages add up to 243%, which makes no sense. We can intuit that respondents were allowed to choose more than one category, but that's too ambiguous on its own, and doesn't tell us anything!\u003c/p\u003e\n\n\u003cp\u003eThe second issue with this visualization is that the area taken up by each colored section doesn't fit with their corresponding percentages. In a good data visualization, if 78%  of the respondents chose the category represented by purple, then 78% of the person should be purple!  Mismatches like this undermine the message of your visualization because they are confusing and ambiguous. Avoid them!\u003c/p\u003e\n\n\u003ch2\u003eDon't: Make Your Visualizations Too Busy or Unique\u003c/h2\u003e\n\n\u003cp\u003eOne of the easier mistakes to make is to make visualizations that simply have so much going on that they are almost impossible to interpret. Consider the line graph below. Take a minute and try to make sense of it.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/new_bad-time-series.png\" width=\"600\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAlmost impossible, right? Mistakes like this can be avoided by breaking information up into a series of smaller graphs, or by picking a more appropriate type of visualzation, when possible. \u003c/p\u003e\n\n\u003cp\u003eAnother big mistake is to try and create new, unique visualizations that people haven't seen before. While it may seem like a good idea to get creative, fight the urge. You don't see weird, unique stuff often for a reason--because they don't work well. Stick to formats people are used to. Switching up things to try and be unique can make your visualization confusing, or in the case below, purposefully misleading!\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/new_gun-deaths-in-FL.png\" width=\"400\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn this visualization, the author broke the common convention of having a line go up as a number goes up. Instead, the line goes down as the number of gun deaths in Florida increases. However, most people that view this visualization leave with the exact opposite impression, because they are paying more attention to the direction of the line than they are to the numbers on the y-axis. That's because we focus on \u003cstrong\u003e\u003cem\u003ePreattentive Attributes\u003c/em\u003e\u003c/strong\u003e first!\u003c/p\u003e\n\n\u003ch2\u003eDo: Use Preattentive Attributes\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003ePreattentive Attributes\u003c/em\u003e\u003c/strong\u003e are things that our eyes are drawn to. We can't help but notice them, because our brains are wired to. There will be times when you need a visualization to communicate a specific piece of information, that you want to make as obvious as possible. The best way to do this is to pick the right preattentive attribute to highlight this!\u003c/p\u003e\n\n\u003cp\u003eTake a look at some of the examples in the chart below: \u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/new_preattentive-attributes.png\" width=\"700\"\u003e\u003c/p\u003e\n\n\u003cp\u003eNote that preattentive attributes are not one size fits all. Most of them work well for certain types of data, but not others. Consider the following chart, and refer back to the preattentive attributes listed above and consider how they would look trying to highlight each different type of information. \u003c/p\u003e\n\n\u003ch2\u003eDon't: Use 3D Visualizations\u003c/h2\u003e\n\n\u003cp\u003eThe final mistake we'll cover today is the use of 3D Visualizations. While they may seem like a cool idea, in practice, they are almost always trouble. The reason for this is because they easily cause \u003cstrong\u003e\u003cem\u003eOcclusion\u003c/em\u003e\u003c/strong\u003e, which is just a fancy way of saying that the things in front block the things in back so that you can't see them! For example:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/master/images/new_occlusion.png\" width=\"500\"\u003e\u003c/p\u003e\n\n\u003cp\u003eNote that there may be some times where a 3D visualization may actually be your best choice, but those are almost always going to be related to visualizing a point cloud in a 3D space. If you absolutely have to use a 3D visualization (or any other sort of visualization where occlusion could be a problem), consider changing the opacity of the visualization to make items more see-through. \u003c/p\u003e\n\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we saw many examples of bad data visualizations, and learned about how to make great data visualizations by avoiding these mistakes and following the best practices!\u003c/p\u003e\n\u003cfooter class=\"fis-footer\" style=\"visibility: hidden;\"\u003e\u003cdiv class=\"fis-feedback\"\u003e\n\u003ch5\u003eHow do you feel about this lesson?\u003c/h5\u003e\n\u003cimg id=\"thumbs-up\" data-repository=\"dsc-data-viz-best-practices-common-mistakes\" title=\"Thumbs up!\" alt=\"thumbs up\"\u003e\u003cimg id=\"thumbs-down\" data-repository=\"dsc-data-viz-best-practices-common-mistakes\" title=\"Thumbs down!\" alt=\"thumbs down\"\u003e\n\u003c/div\u003e\n\u003ch5\u003eHave specific feedback? \u003ca href=\"https://github.com/learn-co-curriculum/dsc-data-viz-best-practices-common-mistakes/issues/new\"\u003eTell us here!\u003c/a\u003e\n\u003c/h5\u003e\u003c/footer\u003e","frontPage":false}],"assignments":[{"exportId":"gf461545aabfa2c2854af2c13d5cb6189","title":"Built-in Python Operators, Functions and Methods","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-python-operators-functions-and-methods\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-operators-functions-and-methods\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-operators-functions-and-methods/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eAs a Data Scientist, you will spend a lot of time writing code in Python. In this lesson, we're going to introduce some features built right into the language that will allow you to perform common tasks more quickly and easily.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse built-in Python functions and methods\u003c/li\u003e\n\u003cli\u003eDescribe the difference between a function and a method\u003c/li\u003e\n\u003cli\u003eUse comparison operators to compare objects\u003c/li\u003e\n\u003cli\u003eUse logical operators to incorporate multiple conditions\u003c/li\u003e\n\u003cli\u003eUse identity operators to confirm the identity of an object\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g40acebb99993caab78adfc9a83a2a6cd","title":"Built-in Python Operators, Functions, and Methods - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-python-operators-functions-and-methods-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-operators-functions-and-methods-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-operators-functions-and-methods-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe've looked at some of the built-in methods, functions, and the operators in Python. These are all very powerful tools we can (and will) use in our code. Below, we'll put these new tools to use to solve the tests in this lab.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eIn this lab you will:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse built-in Python functions and methods\u003c/li\u003e\n\u003cli\u003eUse comparison operators to compare objects\u003c/li\u003e\n\u003cli\u003eUse logical operators to incorporate multiple conditions\u003c/li\u003e\n\u003cli\u003eUse identity operators to confirm the identity of an object\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g4928f221fcb04697a7dd69cc606b9f0d","title":"Control Flow: Conditionals","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-conditionals\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-conditionals\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-conditionals/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe have talked about different data types, how to use them, and the kinds of operations that we can perform on them. We have also talked about using Booleans (\u003ccode\u003eTrue\u003c/code\u003e or \u003ccode\u003eFalse\u003c/code\u003e) to inform decisions in our programming. Often when we want to implement a decision in our code, we'll use conditionals. Conditionals allow us to break up our code in a way that we can selectively perform operations like assigning a value or even just printing text.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Python conditional statements\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g8dfa542361828aac922b54cd775fd3be","title":"Control Flow: Conditionals - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-conditionals-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-conditionals-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-conditionals-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that you have been introduced to conditionals, let's put your knowledge to test and create some conditional statements that selectively assign values to variables based on whether they pass the conditions we set.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Python conditional statements\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g2f9f93d746a031d0889f94a9973f66b7","title":"Covariance and Correlation","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-correlation-covariance\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-correlation-covariance\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-correlation-covariance/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, you'll learn how the \u003cstrong\u003evariance\u003c/strong\u003e of a variable is used to calculate \u003cstrong\u003ecovariance\u003c/strong\u003e and \u003cstrong\u003ecorrelation\u003c/strong\u003e as key measures used in statistics to find causal relationships between variables. Based on these measures, you can find out if two variables are associated with each other, and to what extent. This lesson will help you develop a conceptual understanding, necessary calculations, and some precautions while using these measures. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDistinguish between correlation and causation \u003c/li\u003e\n\u003cli\u003eInterpret correlation and its relationship to covariance\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eCalculate covariance and correlation\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gbb17d39717b44a0a378feb26874c19c8","title":"Covariance and Correlation - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-correlation-covariance-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-correlation-covariance-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-correlation-covariance-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you will calculate covariance and correlation for some data in Python lists by using the formulas shown in the previous lesson. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCalculate covariance and correlation\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eDeclare and use a function with arguments\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g4eb83428653f369c46826824ab875b1b","title":"Creating Functions","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-creating-functions\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-creating-functions\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-creating-functions/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that we learned about loops, it would be nice to have the ability to \u003cem\u003ereuse\u003c/em\u003e our code to help us solve different problems. Functions allow us to do just that. They also give us the ability to name a sequence of operations (or block of code), thus making our code expressive. Let's see how this works, and why something like this is useful.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDeclare and use a basic function\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g7bafc274de04402dda321458de913803","title":"Creating Functions - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-creating-functions-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-creating-functions-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-creating-functions-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eAs you know, we can use functions to name snippets of our code, thus making our code more expressive. We can also use functions to allow us to reuse our code. In this lab we will practice using functions for both of those purposes.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDeclare and use a basic function\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g9442cfe7529613453d3d9fc94525f9a0","title":"Customizing Visualizations with Matplotlib","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-more-practice-with-matplotlib\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-practice-with-matplotlib\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-practice-with-matplotlib/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe had a quick introduction to plotting with \u003ccode\u003ematplotlib\u003c/code\u003e in previous lessons. This lesson covers plotting with Python and \u003ccode\u003ematplotlib\u003c/code\u003e using a more structured approach. In this section, we'll look into the components of standard Matplotlib plots used for creating and customizing visualizations. The lesson will also provide you with lots of example code to get you started with data visualization and customizations. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a line plot with Matplotlib\u003c/li\u003e\n\u003cli\u003ePlot multiple graphs on the same axes\u003c/li\u003e\n\u003cli\u003eCustomize axes limits and ticks\u003c/li\u003e\n\u003cli\u003eCustomize line styles and colors\u003c/li\u003e\n\u003cli\u003eUnderstand the distinction between Matplotlib figure and axes\u003c/li\u003e\n\u003cli\u003eCreate multiple subplots within a Matplotlib figure\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g81b853d378438443f9f5b76cfca94998","title":"Customizing Visualizations with Matplotlib - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-more-practice-with-matplotlib-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-practice-with-matplotlib-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-more-practice-with-matplotlib-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eThis lab requires you to draw some basic visualizations using the techniques from the previous lesson. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate subplots using a Matplotlib figure\u003c/li\u003e\n\u003cli\u003eUse different linestyles within a Matplotlib visualization\u003c/li\u003e\n\u003cli\u003eCreate labels and titles for visualizations\u003c/li\u003e\n\u003cli\u003eCreate a lineplot using linspace\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g92249d43c08c58e79f0cbd6e6487bf9d","title":"Data Visualization","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-viz\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eThis lesson introduces data visualization using Python and the popular Matplotlib plotting library. You will explore the fundamental features of standard Matplotlib plots and how to use them for creating and customizing visualizations. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Matplotlib to create a scatter plot\u003c/li\u003e\n\u003cli\u003eUse Matplotlib to create a histogram\u003c/li\u003e\n\u003cli\u003eInterpret a histogram to gain insight about a distribution of data\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb6c067d136f85be3427acc65fdbe885c","title":"Data Visualization - Cumulative Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-viz-cumulative-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz-cumulative-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz-cumulative-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou've completed the data visualization section — excellent work. Now we're going to do some rudimentary analysis of Shakespeare's classic play: Macbeth! You will get practice working with lists and dictionaries, conditionals, visualizing data, and thinking analytically about data.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eApply string methods to make changes to a string\u003c/li\u003e\n\u003cli\u003eUse a \u003ccode\u003efor\u003c/code\u003e loop to iterate over a collection\u003c/li\u003e\n\u003cli\u003eAssign values in a dictionary\u003c/li\u003e\n\u003cli\u003eUse data visualizations to present your findings\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gf4bf01c88225a8f8d7b7a8d8f3a9e6f5","title":"Data Visualization - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-data-viz-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-data-viz-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eThis lab will give you some structured practice performing data visualization!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Matplotlib to create a bar graph\u003c/li\u003e\n\u003cli\u003eUse Matplotlib to create a scatter plot\u003c/li\u003e\n\u003cli\u003eUse Matplotlib to create a histogram\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gf95cef7bfd71e59dda5daa202c74b13c","title":"Functions with Arguments","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-functions-with-arguments\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-functions-with-arguments\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-functions-with-arguments/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eFunction arguments are a powerful tool in programming.  As we'll see, arguments make our functions more flexible and reusable by explicitly allowing different inputs to be used in a function and changing the output of the function based on these inputs.\u003c/p\u003e\n\n\u003cp\u003eWhen used correctly, function arguments bring clarity to what inputs a function needs to operate, as well as how a function uses these inputs.  \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDeclare and use a function with arguments\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g59472624b01d8a531dca93296e1ba886","title":"Functions With Arguments - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-functions-with-arguments-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-functions-with-arguments-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-functions-with-arguments-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we have decided to visit one of our travel destinations! This time we have chosen to visit Albuquerque, but we aren't very familiar with this city and are quite hungry after our long flight. We will be working with information we pulled from the Yelp database to help us find a restaurant where we can satisfy our hunger. While Yelp is great for learning about what to do in Albuquerque, it gives us back a lot of information. We'll use what we know about functions and dictionaries to format and read our data more easily. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDeclare and use a function with arguments\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g5ab9267793311cfa9be3b541c0535fe8","title":"Getting Started with NumPy","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-getting-started-with-numpy\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-with-numpy\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-with-numpy/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNumPy is one of the main libraries for performing scientific computing in Python. Using NumPy, you can create high-performance multi-dimensional arrays, and several tools to work with these arrays. \u003c/p\u003e\n\n\u003cp\u003eA NumPy array can store a grid of values. All the values must be of the same type. NumPy arrays are n-dimensional, and the number of dimensions is denoted by the \u003cem\u003erank\u003c/em\u003e of the NumPy array. The shape of an array is a tuple of integers which holds the size of the array along each of the dimensions.\u003c/p\u003e\n\n\u003cp\u003eFor more information on NumPy, refer to \u003ca href=\"http://www.numpy.org/\"\u003ehttp://www.numpy.org/\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse broadcasting to perform a math operation on an entire numpy array\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003ePerform vector and matrix operations with numpy \u003c/li\u003e\n\u003cli\u003eAccess the shape of a numpy array\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eUse indexing with numpy arrays\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g840dc22b3347e8ce48d1e648c387c642","title":"Getting Started with NumPy - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-getting-started-with-numpy-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-with-numpy-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-getting-started-with-numpy-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that we have introduced NumPy, let's put it to practice. In this lab, you are going to be creating arrays, performing operations on them, and returning new arrays all using the NumPy library. Let's get started!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eInstantiate a numpy array with specified values \u003c/li\u003e\n\u003cli\u003eUse broadcasting to perform a math operation on an entire numpy array \u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g0893f7f6607c9016fdbcf31cf6281e1b","title":"Implementing Statistics with Functions - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-implementing-statistics-with-functions-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-implementing-statistics-with-functions-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-implementing-statistics-with-functions-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab you'll dive deep into calculating the measures of central tendency and dispersion introduced in previous lessons. You will code the formulas for these functions in Python which will require you to use the programming skills that you have gained in the other lessons of this section. Let's get started!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCalculate the measures of dispersion for a dataset\u003c/li\u003e\n\u003cli\u003eCompare the different measures of dispersion\u003c/li\u003e\n\u003cli\u003eCalculate the measures of central tendency for a dataset\u003c/li\u003e\n\u003cli\u003eCompare the different measures of central tendency\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gbce3a85b4946723fa7e972c7009a5452","title":"Introduction to Numpy","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-introduction-to-numpy\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-to-numpy\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-introduction-to-numpy/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, we'll take a more formal look at \u003cem\u003eNumPy\u003c/em\u003e. Besides being ubiquitous in Data Science, NumPy also provides us with blistering fast and efficient, list-like, data types called N-Dimensional Arrays or \u003cstrong\u003endarrays\u003c/strong\u003e or more simply arrays. This list-like data type is effectively a lighter weight version of a Python \u003cstrong\u003elist\u003c/strong\u003e, as it uses less of your computer's memory, which makes it more efficient, especially when dealing with large datasets. Don't worry if that seems a little vague. We will take a closer look at NumPy and how its arrays work in this lesson.\u003c/p\u003e\n\n\u003cp\u003eAn important note: \u003cem\u003ePandas\u003c/em\u003e was actually built on top of \u003cem\u003eNumPy\u003c/em\u003e! So many of the functionalities that \u003cem\u003eNumPy\u003c/em\u003e has, are also part of \u003cem\u003ePandas\u003c/em\u003e. It is still important to cover \u003cem\u003eNumPy\u003c/em\u003e separately as \u003cem\u003eNumPy\u003c/em\u003e arrays are very important building blocks in many Data Science applications!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDescribe why NumPy is used at times over standard Python \u003c/li\u003e\n\u003cli\u003eInstantiate a NumPy array with specified values \u003c/li\u003e\n\u003cli\u003eUse broadcasting to perform a math operation on an entire NumPy array \u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb234d5ac09db3cb158f8cf05f9340791","title":"Introduction to Variables: Numeric Types and Booleans","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-floats-ints-booleans\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-floats-ints-booleans\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-floats-ints-booleans/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSo, we know that we have a type for representing text, the String. But what if we want to represent other types of data, like Numbers? We are Data Scientists after all, and we'll be working with numbers a lot. In this lesson, we'll introduce both Numbers and Booleans, data types we will frequently use in Python.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse different numeric data types\u003c/li\u003e\n\u003cli\u003eDistinguish the difference between numeric data types\u003c/li\u003e\n\u003cli\u003ePerform basic mathematical operations with numeric data types\u003c/li\u003e\n\u003cli\u003eUse Boolean data types\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g6c314b693f3ec9555805308db5ba8837","title":"Introduction to Variables: Strings","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-strings\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eAs we already know from living in the digital age and the lessons we've already seen, programming is a powerful tool for answering questions about data. It allows us to collect, clean up and format our data and then perform calculations on that data.\nMuch of our digital information is in the form of text, for example song lyrics and emails. To clean up and format that text with Python, we need to become familiar with our first type of data, the String.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eBy the end of this lesson, you will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eApply string methods to make changes to a string\u003c/li\u003e\n\u003cli\u003eInspect documentation with various methods\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ge00931a4c90f5a02ef00a71d6b59eb13","title":"Introduction to Variables: Strings and Numeric Types - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-strings-floats-ints-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings-floats-ints-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings-floats-ints-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that we have learned about working with different types of data in Python: strings, numbers (ints and floats), and booleans, let's put that knowledge to the test. In this lab we'll imagine that we were at a nice social gathering and exchanged business cards with a few people. One of the business cards belongs to Art Vandelay, a new travel agent. We want to use our programming skills to format this information correctly. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eApply string methods to make changes to a string\u003c/li\u003e\n\u003cli\u003eUse concatenation to combine strings\u003c/li\u003e\n\u003cli\u003ePerform basic mathematical operations with numeric data types\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g2a83bfc0ee03862edc77dd9e1a8865a7","title":"Introduction to Variables: Strings - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-strings-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-strings-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eOkay, we have learned about our first data type, the String! Now let's do a little practice with strings. We'll use the methods and functions we introduced in the previous lesson to flex our string-manipulating muscles!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eApply string methods to make changes to a string\u003c/li\u003e\n\u003cli\u003eUse concatenation to combine strings\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g22cb228bfd30d535fc6741fe731ac000","title":"Introduction to Variables: Variable Assignment","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-variable-assignment-intro\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-variable-assignment-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-variable-assignment-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\"There are only two hard things in Computer Science: cache invalidation and naming things.\"\u003c/p\u003e\n\n\u003cp\u003e-- Phil Karlton\u003c/p\u003e\n\n\u003cp\u003e\"...But ordinary language is all right.\" \u003c/p\u003e\n\n\u003cp\u003e-- Ludwig Wittgenstein\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAssign and declare a Python variable\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g278a18876f40090e2f62003cc57bd784","title":"Introduction to Variables: Variable Assignment - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-variable-assignment-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-variable-assignment-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-variable-assignment-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that we know about variables, we want to put them to use by associating them with some data.  Here, we will be using variables to store information related to a vacation that we would like to go on.\u003c/p\u003e\n\n\u003cp\u003eJust as before, we ask you to run the code and ensure that it matches what is commented out.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAssign and declare a python variable\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g87dbaa82fbcc8fd0c47ff2fc6904ca9e","title":"Looping Over Collections","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-looping-over-collections\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-looping-over-collections\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-looping-over-collections/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eLoops allow us to iterate over each element in a collection, like a list. Perhaps we could already do that by writing out a line of code for each element in the collection, but that wouldn't be very efficient, would it? No, not at all. With loops, we can write one line of code that operates on each element in a collection. Pretty cool, right? Let's get started!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse a \u003ccode\u003efor\u003c/code\u003e loop to iterate over a collection\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g2234809843bef3c2ea9327c0d2d395d4","title":"Looping Over Collections - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-looping-over-collections-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-looping-over-collections-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-looping-over-collections-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we will be practicing what we know about \u003ccode\u003efor\u003c/code\u003e loops. We will use them to reduce the amount of code we write by hand to iterate through collections. We will use data from the excel file, \u003ccode\u003ecities.xlsx\u003c/code\u003e, that has data on different cities, their populations, and their areas. Finally, we will use this information to plot and compare each city. Let's get started!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse a \u003ccode\u003efor\u003c/code\u003e loop to iterate over a collection\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gd1ad79706f97b569e1df3b384b7ab3d3","title":"Measures of Central Tendency","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-measures-of-central-tendency\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-measures-of-central-tendency\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-measures-of-central-tendency/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWhen we are working with a small set of data values, it is often possible to discuss these values individually. However, when we are dealing or working with large sets of data in real-world problems, we prefer to have some features that can summarize and represent the data in a concise format.\u003c/p\u003e\n\n\u003cp\u003eIn this lesson, we will look at such measures first for a single data variable. e.g., the salary of workers in a particular factory. These measures will include measures of central tendency and measures of dispersion.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCompare the different measures of central tendency\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ge406c894213061f1e4575ee71fa00abf","title":"Measures of Dispersion","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-measures-of-dispersion\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-measures-of-dispersion\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-measures-of-dispersion/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003ePreviously, you learned about three measures of central tendency: the mean, median, and mode. These metrics can give you a general understanding of where data values lie within the range of the whole dataset but they don't tell you the whole story. In fact, they can often be misleading!\u003c/p\u003e\n\n\u003cp\u003eTo truly understand your data, you also need \u003cstrong\u003eMeasures of Dispersion\u003c/strong\u003e, namely: absolute deviation, standard deviation, and variance. These measures tell you how tightly (or loosely) your data is clustered around its center. Generally, measures of dispersion report on how \"noisy\" your dataset is. \u003c/p\u003e\n\n\u003cp\u003eIn this lesson, you'll learn about the different measures of dispersion and explore how they are related to each other as well as other summary statistics.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCompare the different measures of dispersion\u003c/li\u003e\n\u003cli\u003eCreate a box plot and use it to interpret the spread of data\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb20f3650861ea56be8b9852bb376d026","title":"Python Essentials - Cumulative Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-python-essentials-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-essentials-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-essentials-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eCongratulations, you made it through the new content for the first section of the prep! This cumulative lab will help you review and practice everything you've learned in this section — \"putting it all together\" into an analysis with real-world data.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRecall the data types covered so far\u003c/li\u003e\n\u003cli\u003ePractice extracting information from a nested dataset\u003c/li\u003e\n\u003cli\u003ePractice generating insights with conditional logic\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g96ab94758e4e03adcde4d4c510a71b4a","title":"Python Loops and Functions - Cumulative Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-python-loops-and-functions-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-loops-and-functions-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-python-loops-and-functions-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou made it through another section — excellent work! This cumulative lab will return to the Amazon product review dataset and allow you to flex your new skills.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRecall what you learned in the previous section\u003c/li\u003e\n\u003cli\u003ePractice writing loops to pull multiple pieces of data from a dataset\u003c/li\u003e\n\u003cli\u003ePractice writing functions for organization and avoiding repetition\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g17b7b0ae11f05d7dfd06ca8d7549b11a","title":"Seaborn - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-seaborn-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-seaborn-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-seaborn-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll get some practice working with a second, more advanced visualization library, \u003cstrong\u003e\u003cem\u003eSeaborn\u003c/em\u003e\u003c/strong\u003e!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eConstruct plots with Seaborn using its pre-built functionality\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ga5342dbefc1721bb053cd22306f3b6b3","title":"Statistical Measures - Cumulative Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-statistical-measures-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-statistical-measures-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-statistical-measures-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eAnother section down! Let's pull together the statistical measures learned so far to analyze a dataset and produce some business recommendations.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRecall the concepts and applications of measures of central tendency and dispersion\u003c/li\u003e\n\u003cli\u003ePractice applying and interpreting measures of central tendency and dispersion\u003c/li\u003e\n\u003cli\u003eRecall the concepts and applications of covariance and correlation\u003c/li\u003e\n\u003cli\u003ePractice applying and interpreting covariance and correlation\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g85f256e270c95705db4022a5aea57190","title":"User Input and Output in Python","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-user-input-and-output-in-python\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-user-input-and-output-in-python\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-user-input-and-output-in-python/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSometimes, you'll want Python to ask users for a certain input. This is where user inputs can help!\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIncorporate input/output functionality in code to allow for user interaction \u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g3f4b63494c9e1b2c738b60f3b9a2669c","title":"Using Nested Loops","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-using-nested-loops\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-nested-loops\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-nested-loops/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we will be looking at how to perform nested iteration (or looping). What does this mean exactly? Well, we know that a nested data structure is having one form of data nested inside another. For example, a nested list would be a list that contains another list, or a dictionary that has a key that points to a list.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# nested lists\n\u003c/span\u003e\u003cspan class=\"n\"\u003elist_of_lists\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]]\u003c/span\u003e\n\u003cspan class=\"n\"\u003edict_nested_list\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e'name'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\"example\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e'colors'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\"blue\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"green\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"yellow\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"red\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo, with that example, we can infer that a nested loop would be a loop inside another loop. Sounds exciting, right? Let's take a look at some nested loops.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse a nested loop when it is appropriate\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g5f6dd0d64e743ed2db9cf4c09df4be7d","title":"Using Nested Loops - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-using-nested-loops-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-nested-loops-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-using-nested-loops-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll practice using nested loops to iterate over nested data structures and create new collections. To do this, you'll be using data from a soccer match to practice our nested loops.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse a nested loop when it is appropriate\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g50de168d89045aafb7ca7c967cc2a97e","title":"While Loops, Break and Continue","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-while-loops-break-and-continue\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-while-loops-break-and-continue\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-while-loops-break-and-continue/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eEarlier in the course, we learned how to iterate over collections. But is there a way to have a loop \u003cstrong\u003ewithout\u003c/strong\u003e a collection to iterate over? Well, another way to create a loop is with \u003cstrong\u003ewhile\u003c/strong\u003e loops. We can use a while loop to perform the same action over and over until a condition is no longer \u003ccode\u003eTrue\u003c/code\u003e. We don't even need an \u003cem\u003eiterable\u003c/em\u003e or collection to iterate over. We can just define a condition and perform the given code block until the condition is no longer \u003ccode\u003eTrue\u003c/code\u003e. Pretty cool, right?   \u003c/p\u003e\n\n\u003cp\u003eOr what if we would like to have a loop that stops at a certain point? Let's say we only want to collect half of the elements of a list, or stop a list once we find the first matching element? To perform operations like these we'll need \u003ccode\u003ebreak\u003c/code\u003e and \u003ccode\u003econtinue\u003c/code\u003e statements. These statements \u003cstrong\u003econtrol the flow\u003c/strong\u003e of our loops and will help us make our loops even more effective.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse a \u003ccode\u003ewhile\u003c/code\u003e loop\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003ebreak\u003c/code\u003e and \u003ccode\u003econtinue\u003c/code\u003e to add control flow to a \u003ccode\u003ewhile\u003c/code\u003e loop\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g3dd670b73a274c7c9423708dbfc707cb","title":"While Loops, Break and Continue - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-while-loops-break-and-continue-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-while-loops-break-and-continue-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-while-loops-break-and-continue-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we will practice using \u003ccode\u003ewhile\u003c/code\u003e loops, and \u003ccode\u003ebreak\u003c/code\u003e and \u003ccode\u003econtinue\u003c/code\u003e statements in our code. We will use our control flow statements to iterate through collections and filter out or selectively operate on each element. We'll use \u003ccode\u003ewhile\u003c/code\u003e loops to perform operations until a given condition is no longer true. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse a \u003ccode\u003ewhile\u003c/code\u003e loop\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003ebreak\u003c/code\u003e and \u003ccode\u003econtinue\u003c/code\u003e to add control flow to a \u003ccode\u003ewhile\u003c/code\u003e loop\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gca186dafac976cf51ffb8bdae825fcfa","title":"Working With Dictionaries","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-dictionaries\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dictionaries\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dictionaries/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eAfter introducing and working with Lists, you might be wondering if there are other kinds of collections in Python that we should know about. Well, there are! In this lesson, we will introduce \u003cstrong\u003edictionaries\u003c/strong\u003e. As we know, lists represent a collection of information that is ordered, like a list of the most watched TV shows.  However, in different situations, we may want our data to represent attributes of an entity, such as the various attributes of a single TV show like its name, genre, starring actors, etc.  For such scenarios, a \u003cstrong\u003edictionary\u003c/strong\u003e is more natural. Dictionaries are collections of \u003cstrong\u003ekey-value pairs\u003c/strong\u003e. Rather then specifying a positional index as with lists, we specify a key for a dictionary and are returned with the value associated with that key. For example, in a list, we could retrieve the third item with \u003ccode\u003elist_name[2]\u003c/code\u003e (remember indexing starts at 0), while in a dictionary, we would have to specify a key such as \u003ccode\u003edict_name['key_name']\u003c/code\u003e to retrieve the associated value attached to that key. This is similar to traditional dictionaries: you look up a specific word (the key) to find its associated definition (the value).\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAssign values in a dictionary\u003c/li\u003e\n\u003cli\u003eAccess keys and values in a dictionary\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g06542309468316d710fbbab77f39c4bf","title":"Working with Dictionaries - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-dictionaries-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dictionaries-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-dictionaries-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that we know about dictionaries in Python, it is time to practice using them. In this lesson, you'll use your knowledge of dictionaries to retrieve and assign data about various cities.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAssign values in a dictionary\u003c/li\u003e\n\u003cli\u003eAccess keys and values in a dictionary\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g7ee6ec49e524001dfba2e30501ef5c1e","title":"Working with Lists","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-lists\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lists\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lists/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSo far, we have worked with individual pieces of data like the string 'hello'. In this lesson, we'll see how we can group pieces of data together using lists.\u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse indexing to access elements in a list\u003c/li\u003e\n\u003cli\u003eApply list methods to make changes to a list\u003c/li\u003e\n\u003cli\u003eChange elements of a list\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g9a6060309a171b671b0554c1c3ec3943","title":"Working with Lists - Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"dsc-lists-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lists-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-lists-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that we have a sense of how to read from a list and alter a list in Python, let's put this knowledge to use. \u003c/p\u003e\n\n\u003ch2\u003eObjectives\u003c/h2\u003e\n\n\u003cp\u003eYou will be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse indexing to access elements in a list\u003c/li\u003e\n\u003cli\u003eApply list methods to make changes to a list\u003c/li\u003e\n\u003cli\u003eChange elements of a list\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gecdc73540778446cef0eba984e8f2e62","title":"Your First Jupyter Notebook!","type":"Assignment","content":"\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-prework-jupyter-notebook\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/dsc-prework-jupyter-notebook/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e","submissionTypes":"an external tool","graded":true,"pointsPossible":0.0,"dueAt":null,"lockAt":null,"unlockAt":null}],"discussion_topics":[],"quizzes":[{"exportId":"gafffd0253eddac832bd97470ee598a56","title":"Measures of Central Tendency - Quiz","type":"Quizzes::Quiz","content":"\u003cp\u003e\u003cspan\u003eWhile we recommend using Python to find the answers to these questions, it is not required. You are more than welcome to use a calculator or pencil and paper to solve them, too.\u003c/span\u003e\u003c/p\u003e","assignmentExportId":"gd41d8cd98f00b204e9800998ecf8427e","questionCount":6,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":6.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g005a0293848ed983a215877b582fd645","title":"Measures of Dispersion - Quiz","type":"Quizzes::Quiz","content":"","assignmentExportId":"gd41d8cd98f00b204e9800998ecf8427e","questionCount":3,"timeLimit":null,"attempts":-1,"graded":true,"pointsPossible":3.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ge3db7273e812457ff61904186f65fe1d","title":"Prep Post-Test","type":"Quizzes::Quiz","content":"\u003ch3\u003eIntroduction\u003c/h3\u003e\n\u003cp data-renderer-start-pos=\"865\"\u003eThis post test is only required for enrolled students to complete. It\u0026nbsp;is designed to help you and your instructors check your understanding of the material prior to starting the program. It will unlock when you have completed enough of the lessons in previous sections.\u003c/p\u003e\n\u003ch3\u003eTiming\u003c/h3\u003e\n\u003cp\u003eThis is not a timed test, but it is intended to be taken in one sitting. We don't guarantee that Canvas will keep track of your progress if, for example, you leave the quiz open overnight. Your instructors will be able to see how long it took you to complete the assessment, but you want to prioritize thinking carefully about your answers rather than finishing as quickly as possible.\u003c/p\u003e\n\u003cp\u003eYou have to complete this test with \u003cstrong data-renderer-mark=\"true\"\u003ea score of at least 80%\u003c/strong\u003e\u0026nbsp;by the \u003cstrong data-renderer-mark=\"true\"\u003eenrollment deadline\u003c/strong\u003e. You can take the test up to 3 times.\u003c/p\u003e\n\u003ch3\u003eAcademic Honesty\u003c/h3\u003e\n\u003cp\u003eThis multiple-choice assessment is \u003cstrong\u003eopen book\u0026nbsp;\u003c/strong\u003ebut should be completed\u003cstrong\u003e\u0026nbsp;individually, without assistance\u003c/strong\u003e. The goal is ensuring that we have an accurate assessment of your ability to use the concepts and techniques covered in the prep.\u003c/p\u003e\n\u003ch4\u003e\"Do\"s:\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eRead each question and all answer options carefully.\u003c/li\u003e\n\u003cli\u003eRefer back to \u003cstrong\u003elessons and labs\u003c/strong\u003e you completed in the pre-work. (You can open multiple tabs of Canvas at once, keeping the assessment open while looking up the content.)\u003c/li\u003e\n\u003cli\u003eRefer back to any \u003cstrong\u003enotes\u003c/strong\u003e you took while completing the lessons and labs.\u003c/li\u003e\n\u003cli\u003eRefer to the \u003ca class=\"instructure_file_link inline_disabled\" href=\"https://docs.python.org/3/library/index.html\" target=\"_blank\"\u003ePython\u003cstrong\u003e documentation\u003c/strong\u003e\u003c/a\u003e. In particular, (1) \u003ca class=\"instructure_file_link inline_disabled\" href=\"https://docs.python.org/3/library/functions.html\" target=\"_blank\"\u003ebuilt-in functions documentation\u003c/a\u003e, (2) \u003ca class=\"instructure_file_link inline_disabled\" href=\"https://docs.python.org/3/library/stdtypes.html\" target=\"_blank\"\u003ebuilt-in types documentation\u003c/a\u003e, and (3) \u003ca class=\"instructure_file_link inline_disabled\" href=\"https://docs.python.org/3/library/string.html\" target=\"_blank\"\u003estring documentation\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4\u003e\"Don't\"s:\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eDon't ask anyone for help \u003c/strong\u003ewith answering the questions. This includes friends, family, Flatiron School admissions reps, online forums, etc.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDon't\u003c/strong\u003e \u003cstrong\u003euse a Jupyter Notebook or other Python tool\u003c/strong\u003e to answer the questions. In many cases you can find the correct answer by \"brute force\" entering all of the answer choices, but this doesn't tell us whether \u003cem\u003eyou\u003c/em\u003e will actually be able to read and write Python code.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDon't use Google\u003c/strong\u003e (or another search engine) to look up answers online. Everything you need is in the provided materials + the Python documentation. If you Google for the answer instead of remembering it or looking it up in the provided materials, it diminishes the strength of the assessment, and it teaches your brain that you don't actually need to know the information — that you can always just look it up.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eYou are on your honor!\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e","assignmentExportId":"gf70bb672fb06e1d7b2cbb4b8832aaa06","questionCount":21,"timeLimit":null,"attempts":3,"graded":true,"pointsPossible":21.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g56cc3eaa18a2be60827c1754d6112037","title":"Prep Pre-Test","type":"Quizzes::Quiz","content":"\u003ch3\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eThis Pre-Test is designed to help you and your instructors check your understanding of the material prior to starting the Pre-work. Completing it will unlock the Prework curriculum. You will not see your score after completion of this test, this test is purely used to measure your progress between taking this Pre-Test and taking the Post-Test after completing the Pre-Work.\u003c/p\u003e\n\u003ch3\u003eTiming\u003c/h3\u003e\n\u003cp\u003eThis is not a timed test, but it is intended to be taken in one sitting. We don't guarantee that Canvas will keep track of your progress if, for example, you leave the quiz open overnight. Your instructors will be able to see how long it took you to complete the assessment, but you want to prioritize thinking carefully about your answers rather than finishing as quickly as possible.\u003c/p\u003e\n\u003ch3\u003eAcademic Honesty\u003c/h3\u003e\n\u003cp\u003eThis multiple-choice assessment is \u003cstrong\u003eopen book\u0026nbsp;\u003c/strong\u003ebut should be completed\u003cstrong\u003e\u0026nbsp;individually, without assistance\u003c/strong\u003e. The goal is ensuring that we have an accurate assessment of your ability to use the concepts and techniques covered in the prework.\u003c/p\u003e\n\u003ch4\u003e\"Do\"s:\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eRead each question and all answer options carefully.\u003c/li\u003e\n\u003cli\u003eRefer back to \u003cstrong\u003elessons and labs\u003c/strong\u003e you completed in the pre-work. (You can open multiple tabs of Canvas at once, keeping the assessment open while looking up the content.)\u003c/li\u003e\n\u003cli\u003eRefer back to any \u003cstrong\u003enotes\u003c/strong\u003e you took while completing the lessons and labs.\u003c/li\u003e\n\u003cli\u003eRefer to the \u003ca class=\"instructure_file_link inline_disabled\" href=\"https://docs.python.org/3/library/index.html\" target=\"_blank\"\u003ePython\u003cstrong\u003e documentation\u003c/strong\u003e\u003c/a\u003e. In particular, (1) \u003ca class=\"instructure_file_link inline_disabled\" href=\"https://docs.python.org/3/library/functions.html\" target=\"_blank\"\u003ebuilt-in functions documentation\u003c/a\u003e, (2) \u003ca class=\"instructure_file_link inline_disabled\" href=\"https://docs.python.org/3/library/stdtypes.html\" target=\"_blank\"\u003ebuilt-in types documentation\u003c/a\u003e, and (3) \u003ca class=\"instructure_file_link inline_disabled\" href=\"https://docs.python.org/3/library/string.html\" target=\"_blank\"\u003estring documentation\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4\u003e\"Don't\"s:\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eDon't ask anyone for help \u003c/strong\u003ewith answering the questions. This includes friends, family, Flatiron School admissions reps, online forums, etc.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDon't\u003c/strong\u003e \u003cstrong\u003euse a Jupyter Notebook or other Python tool\u003c/strong\u003e to answer the questions. In many cases you can find the correct answer by \"brute force\" entering all of the answer choices, but this doesn't tell us whether \u003cem\u003eyou\u003c/em\u003e will actually be able to read and write Python code.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDon't use Google\u003c/strong\u003e (or another search engine) to look up answers online. Everything you need is in the provided materials + the Python documentation. If you Google for the answer instead of remembering it or looking it up in the provided materials, it diminishes the strength of the assessment, and it teaches your brain that you don't actually need to know the information — that you can always just look it up.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eYou are on your honor!\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e","assignmentExportId":"g3460575fb0cf3a5226b53882c368ff4f","questionCount":21,"timeLimit":null,"attempts":1,"graded":true,"pointsPossible":21.0,"dueAt":null,"lockAt":null,"unlockAt":null}],"files":null}