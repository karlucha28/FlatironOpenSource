window.COURSE_DATA = {"language":"en","lastDownload":"2022-10-31T11:48:25-04:00","title":"Phase 4","modules":[{"id":49285,"name":"Phase 4 Overview","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"g7653ccf335e0591e7f0ef1ecdef533de","items":[{"id":483261,"title":"Welcome to Phase 4","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-welcome-to-phase\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-welcome-to-phase\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-welcome-to-phase/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand how this phase is structured\u003c/li\u003e\n\u003cli\u003eLearn the outcomes of this phase\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntro to Phase 4\u003c/h2\u003e\n\n\u003cp\u003eWelcome to Phase 4! At this point in the program, you've tackled two programming\nlanguages, JavaScript and Ruby, as well as mastering a frontend framework,\nReact. Throughout our journey, we've focused on a specific kind of application\narchitecture: creating a \u003cstrong\u003esingle-page application\u003c/strong\u003e that consumes JSON data\nfrom a \u003cstrong\u003eWeb API\u003c/strong\u003e. Finally, you were introduced to the process of creating your\nown API using Sinatra, a lightweight web framework used to create simple web\napplications.\u003c/p\u003e\n\n\u003cp\u003eIn this phase, we're going to learn how to create an API server using a much\nmore powerful tool, \u003cstrong\u003eRuby on Rails\u003c/strong\u003e (or, as the cool kids say, just\n\u003cstrong\u003eRails\u003c/strong\u003e). By building an API to serve JSON data in Rails, you'll have full\ncontrol over the backend logic: from how \u003cstrong\u003erequests\u003c/strong\u003e are handled and how the\n\u003cstrong\u003eresponse\u003c/strong\u003e is generated, to how your \u003cstrong\u003emodels\u003c/strong\u003e interact with the database\nusing Active Record. By the end of this phase, you can truly claim your mantle\nas a full-stack developer!\u003c/p\u003e\n\n\u003ch2\u003ePhase 4 Structure\u003c/h2\u003e\n\n\u003cp\u003eThis phase is structured to start small, and gradually build in complexity. Each\nmodule of content (a section of labs and readmes) ends with a quiz or \"putting\nit all together\" lab where you can check your understanding of the material. Here's\nwhat each module covers:\u003c/p\u003e\n\n\u003ch3\u003eRails Fundamentals\u003c/h3\u003e\n\n\u003cp\u003eLearn how to use Rails as a backend framework to create a server, and how\nfollowing conventions helps keep our code organized and efficient. You'll also\nsee the full request-response cycle and how data flows through a Rails\napplication.\u003c/p\u003e\n\n\u003ch3\u003eCRUD with Rails\u003c/h3\u003e\n\n\u003cp\u003eUse Rails to build a RESTful API that can perform common CRUD operations with a\ndatabase, and how to access all the data being sent to our Rails app as well as\nhow to properly format a response with a JSON body and HTTP status codes.\u003c/p\u003e\n\n\u003ch3\u003eValidations\u003c/h3\u003e\n\n\u003cp\u003eValidations help keep our database clean, and prevent unwanted data from\nsneaking in. Learn how to use Active Model to add simple validations to your\nmodel, and how to respond to invalid data from users.\u003c/p\u003e\n\n\u003ch3\u003eClient-Server Communication\u003c/h3\u003e\n\n\u003cp\u003eAs full stack developers, it's always important to consider the frontend and\nthe backend as you're building applications. Get a better understanding of\nhow client-server communication happens via the request-response cycle, and\nhow to debug common errors.\u003c/p\u003e\n\n\u003ch3\u003eActive Record Associations\u003c/h3\u003e\n\n\u003cp\u003eBuilding more complex applications requires a larger domain made up of several\nrelated models. Learn how to use Active Record in Rails to create associations\nbetween models, and how to follow RESTful conventions with multiple related\nmodels.\u003c/p\u003e\n\n\u003ch3\u003eSerialization\u003c/h3\u003e\n\n\u003cp\u003eWhen designing web APIs, one important consideration is how our data is sent\nback to our users. Learn how to use a serializer to shape how your JSON data is\nstructured in the response.\u003c/p\u003e\n\n\u003ch3\u003eAuth\u003c/h3\u003e\n\n\u003cp\u003eAuthentication and authorization are two important topics in designing web\napplications. Learn how to use cookies to help identify users across multiple\nrequests, and authorize users for access to specific actions on the server once\nthey've logged in.\u003c/p\u003e\n\n\u003ch3\u003eDeploying\u003c/h3\u003e\n\n\u003cp\u003eSo far, we've been building applications locally — but the end goal\nis to be able to deploy our projects to the web, so that anyone can view\nthem! In this section, we'll discuss what the deployment process looks like\nand how to deploy a React/Rails API application to a server.\u003c/p\u003e\n\n\u003ch2\u003ePhase 4 Objectives\u003c/h2\u003e\n\n\u003cp\u003eBy the end of this phase, you should be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate RESTful APIs\u003c/li\u003e\n\u003cli\u003eValidate data\u003c/li\u003e\n\u003cli\u003eShare data between a frontend JavaScript application and a backend API\napplication\u003c/li\u003e\n\u003cli\u003eBuild authentication into APIs\u003c/li\u003e\n\u003cli\u003eDeploy backend applications\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWe've got an exciting time ahead, so let's get started!\u003c/p\u003e","exportId":"welcome-to-phase-4"}]},{"id":49286,"name":"Discussion Questions","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"g13a5294a028b5d39e2efa45e1080d3a7","items":[{"id":483262,"title":"REST Discussion Questions","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-dq-rest\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-dq-rest\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-dq-rest/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDefine REST conventions\u003c/li\u003e\n\u003cli\u003ePractice domain modeling\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e1.\u003c/strong\u003e Take 30 minutes with your table; choose a \u003cem\u003eresource\u003c/em\u003e that your server\ncontains data about. A resource will be something like 'books', 'users',\n'episodes', or 'characters', something that your users will be performing\nCRUD actions on.\u003c/p\u003e\n\n\u003cp\u003eWrite out the 5 RESTful routes from the curriculum that correspond to the 4 CRUD\nactions. Be sure to include the HTTP verb, the name of the route, the path (URL)\nand the corresponding CRUD action (Although there are actually 7 RESTful routes,\nthis phase will only use 5 of them).\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWhat SQL (if applicable) would be fired in the controller actions for each of\nthe routes?\u003c/li\u003e\n\u003cli\u003eWhy might it be important that routes and resources have a conventional structure?\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003e2.\u003c/strong\u003e Let's say you have built an app that is a blogging platform. You have a Post\nand an Author model and you have controllers and routes for the CRUD actions\nof each model. You sit down at your computer and visit\n\u003ccode\u003ewww.youramazingrailsblog.com/posts\u003c/code\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWhat kind of web request is this making? (i.e. is it a \u003ccode\u003eGET\u003c/code\u003e, \u003ccode\u003ePOST\u003c/code\u003e, etc request?)\u003c/li\u003e\n\u003cli\u003eWhat controller action (i.e. which method in which controller will the\nrequest get routed to) will receive that web request?\u003c/li\u003e\n\u003cli\u003eWhat is the response that your Rails app will send back to the client, i.e.\nthe browser?\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003e3.\u003c/strong\u003e Spend a few minutes mapping out a domain model for a parking lot. How would\nyou model the relationship between cars and spaces? How would you keep track\nof how long a car had been parked in a space? How would you keep track of how\nmuch money someone would need to pay for having parked a certain amount of\ntime?\u003c/p\u003e","exportId":"rest-discussion-questions"}]},{"id":49287,"name":"Rails Fundamentals","status":"completed","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g3c4e172351edafc2f220894299d01317","items":[{"id":483263,"title":"Intro to Rails","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-intro-to-rails-readme\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-intro-to-rails-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-intro-to-rails-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand the purpose of Rails\u003c/li\u003e\n\u003cli\u003eLearn where to get help with Rails\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWelcome to Rails\u003c/h2\u003e\n\n\u003cp\u003eRuby on Rails was created by David Heinemeier Hansson in 2004. The idea arose\nbecause he noticed that, as he was making web applications with Ruby, he was\ncopy pasting common parts from previous apps into his new work. As a developer,\nhe (and all of us) loved solving hard problems. The only way to get to solving\nthe hard problems that are unique to the domain you are working in is to go up a\n\u003cstrong\u003elayer of abstraction\u003c/strong\u003e. The nitty-gritty of basic web apps should be removed\nfrom your head. That was the idea behind Rails: it handles the repetitive code\nthat is common across apps and enables you to focus on the hard bits.\u003c/p\u003e\n\n\u003cp\u003eHave a ton of fun. Rails changed the way web apps are developed; enjoy the\nspoils of many open source contributors' hard work. With over a decade of open\nsource contributions, Rails has evolved into one of the most powerful web\napplication frameworks available. Before we can start building applications, it\nis important to first understand what the Ruby on Rails framework is... and what\nit's not.\u003c/p\u003e\n\n\u003ch2\u003eWhy Use a Framework?\u003c/h2\u003e\n\n\u003cp\u003eIf you wanted to put surround sound in your house, would you go and spend years\nresearching how to best fabricate speakers, learn how to transfer sound through\nwires, weld your own sound board, and create from scratch every other component\nthat would be required to have a surround sound system in your home? Most likely\nnot. Instead it would be much smarter and more efficient to purchase a surround\nsound system from an organization that already put in all of the research and\ndevelopment work to create a professional system.\u003c/p\u003e\n\n\u003cp\u003eIn the same way, when it comes to building a web application it would\ntechnically be possible to build out all of the functionality yourself, but it's\ntypically a better idea to leverage a system that has already spent over a\ndecade developing the tools necessary for getting applications built.\u003c/p\u003e\n\n\u003ch2\u003eWhat is Ruby on Rails?\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eA web framework\u003c/strong\u003e: A web framework provides developers the tools they need\nin order to build applications. While every application is unique there are\ncertain components that can be found in almost every application, such as:\nrouting, asset management, database connections, and the list goes on. A good\nweb framework gives developers these baseline tools so that they don't have to\ncreate the base application functionality for each new project.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eA Ruby Gem\u003c/strong\u003e: At its core, Ruby on Rails is simply a set of Ruby code\nlibraries, and since the entire codebase is open source you have the ability to\nreview the framework to better understand how it works.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAn MVC framework\u003c/strong\u003e: MVC stands for Model-View-Controller. MVC is a popular\napplication architecture that helps developers naturally separate concerns and\norganize their applications properly. This setup encourages a specific set of\nconventions, such as placing the logic for the application in the model files,\nmanaging the code flow in the controllers, and displaying content to the user\nin the views.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAn opinionated framework\u003c/strong\u003e: one way Rails speeds up developer productivity\nis by enforcing strong opinions about how your code should be organized, from\nfolder structure to file and variable naming. This has a few benefits: it\nfrees developers up from having to make decisions about these things, and it\nalso allows for some powerful abstractions to help with our code. By following\n\u003cstrong\u003econvention over configuration\u003c/strong\u003e, we get the benefits of this abstraction\nwithout having to write nearly as much code as in some other frameworks.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cem\u003eOn a side, but very important, note: don't worry if some or all of what we just\nreviewed seems foreign. We'll be covering everything in detail in future\nlessons, so don't worry if it all feels a little overwhelming.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003eHow We Will Be Using Rails\u003c/h2\u003e\n\n\u003cp\u003eWhen Rails was first developed, it was meant to build \u003cstrong\u003efull-stack MVC\u003c/strong\u003e\napplications, where developers could write code for both the frontend and the\nbackend in one place. Rails can \u003cstrong\u003ealso\u003c/strong\u003e be used to create APIs, so we can serve\ndata to a separate frontend web application, such as a Single Page Application\nbuilt with React.\u003c/p\u003e\n\n\u003cp\u003eIn this phase, we'll be focusing primarily on \u003cstrong\u003eRails as an API\u003c/strong\u003e to serve JSON\ndata. By the end of the phase, you'll be able to build out a full-stack\napplication with Rails as a backend, and React as a frontend.\u003c/p\u003e\n\n\u003ch2\u003eHow to Get Help with Rails\u003c/h2\u003e\n\n\u003cp\u003eAs you're learning about Rails, make sure to bookmark the\n\u003ca href=\"https://guides.rubyonrails.org/\"\u003eRuby on Rails Guides\u003c/a\u003e and refer back to it often! Rails is a very\nmature framework with a lot of great features. While we'll be covering a good\namount of those features in this phase, there's a whole lot more to explore.\u003c/p\u003e\n\n\u003cp\u003eThe Rails guides are full of great examples and are always kept up to date with\nthe latest version of Rails, so they should be your go-to source any time\nyou're curious about what Rails can do.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat do we mean when we say that Rails is a \u003cem\u003eframework\u003c/em\u003e?\u003c/li\u003e\n\u003cli\u003eWhat do we mean when we say that Rails is \u003cem\u003eopinionated\u003c/em\u003e? What are the\nadvantages and disadvantages of this characteristic of Rails?\u003c/li\u003e\n\u003c/ol\u003e","exportId":"intro-to-rails"},{"id":483264,"title":"Video: Creating a Rails App","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-creating-a-rails-app\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-creating-a-rails-app\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-creating-a-rails-app/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/725021476/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/getting_started.html\"\u003eGetting Started with Rails\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-creating-a-rails-app"},{"id":483265,"title":"Video: Rails File Structure","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-rails-file-structure\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-file-structure\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-file-structure/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/600359212/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/getting_started.html\"\u003eGetting Started with Rails\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-rails-file-structure"},{"id":483266,"title":"Creating a Rails App","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-creating-a-rails-app-readme\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-creating-a-rails-app-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-creating-a-rails-app-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a new Rails application from scratch\u003c/li\u003e\n\u003cli\u003eNavigate the file structure of a Rails app\u003c/li\u003e\n\u003cli\u003eShow how Rails handles requests\u003c/li\u003e\n\u003cli\u003eShow how to send JSON or HTML as a response\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eVideo Walkthrough\u003c/h2\u003e\n\n\u003cp\u003eThis video will cover the same content as in the readme below, so it's recommended\nthat you watch the video and then review the readme for additional clarity on any\nparts of the video that were unclear.\u003c/p\u003e\n\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/gZoxTXnLXLg?rel=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eCreating Your First Rails Project\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eBefore you continue\u003c/strong\u003e, this assumes that you have Ruby, RubyGems, and Bundler\ninstalled on your system.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eTo get started with Rails, we'll need to first make sure the gem is installed on\nyour computer. This command will install Rails globally, so you only have to run\nthis once, and you'll be able to use Rails from the terminal. To install the\nlatest version of Rails, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egem \u003cspan class=\"nb\"\u003einstall \u003c/span\u003erails\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOnce the gem is installed you can create Rails applications!\u003c/p\u003e\n\n\u003ch2\u003eGenerating a New Rails Application\u003c/h2\u003e\n\n\u003cp\u003eOur application is going to be called CheeseShop. To create the application, run\nthe following command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails new cheese-shop \u003cspan class=\"nt\"\u003e--skip-javascript\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen you run this command, a lot of things will start happening:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRails will generate a new directory with all the code required to build your\napplication\u003c/li\u003e\n\u003cli\u003eIt will then run \u003ccode\u003ebundle install\u003c/code\u003e to download all the required gems\u003c/li\u003e\n\u003cli\u003eIt will also initialize \u003ccode\u003egit\u003c/code\u003e in the newly created directory\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe \u003ccode\u003e--skip-javascript\u003c/code\u003e flag tells Rails that we won't be using JavaScript for\nthis project. Since our JavaScript code will be written in a separate project\nfrom our Rails code, we don't need any JavaScript dependencies for this app.\nUsing this flag makes the installation significantly faster.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThere are a number of common naming conventions for Rails app names. Typically\nyou will want to use all lowercase letters, separated by '-', as shown in our\n\u003ccode\u003echeese-shop\u003c/code\u003e naming structure. In the same way that there are rules for naming\nmethods, variables, classes, etc. in Ruby, there are naming rules for\napplication names. Since the application name is used as the app constant\nthroughout the application, the best approach is to keep your naming simple and\nto follow a standard naming practice.\u003c/p\u003e\n\n\u003ch2\u003eRails File Structure Overview\u003c/h2\u003e\n\n\u003cp\u003eBe sure to change into your new Rails app directory, and open the project in your\ntext editor:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003ecd \u003c/span\u003echeese-shop\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ecode \u003cspan class=\"nb\"\u003e.\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSince you will be working with this file structure on a daily basis, it is very\nimportant to understand and become familiar with the file system. Below is a\nbreakdown for each directory:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eapp\u003c/strong\u003e: contains the Models, Views, and Controllers, along with the rest\nof the core functionality of the application. The majority of\nyour time will be spent working in this directory.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ebin\u003c/strong\u003e: some built-in Rails tasks that you most likely will never have to\nwork with.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003econfig\u003c/strong\u003e: the config directory manages a number of settings that control the\ndefault behavior, including: the environment settings, a set of modules that\nare initialized when the application starts, the ability to set language\nvalues, the application settings, the database settings, the application\nroutes, and lastly the secret key base. You will primarily use the config\ndirectory when you are setting up your application's routes in the\n\u003ccode\u003econfig/routes.rb\u003c/code\u003e file (more on this shortly).\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003edb\u003c/strong\u003e: within the db directory you will find the database schema file that\nlists the database tables, their columns, and each column's associated data\ntype. The schema file can be found at \u003ccode\u003edb/schema.rb\u003c/code\u003e. The db directory also\ncontains the \u003ccode\u003eseeds.rb\u003c/code\u003e file, which lets you create some data that can be\nutilized in the application. This is a great way to quickly integrate data in\nthe application without having to manually add records through a web form\nelement. You will primarily use the db directory when you set up the migration\nfiles that will create your database tables; you may also use it to create\nseed data.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003elib\u003c/strong\u003e: while many developers could build full applications without ever\nentering the lib directory, you will discover that it can be incredibly\nhelpful. The lib/tasks directory is where custom rake tasks are created. You\nhave already used a built-in rake task when you ran the database creation and\nmigration tasks; however, creating custom rake tasks can be very helpful and\nsometimes necessary. For example, you could create a custom rake task that\nruns in the background, making calls to an external API and syncing the\nreturned data into the application’s database.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003elog\u003c/strong\u003e: within the log directory you will discover the application logs.\nThis can be helpful for debugging purposes, but for a production application\nit's often better to use an outside service since they can offer more advanced\nservices like querying and alerts.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003epublic\u003c/strong\u003e: this directory contains some of the custom error pages, such as\n404 errors, along with the robots.txt file which allows you to control how\nsearch engines index the application on the web.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003etest\u003c/strong\u003e: by default Rails will install the test suite in this directory.\nThis is where all of your specs, factories, test helpers, and test configuration\nfiles can be found. \u003cem\u003eSide note: Our labs use RSpec, which means this directory\nwill actually be called \u003ccode\u003espec\u003c/code\u003e in future lessons.\u003c/em\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003etmp\u003c/strong\u003e: this is where the temporary items are stored and is rarely accessed\nby developers.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003evendor\u003c/strong\u003e: a folder for third-party code, such as code for JavaScript plugins\nand CSS frameworks.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eGemfile\u003c/strong\u003e: the Gemfile contains all of the gems that are included in the\napplication; this is where you will place outside libraries that are utilized\nin the application. After any change to the Gemfile, you will need to run\n\u003ccode\u003ebundle install\u003c/code\u003e. This will download all of the code dependencies in the\napplication. The Gem process can seem like a mystery to new developers, but it\nis important to realize that the Gems that are brought into an application are\nsimply Ruby files that help extend the functionality of the app.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eGemfile.lock\u003c/strong\u003e – this file should not be edited. It is created when you run\n\u003ccode\u003ebundle install\u003c/code\u003e and it displays all of the dependencies that each of the Gems\ncontain along with their associated versions. Messing around with the lock\nfile can lead to application bugs due to missing or altered Gem dependencies.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eREADME.md\u003c/strong\u003e – the readme file is an important place to document the\ndetails of the application. If the application is an open-source project, this\nis where you can place instructions to other developers, such as how to get the\napp up and running locally.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eStarting Up the Rails Server\u003c/h2\u003e\n\n\u003cp\u003eTo start up the Rails server, make sure that you are in the root of the\napplication in the terminal and run Rails:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003cspan class=\"gp\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003eBooting Puma\n\u003cspan class=\"gp\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003eRails 6.1.3.1 application starting \u003cspan class=\"k\"\u003ein \u003c/span\u003edevelopment\n\u003cspan class=\"gp\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003eRun \u003cspan class=\"sb\"\u003e`\u003c/span\u003ebin/rails server \u003cspan class=\"nt\"\u003e--help\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e \u003cspan class=\"k\"\u003efor \u003c/span\u003emore startup options\n\u003cspan class=\"go\"\u003ePuma starting in single mode...\n* Puma version: 5.2.2 (ruby 2.7.3-p183) (\"Fettisdagsbulle\")\n*  Min threads: 5\n*  Max threads: 5\n*  Environment: development\n*          PID: 74372\n* Listening on http://127.0.0.1:3000\n* Listening on http://[::1]:3000\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow that the server is running, you can verify that it's working properly in the\nbrowser by navigating to \u003ca href=\"http://localhost:3000\"\u003e\u003ccode\u003ehttp://localhost:3000\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eHere you will see the 'Yay! You're on Rails!' page that ships with Rails. It\nshows that we're ready to start building the application!\u003c/p\u003e\n\n\u003cp\u003eIn order to \u003cstrong\u003eshut down\u003c/strong\u003e your server, you will need to hit \u003ccode\u003econtrol + c\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eOur First Request\u003c/h2\u003e\n\n\u003cp\u003eAt its most basic level, the primary responsibility of Rails is to take an \u003cstrong\u003eHTTP\nrequest\u003c/strong\u003e and generate a properly-formatted \u003cstrong\u003eresponse\u003c/strong\u003e. To demonstrate how the\nRails server handles the request-response cycle, let's take an \"error-driven\ndevelopment\" approach, and try making a request to our server that we know won't\nwork yet.\u003c/p\u003e\n\n\u003cp\u003eWith your server running, try to visit\n\u003ca href=\"http://localhost:3000/cheese\"\u003e\u003ccode\u003ehttp://localhost:3000/cheese\u003c/code\u003e\u003c/a\u003e in the browser.\nYou'll see an error message like this:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/creating-a-rails-app-readme/routing-error-1.png\" alt=\"route missing error\"\u003e\u003c/p\u003e\n\n\u003cp\u003eTo fix this error, we need to define a \u003cstrong\u003eroute\u003c/strong\u003e in our Rails app. A \u003cstrong\u003eroute\u003c/strong\u003e\nis some code that tells Rails: \"When a user makes a request with this HTTP verb\nand this path, run the code in this controller\".\u003c/p\u003e\n\n\u003cp\u003eRoutes are defined in the \u003ccode\u003econfig/routes.rb\u003c/code\u003e file. Open that file, and add this\ncode:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edraw\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/cheese\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"cheese#index\"\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere, we're telling Rails, \"When a \u003ccode\u003eGET\u003c/code\u003e request to the \u003ccode\u003e/cheese\u003c/code\u003e path comes in,\nrun the \u003ccode\u003eindex\u003c/code\u003e method in the \u003ccode\u003eCheeseController\u003c/code\u003e.\"\u003c/p\u003e\n\n\u003cp\u003eNow, back in the browser, visit that \u003ca href=\"http://localhost:3000/cheese\"\u003esame URL\u003c/a\u003e\nagain. A new error message! Progress!\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/creating-a-rails-app-readme/routing-error-2.png\" alt=\"controller missing error\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThis error message tells us we're missing a \u003cstrong\u003eController\u003c/strong\u003e to handle this route.\u003c/p\u003e\n\n\u003cp\u003eLet's create a controller. In the \u003ccode\u003eapp/controllers\u003c/code\u003e folder, add a new file called\n\u003ccode\u003echeese_controller.rb\u003c/code\u003e with the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/cheese_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCheeseController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, when we make a \u003ccode\u003eGET\u003c/code\u003e request to \u003ccode\u003e/cheese\u003c/code\u003e, the code in the\n\u003ccode\u003eCheeseController#index\u003c/code\u003e method will run. Try visiting that\n\u003ca href=\"http://localhost:3000/cheese\"\u003esame URL\u003c/a\u003e again...\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/creating-a-rails-app-readme/template-error.png\" alt=\"template missing error\"\u003e\u003c/p\u003e\n\n\u003cp\u003eTake a minute and read through this error message.\u003c/p\u003e\n\n\u003cp\u003eOnce again, Rails is helping out (bless up, Rails!) and telling us we need to\ncreate a \u003cstrong\u003etemplate\u003c/strong\u003e to handle this particular request. \u003cstrong\u003eBy convention\u003c/strong\u003e,\nRails will look for a special \u003cstrong\u003eview\u003c/strong\u003e file in a folder that matches the name of\nour controller. To create that template, make a new \u003ccode\u003echeese\u003c/code\u003e folder in\n\u003ccode\u003eapp/views\u003c/code\u003e and add a \u003ccode\u003eindex.html.erb\u003c/code\u003e file with this code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight erb\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e\u0026lt;!-- app/views/cheese/index.html.erb --\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;h1\u0026gt;\u003c/span\u003eHello Cheese World!\u003cspan class=\"nt\"\u003e\u0026lt;/h1\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTry visiting that \u003ca href=\"http://localhost:3000/cheese\"\u003esame URL\u003c/a\u003e once more...\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/creating-a-rails-app-readme/cheese-page-html.png\" alt=\"cheese html page\"\u003e\u003c/p\u003e\n\n\u003cp\u003eSuccess at last! We've now gone through the entire request-response cycle in Rails!\u003c/p\u003e\n\n\u003cp\u003eLet's take a moment and retrace our steps. From the browser, we made a \u003ccode\u003eGET\u003c/code\u003e\nrequest to \u003ccode\u003e/cheese\u003c/code\u003e. For Rails to handle this request:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWe added a new route (\u003ccode\u003eget \"/cheese\"\u003c/code\u003e) in the \u003ccode\u003econfig/routes.rb\u003c/code\u003e file\u003c/li\u003e\n\u003cli\u003eIn that route, we specified a \u003cstrong\u003econtroller action\u003c/strong\u003e (\u003ccode\u003e\"cheese#index\"\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003eWe created that controller in \u003ccode\u003eapp/controllers/cheese_controller.rb\u003c/code\u003e with an\n\u003ccode\u003eindex\u003c/code\u003e action\u003c/li\u003e\n\u003cli\u003eBy convention, Rails will look for a \u003cstrong\u003eview template\u003c/strong\u003e that matches the name\nof the controller and action\u003c/li\u003e\n\u003cli\u003eIn that view template, we wrote some HTML\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eNow when that \u003ccode\u003eGET /cheese\u003c/code\u003e request comes through, Rails is able to send the HTML\nfrom our view template as a response to the browser.\u003c/p\u003e\n\n\u003ch3\u003eSending JSON Data\u003c/h3\u003e\n\n\u003cp\u003eYou may be wondering at this point: if we're using Rails as an API, how can we\nsend back something other than HTML? Rails actually makes this quite easy for us!\u003c/p\u003e\n\n\u003cp\u003eLet's go back to the controller, and update the \u003ccode\u003eindex\u003c/code\u003e action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/cheese_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCheeseController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003ehello: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cheese World\"\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBy using the \u003ccode\u003erender\u003c/code\u003e method, we're telling Rails: \"instead of rendering an HTML\ntemplate, you should send back JSON data as the response\".\u003c/p\u003e\n\n\u003cp\u003eTry visiting that \u003ca href=\"http://localhost:3000/cheese\"\u003esame URL\u003c/a\u003e one last time:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/creating-a-rails-app-readme/cheese-page-json.png\" alt=\"cheese json page\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThat \u003ccode\u003erender\u003c/code\u003e method is a powerful bit of code. Keep in mind that as a server,\nit's always our job to send back a response to every request. When we're\ndeveloping Rails APIs, using \u003ccode\u003erender\u003c/code\u003e to send back JSON data will be our goal\nfor almost every request!\u003c/p\u003e\n\n\u003cp\u003eThroughout this phase, we'll be focusing on Rails as an API, so don't worry too\nmuch about the \u003ccode\u003e.erb\u003c/code\u003e view files for the time being.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eAt this point, we've learned how to use Rails to send back HTML or JSON data as\na response when our server receives a request. We've also covered the basics of\nthe file structure of a Rails app, and a few important places where we'll be\nwriting the majority of our code as Rails developers. This lesson covered a lot\nof ground at a high level, so don't worry if all the pieces aren't totally clear\nyet. Throughout the rest of the section, we'll dive deeper into each of the\npieces that make up a Rails API.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat three folders in the Rails file structure will you use most as you're\ndeveloping your Rails app, and for what?\u003c/li\u003e\n\u003cli\u003eWhen an HTTP request is made to a Rails app, what is the sequence of events\nthat happens to return the response?\u003c/li\u003e\n\u003cli\u003eWhat are the two methods you learned about in this lesson to provide a\nresponse to an HTTP request? What type of content does each of them return?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/command_line.html\"\u003eThe Rails Command Line\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"creating-a-rails-app"},{"id":483267,"title":"Video: MVC","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-mvc\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-mvc\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-mvc/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/600386049/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/getting_started.html#mvc-and-you\"\u003eRails MVC\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller\"\u003eModel-View-Controller\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-mvc"},{"id":483268,"title":"Model-View-Controller (MVC)","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-model-view-controller-readme\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-model-view-controller-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-model-view-controller-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the benefit of the model-view-controller pattern\u003c/li\u003e\n\u003cli\u003eKnow what each layer of MVC is responsible for\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eModel-View-Controller Overview\u003c/h2\u003e\n\n\u003cp\u003eIn order to ensure that applications have a specific organizational structure,\nthe creators of Rails utilized the model-view-controller architecture. This\nconcept can be a little abstract if you've never used it before, so let's give\nit a real world analogy.\u003c/p\u003e\n\n\u003cp\u003eIn a restaurant kitchen we have three key components:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eA chef who makes the food\u003c/li\u003e\n\u003cli\u003eA waiter who takes the food from the chef and brings it to the table\u003c/li\u003e\n\u003cli\u003eA table where the food is served to the customer\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eUsing this as an analogy, we can assign the following roles to each of our\nrestaurant components:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eModel\u003c/strong\u003e: The model is the \u003cem\u003echef\u003c/em\u003e. It manages the critical aspects of the\napplication, such as communicating with the database via Active Record. One of\nour favorite tasks in a Rails application is working with the model files. This\nis where you can be very expressive with the custom algorithms that you want\nto utilize and you also have direct access to the specific database record.\nThe logic of your application should mainly reside in the model files.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eController\u003c/strong\u003e: The controller is the \u003cem\u003ewaiter\u003c/em\u003e. In the same way that the\nwaiter takes the order from the customer to the chef and then brings the food\nto the table, the controller transmits data requests from the user to the\nmodel, and then delivers data that is rendered in the view to the user.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eView\u003c/strong\u003e: The view is the \u003cem\u003etable\u003c/em\u003e. A table shouldn't do anything besides sit\nthere and hold the food when it is delivered. In like manner the views should\nnot contain any programming logic, they should simply render what the\ncontroller sends them. In a Rails API application, our view layer will consist\nof the JSON data that is returned from our controllers.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eRouting, File Naming Conventions, and Data Flow\u003c/h2\u003e\n\n\u003cp\u003eRails was created with the concept of convention over configuration, and this\nholds true for how the MVC structure was set up. View files correspond directly\nto controller files, which speak directly with models. As an example, imagine\nyou have a blog that has a database table called \u003ccode\u003earticles\u003c/code\u003e. You will have the\nfollowing set of files:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eAn \u003ccode\u003eapp/models/article.rb\u003c/code\u003e model file that will contain: validations, database\nrelationships, callbacks, and any custom logic for articles.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eAn \u003ccode\u003eapp/controllers/articles_controller.rb\u003c/code\u003e file that will have methods to manage\ndata flow for the article behavior, including the full set of CRUD features.\nThe standard methods are: \u003ccode\u003eindex\u003c/code\u003e, \u003ccode\u003ecreate\u003c/code\u003e, \u003ccode\u003eshow\u003c/code\u003e, \u003ccode\u003eupdate\u003c/code\u003e, and \u003ccode\u003edestroy\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eAn \u003ccode\u003eapp/views/articles\u003c/code\u003e directory that will contain a corresponding view for\neach of the pages that the end user will access. \u003cstrong\u003eNote\u003c/strong\u003e: in a Rails API\napplication, we won't have a dedicated folder for our views like we would in a\ntypical Rails MVC application.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIn order to benefit from all the work Rails does for us — and to avoid breaking\nour app — we need to follow the indicated file structure and naming conventions.\u003c/p\u003e\n\n\u003ch2\u003eRequest Flow\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://s3.amazonaws.com/flatiron-bucket/readme-lessons/mvc_flow_updated.png\" alt=\"MVC Request Flow\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eRoles and Responsibilities\u003c/h2\u003e\n\n\u003cp\u003eOne reason that MVC architecture is so popular is because it enforces the idea\nof \u003cstrong\u003eseparation of concerns\u003c/strong\u003e in an application. Each layer has a clearly\ndefined role.\u003c/p\u003e\n\n\u003ch3\u003eModels\u003c/h3\u003e\n\n\u003cp\u003eAt the end of the day, the model file is a Ruby class. If it has a corresponding\ndatabase table, it will inherit from the \u003ccode\u003eActiveRecord::Base\u003c/code\u003e class, which means\nthat it can access a number of methods that assist in working with the database.\nHowever, you can treat it like a regular Ruby class, allowing you to create\nmethods, data attributes, and everything else that you would want to do in a\nclass file.\u003c/p\u003e\n\n\u003cp\u003eIn a typical model file you will find your application's domain logic. To extend\nthe restaurant analogy, the chef (your \u003cstrong\u003emodel\u003c/strong\u003e) performs a number of tasks to\ncreate each meal that the waiter (\u003cstrong\u003econtroller\u003c/strong\u003e) and especially the table\n(\u003cstrong\u003eviews\u003c/strong\u003e) don't know anything about. Some of this domain logic would include\nitems such as complex database queries, data relationships, and custom\nalgorithms.\u003c/p\u003e\n\n\u003cp\u003eIt is important to remember to follow the \u003cstrong\u003esingle responsibility principle\u003c/strong\u003e for\nyour model class files. If any of the methods that you place in the model file\nperform tasks outside the scope of that specific model, they should probably be\nmoved to their own class.\u003c/p\u003e\n\n\u003ch3\u003eControllers\u003c/h3\u003e\n\n\u003cp\u003eAs mentioned before, the controller is like the waiter in a restaurant. The\ncontrollers connect the models, views, and routes.\u003c/p\u003e\n\n\u003cp\u003eIn order for the controller to be able to connect everything together, each\nroute defined in the routes file must have a corresponding method in a\ncontroller. When a request comes in, Rails uses the routes file to determine\nwhich controller method to run. The controller method then accesses data using\nthe model, and uses that data to render the correct view (whether that's an\nactual \u003ccode\u003e.erb\u003c/code\u003e file, or some JSON data).\u003c/p\u003e\n\n\u003cp\u003eRemembering our restaurant analogy, the easiest way to think of the controller\nis that it manages data flow between the routes, model, and views, in the same\nway that a waiter takes the order from a patron, relays the order details to the\nchef, and brings the meal out to the table.\u003c/p\u003e\n\n\u003ch3\u003eViews\u003c/h3\u003e\n\n\u003cp\u003eIn a Rails application, the view layer should contain the least amount of logic\nof any layer in the model-view-controller architecture. The role of the view is\nto simply render whatever it is sent from the controller.\u003c/p\u003e\n\n\u003cp\u003eThe kind of data our view layer is responsible for depends on what kind of\nresponse our clients need. In a full-stack Rails app, that could mean generating\nHTML as a view by using a \u003ccode\u003e.erb\u003c/code\u003e template:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight erb\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e\u0026lt;div\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"cp\"\u003e\u0026lt;%=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"vi\"\u003e@post\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etitle\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e: \u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"vi\"\u003e@post\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esummary\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e \u003cspan class=\"cp\"\u003e%\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFor a Rails API, we'll typically be responding with JSON data.\u003c/p\u003e\n\n\u003cp\u003eThe data for our view layer will typically come from our models:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eArticlesController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# access data from the Model\u003c/span\u003e\n    \u003cspan class=\"n\"\u003earticles\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eArticle\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# respond with a View\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003earticles\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLater on, we'll also see how to customize the structure of this JSON data even\nfurther using a \u003cstrong\u003eserializer\u003c/strong\u003e. For now though, just think of the view as the\nresponse that's being returned from the controller.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eIn the MVC architecture, what is the primary responsibility of each of the\nthree layers?\u003c/li\u003e\n\u003cli\u003eIn the MVC architecture, which layer should contain the most logic? Which\nshould contain the least?\u003c/li\u003e\n\u003cli\u003eWhat are some benefits of using Rails and the MVC architecture?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/getting_started.html\"\u003eGetting Started with Rails\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"model-view-controller-mvc"},{"id":483269,"title":"Video: Rails Generators","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-rails-generators\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-generators\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-generators/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/600488344/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/command_line.html#bin-rails-generate\"\u003eRails Command Line: \u003ccode\u003erails generate\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-rails-generators"},{"id":483270,"title":"Video: Rails Migrations","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-rails-migrations\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-migrations\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-migrations/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/600574753/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/active_record_migrations.html\"\u003eActive Record Migrations\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-rails-migrations"},{"id":483271,"title":"Video: Seeds","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-seeds\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-seeds\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-seeds/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/606691616/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/v5.1/active_record_migrations.html#migrations-and-seed-data\"\u003eRails Guides: Migrations and Seed Data\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-seeds"},{"id":483272,"title":"Video: Faker","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-faker\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-faker\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-faker/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/606724911/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/faker-ruby/faker\"\u003eFaker gem\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-faker"},{"id":483273,"title":"Rails and Active Record","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-and-active-record-readme\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-and-active-record-readme/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-and-active-record-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-and-active-record-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Rails to generate a model\u003c/li\u003e\n\u003cli\u003eCreate seed data\u003c/li\u003e\n\u003cli\u003eTest code using the Rails console\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this code-along, we'll discuss how Active Record fits into a Rails\napplication, as well as some tools to make it easier to set up models in your\nRails apps.\u003c/p\u003e\n\n\u003cp\u003eFork and clone this repo, then run \u003ccode\u003ebundle install\u003c/code\u003e to download the required\ndependencies before coding along.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This code-along has been set up as a Rails app for you, so you will\nbe running all the terminal commands inside the lesson directory.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\n\n\n\n\u003ch2\u003eActive Record's Role\u003c/h2\u003e\n\n\u003cp\u003eActive Record is the built-in ORM that Rails utilizes to manage the model\naspects of an application. What is an ORM? An ORM is an Object Relational Mapper\nsystem — a module that enables your application to manage data in a\nmethod-driven structure. This means that you are able to run queries, add\nrecords, and perform all of the traditional database processes by leveraging\nmethods as opposed to writing SQL manually. For example, below is the\ntraditional way that we would query a database of 'cheeses' using SQL:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight sql\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"k\"\u003eFROM\u003c/span\u003e \u003cspan class=\"n\"\u003echeeses\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eCompared with leveraging Active Record:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBy using Active Record, you are also able to perform advanced query tasks, such\nas method chaining and scoping, which typically require less code and make for a\nmore readable query.\u003c/p\u003e\n\n\u003ch2\u003eActive Record Models\u003c/h2\u003e\n\n\u003cp\u003eBy using model files, we are able to create an organized layer of abstraction\nfor our data. An important thing to remember is that at the end of the day the\nmodel file is a Ruby class. It will typically inherit from the\n\u003ccode\u003eActiveRecord::Base\u003c/code\u003e class, which means that it has access to a number of\nmethods that assist in working with the database. However, you can treat it like\na regular Ruby class, allowing you to create methods, data attributes, and\neverything else that you would want to do in a class file.\u003c/p\u003e\n\n\u003cp\u003eA typical model file will contain code such as but not limited to the following:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://api.rubyonrails.org/classes/ActiveRecord/Scoping/Named/ClassMethods.html\"\u003eCustom scopes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eModel instance methods\u003c/li\u003e\n\u003cli\u003eDefault settings for database columns\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://api.rubyonrails.org/classes/ActiveModel/Validations/ClassMethods.html\"\u003eValidations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html\"\u003eModel-to-model relationships\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://api.rubyonrails.org/classes/ActiveRecord/Callbacks.html\"\u003eCallbacks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eCustom algorithms\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cem\u003eIf any/all of the items above aren't familiar to you yet, don't worry. We'll\ncover them in future lessons. It's important to have an idea of what can be\nincluded in a model file, even at this early stage.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003eCreating an Active Record Model\u003c/h2\u003e\n\n\u003cp\u003eAs a Rails developer, one common task you'll have is creating models that are\nconnected to a database via Active Record. To simplify this task, and ensure\nthat your code follows Rails conventions, Rails has a built-in generator\nto help write some of the code you'll need for a new model.\u003c/p\u003e\n\n\u003cp\u003eLet's start with a definition of what our model will be. For our Cheese Shop\napplication, we'll want a way to keep track of all of our cheeses. In\nparticular, we'll want to know our cheese's \u003cem\u003ename\u003c/em\u003e, its \u003cem\u003eprice\u003c/em\u003e in dollars, and\nwhether it's a \u003cem\u003ebest seller\u003c/em\u003e. In the database, our \u003ccode\u003echeeses\u003c/code\u003e should look something\nlike this:\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003ccode\u003eid\u003c/code\u003e\u003c/th\u003e\n\u003cth\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/th\u003e\n\u003cth\u003e\u003ccode\u003eprice\u003c/code\u003e\u003c/th\u003e\n\u003cth\u003e\u003ccode\u003eis_best_seller\u003c/code\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e1\u003c/td\u003e\n\u003ctd\u003eCheddar\u003c/td\u003e\n\u003ctd\u003e3\u003c/td\u003e\n\u003ctd\u003etrue\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2\u003c/td\u003e\n\u003ctd\u003ePepper Jack\u003c/td\u003e\n\u003ctd\u003e4\u003c/td\u003e\n\u003ctd\u003etrue\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e3\u003c/td\u003e\n\u003ctd\u003eLimburger\u003c/td\u003e\n\u003ctd\u003e8\u003c/td\u003e\n\u003ctd\u003efalse\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eTo set this up in our Rails app, we'll need a few things:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eA \u003cstrong\u003emigration\u003c/strong\u003e with instructions on how the table should be created in the\ndatabase\u003c/li\u003e\n\u003cli\u003eA \u003cstrong\u003emodel\u003c/strong\u003e so we can interact with that table via Active Record\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eUsing Rails Generators\u003c/h2\u003e\n\n\u003cp\u003eRails gives us an easy way of creating both of these things using a\n\u003cstrong\u003egenerator\u003c/strong\u003e we can run from the command line.\u003c/p\u003e\n\n\u003cp\u003eMake sure you've navigated into the directory for this lesson, then run this\ncommand in your terminal:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g model Cheese name price:integer is_best_seller:boolean \u003cspan class=\"nt\"\u003e--no-test-framework\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe're telling Rails to generate the code for a Cheese model, with a \u003ccode\u003ename\u003c/code\u003e\nattribute (string, the default data type), \u003ccode\u003eprice\u003c/code\u003e (integer), and\n\u003ccode\u003eis_best_seller\u003c/code\u003e (boolean).\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eIMPORTANT\u003c/strong\u003e: Note that we have added the \u003ccode\u003eno-test-framework\u003c/code\u003e argument to our\n\u003ccode\u003erails g\u003c/code\u003e command. \u003cstrong\u003eYou should add this argument to every Rails generator\ncommand you run while you're working in the Flatiron curriculum.\u003c/strong\u003e Without this\nflag, the Rails generator will automatically create spec files that can\ninterfere with the lab tests. If you forget to add it, you will have to comb\nthrough your local repo and manually delete all of the newly-created,\nunnecessary tests. This is not fun!\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003ePlease, remember the \u003ccode\u003e--no-test-framework\u003c/code\u003e argument.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eYou'll see this code added in a \u003ccode\u003ecreate_cheeses.rb\u003c/code\u003e file — the name of the file\nwill be prepended with a time stamp — inside the \u003ccode\u003edb/migrate\u003c/code\u003e folder:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCreateCheeses\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eMigration\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mf\"\u003e6.1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003echange\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecreate_table\u003c/span\u003e \u003cspan class=\"ss\"\u003e:cheeses\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n      \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estring\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\n      \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einteger\u003c/span\u003e \u003cspan class=\"ss\"\u003e:price\u003c/span\u003e\n      \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eboolean\u003c/span\u003e \u003cspan class=\"ss\"\u003e:is_best_seller\u003c/span\u003e\n\n      \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etimestamps\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs well as this code in the \u003ccode\u003eapp/models\u003c/code\u003e folder:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/models/cheese.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCheese\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eWorking With Migrations\u003c/h2\u003e\n\n\u003cp\u003eNow that we've created this migration, we have to run the migration, which will\ncreate this table for us and generate a schema file.\u003c/p\u003e\n\n\u003cp\u003eRun the migration by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFor a refresher on migrations, see \u003ca href=\"http://edgeguides.rubyonrails.org/active_record_migrations.html\"\u003ethis documentation\u003c/a\u003e. This\nmigration follows the standard naming convention. When you want to create a\ntable, the migration's class name should reflect that; hence, \u003ccode\u003eCreateCheeses\u003c/code\u003e.\nThis is then reiterated by the \u003ccode\u003e:cheeses\u003c/code\u003e argument passed to the \u003ccode\u003ecreate_table\u003c/code\u003e\nmethod. The filename itself needs to be unique, and you will notice that the\nmigration file name is prepended with a timestamp value to make sure that we can\nrun migrations in the order they were written.\u003c/p\u003e\n\n\u003cp\u003eThe timestamp also plays a role in making sure that only new migrations run when\nwe run \u003ccode\u003erails db:migrate\u003c/code\u003e. The \u003ccode\u003edb/schema.rb\u003c/code\u003e file is updated with a version\nnumber corresponding to the timestamp of the last migration you ran. When you\nrun \u003ccode\u003erails db:migrate\u003c/code\u003e again, only migrations whose timestamps are greater than\nthe schema's version number will run. So, the numbers at the beginning of the\nfilenames of your migrations are required so Active Record can be sure to run\neach of your migrations just once and in the proper order.\u003c/p\u003e\n\n\u003cp\u003eAfter running \u003ccode\u003erails db:migrate\u003c/code\u003e we can see that our \u003ccode\u003edb/schema.rb\u003c/code\u003e file has\nbeen updated with our new \u003ccode\u003echeeses\u003c/code\u003e table!\u003c/p\u003e\n\n\u003ch2\u003eSeeding Data\u003c/h2\u003e\n\n\u003cp\u003eTo add some initial data in our database, we can take advantage of the 'seeds' feature of Rails. We can write some code in a \u003ccode\u003edb/seeds.rb\u003c/code\u003e file that is responsible for setting up our database:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# db/seeds.rb\u003c/span\u003e\n\u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Cheddar'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eprice: \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eis_best_seller: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Pepper Jack'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eprice: \u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eis_best_seller: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Limburger'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eprice: \u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eis_best_seller: \u003c/span\u003e\u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, run \u003ccode\u003erails db:seed\u003c/code\u003e to execute all the code in the \u003ccode\u003edb/seeds.rb\u003c/code\u003e file.\u003c/p\u003e\n\n\u003cp\u003eLet's test out our code using the Rails console. Open up the console by running\n\u003ccode\u003erails console\u003c/code\u003e or \u003ccode\u003erails c\u003c/code\u003e. Running the console will load the entire Rails\nenvironment and give you command line access to the app and the database. The\nconsole is a powerful tool that you can leverage in order to test out scripts,\nmethods, and database queries.\u003c/p\u003e\n\n\u003cp\u003eOnce the session has started, run the following command to ensure it recognizes\nour new Cheese model:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf everything is set up properly, you will see that it returns all the cheeses\nwe created in the seed file! You can test out some other methods here as well:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRecall that Active Record also allows us to use method chaining to access the\nattributes we've defined for our Cheese model:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ename\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith our \u003ccode\u003eCheese\u003c/code\u003e model working, let's add a new feature that returns a summary\nof a cheese. Exit out of the Rails console with \u003ccode\u003econtrol + d\u003c/code\u003e. Then add this to\nthe Cheese model file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/models/cheese.rb\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esummary\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ename\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e: $\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eprice\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eGo ahead and test this new method out in the Rails console by running a query on\none of our records, for example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esummary\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you didn't exit the Rails console before adding the new Cheese#summary\nmethod, you can get the console to reload all your code by running \u003ccode\u003ereload!\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIt should return the summary value of the last cheese we created: \u003ccode\u003e\"Limburger: $8\"\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eAs you may have noticed, we did not have to create a controller, route, view,\netc. in order to get the \u003ccode\u003eCheese\u003c/code\u003e model working. The data aspect of the\napplication can work separately from the view and data flow logic. This level of\nabstraction makes it possible to test the behavior of our models without\nhaving them strongly coupled to how they are rendered to the user.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWe covered quite a bit of material in this lesson. You should now have a firm\nunderstanding of Active Record models in Rails. Active Record is a powerful tool\nthat enables developers to focus on the logic of their applications while\nstreamlining processes such as connecting to the database, running queries, and\nmuch more.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat are some of the ways that using Active Record in Rails makes it easier\nto interact with model data stored in a database?\u003c/li\u003e\n\u003cli\u003eWhat are the advantages of using a Rails generator to create our models?\u003c/li\u003e\n\u003cli\u003eWhy is it important for migration file names to have a timestamp prepended?\u003c/li\u003e\n\u003c/ol\u003e","exportId":"g91e9ec1190f54eccb5388f98316256ab"},{"id":483274,"title":"Rails and Active Record Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-and-active-record-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-and-active-record-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-and-active-record-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-and-active-record-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eLearning Goals\u003c/h2\u003e  \u003cul\u003e \u003cli\u003eUse Rails to generate a model\u003c/li\u003e \u003cli\u003eAdd methods to a model\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eThroughout this module, we'll be building an application for viewing student data. In this lesson, we'll start by creating a Student model.\u003c/p\u003e  \u003cp\u003eTo get set up, run \u003ccode\u003ebundle install\u003c/code\u003e to download all the necessary dependencies.\u003c/p\u003e  \u003cp\u003eThen, run \u003ccode\u003elearn test\u003c/code\u003e to run the tests.\u003c/p\u003e  \u003ch2\u003eInstructions\u003c/h2\u003e  \u003cp\u003eUsing \u003ccode\u003erails g model\u003c/code\u003e, create a new Student model with the following attributes:\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\n\u003ccode\u003efirst_name\u003c/code\u003e (string)\u003c/li\u003e \u003cli\u003e\n\u003ccode\u003elast_name\u003c/code\u003e (string)\u003c/li\u003e \u003cli\u003e\n\u003ccode\u003egrade\u003c/code\u003e (integer)\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003e\u003cstrong\u003eDon't forget to add the \u003ccode\u003e--no-test-framework\u003c/code\u003e argument to your generate command!\u003c/strong\u003e\u003c/p\u003e  \u003cp\u003eAdd an instance method \u003ccode\u003eStudent#to_s\u003c/code\u003e which will return the student's first name and last name concatenated with a space between. For example: calling \u003ccode\u003e.to_s\u003c/code\u003e on a student with a \u003ccode\u003efirst_name\u003c/code\u003e of \"Dwayne\" and a \u003ccode\u003elast_name\u003c/code\u003e of \"Johnson\" should return \"Dwayne Johnson\".\u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: remember to run \u003ccode\u003erails db:migrate\u003c/code\u003e after generating the migration file. You can also test your code by running \u003ccode\u003erails c\u003c/code\u003e and creating a Student instance.\u003c/p\u003e","exportId":"g5a1e9a7887b42a6076238d26032a2838"},{"id":483275,"title":"Video: Rails Routes","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-rails-routes\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-routes\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-routes/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/602233812/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html\"\u003eRails Routing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-rails-routes"},{"id":483276,"title":"Rails Routing Basics","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-routing-basics-readme\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-routing-basics-readme/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-routing-basics-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-routing-basics-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand the flow of data in a Rails app\u003c/li\u003e\n\u003cli\u003eMap routes to controller actions\u003c/li\u003e\n\u003cli\u003eGenerate a controller\u003c/li\u003e\n\u003cli\u003eSend JSON data as a response\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eFork and clone this repo, then run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will download all the dependencies for our app and set up the database.\u003c/p\u003e\n\n\n\n\n\n\u003ch2\u003eRouting\u003c/h2\u003e\n\n\u003cp\u003eHow does your application know what code to run when it receives a request? This\nis where routing comes in.\u003c/p\u003e\n\n\u003cp\u003eBefore we dive into the code and routing configurations, it helps to know how\nHTTP works at a high level. Below is the flow that takes place when a user\nattempts to go to a page on a Rails application:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eA client sends a request to the server (this could be: a user entering a URL\nin a browser; a JavaScript application using \u003ccode\u003efetch\u003c/code\u003e; etc)\u003c/li\u003e\n\u003cli\u003eThat request is sent to the server where the application's router interprets\nthe request and sends a message to the controller mapped to that route\u003c/li\u003e\n\u003cli\u003eThe controller uses the model to access data from the database\u003c/li\u003e\n\u003cli\u003eThe controller then uses that data to render a view (HTML or JSON)\u003c/li\u003e\n\u003cli\u003eThe server returns an HTTP response, which contains the HTML or JSON data\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eCreating a Route\u003c/h2\u003e\n\n\u003cp\u003eLet's try this out in our application. We'll continue using our Cheese Shop app\nas an example. Our goal will be to create an endpoint for our application that\nwill return a list of all our cheeses as JSON data.\u003c/p\u003e\n\n\u003cp\u003eTo begin, start up the Rails server with \u003ccode\u003erails s\u003c/code\u003e and go to\n\u003ca href=\"http://localhost:3000/cheeses\"\u003e\u003ccode\u003ehttp://localhost:3000/cheeses\u003c/code\u003e\u003c/a\u003e. As you will\nsee, this throws a routing error: \u003ccode\u003eNo route matches [GET] \"/cheeses\"\u003c/code\u003e. To fix\nthis, we'll need to add a route.\u003c/p\u003e\n\n\u003cp\u003eStart by opening the \u003ccode\u003econfig/routes.rb\u003c/code\u003e file and adding the following route\ninside of the \u003ccode\u003edraw\u003c/code\u003e block:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'cheeses'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'cheeses#index'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet's look at the components that make up this route code:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eHTTP verb\u003c/strong\u003e: in this case we're using the \u003ccode\u003eget\u003c/code\u003e HTTP verb.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003ePath\u003c/strong\u003e: \u003ccode\u003e'cheeses'\u003c/code\u003e represents the path in the URL bar that the route will be\nmapped to.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eController Action\u003c/strong\u003e: \u003ccode\u003e'cheeses#index'\u003c/code\u003e tells the Rails routing system that\nthis route should be passed through the \u003ccode\u003eCheesesController\u003c/code\u003e's \u003ccode\u003eindex\u003c/code\u003e action.\nIf the term \u003ccode\u003eaction\u003c/code\u003e sounds foreign, actions are just Rails-speak for an\ninstance method in a controller. So in the \u003ccode\u003eCheesesController\u003c/code\u003e will be a method\ncalled \u003ccode\u003eindex\u003c/code\u003e that gets called when a user goes to \u003ccode\u003e/cheeses\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eNow go back to\n\u003ca href=\"http://localhost:3000/cheeses\"\u003e\u003ccode\u003ehttp://localhost:3000/cheeses\u003c/code\u003e\u003c/a\u003e, and refresh\nthe page. You should now see that the error message has changed. It's no longer\ncomplaining about not having a route; it should now say:\n\u003ccode\u003euninitialized constant CheesesController\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eLet's fix this by creating a new controller for our cheeses. You can generate a controller using a Rails generator, just like with a model:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g controller Cheeses \u003cspan class=\"nt\"\u003e--no-test-framework\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNotice the naming convention we're following: for a \u003ccode\u003eCheese\u003c/code\u003e model, we need a\n\u003ccode\u003eCheeses\u003c/code\u003e controller. \u003cstrong\u003eModel names are always singular, and controller names\nare plural\u003c/strong\u003e. These conventions are important to keep in mind!\u003c/p\u003e\n\n\u003cp\u003eThis will create a blank controller file \u003ccode\u003e/app/controllers/cheeses_controller.rb\u003c/code\u003e\nthat we can use to map to the routing file. Since there are a number of methods\nbuilt into the Rails controller system, you will also want the controller to\ninherit from the application controller. The new file should have code that\nlooks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCheesesController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe standard naming convention for controllers is the name of the controller\nfollowed by the word \u003ccode\u003eController\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf you refresh the browser now, you will see a new error:\n\u003ccode\u003eThe action 'index' could not be found for CheesesController\u003c/code\u003e. This means that\nit found our controller (woot!) but couldn't find the action \u003ccode\u003eindex\u003c/code\u003e in that\ncontroller (womp womp).\u003c/p\u003e\n\n\u003cp\u003eWe're making good progress (even though we're using EDD - error driven\ndevelopment), and it's good to see each of the errors so that when you encounter\nthese in your real world projects you will know how to fix them. This current\nerror is fixed by adding the following method in the \u003ccode\u003eCheesesController\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn this method, our goal is to send back a list of all our cheeses as JSON data.\nTo help accomplish our goal, let's do a bit of debugging in our controller action\nusing \u003ccode\u003ebyebug\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebyebug\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you haven't encountered \u003ccode\u003ebyebug\u003c/code\u003e before, it's a way to add \u003cem\u003ebreakpoints\u003c/em\u003e to\nour Rails code so we can \u003cem\u003epause the execution of our code\u003c/em\u003e and experiment. It\nfunctions similarly to \u003ccode\u003ebinding.pry\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eVisit \u003ca href=\"http://localhost:3000/cheeses\"\u003e\u003ccode\u003ehttp://localhost:3000/cheeses\u003c/code\u003e\u003c/a\u003e in the\nbrowser again, and check your terminal: you should be in the \u003ccode\u003ebyebug\u003c/code\u003e session\nnow! That means you have access to everything that's available inside our\ncontroller and can try out the code we need to return our list of cheeses.\u003c/p\u003e\n\n\u003cp\u003eFrom your \u003ccode\u003ebyebug\u003c/code\u003e session, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003echeeses\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will create a new \u003ccode\u003echeeses\u003c/code\u003e variable with all the cheese data from the\ndatabase!\u003c/p\u003e\n\n\u003cp\u003eTo see how to return a response with this cheese data, you can also run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003echeeses\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eCalling the \u003ccode\u003erender\u003c/code\u003e method with the \u003ccode\u003ejson:\u003c/code\u003e option will produce a\nJSON-formatted string of data which the controller can then use as the body of\nthe response being sent back to the client. If we pass an Active Record object\n(in this case, our \u003ccode\u003echeeses\u003c/code\u003e variable) to this render method, it will be\n\u003cem\u003eserialized\u003c/em\u003e as JSON data based on the attributes of the object.\u003c/p\u003e\n\n\u003cp\u003eTo exit \u003ccode\u003ebyebug\u003c/code\u003e gracefully, type \u003ccode\u003econtinue\u003c/code\u003e or \u003ccode\u003ec\u003c/code\u003e and hit enter.\u003c/p\u003e\n\n\u003cp\u003eNow that we've seen how that code will run in \u003ccode\u003ebyebug\u003c/code\u003e, let's add it to the\ncontroller action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n  \u003cspan class=\"n\"\u003echeeses\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003echeeses\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eVisit \u003ca href=\"http://localhost:3000/cheeses\"\u003e\u003ccode\u003ehttp://localhost:3000/cheeses\u003c/code\u003e\u003c/a\u003e in the\nbrowser one more time. Now you should see the JSON data being returned!\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eYou should now have a firm understanding of how to implement basic routing in\nyour application for static pages. Try experimenting by adding more routes and\ncontroller actions, and see what other responses you can set up by changing how\nyou are accessing data from the database (like using the \u003ccode\u003e.order\u003c/code\u003e or \u003ccode\u003e.limit\u003c/code\u003e\nmethods from Active Record).\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhen an HTTP request is made to a Rails app, what is the sequence of events\nthat happens to return the response?\u003c/li\u003e\n\u003cli\u003eWhat three components make up a route in Rails?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html\"\u003eRails Routing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g46b74b66bf6994f71b7de1b4de8c2506"},{"id":483277,"title":"Rails Routing Basics Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-routing-basics-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-routing-basics-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-routing-basics-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-routing-basics-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a route\u003c/li\u003e\n\u003cli\u003eMap a route to a controller/action\u003c/li\u003e\n\u003cli\u003eSend JSON data as a response\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe'll continue building our API for viewing student data. In this lesson, we'll\nadd some routes and controller logic for displaying data about our students.\u003c/p\u003e\n\n\u003cp\u003eTo get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will download all the dependencies for our app and set up the database.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003ch3\u003eIndex Route\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a route for making a \u003ccode\u003eGET\u003c/code\u003e request to \u003ccode\u003e/students\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eGenerate a \u003ccode\u003eStudentsController\u003c/code\u003e with an \u003ccode\u003eindex\u003c/code\u003e action for handling the route;\ndon't forget to pass the \u003ccode\u003e--no-test-framework\u003c/code\u003e argument!\u003c/li\u003e\n\u003cli\u003eIn the \u003ccode\u003eindex\u003c/code\u003e action, return JSON data representing a list of all\nstudents\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eGrades Route\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a route for making a \u003ccode\u003eGET\u003c/code\u003e request to \u003ccode\u003e/students/grades\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eAdd a \u003ccode\u003egrades\u003c/code\u003e action in the \u003ccode\u003eStudentsController\u003c/code\u003e for handling that route\u003c/li\u003e\n\u003cli\u003eIn the \u003ccode\u003egrades\u003c/code\u003e action, return JSON data representing a list of all students,\nordered by grade from highest to lowest\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eBonus: Highest Grade Route\u003c/h3\u003e\n\n\u003cp\u003e\u003cstrong\u003eUn-comment out the last test in \u003ccode\u003e/spec/requests/students_spec.rb\u003c/code\u003e to complete the bonus.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a route for making a \u003ccode\u003eGET\u003c/code\u003e request to \u003ccode\u003e/students/highest-grade\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eAdd a \u003ccode\u003ehighest_grade\u003c/code\u003e action in the \u003ccode\u003eStudentsController\u003c/code\u003e for handling that\nroute\u003c/li\u003e\n\u003cli\u003eIn the \u003ccode\u003ehighest_grade\u003c/code\u003e action, return JSON data representing the one student\nwith the highest grade\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eNote\u003c/strong\u003e: while the other two routes should return an array of data, this\nroute should return just one student object!\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html\"\u003eRails Routing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/active_record_querying.html\"\u003eActive Record Query Interface\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g30af72554c74150e517c2b3b77842e34"},{"id":483278,"title":"Route Params","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-route-params-readme\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-route-params-readme/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-route-params-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-route-params-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a dynamic route\u003c/li\u003e\n\u003cli\u003eUse route parameters in the controller via the params hash\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eFork and clone this repo, then run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will download all the dependencies for our app and set up the database.\u003c/p\u003e\n\n\u003ch2\u003eVideo Walkthrough\u003c/h2\u003e\n\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/BWeBbIDlHwI?rel=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eReview\u003c/h2\u003e\n\n\u003cp\u003eYou already know how to create a static request, which is where you create a\npage that doesn't take any parameters and simply renders a view. For example:\n\u003ccode\u003elocalhost:3000/cheeses\u003c/code\u003e. For Rails to process this request, the \u003ccode\u003eroutes.rb\u003c/code\u003e file\ncontains a route such as:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/cheeses'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'cheeses#index'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is mapped to the \u003ccode\u003echeeses\u003c/code\u003e controller and its \u003ccode\u003eindex\u003c/code\u003e action, which renders\nan array of cheeses as JSON.\u003c/p\u003e\n\n\u003ch2\u003eDynamic Routes\u003c/h2\u003e\n\n\u003cp\u003eConsider this scenario: We're building a frontend feature for displaying data\nabout one individual cheese. It'd be nice to be able to request data about \u003cem\u003eone\nindividual cheese\u003c/em\u003e, instead of only being able to retrieve an array of all\ncheeses. Ideally, we'd use the ID of the cheese as part of the URL to identify\nwhich cheese we're gathering data about: \u003ccode\u003elocalhost:3000/cheeses/3\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWe could make separate routes for each cheese:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/cheeses/1'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"cheeses#first\"\u003c/span\u003e\n\u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/cheeses/2'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"cheeses#second\"\u003c/span\u003e\n\u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/cheeses/3'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"cheeses#third\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut that would quickly get ridiculous. You would have to modify your web server\nevery time someone creates a new cheese! Enter \u003cstrong\u003edynamic routes\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/cheeses/:id'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'cheeses#show'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eA breakdown of the dynamic route process flow is below:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eThe \u003ccode\u003eroutes.rb\u003c/code\u003e file takes in the request to \u003ccode\u003elocalhost:3000/cheeses/3\u003c/code\u003e and\nprocesses it like normal, except this time it also parses the \u003ccode\u003e3\u003c/code\u003e as a \u003cstrong\u003eURL\nparameter\u003c/strong\u003e and passes it to the \u003ccode\u003eCheesesController\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eFrom that point, the controller action that you write will parse the \u003ccode\u003e3\u003c/code\u003e\nparameter and run a query on the \u003ccode\u003eCheese\u003c/code\u003e model.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eOnce we have the correct Cheese instance, we can render a JSON response.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eIn review, what's the difference between static and dynamic routes?\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eStatic routes have a fixed path. For example, the \u003ccode\u003e/cheeses\u003c/code\u003e path will always\nshow a list of all cheeses.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eDynamic routes will render different data based on the parameters in the path.\nFor example, when \u003ccode\u003e3\u003c/code\u003e is passed in as the parameter to the \u003ccode\u003e/cheeses/:id\u003c/code\u003e\nroute, the app should render the data for the cheese with an ID of \u003ccode\u003e3\u003c/code\u003e. When\n\u003ccode\u003e222\u003c/code\u003e is passed in, the app should render the data for the cheese with an ID\nof \u003ccode\u003e222\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCode Implementation\u003c/h2\u003e\n\n\u003cp\u003eIn order to setup a dynamic request feature, we've got some tests already in\nplace:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# spec/requests/cheeses_spec.rb\u003c/span\u003e\n\n\u003cspan class=\"no\"\u003eRSpec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edescribe\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Cheeses'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003etype: :request\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003edescribe\u003c/span\u003e \u003cspan class=\"s1\"\u003e'GET /cheeses/:id'\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    \u003cspan class=\"n\"\u003elet!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:cheese\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cheddar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eprice: \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eis_best_seller: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"s1\"\u003e'returns the cheese with the matching id'\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/cheeses/\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"n\"\u003echeese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\n\n      \u003cspan class=\"n\"\u003eexpect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003einclude_json\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n        \u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003ea_kind_of\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n        \u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Cheddar'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"ss\"\u003eprice: \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"ss\"\u003eis_best_seller: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRunning \u003ccode\u003elearn test\u003c/code\u003e gives us an expected error:\n\u003ccode\u003eActionController::RoutingError: No route matches [GET] \"/cheeses/1\"\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eTo correct this error, let's draw a route in \u003ccode\u003econfig/routes.rb\u003c/code\u003e that maps to a\nshow action in the \u003ccode\u003eCheesesController\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/cheeses/:id'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'cheeses#show'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou will notice something that's different from the static route. The \u003ccode\u003e/:id\u003c/code\u003e\ntells the routing system that this route can receive a parameter and that the\nparameter will be passed to the controller's \u003ccode\u003eshow\u003c/code\u003e action. With this route in\nplace, let's run our tests again.\u003c/p\u003e\n\n\u003cp\u003eYou should see a new failure this time:\n\u003ccode\u003eAbstractController::ActionNotFound: The action 'show' could not be found for CheesesController\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis means that we need to create a corresponding \u003ccode\u003eshow\u003c/code\u003e action in the\n\u003ccode\u003eCheesesController\u003c/code\u003e. Let's get this failure fixed by adding a show action to our controller:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/cheeses_controller.rb\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCheesesController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003echeeses\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003echeeses\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRun the tests again. You'll see a new error:\n\u003ccode\u003eJSON::ParserError: unexpected token at ''\u003c/code\u003e. We're getting this error because\nwe're not returning any JSON data from our controller action.\u003c/p\u003e\n\n\u003cp\u003eIf you start the Rails server and navigate to \u003ccode\u003e/cheeses/1\u003c/code\u003e or any other cheese\nrecord, the router will know what you're talking about so it won't return an\nerror. However, it won't display the requested content because the controller\nstill needs to be told what to do with the \u003ccode\u003eid\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3\u003eThe Params Hash\u003c/h3\u003e\n\n\u003cp\u003eWe first need to get the ID sent by the user through the dynamic URL. This\nvariable is passed into the controller in a hash called \u003ccode\u003eparams\u003c/code\u003e. Let's put a\n\u003ccode\u003ebyebug\u003c/code\u003e inside our \u003ccode\u003e#show\u003c/code\u003e action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/cheeses_controller.rb\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebyebug\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRun the tests to drop into the debugger and take a look at the value of\n\u003ccode\u003eparams\u003c/code\u003e. You should see this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#\u0026lt;ActionController::Parameters {\"controller\"=\u0026gt;\"cheeses\", \"action\"=\u0026gt;\"show\", \"id\"=\u0026gt;\"1\"} permitted: false\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSince we named the route \u003ccode\u003e/cheeses/:id\u003c/code\u003e, the ID is the value of the \u003ccode\u003e:id\u003c/code\u003e key,\nstored in \u003ccode\u003eparams[:id]\u003c/code\u003e. You can verify that by checking the value of\n\u003ccode\u003eparams[:id]\u003c/code\u003e in \u003ccode\u003ebyebug\u003c/code\u003e. So next we can set up our \u003ccode\u003e#show\u003c/code\u003e action to find and\ndisplay the requested cheese:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/cheeses_controller.rb\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003echeese\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003echeese\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn the first line, our show action is running a database query on the \u003ccode\u003eCheese\u003c/code\u003e\nmodel that will return a cheese with an ID that matches the route parameters. It\nwill store this record in the \u003ccode\u003echeese\u003c/code\u003e variable, which we can then use to render\nJSON data for that cheese object.\u003c/p\u003e\n\n\u003cp\u003eAnd with that, our test is passing, and you now know how to create dynamic\nroutes in Rails! You should also be able to run \u003ccode\u003erails s\u003c/code\u003e and visit\n\u003ccode\u003elocalhost:3000/cheeses/1\u003c/code\u003e to see the JSON data for one individual cheese.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eparams\u003c/code\u003e hash will keep coming back throughout this phase, so make sure you\nfeel comfortable with this concept. For instance: if we wanted a different key\nrather than \u003ccode\u003e:id\u003c/code\u003e in the params hash, what do you think would need to change?\nExperiment a bit with the code in the \u003ccode\u003eroutes.rb\u003c/code\u003e file and the controller, and\nuse \u003ccode\u003ebyebug\u003c/code\u003e to test your assumptions!\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eDynamic routes are helpful when we want to associate some data from the URL with\na record from the database. To create a dynamic route, use the \u003ccode\u003e:param_name\u003c/code\u003e\nsyntax as part of the route, such as \u003ccode\u003eget \"/cheeses/:id\", to: \"cheeses#show\"\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe dynamic parts of the route will be available in the \u003cstrong\u003eparams hash\u003c/strong\u003e in your\ncontroller, so when a request comes in for \u003ccode\u003e/cheeses/3\u003c/code\u003e, you can access the\nnumber \u003ccode\u003e3\u003c/code\u003e in your controller using \u003ccode\u003eparams[:id]\u003c/code\u003e, and then look up the\nassociated record in the database.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat do we mean when we say that a route is \u003cstrong\u003edynamic\u003c/strong\u003e?\u003c/li\u003e\n\u003cli\u003eHow do we tell Rails that a route can receive a \u003cstrong\u003eparameter\u003c/strong\u003e?\u003c/li\u003e\n\u003cli\u003eHow do we retrieve the value of a parameter inside our controller?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html\"\u003eRails Routing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gd37dd6f8ba2d735d6783f8360a58151b"},{"id":483279,"title":"Route Params Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-route-params-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-route-params-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-route-params-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-route-params-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a dynamic route\u003c/li\u003e\n\u003cli\u003eUse the params hash in the controller\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe'll continue building our API for viewing student data. In this lesson, we'll\nadd a route and controller action for displaying data about one individual\nstudent.\u003c/p\u003e\n\n\u003cp\u003eTo get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will download all the dependencies for our app and set up the database.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll add the last feature to our student management app. You will\nneed to integrate the following scenario in your application:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eThe user is able to go to a URL with the student's ID (i.e. \u003ccode\u003e/students/2\u003c/code\u003e) to\nreceive information on the student.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe application should render the values from the student record with the\ncorresponding ID in the database.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eYou can try out your solution by running \u003ccode\u003erails s\u003c/code\u003e and visiting\n\u003ccode\u003elocalhost:3000/students/2\u003c/code\u003e in the browser.\u003c/p\u003e\n\n\u003cp\u003eThere are two failing RSpec specs in this lesson; you can find them in\n\u003ccode\u003espec/requests/student_spec.rb\u003c/code\u003e. Make sure they pass without breaking the other\ntests. To complete this lesson, all specs should pass by running \u003ccode\u003elearn test\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eBonus: Query Params\u003c/h2\u003e\n\n\u003cp\u003eIf you've used other APIs, or investigated some URLs as you've browsed the\ninternet, you may have noticed some URLs have this special syntax:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ehttps://www.google.com/search?q=bread\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThat \u003ccode\u003e?q=bread\u003c/code\u003e portion of the URL is known as a\n\u003ca href=\"https://en.wikipedia.org/wiki/Query_string\"\u003e\u003cstrong\u003equery string parameter\u003c/strong\u003e\u003c/a\u003e. Query string parameters are another\nway of providing data in a request. They're structured as key-value pairs, like\nso:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e/students?key1=value1\u0026amp;key2=value2\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRails gives us access to these query string parameters as part of the params\nhash:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; { key1: \"value1\", key2: \"value2\" }\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs a bonus deliverable:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eUn-comment out the last test in \u003ccode\u003e/spec/requests/students_spec.rb\u003c/code\u003e to complete the bonus.\u003c/strong\u003e\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eUse query params in the \u003ccode\u003eindex\u003c/code\u003e action to return a list of all students whose\nfirst or last name matches the query parameter.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html\"\u003eRails Guides on Routing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://api.rubyonrails.org/classes/ActionDispatch/Routing.html\"\u003eRouting API Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gbd21e6fe3993ef4a9a09e4d922286065"},{"id":483280,"title":"Custom Rendering","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-custom-rendering\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-custom-rendering/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-custom-rendering\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-custom-rendering/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eRender JSON from a Rails controller\u003c/li\u003e\n\u003cli\u003eSelect specific model attributes to render in a Rails controller\u003c/li\u003e\n\u003cli\u003eRender a custom error message\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eFork and clone this repo, then run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will download all the dependencies for our app and set up the database.\u003c/p\u003e\n\n\u003ch2\u003eVideo Walkthrough\u003c/h2\u003e\n\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/N5_l1a-3OV8?rel=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eBy using \u003ccode\u003erender json:\u003c/code\u003e in our Rails controller, we can take entire models or\neven collections of models, have Rails convert them to JSON, and send them out\non request. We already have the makings of a basic API. In this lesson, we're\ngoing to look at shaping that data that gets converted to JSON and making it\nmore useful to us from the frontend JavaScript perspective.\u003c/p\u003e\n\n\u003cp\u003eThe way we structure our data matters — it can lead to better, simpler code in\nthe future. By specifically defining what data is being sent via a Rails\ncontroller, we have full control over what data our frontend has access to.\u003c/p\u003e\n\n\u003ch2\u003eRemoving Content When Rendering\u003c/h2\u003e\n\n\u003cp\u003eSometimes, when sending JSON data, such as an entire model, we don't want or\nneed to send the entire thing. Some data is sensitive, for instance. An API that\nsends user information might contain details of a user internally that it does\nnot want to ever share externally. Sometimes, data is just extra clutter we\ndon't need. For instance, if we visit \u003ccode\u003ehttp://localhost:3000/cheeses/2\u003c/code\u003e, here's\nthe JSON response we receive:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Pepper Jack\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"is_best_seller\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"created_at\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"2021-05-01T11:11:03.879Z\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"updated_at\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"2021-05-01T11:11:03.879Z\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBy default, using \u003ccode\u003erender json:\u003c/code\u003e will include all the attributes from our Active\nRecord model that are defined in its schema. But for our frontend purposes, we\nprobably don't need things like \u003ccode\u003ecreated_at\u003c/code\u003e and \u003ccode\u003eupdated_at\u003c/code\u003e. Rather than send\nthis unnecessary info when rendering, we could just pick and choose what we want\nto send:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003echeese\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003echeese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"n\"\u003echeese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003eprice: \u003c/span\u003e\u003cspan class=\"n\"\u003echeese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eprice\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003eis_best_seller: \u003c/span\u003e\u003cspan class=\"n\"\u003echeese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eis_best_seller\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere, we've created a new hash out of four keys, assigning the keys manually\nwith the attributes of \u003ccode\u003echeese\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe result is that when we visit a specific cheese's endpoint, like\n\u003ccode\u003ehttp://localhost:3000/cheeses/2\u003c/code\u003e, we'll see just the id, name, price, and best\nseller properties:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Pepper Jack\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"is_best_seller\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo simplify this process, we can take advantage of some built-in \u003cem\u003eserialization\u003c/em\u003e\noptions available to us in the \u003ccode\u003erender\u003c/code\u003e method. For example, we can use the\n\u003ccode\u003eonly:\u003c/code\u003e option directly after listing an object or array of objects we want to\nrender to JSON:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n  \u003cspan class=\"n\"\u003echeeses\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003echeeses\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:price\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:is_best_seller\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eVisiting \u003ccode\u003ehttp://localhost:3000/cheeses\u003c/code\u003e will now produce our array\nof cheese objects and each object will \u003cem\u003eonly\u003c/em\u003e have the \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003eprice\u003c/code\u003e,\nand \u003ccode\u003eis_best_seller\u003c/code\u003e values, leaving out everything else:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cheddar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"is_best_seller\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Pepper Jack\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"is_best_seller\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Limburger\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"is_best_seller\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAlternatively, rather than specifically listing every key we want to include, we\ncould also exclude particular content using the \u003ccode\u003eexcept:\u003c/code\u003e option, like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n  \u003cspan class=\"n\"\u003echeeses\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003echeeses\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eexcept: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:created_at\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:updated_at\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe above code would achieve the same result, producing only \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e,\n\u003ccode\u003eprice\u003c/code\u003e, and \u003ccode\u003eis_best_seller\u003c/code\u003e for each cheese. All the keys \u003cem\u003eexcept\u003c/em\u003e\n\u003ccode\u003ecreated_at\u003c/code\u003e and \u003ccode\u003eupdated_at\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eBoth the \u003ccode\u003eonly\u003c/code\u003e and \u003ccode\u003eexcept\u003c/code\u003e options are available to us thanks to the\n\u003ca href=\"https://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html\"\u003e\u003ccode\u003e.as_json\u003c/code\u003e\u003c/a\u003e method, which Rails uses internally when we call\n\u003ccode\u003erender json:\u003c/code\u003e with an Active Record object.\u003c/p\u003e\n\n\u003ch2\u003eExtending JSON Data with :methods\u003c/h2\u003e\n\n\u003cp\u003eIf you'll recall from previous lessons, we added one additional instance method\nto our \u003ccode\u003eCheese\u003c/code\u003e model:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCheese\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esummary\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"nb\"\u003ename\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e: $\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf we wanted to include that \u003ccode\u003esummary\u003c/code\u003e in the JSON response, we can do so\nusing the \u003ccode\u003emethods\u003c/code\u003e option, like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003echeese\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003echeese\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eexcept: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:created_at\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:updated_at\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"ss\"\u003emethods: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:summary\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith that code in place, our JSON response contains an additional key-value\npair, in which the key is the name of the method and the value is the result of\ncalling the method for the current \u003ccode\u003eCheese\u003c/code\u003e object:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cheddar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"is_best_seller\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"summary\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cheddar: $3\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eBasic Error Messaging When Rendering JSON Data\u003c/h2\u003e\n\n\u003cp\u003eWith the power to create our own APIs, we also have the power to define what to\ndo when things go wrong. In our \u003ccode\u003eshow\u003c/code\u003e action, we are currently using\n\u003ccode\u003eCheese.find_by\u003c/code\u003e, passing in \u003ccode\u003eid: params[:id]\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003echeese\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003echeese\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eexcept: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:created_at\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:updated_at\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"ss\"\u003emethods: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:summary\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen using \u003ccode\u003efind_by\u003c/code\u003e, if the record is not found, \u003ccode\u003enil\u003c/code\u003e is returned. As we have\nit set up, if \u003ccode\u003eparams[:id]\u003c/code\u003e does not match a valid id, \u003ccode\u003enil\u003c/code\u003e will be assigned to\nthe \u003ccode\u003echeese\u003c/code\u003e variable.\u003c/p\u003e\n\n\u003cp\u003eAs \u003ccode\u003enil\u003c/code\u003e is a \u003cem\u003efalse-y\u003c/em\u003e value in Ruby, this gives us the ability to write our\nown error messaging in the event that a request is made for a record that\ndoesn't exist:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003echeese\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003echeese\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003echeese\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eexcept: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:created_at\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:updated_at\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"ss\"\u003emethods: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:summary\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Cheese not found'\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, if we were to send a request to an invalid endpoint like\n\u003ccode\u003ehttp://localhost:3000/cheeses/hello_cheeses\u003c/code\u003e, rather than receiving a general\nHTTP error, we would still receive a response from the API:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"error\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cheese not found\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFrom here, we could build a more complex response, including additional details\nabout what might have occurred. We could even include a status code that follows\nHTTP conventions to indicate what went wrong:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003echeese\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003echeese\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003echeese\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eexcept: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:created_at\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:updated_at\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"ss\"\u003emethods: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:summary\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# status: :not_found will produce a 404 status code\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Cheese not found'\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAdding this status code won't change how the JSON data looks, but it will give\nthe client some additional information about what went wrong with this request.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWe can now take the instances of a model and render them to JSON, extracting out\nany specific content we do or do not want to send!\u003c/p\u003e\n\n\u003cp\u003eWhether you are building a professional API for a company or for your own\npersonal site, having the ability to fine tune how your data looks is a critical\nskill that we're only just beginning to scratch the surface on.\u003c/p\u003e\n\n\u003cp\u003eIn future lessons, we'll cover the topic of \u003cem\u003eserialization\u003c/em\u003e in more depth, and\nintroduce some additional tools to make it easier to customize the shape of our\nJSON response.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhy is it important to be able to customize the JSON that is returned by our\napps?\u003c/li\u003e\n\u003cli\u003eWhat are some options we can use with the \u003ccode\u003erender\u003c/code\u003e method to customize the\nJSON response?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html\"\u003eActiveRecord as_json method\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g8331e43569c7227add0f6be02fff9648"},{"id":483281,"title":"Rails Fundamentals Quiz","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"g984682e1b93c9e0135604595324dadcb","questionCount":6,"timeLimit":null,"attempts":3,"graded":true,"pointsPossible":6.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-quiz-rails-fundamentals\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-quiz-rails-fundamentals/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eIt's time to check your knowledge! Use this quiz to create a custom study guide. Note any answers that were marked incorrect, so you can study the relevant material and try this quiz again.\u003c/p\u003e\n\u003cp\u003eIf you don't know the answer to a question, please do not guess. Instead, select \"I don't know\". It's OK not to know everything and to admit when we're unsure.\u003c/p\u003e","exportId":"g319ed87847316689e7229f01fa5c1df4"}]},{"id":49288,"name":"CRUD with Rails","status":"completed","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"geb36deaf4b7c3ba0062f1a8368ab066f","items":[{"id":483282,"title":"Video: REST","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-rest\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rest\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rest/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/604353418/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html#resource-routing-the-rails-default\"\u003eRails Guides: Resource Routing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-rest"},{"id":483283,"title":"RESTful Routing Conventions","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-restful-routing-conventions\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-restful-routing-conventions\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-restful-routing-conventions/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the benefits of the REST design pattern\u003c/li\u003e\n\u003cli\u003eUnderstand the uses for different HTTP verbs\u003c/li\u003e\n\u003cli\u003eList the 5 RESTful routes and their corresponding Rails actions\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhat is REST?\u003c/h2\u003e\n\n\u003cp\u003eIn 2000, Roy Thomas Fielding was frustrated by the haphazard ways in which web\napplications were using the HTTP standard. Specifically, he was frustrated with\nhow URLs and their corresponding HTTP verbs were used differently for every\nsingle application. So, in his PhD dissertation, he came up with \u003cstrong\u003eREST\u003c/strong\u003e\n(\u003cstrong\u003eRE\u003c/strong\u003epresentational \u003cstrong\u003eS\u003c/strong\u003etate \u003cstrong\u003eT\u003c/strong\u003eransfer) as a standard way web apps should\nstructure their URLs.\u003c/p\u003e\n\n\u003cp\u003eFielding also noticed the rise in web applications communicating with each\nother. He hoped that inter-application communication would get much easier if\nthere was a standard way of forming URLs to access resources.\u003c/p\u003e\n\n\u003cp\u003eIf you have been building applications for a while, there is a good chance that\nyou have already worked with RESTful APIs. \u003ccode\u003ejson-server\u003c/code\u003e follows REST\nconventions very strongly. If your application posts to Twitter, pulls in a feed\nof images from Instagram, or calls a list of locations from Google Maps, you are\nusing a RESTful API to communicate between applications.\u003c/p\u003e\n\n\u003ch2\u003eExample REST Workflow\u003c/h2\u003e\n\n\u003cp\u003eFor a real world case study, let us pretend that you have a newsletter\napplication. The following is a high-level view of how such an app might work:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eYou fill out the form on the 'New Newsletter' page and click submit.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eData concerning you as the author, your newsletter content, and any\nadditional information such as media items is sent to the application server.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe server interprets the information, recognizes that the request is for a\nnew newsletter, generates the new record in the database, and performs\nbackground tasks (updating the newsletter counter, possibly sending\nnotification emails, etc).\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eNext, the server sends a response back to the client. This does not\nnecessarily mean that the newsletter was posted. The response could be that\nthere was an error posting or something like that. However, in this case we\nwill say that the newsletter post went through properly, so the server sends\na success message and tells the browser which page to go to and render.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eLastly, the browser receives the server information and shows you a message\nsaying that your newsletter was successfully posted.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eRESTful Conventions in Rails\u003c/h2\u003e\n\n\u003cp\u003eRails has RESTful principles built into its core, so, whether you are utilizing\nthe built-in view rendering system or using the application purely as an API,\nyou will have the tools necessary to follow standardized routing procedures.\u003c/p\u003e\n\n\u003cp\u003eLet's take a look at how this would work for our newsletter application. RESTful\nroutes fall into four general categories: Create, Read, Update, and Delete,\ncommonly known as 'CRUD' actions. The CRUD acronym gives us a convenient way to\nrefer to the set of five actions that RESTful APIs potentially include:\u003c/p\u003e\n\n\u003ctable\u003e\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eCRUD category\u003c/th\u003e\n\u003cth\u003eAction(s)\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eREAD\u003c/td\u003e\n\u003ctd\u003eDisplay a list of all newsletters\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eDisplay an individual newsletter\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eCREATE\u003c/td\u003e\n\u003ctd\u003eCreate the new newsletter instance\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eUPDATE\u003c/td\u003e\n\u003ctd\u003eUpdate the newsletter instance\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDESTROY\u003c/td\u003e\n\u003ctd\u003eDelete an existing newsletter instance\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\n\u003cp\u003eTo implement each of the above actions, we combine an \u003cem\u003eHTTP verb\u003c/em\u003e (\u003ccode\u003eGET\u003c/code\u003e,\n\u003ccode\u003ePOST\u003c/code\u003e, etc.) with a route (e.g., \u003ccode\u003e/newsletters\u003c/code\u003e). Rails then maps each HTTP\nverb/route combination to the appropriate \u003cem\u003eaction\u003c/em\u003e (\u003ccode\u003eshow\u003c/code\u003e, \u003ccode\u003eedit\u003c/code\u003e, etc.) in the\n\u003ccode\u003eNewslettersController\u003c/code\u003e. The table below shows the HTTP verb, route, and\ncontroller action names we would use for our RESTful newsletter app:\u003c/p\u003e\n\n\u003ctable\u003e\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eHTTP Verb\u003c/th\u003e\n\u003cth\u003eRoute\u003c/th\u003e\n\u003cth\u003eController#Action\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e/newsletters\u003c/td\u003e\n\u003ctd\u003enewsletters#index\u003c/td\u003e\n\u003ctd\u003eShow all newsletters\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePOST\u003c/td\u003e\n\u003ctd\u003e/newsletters\u003c/td\u003e\n\u003ctd\u003enewsletters#create\u003c/td\u003e\n\u003ctd\u003eCreate a new newsletter\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e/newsletters/:id\u003c/td\u003e\n\u003ctd\u003enewsletters#show\u003c/td\u003e\n\u003ctd\u003eShow a specific newsletter\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePATCH or PUT\u003c/td\u003e\n\u003ctd\u003e/newsletters/:id\u003c/td\u003e\n\u003ctd\u003enewsletters#update\u003c/td\u003e\n\u003ctd\u003eUpdate a specific newsletter\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDELETE\u003c/td\u003e\n\u003ctd\u003e/newsletters/:id\u003c/td\u003e\n\u003ctd\u003enewsletters#destroy\u003c/td\u003e\n\u003ctd\u003eDelete a specific newsletter\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\n\u003cp\u003eNote that even though we have five separate actions, there are only two routes\nin the table above: \u003ccode\u003e/newsletters\u003c/code\u003e and \u003ccode\u003e/newsletters/:id\u003c/code\u003e. It is the\n\u003cstrong\u003ecombination\u003c/strong\u003e of the \u003cem\u003eroute\u003c/em\u003e and the \u003cem\u003eHTTP verb\u003c/em\u003e that tells Rails which\ncontroller action to use.\u003c/p\u003e\n\n\u003cp\u003eRails does a great job of integrating RESTful routes into its system. If you can\nunderstand routes in Rails, you can understand REST in general. Rails even gives\nus some built-in functionality to encourage using RESTful routing conventions,\nthrough the concept of \u003ca href=\"https://guides.rubyonrails.org/routing.html#resource-routing-the-rails-default\"\u003eResource Routing\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eHere is a diagram that shows how the routes, HTTP verbs, and controller actions\nare all mapped together:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-restful-routing-conventions/rest-diagram.png\" alt=\"REST Diagram\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn analyzing the diagram, you can see the flow of data as follows:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eThe HTTP request contains an HTTP verb and hits a specific URL path.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe router in the application processes the request and 'routes' the request\ndata to the proper controller action.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe controller action either performs a task — creating, updating, or\ndeleting a record in the database — or it runs a database query and returns\nthe requested information to the client.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eDefinition of HTTP Verbs\u003c/h2\u003e\n\n\u003cp\u003eSo what do \u003ccode\u003eGET\u003c/code\u003e, \u003ccode\u003ePOST\u003c/code\u003e, et al. represent? Those are HTTP verbs that give\neach HTTP request unique behavior. Below is an explanation of each verb:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eGET\u003c/strong\u003e: The GET method retrieves whatever information is identified by the\nRequest URI. This means if you go to \u003ccode\u003e/posts\u003c/code\u003e, you will get all of the posts\nthat the application has.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePOST\u003c/strong\u003e: The POST method is used to send data enclosed in the request to the\nserver. The server is expected to use this data to create some new resource.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePATCH/PUT\u003c/strong\u003e: The PATCH and PUT methods are both used to update existing\nresources. Sending either a \u003ccode\u003ePATCH\u003c/code\u003e or \u003ccode\u003ePUT\u003c/code\u003e request to \u003ccode\u003e/posts/1\u003c/code\u003e will update\nthe post with an \u003ccode\u003eid\u003c/code\u003e of 1. \u003ccode\u003ePUT\u003c/code\u003e is used when we want to replace an entire\nresource. \u003ccode\u003ePATCH\u003c/code\u003e is used when we want to update a specific part of a\nresource. Check out this explanation of the \u003ca href=\"https://rapidapi.com/blog/put-vs-patch/\"\u003edifference between the\ntwo\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eDELETE\u003c/strong\u003e: The DELETE method requests that the server delete the resource\nidentified by the Request URI. This means… that it deletes the record. It's\nnice and explicit.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eBelow are a few keys to remember when thinking about REST:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eREST is an architectural design pattern, not a framework or code in itself.\nMany other web frameworks utilize RESTful design principles in some form or\nanother. By using RESTful principles, Rails apps are able to have a clear and\nstandardized naming structure for routes and actions.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eRESTful routes have a clear mapping between the URL resource and the\ncorresponding controller actions.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThere are five RESTful route options we will commonly use as API developers.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat are the CRUD actions?\u003c/li\u003e\n\u003cli\u003eWhat HTTP verb(s) are associated with each CRUD action?\u003c/li\u003e\n\u003cli\u003eWhat Rails controller action(s) are associated with each CRUD action?\u003c/li\u003e\n\u003cli\u003eWhat two pieces of information need to be combined to create an HTTP request?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://codewords.recurse.com/issues/five/what-restful-actually-means\"\u003eWhat RESTful Actually Means\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html#resource-routing-the-rails-default\"\u003eResource Routing in Rails\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://restacular.netlify.app/\"\u003eRESTacular Routing Resource\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"restful-routing-conventions"},{"id":483284,"title":"Video: CRUD App Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-intro-to-crud\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-intro-to-crud\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-intro-to-crud/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/597329332/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","exportId":"video-crud-app-introduction"},{"id":483285,"title":"Video: Index","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-index\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-index\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-index/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/604148195/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://www.railsstatuscodes.com/\"\u003eRails Status Codes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://restfulapi.net/http-status-codes/\"\u003eREST Status Code Guide\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/v5.1/layouts_and_rendering.html#using-render\"\u003eRails Guides: Using \u003ccode\u003erender\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-index"},{"id":483286,"title":"Video: Show","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-show\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-show\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-show/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/604161988/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","exportId":"video-show"},{"id":483287,"title":"Rails Resource Routing: Index and Show","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-resources-index-show\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-index-show/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-index-show\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-index-show/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the benefits of RESTful routing conventions in Rails\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003eresources\u003c/code\u003e to generate routes\u003c/li\u003e\n\u003cli\u003eUnderstand how to view all routes in a Rails application\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this module, we'll be building out full CRUD with the five RESTful routes for\none resource. We'll be making an API for birding enthusiasts, so the resource\nwe'll be working with is birds. In this lesson, we'll cover the two routes for\n\u003cstrong\u003eread\u003c/strong\u003e actions to display information about the birds in our database: the\n\u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003eshow\u003c/code\u003e actions.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eHTTP Verb\u003c/th\u003e\n\u003cth\u003ePath\u003c/th\u003e\n\u003cth\u003eController#Action\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cstrong\u003eGET\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003e/birds\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003ebirds#index\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003eShow all birds\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePOST\u003c/td\u003e\n\u003ctd\u003e/birds\u003c/td\u003e\n\u003ctd\u003ebirds#create\u003c/td\u003e\n\u003ctd\u003eCreate a new bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cstrong\u003eGET\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003e/birds/:id\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003ebirds#show\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003eShow a specific bird\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePATCH or PUT\u003c/td\u003e\n\u003ctd\u003e/birds/:id\u003c/td\u003e\n\u003ctd\u003ebirds#update\u003c/td\u003e\n\u003ctd\u003eUpdate a specific bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDELETE\u003c/td\u003e\n\u003ctd\u003e/birds/:id\u003c/td\u003e\n\u003ctd\u003ebirds#destroy\u003c/td\u003e\n\u003ctd\u003eDelete a specific bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\n\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eFirst, we'll need to install the dependencies as usual:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, we'll need to make a \u003ccode\u003eBird\u003c/code\u003e model and generate some sample data for\nour API. Let's use a Rails generator to set up our model:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g model Bird name species \u003cspan class=\"nt\"\u003e--no-test-framework\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter generating the model, run the migration:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, we'll create some seed data in the \u003ccode\u003edb/seeds.rb\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Black-Capped Chickadee\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Poecile Atricapillus\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Grackle\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Quiscalus Quiscula\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Common Starling\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Sturnus Vulgaris\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Mourning Dove\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Zenaida Macroura\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo add these birds to our database, run the seed file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eCreating RESTful Routes with Resources\u003c/h2\u003e\n\n\u003cp\u003eTo set up our \u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003eshow\u003c/code\u003e actions, we'll first need to create some\nroutes. Recall that the RESTful convention for these routes is as follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /birds      =\u0026gt; show a list of all birds\nGET /birds/:id  =\u0026gt; show one specific bird\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eJust like in previous lessons, we can build the routes for these actions in\nRails by hand, like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n\n\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edraw\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/birds'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'birds#index'\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/birds/:id'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'birds#show'\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can verify that these routes were added successfully by viewing all of our\napp's routes using a handy Rake task. In your terminal, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails routes\n\u003cspan class=\"gp\"\u003ePrefix  Verb  URI Pattern           Controller#\u003c/span\u003eAction\n\u003cspan class=\"gp\"\u003e birds  GET   /birds(.:format)      birds#\u003c/span\u003eindex\n\u003cspan class=\"gp\"\u003e        GET   /birds/:id(.:format)  birds#\u003c/span\u003eshow\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHowever, there is a better way to build the routes: Rails provides a tool,\n\u003ccode\u003eresources\u003c/code\u003e, that enforces RESTful conventions and saves us work.\u003c/p\u003e\n\n\u003cp\u003eEdit the \u003ccode\u003econfig/routes.rb\u003c/code\u003e file like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edraw\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birds\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, run \u003ccode\u003erails routes\u003c/code\u003e again:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails routes\n\u003cspan class=\"gp\"\u003ePrefix  Verb    URI Pattern           Controller#\u003c/span\u003eAction\n\u003cspan class=\"gp\"\u003e birds  GET     /birds(.:format)      birds#\u003c/span\u003eindex\n\u003cspan class=\"gp\"\u003e        POST    /birds(.:format)      birds#\u003c/span\u003ecreate\n\u003cspan class=\"gp\"\u003e  bird  GET     /birds/:id(.:format)  birds#\u003c/span\u003eshow\n\u003cspan class=\"gp\"\u003e        PATCH   /birds/:id(.:format)  birds#\u003c/span\u003eupdate\n\u003cspan class=\"gp\"\u003e        PUT     /birds/:id(.:format)  birds#\u003c/span\u003eupdate\n\u003cspan class=\"gp\"\u003e        DELETE  /birds/:id(.:format)  birds#\u003c/span\u003edestroy\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith just one line of code — \u003ccode\u003eresources :birds\u003c/code\u003e — Rails created all the RESTful\nroutes we need and mapped them to the appropriate controller action!\u003c/p\u003e\n\n\u003cp\u003eWith great power comes great responsibility. Even though we'll eventually add\nall of these RESTful routes to our API, for the time being, we only need two:\nthe \u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003eshow\u003c/code\u003e routes. We can still use \u003ccode\u003eresources\u003c/code\u003e and customize which\nroutes are created like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edraw\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birds\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:show\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRunning \u003ccode\u003erails routes\u003c/code\u003e now will give us the same output as when we wrote out the\nroutes by hand:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails routes\n\u003cspan class=\"gp\"\u003ePrefix  Verb  URI Pattern           Controller#\u003c/span\u003eAction\n\u003cspan class=\"gp\"\u003e birds  GET   /birds(.:format)      birds#\u003c/span\u003eindex\n\u003cspan class=\"gp\"\u003e        GET   /birds/:id(.:format)  birds#\u003c/span\u003eshow\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs a rule, \u003cstrong\u003eyou should only generate routes that your API is actually using\u003c/strong\u003e.\nIf you create a route using \u003ccode\u003eresources\u003c/code\u003e, but don't implement the controller\naction for that route, your API's consumers (any clients using your API) will\nget an unexpected response if they try to use a route that doesn't exist.\u003c/p\u003e\n\n\u003ch2\u003eHandling the Index and Show Actions\u003c/h2\u003e\n\n\u003cp\u003eTo complete our first couple RESTful actions, let's set up a controller:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g controller Birds \u003cspan class=\"nt\"\u003e--no-test-framework\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn the controller, add the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/bird_controller.rb\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBirdsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# GET /birds\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebirds\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebirds\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# GET /birds/:id\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bird not found\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRun \u003ccode\u003erails s\u003c/code\u003e and visit the \u003ccode\u003e/birds\u003c/code\u003e and \u003ccode\u003e/birds/1\u003c/code\u003e endpoints in the browser to\ncheck your work!\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned how to set up the two \"Read\" CRUD actions.\nSpecifically, we set up the routes to handle the requests as well as the\ncontroller actions to return the requested information. We also learned how to\nuse a built-in tool, \u003ccode\u003eresources\u003c/code\u003e, as an easier way to set up routes that follow\n\u003cstrong\u003eREST conventions\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eTools like \u003ccode\u003eresources\u003c/code\u003e are examples of Rails' use of the \u003cstrong\u003econvention over\nconfiguration\u003c/strong\u003e paradigm. What are the advantages of this approach?\u003c/li\u003e\n\u003cli\u003eWhy is it a good idea to limit the routes you create to ones that your API\nwill actually use?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html#resource-routing-the-rails-default\"\u003eRails Resource Routing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://api.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/Resources.html\"\u003e\u003ccode\u003eresources\u003c/code\u003e method\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gc72af5e00c1fb5927a5d0bbe4ee0e4f0"},{"id":483288,"title":"Testing APIs with Postman","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-testing-apis-with-postman\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-testing-apis-with-postman\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-testing-apis-with-postman/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse different kinds of clients to make requests\u003c/li\u003e\n\u003cli\u003eCompose a request with a URL, HTTP verb, headers, and body\u003c/li\u003e\n\u003cli\u003eTest non-GET requests using Postman\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eVideo Walkthrough\u003c/h2\u003e\n\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/2Uga5Dmj-dA?rel=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eHTTP Clients\u003c/h2\u003e\n\n\u003cp\u003eWhen developing a web application on Rails, our primary goal is to take \u003cstrong\u003eHTTP\nrequests\u003c/strong\u003e and return an appropriate \u003cstrong\u003eresponse\u003c/strong\u003e, following the idea of\n\u003cstrong\u003eclient-server\u003c/strong\u003e communication. So far, we've been using one particular client\nto interact with our server: the browser!\u003c/p\u003e\n\n\u003cp\u003eIt's straightforward to use the browser to make a GET request — all we\nhave to do is enter an address in the browser's URL bar, such as\n\u003ccode\u003ehttp://localhost:3000/birds\u003c/code\u003e, and hit enter.\u003c/p\u003e\n\n\u003cp\u003eFollowing REST conventions, we'll need to make requests using \u003cstrong\u003edifferent HTTP\nverbs\u003c/strong\u003e, beyond just GET requests: for example, to \u003cstrong\u003ecreate\u003c/strong\u003e a new resource,\nwe'll need to make a POST request. So we'll need a new tool to make these\nnon-GET requests to our server.\u003c/p\u003e\n\n\u003cp\u003eWe've seen how to make a POST request in JavaScript using fetch:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://localhost:4000/birds\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enewBird\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHowever, running a JavaScript application and writing \u003ccode\u003efetch\u003c/code\u003e requests to test\nout our API in development would be quite a chore.\u003c/p\u003e\n\n\u003cp\u003eLuckily for us, there are some excellent tools out there to make interacting\nwith APIs, and customizing all different parts of the request (the headers, HTTP\nverb, URL, and body) easier for us!\u003c/p\u003e\n\n\u003ch2\u003eUsing Postman as an API Client\u003c/h2\u003e\n\n\u003cp\u003eThe tool we'll be demonstrating in this lesson is \u003ca href=\"https://postman.com\"\u003ePostman\u003c/a\u003e. Postman is an API\nClient tool that will help with testing and development of our API.\u003c/p\u003e\n\n\u003cp\u003eFirst, head to this page and download Postman:\n\u003ca href=\"https://www.postman.com/downloads/\"\u003ehttps://www.postman.com/downloads/\u003c/a\u003e. Make sure to download\nthe app rather than use the web version. If you have any issues downloading, make sure to check out the \u003ca href=\"https://learning.postman.com/docs/getting-started/installation-and-updates/\"\u003ePostman docs\u003c/a\u003e for help.\u003c/p\u003e\n\n\u003cp\u003eOnce you've downloaded Postman and signed in, you should see a screen like this:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/testing-apis-with-postman/postman-welcome-screen.png\" alt=\"postman welcome screen\"\u003e\u003c/p\u003e\n\n\u003cp\u003eTo show what we can do with Postman, we're going to be using the\n\u003ca href=\"https://jsonplaceholder.typicode.com/guide/\"\u003eJSON Placeholder API\u003c/a\u003e, a free resource where we can try out\ndifferent requests. For our first request, we'll make a simple GET request to\n\u003ccode\u003ehttps://jsonplaceholder.typicode.com/posts/1\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eClick on the plus sign to open a new tab. You should see a field where you can\nenter your request:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/testing-apis-with-postman/postman-request-field.png\" alt=\"postman request field\"\u003e\u003c/p\u003e\n\n\u003cp\u003eEnter the URL in the field and click send:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/testing-apis-with-postman/postman-get-request.png\" alt=\"postman get request\"\u003e\u003c/p\u003e\n\n\u003cp\u003eYou'll see we receive a JSON object as a response!\u003c/p\u003e\n\n\u003cp\u003eThis API also lets us make non-GET requests, so let's see how we can use Postman\nfor making a POST request. We'll try recreating this \u003ccode\u003efetch\u003c/code\u003e request in Postman:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttps://jsonplaceholder.typicode.com/posts\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003efoo\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebar\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003euserId\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}),\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFirst, update the \u003cstrong\u003eURL\u003c/strong\u003e to be \u003ccode\u003ehttps://jsonplaceholder.typicode.com/posts\u003c/code\u003e.\nThen, click the dropdown next to the URL bar, and change the \u003cstrong\u003eHTTP verb\u003c/strong\u003e from\na GET request to a POST request.\u003c/p\u003e\n\n\u003cp\u003eWe can also use Postman to customize what \u003cstrong\u003eheaders\u003c/strong\u003e are being sent. Headers\nare additional metadata that we can send with requests. In the \u003ccode\u003efetch\u003c/code\u003e example\nabove, the \u003ccode\u003eContent-Type\u003c/code\u003e header tells the server that we expect to receive\n\u003ccode\u003eapplication/json\u003c/code\u003e in the response. To add a header, click the 'Headers' tab,\nand add a new key of \u003ccode\u003eContent-Type\u003c/code\u003e with a value of \u003ccode\u003eapplication/json\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eFinally, we'll need some way of sending a JSON formatted string in the \u003cstrong\u003ebody\u003c/strong\u003e\nof the request. Click the 'Body' tab in Postman, then click the dropdown and\nselect 'raw' to specify that we are sending a raw string of data. Then, select\nJSON from the next dropdown to specify that the string will be formatted as\nJSON. Now we can add a JSON formatted string to the text area below the dropdown:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"title\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"foo\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"body\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"bar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"userId\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: for the string to be considered valid JSON, all the keys on the\nobject must be in \u003cstrong\u003edouble-quotes\u003c/strong\u003e. There also can't be any trailing commas\nafter the last key-value pair. You can use \u003ca href=\"https://jsonlint.com/\"\u003ethis JSON tool\u003c/a\u003e to\nvalidate your JSON if you need to troubleshoot.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eWith all that in place, click send:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/testing-apis-with-postman/postman-post-request.png\" alt=\"postman post request\"\u003e\u003c/p\u003e\n\n\u003cp\u003eSuccess! The API has received our request and sent back a response representing\na newly created \u003ccode\u003epost\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"title\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"foo\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"body\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"bar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"userId\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e101\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou'll also notice some additional info comes back in the response, such as a\nstatus code of \u003ccode\u003e201 Created\u003c/code\u003e that indicates the successful creation of a\nresource.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eAPI clients like Postman are extremely valuable to have in your API developer\ntoolkit. They make it simple to interact with servers by giving you full control\nover how the response is being sent, with a nice interface for customizing the\nHTTP verb, URL, headers, and body.\u003c/p\u003e\n\n\u003cp\u003eIn future lessons, we'll be expanding our API to handle non-GET requests, so\nbeing able to use a tool like Postman will make our API development much easier!\nIt's also a great tool to use if you're exploring a third-party API for use in\nyour projects.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, solidify your understanding of how to use Postman by making\nrequests to other endpoints for the \u003ca href=\"https://jsonplaceholder.typicode.com/guide/\"\u003eJSON Placeholder API\u003c/a\u003e.\nTry making a PATCH request and a DELETE request. What changes between these\ndifferent requests? What does this API send as a response if you make a bad\nrequest?\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://learning.postman.com/docs/getting-started/installation-and-updates/\"\u003ePostman Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"testing-apis-with-postman"},{"id":483289,"title":"Video: Create","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-create\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-create\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-create/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/604375953/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","exportId":"video-create"},{"id":483290,"title":"Rails Resource Routing: Create","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-resources-create\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-create/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-create\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-create/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Rails to create a resource\u003c/li\u003e\n\u003cli\u003eUnderstand the connection between the request body and \u003ccode\u003eparams\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll continue working on our Bird API by adding a \u003ccode\u003ecreate\u003c/code\u003e\naction, so that clients can use our API to create new birds. To get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will download all the dependencies for our app and set up the database.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eHTTP Verb\u003c/th\u003e\n\u003cth\u003ePath\u003c/th\u003e\n\u003cth\u003eController#Action\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e/birds\u003c/td\u003e\n\u003ctd\u003ebirds#index\u003c/td\u003e\n\u003ctd\u003eShow all birds\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cstrong\u003ePOST\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003e/birds\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003ebirds#create\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003eCreate a new bird\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e/birds/:id\u003c/td\u003e\n\u003ctd\u003ebirds#show\u003c/td\u003e\n\u003ctd\u003eShow a specific bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePATCH or PUT\u003c/td\u003e\n\u003ctd\u003e/birds/:id\u003c/td\u003e\n\u003ctd\u003ebirds#update\u003c/td\u003e\n\u003ctd\u003eUpdate a specific bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDELETE\u003c/td\u003e\n\u003ctd\u003e/birds/:id\u003c/td\u003e\n\u003ctd\u003ebirds#destroy\u003c/td\u003e\n\u003ctd\u003eDelete a specific bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\n\n\n\u003ch2\u003eCreating New Birds\u003c/h2\u003e\n\n\u003cp\u003eAs always, the first thing we'll need to do to add a new endpoint to our API is\nupdate our routes. Following REST conventions, we'll want our clients to make a\nPOST request to \u003ccode\u003e/birds\u003c/code\u003e to create a new bird. Using the \u003ccode\u003eresources\u003c/code\u003e method, we\ncan create this route by adding in \u003ccode\u003ecreate\u003c/code\u003e to the list of actions we want\nhandled:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edraw\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birds\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:show\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter updating our routes, run \u003ccode\u003erails routes\u003c/code\u003e to check what routes are now\navailable:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePrefix  Verb  URI Pattern           Controller#Action\n birds  GET   /birds(.:format)      birds#index\n        POST  /birds(.:format)      birds#create\n  bird  GET   /birds/:id(.:format)  birds#show\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAwesome! We've successfully added a \u003ccode\u003ePOST /birds\u003c/code\u003e route, which will run the\n\u003ccode\u003ecreate\u003c/code\u003e in our \u003ccode\u003eBirdsController\u003c/code\u003e. Since we haven't set up that action, let's do\nso now. For the time being, let's add in a \u003ccode\u003ebyebug\u003c/code\u003e so that we can test out this\nroute and see what we'll need to do in order to create a new bird:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBirdsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# POST /birds\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebyebug\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# etc\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRun your server now with \u003ccode\u003erails s\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eNow, we'll need to make a \u003ccode\u003ePOST /birds\u003c/code\u003e with some data about the bird we're\ntrying to create. Recall from our schema that our \u003ccode\u003ebirds\u003c/code\u003e table\nhas \u003ccode\u003ename\u003c/code\u003e and \u003ccode\u003especies\u003c/code\u003e columns:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ecreate_table\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"birds\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eforce: :cascade\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estring\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"name\"\u003c/span\u003e\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estring\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"species\"\u003c/span\u003e\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edatetime\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"created_at\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eprecision: \u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003enull: \u003c/span\u003e\u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edatetime\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"updated_at\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eprecision: \u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003enull: \u003c/span\u003e\u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo create a new \u003ccode\u003eBird\u003c/code\u003e instance, we'll need to provide values for these two\nattributes. If we were making this request using \u003ccode\u003efetch\u003c/code\u003e, it'd look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://localhost:3000/birds\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eMonk Parakeet\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003especies\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eMyiopsitta monachus\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}),\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet's make that request using Postman (remember to add \u003ccode\u003eContent-Type\u003c/code\u003e:\n\u003ccode\u003eapplication/json\u003c/code\u003e to the headers as well):\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-rails-resources-create/birds-post-request.png\" alt=\"birds post request with postman\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAfter making the request, we'll hit our \u003ccode\u003ebyebug\u003c/code\u003e debugger, so we can see all the\ndata about the request that we have access to:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e    1: class BirdsController \u0026lt; ApplicationController\n    2:\n    3:   # POST /birds\n    4:   def create\n    5:     byebug\n=\u0026gt;  6:   end\n    7:\n    8:   # GET /birds\n    9:   def index\n   10:     birds = Bird.all\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFrom the \u003ccode\u003ebyebug\u003c/code\u003e session, let's see how we can get access to the data we need\nto handle this request. Remember, our goal in this action is to \u003cstrong\u003ecreate a new\nbird\u003c/strong\u003e and \u003cstrong\u003esend the new bird object in the response\u003c/strong\u003e, so ultimately, we'll\nwant some code like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"sc\"\u003e??\u003c/span\u003e\u003cspan class=\"p\"\u003e?,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"sc\"\u003e??\u003c/span\u003e\u003cspan class=\"p\"\u003e?)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: \u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003ecreated\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe \u003ccode\u003estatus: :created\u003c/code\u003e option will send a 201 status code, which indicates\nthat the request has succeeded and has led to the creation of a resource.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eTo fill in the blanks, we'll need to figure out how to get data from the\n\u003cstrong\u003ebody\u003c/strong\u003e of the request, where our client sent the \u003ccode\u003ename\u003c/code\u003e and \u003ccode\u003especies\u003c/code\u003e for this\nnew bird.\u003c/p\u003e\n\n\u003cp\u003eIn the \u003ccode\u003ebyebug\u003c/code\u003e session, we can access the \u003cstrong\u003eentire\u003c/strong\u003e request object by using\nthe \u003ccode\u003erequest\u003c/code\u003e method:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e(byebug) request\n#\u0026lt;ActionDispatch::Request POST \"http://localhost:3000/birds\" for ::1\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis \u003ccode\u003erequest\u003c/code\u003e object has all kinds of info about what was sent in the request.\nTry some of these methods out in your \u003ccode\u003ebyebug\u003c/code\u003e session:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003erequest.request_method\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003erequest.headers[\"Content-Type\"]\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003erequest.body.read\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe last one, \u003ccode\u003erequest.body.read\u003c/code\u003e, will read the body of the request as a\nstring. Nice! We could take it a step further, and parse that string as json:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e(byebug) JSON.parse(request.body.read)\n{\"name\"=\u0026gt;\"Monk Parakeet\", \"species\"=\u0026gt;\"Myiopsitta monachus\"}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will return a Ruby hash of key-value pairs by parsing the JSON string from\nthe request body. However, that's a lot of steps for a fairly common task as a\nRails developer. Wouldn't it be nice if there was a bit of ✨ Rails magic ✨ to\nmake it easier to access that parsed request data? Enter the \u003ccode\u003eparams\u003c/code\u003e hash!\u003c/p\u003e\n\n\u003ch2\u003eUsing Params\u003c/h2\u003e\n\n\u003cp\u003eWe can more easily access all the information from the request body by using\n\u003ccode\u003eparams\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e(byebug) params\n#\u0026lt;ActionController::Parameters {\"name\"=\u0026gt;\"Monk Parakeet\", \"species\"=\u0026gt;\"Myiopsitta monachus\", \"controller\"=\u0026gt;\"birds\", \"action\"=\u0026gt;\"create\", \"bird\"=\u0026gt;{\"name\"=\u0026gt;\"Monk Parakeet\", \"species\"=\u0026gt;\"Myiopsitta monachus\"}} permitted: false\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe've seen \u003ccode\u003eparams\u003c/code\u003e once before, as a way to access the dynamic part of the URL:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# GET /birds/:id\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# params[:id] refers to the dynamic part of our route, defined by :id\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# a request to /birds/2 would give params[:id] a value of 2\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn this case, we can see that all the data from the body of our request has been\nadded to this \u003ccode\u003eparams\u003c/code\u003e hash! Any time Rails receives a request with a\n\u003ccode\u003eContent-Type\u003c/code\u003e of \u003ccode\u003eapplication/json\u003c/code\u003e, it will automatically load the request\nbody into the \u003ccode\u003eparams\u003c/code\u003e hash. Let's use that information to create our bird. Exit\nthe \u003ccode\u003ebyebug\u003c/code\u003e session by typing \u003ccode\u003econtinue\u003c/code\u003e or \u003ccode\u003ec\u003c/code\u003e and hit enter. Then, update\nyour controller action like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:species\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBack in Postman, send the same request through. Now, you should see a response\nin Postman with the newly created bird! You should also see in your Rails server\nlog the SQL that was executed when the bird was created:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eStarted POST \"/birds\" for ::1 at 2021-05-02 10:09:03 -0400\n   (0.1ms)  SELECT sqlite_version(*)\nProcessing by BirdsController#create as */*\n  Parameters: {\"name\"=\u0026gt;\"Monk Parakeet\", \"species\"=\u0026gt;\"Myiopsitta monachus\", \"bird\"=\u0026gt;{\"name\"=\u0026gt;\"Monk Parakeet\", \"species\"=\u0026gt;\"Myiopsitta monachus\"}}\n  TRANSACTION (0.1ms)  begin transaction\n  ↳ app/controllers/birds_controller.rb:5:in `create'\n  Bird Create (2.0ms)  INSERT INTO \"birds\" (\"name\", \"species\", \"created_at\", \"updated_at\") VALUES (?, ?, ?, ?)  [[\"name\", \"Monk Parakeet\"], [\"species\", \"Myiopsitta monachus\"], [\"created_at\", \"2021-05-02 14:09:03.955909\"], [\"updated_at\", \"2021-05-02 14:09:03.955909\"]]\n  ↳ app/controllers/birds_controller.rb:5:in `create'\n  TRANSACTION (0.9ms)  commit transaction\n  ↳ app/controllers/birds_controller.rb:5:in `create'\nCompleted 201 Created in 15ms (Views: 0.5ms | ActiveRecord: 4.1ms | Allocations: 4408)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSuccess!\u003c/p\u003e\n\n\u003cp\u003eExperiment using Postman and \u003ccode\u003ebyebug\u003c/code\u003e. What would you change if you wanted to\nadd additional keys to the \u003ccode\u003eparams\u003c/code\u003e hash? What would you expect the server to\nreturn if the new bird \u003cstrong\u003ewasn't\u003c/strong\u003e created successfully?\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWe have now learned how to handle the \u003ccode\u003ecreate\u003c/code\u003e action. In the next lesson, we'll\nexplore the \u003ccode\u003eparams\u003c/code\u003e hash further, and talk about ways to refactor our code\nusing additional features of the \u003ccode\u003eparams\u003c/code\u003e hash.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhen using \u003ccode\u003efetch\u003c/code\u003e to make a \u003ccode\u003ePOST\u003c/code\u003e request as opposed to a \u003ccode\u003eGET\u003c/code\u003e request,\nwhat additional property needs to be passed along with the \u003ccode\u003emethod\u003c/code\u003e and\n\u003ccode\u003eheaders\u003c/code\u003e?\u003c/li\u003e\n\u003cli\u003eHow do we access this additional information to use it in our controller\naction?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/action_controller_overview.html#json-parameters\"\u003eJSON Parameters\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gb17ee99cf4840cb19fd3c78d92dbf186"},{"id":483291,"title":"Strong Params and Mass Assignment","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-strong-params\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-strong-params/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-strong-params\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-strong-params/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the benefits and dangers of mass assignment\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003eparams.permit\u003c/code\u003e to allow specific params\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eTo get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will download all the dependencies for our app and set up the database.\u003c/p\u003e\n\n\n\n\n\n\u003ch2\u003eRevisiting The Create Action\u003c/h2\u003e\n\n\u003cp\u003eIn the previous lesson, we used the \u003ccode\u003eparams\u003c/code\u003e hash to access data from the body\nof a request, and create a new bird:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:species\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSince our model only has two attributes, this code looks fairly reasonable. But\nimagine we were building a new model, \u003ccode\u003eBirdWatcher\u003c/code\u003e, representing the users in\nour application, that has more attributes:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eBirdWatcher\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eemail: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:email\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eprofile_image: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:profile_image\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003efavorite_species: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:favorite_species\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eadmin: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:admin\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhile this approach for creating a new \u003ccode\u003eBirdWatcher\u003c/code\u003e would work, it feels like a\nlot of extra work to type \u003ccode\u003eattribute: params[:attribute]\u003c/code\u003e for every single\nattribute we're using! Since the \u003ccode\u003e.create\u003c/code\u003e method expects a hash of key-value\npairs, and \u003ccode\u003eparams\u003c/code\u003e is a hash of key-value pairs, it would be much nicer to be\nable to just pass in the entire \u003ccode\u003eparams\u003c/code\u003e hash and call it a day:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eBirdWatcher\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHowever, doing so would open us up to some surprising security vulnerabilities,\nso Rails would actually prevent that code from working! Let's explore why, and\nsee an alternate approach to working with \u003ccode\u003eparams\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eWhat Is Mass Assignment?\u003c/h2\u003e\n\n\u003cp\u003eLet's take a step back from Rails for the moment, and think back to\nObject-Oriented Ruby. We could design a \u003ccode\u003eBirdWatcher\u003c/code\u003e class of our own, without\nActive Record, like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBirdWatcher\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:email\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:bio\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:favorite_species\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:admin\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@email\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:email\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@bio\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:bio\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@favorite_species\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:favorite_species\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@admin\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:admin\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, we can pass in one hash when creating a new \u003ccode\u003eBirdWatcher\u003c/code\u003e, just like we\nwould when creating an object with Active Record:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eBirdWatcher\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Reggie\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eemail: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"birdman5000@gmail.com\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003efavorite_species: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Crow\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003ebio: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Just a bird-loving guy\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eadmin: \u003c/span\u003e\u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo far so good! Now, let's imagine that instead of passing in that hash\ndirectly, we're getting that hash of data from a user making a request to our\nAPI to create a new account. Pretend this \u003ccode\u003eparams\u003c/code\u003e hash is being created based\non a user making a request to our server:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Emma\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eemail: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"lady.von.birdbrain@yahoo.com\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003efavorite_species: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Blue Jay\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003ebio: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Always be birding\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eadmin: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIdeally, a user shouldn't be able to create their own account and give themself\n\u003ccode\u003eadmin\u003c/code\u003e privileges. But if we pass this entire hash of parameters to our\n\u003ccode\u003e#initialize\u003c/code\u003e method, that's exactly what will happen:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eBirdWatcher\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; #\u0026lt;BirdWatcher:0x00007fa635094858 @name=\"Emma\", ... @admin=true\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eActive Record works similarly: it uses mass assignment to take a hash of\nkey-value pairs and assign them to attributes on our models. As a result,\npassing in the entire \u003ccode\u003eparams\u003c/code\u003e hash when creating a new record in our database\nwould open us up to the \u003ca href=\"https://en.wikipedia.org/wiki/Mass_assignment_vulnerability\"\u003emass assignment vulnerability\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eSo how do we fix it?\u003c/p\u003e\n\n\u003ch2\u003eStrong Params\u003c/h2\u003e\n\n\u003cp\u003eFirst, run \u003ccode\u003erails s\u003c/code\u003e to start the server. Let's use Postman to create a new bird:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eRoute\n-------\nPOST /birds\n\nHeaders\n-------\nContent-Type: application/json\n\nBody\n------\n{\n  \"name\": \"Blue Jay\",\n  \"species\": \"Cyanocitta cristata\"\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will create a new \u003ccode\u003eBird\u003c/code\u003e in our \u003ccode\u003eBirdsController#create\u003c/code\u003e action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:species\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe approach above is a perfectly valid solution to the mass-assignment issue.\nSince we are \u003cstrong\u003eexplicitly\u003c/strong\u003e specifying which attributes we'd like our new bird\nto be created with, there's no chance of a user updating an attribute other than\nname or species.\u003c/p\u003e\n\n\u003cp\u003eUpdate the \u003ccode\u003ecreate\u003c/code\u003e method like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, make another request using Postman. We'll get back a\n\u003ccode\u003e500 - Internal Server Error\u003c/code\u003e as a response, with an\n\u003ccode\u003eActiveModel::ForbiddenAttributesError\u003c/code\u003e as the exception.\u003c/p\u003e\n\n\u003cp\u003eThis is thanks to Rails' built-in security protection against the\n\u003ca href=\"https://en.wikipedia.org/wiki/Mass_assignment_vulnerability\"\u003emass assignment vulnerability\u003c/a\u003e in action. We can't just pass in the entire\nparams hash, since that would mean a malicious user could potentially update\nattributes of our model that we don't want to give them access to.\u003c/p\u003e\n\n\u003cp\u003eWhat we can do instead is use \u003ca href=\"https://guides.rubyonrails.org/action_controller_overview.html#strong-parameters\"\u003eStrong Parameters\u003c/a\u003e to \u003cstrong\u003epermit\u003c/strong\u003e\n\u003cem\u003eonly\u003c/em\u003e the parameters that we want to use:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epermit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:species\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen we call \u003ccode\u003eparams.permit(:name, :species)\u003c/code\u003e, this will return a new hash with\n\u003cstrong\u003eonly\u003c/strong\u003e the name and species keys. Rails will also mark this new hash as\n\u003ccode\u003epermitted\u003c/code\u003e, which means we can safely use this new hash for mass assignment.\u003c/p\u003e\n\n\u003cp\u003eTry making that same request in Postman, but this time, add an \u003ccode\u003eid\u003c/code\u003e key to the\nJSON in your request body. Now the bird is successfully created but, since the\n\u003ccode\u003eid\u003c/code\u003e key was not allowed, only the \u003ccode\u003ename\u003c/code\u003e and \u003ccode\u003especies\u003c/code\u003e were used. The server\nlogs will verify this for us:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eStarted POST \"/birds\" for ::1 at 2021-05-03 07:45:33 -0400\n   (0.1ms)  SELECT sqlite_version(*)\nProcessing by BirdsController#create as */*\n  Parameters: {\"name\"=\u0026gt;\"Blue Jay\", \"species\"=\u0026gt;\"Cyanocitta cristata\", \"id\"=\u0026gt;99, \"bird\"=\u0026gt;{\"id\"=\u0026gt;99, \"name\"=\u0026gt;\"Blue Jay\", \"species\"=\u0026gt;\"Cyanocitta cristata\"}}\nUnpermitted parameters: :id, :bird\n  TRANSACTION (0.1ms)  begin transaction\n  ↳ app/controllers/birds_controller.rb:12:in `create'\n  Bird Create (0.8ms)  INSERT INTO \"birds\" (\"name\", \"species\", \"created_at\", \"updated_at\") VALUES (?, ?, ?, ?)  [[\"name\", \"Blue Jay\"], [\"species\", \"Cyanocitta cristata\"], [\"created_at\", \"2021-05-03 11:45:33.745635\"], [\"updated_at\", \"2021-05-03 11:45:33.745635\"]]\n  ↳ app/controllers/birds_controller.rb:12:in `create'\n  TRANSACTION (1.3ms)  commit transaction\n  ↳ app/controllers/birds_controller.rb:12:in `create'\nCompleted 201 Created in 22ms (Views: 2.5ms | ActiveRecord: 3.6ms | Allocations: 3803)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eRefactoring Params\u003c/h2\u003e\n\n\u003cp\u003eIn Rails controllers there's a strong convention among developers to create a\nseparate \u003ccode\u003eprivate\u003c/code\u003e method for strong params, like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBirdsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# POST /birds\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# other controller actions here\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# all methods below here are private\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ebird_params\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epermit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:species\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis makes our \u003ccode\u003ecreate\u003c/code\u003e action a bit cleaner, and will give us the opportunity\nto reuse this private method later in our \u003ccode\u003eupdate\u003c/code\u003e action.\u003c/p\u003e\n\n\u003cp\u003eYou may also have noticed that even though the request body only has this data:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Blue Jay\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"species\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cyanocitta cristata\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOur params hash looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Blue Jay\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\"species\"\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cyanocitta cristata\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\"bird\"\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Blue Jay\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\"species\"\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cyanocitta cristata\"\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe reason for this is that Rails by default will\n\u003ca href=\"https://edgeguides.rubyonrails.org/action_controller_overview.html#json-parameters\"\u003ewrap JSON parameters\u003c/a\u003e as a nested hash under a key based on\nthe name of the controller (in our case, \u003ccode\u003ebird\u003c/code\u003e since we're in a\n\u003ccode\u003eBirdsController\u003c/code\u003e). This is the reason that in the Rails server log, even with\nour strong params in place, you'll still see \u003ccode\u003eUnpermitted parameters: :bird\u003c/code\u003e for\nour requests.\u003c/p\u003e\n\n\u003cp\u003eYou can disable the wrap parameters feature in an individual controller:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBirdsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ewrap_parameters\u003c/span\u003e \u003cspan class=\"ss\"\u003eformat: \u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can also disable it for all controllers if you like, by going into the\n\u003ccode\u003econfig/initializers/wrap_parameters.rb\u003c/code\u003e file and updating it like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eActiveSupport\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eon_load\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:action_controller\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ewrap_parameters\u003c/span\u003e \u003cspan class=\"ss\"\u003eformat: \u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned how we can use mass assignment to reduce the amount\nof code we need to write to create a new instance of a model. We also learned\nwhy using mass assignment can expose us to security vulnerabilities and how to\nkeep that from happening.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat is the mass assignment vulnerability?\u003c/li\u003e\n\u003cli\u003eWhat security precaution is built in to Rails to protect against this\nvulnerability?\u003c/li\u003e\n\u003cli\u003eWhat two approaches can we use to handle parameters safely?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/action_controller_overview.html#strong-parameters\"\u003eRails Guides on Strong Params\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g50cfd1be121d154f3b0ce6cc7649feb5"},{"id":483292,"title":"Rails Create, Index, and Show Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-create-read-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-create-read-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-create-read-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-create-read-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eGenerate \u003ccode\u003ecreate\u003c/code\u003e, \u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003eshow\u003c/code\u003e routes for one resource\u003c/li\u003e\n\u003cli\u003eUse strong params to create a new resource\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll be building an API for a plant store! In addition to our\nusual Rails code, there is code for a React frontend application in the \u003ccode\u003eclient\u003c/code\u003e\ndirectory.\u003c/p\u003e\n\n\u003cp\u003eThe code for the frontend application is done. Your job is to create the Rails\nAPI so that the \u003ccode\u003efetch\u003c/code\u003e requests on the frontend work successfully.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eThe React application is in the \u003ccode\u003eclient\u003c/code\u003e directory. To set it up, from the root\ndirectory, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUsing \u003ccode\u003e--prefix client\u003c/code\u003e will run the npm command within the \u003ccode\u003eclient\u003c/code\u003e directory.\u003c/p\u003e\n\n\u003cp\u003eTo set up your backend, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo see how the React application and Rails API are interacting, you can run the\nRails application in one terminal by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, \u003ca href=\"https://code.visualstudio.com/docs/editor/integrated-terminal#_managing-terminals\"\u003eopen another terminal\u003c/a\u003e and run React:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEach application will run on its own port on \u003ccode\u003elocalhost\u003c/code\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eReact: \u003ca href=\"http://localhost:4000\"\u003ehttp://localhost:4000\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eRails: \u003ca href=\"http://localhost:3000\"\u003ehttp://localhost:3000\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eTake a look through the components in the \u003ccode\u003eclient/src/components/\u003c/code\u003e folder to get\na feel for what our app does. Note that the \u003ccode\u003efetch\u003c/code\u003e requests in the frontend (in\n\u003ccode\u003eNewPlantForm\u003c/code\u003e and \u003ccode\u003ePlantPage\u003c/code\u003e) don't include the backend domain:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/plants\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// instead of fetch(\"http://localhost:3000/plants\")\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is because we are \u003ca href=\"https://create-react-app.dev/docs/proxying-api-requests-in-development/\"\u003eproxying\u003c/a\u003e these requests to\nour API.\u003c/p\u003e\n\n\u003ch2\u003eDeliverables\u003c/h2\u003e\n\n\u003ch3\u003eModel\u003c/h3\u003e\n\n\u003cp\u003eCreate a \u003ccode\u003ePlant\u003c/code\u003e model that matches this specification:\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eColumn Name\u003c/th\u003e\n\u003cth\u003eData Type\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003ename\u003c/td\u003e\n\u003ctd\u003estring\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eimage\u003c/td\u003e\n\u003ctd\u003estring\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eprice\u003c/td\u003e\n\u003ctd\u003edecimal\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e\u003cstrong\u003eIf you use a Rails generator, don't forget to pass the \u003ccode\u003e--no-test-framework\u003c/code\u003e\nargument!\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eAfter creating the \u003ccode\u003ePlant\u003c/code\u003e model, you can run \u003ccode\u003erails db:migrate db:seed\u003c/code\u003e to run\nyour migration and add some sample data to your database.\u003c/p\u003e\n\n\u003cp\u003eCheck your progress by running \u003ccode\u003erails c\u003c/code\u003e and verifying that the plants were\ncreated successfully!\u003c/p\u003e\n\n\u003ch3\u003eRoutes\u003c/h3\u003e\n\n\u003cp\u003eYour API should have the following routes as well as the associated controller\nactions that return the appropriate JSON data:\u003c/p\u003e\n\n\u003ch4\u003eIndex Route\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /plants\n\n\nResponse Body\n-------\n[\n  {\n    \"id\": 1,\n    \"name\": \"Aloe\",\n    \"image\": \"./images/aloe.jpg\",\n    \"price\": 11.50\n  },\n  {\n    \"id\": 2,\n    \"name\": \"ZZ Plant\",\n    \"image\": \"./images/zz-plant.jpg\",\n    \"price\": 25.98\n  }\n]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch4\u003eShow Route\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /plants/:id\n\n\nResponse Body\n------\n{\n  \"id\": 1,\n  \"name\": \"Aloe\",\n  \"image\": \"./images/aloe.jpg\",\n  \"price\": 11.50\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch4\u003eCreate Route\u003c/h4\u003e\n\n\u003cp\u003eIn your controller's \u003ccode\u003ecreate\u003c/code\u003e action, use strong params when creating the new\n\u003ccode\u003ePlant\u003c/code\u003e object.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePOST /plants\n\n\nHeaders\n-------\nContent-Type: application/json\n\n\nRequest Body\n------\n{\n  \"name\": \"Aloe\",\n  \"image\": \"./images/aloe.jpg\",\n  \"price\": 11.50\n}\n\n\nResponse Body\n-------\n{\n  \"id\": 1,\n  \"name\": \"Aloe\",\n  \"image\": \"./images/aloe.jpg\",\n  \"price\": 11.50\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOnce all the tests are passing, start up the React app and explore the\nfunctionality to see how the routes you created are being used.\u003c/p\u003e","exportId":"g1ad81b75e4351a4c20473cf15d2ec0e0"},{"id":483293,"title":"Video: Update","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-update\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-update\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-update/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/605187405/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","exportId":"video-update"},{"id":483294,"title":"Rails Resource Routing: Update","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-resources-update\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-update/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-update\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-update/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUpdate a resource using Rails\u003c/li\u003e\n\u003cli\u003eDefine custom routes in addition to \u003ccode\u003eresources\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll continue working on our Bird API by adding an \u003ccode\u003eupdate\u003c/code\u003e\naction, so that clients can use our API to update birds. To get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will download all the dependencies for our app and set up the database.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eHTTP Verb\u003c/th\u003e\n\u003cth\u003ePath\u003c/th\u003e\n\u003cth\u003eController#Action\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e/birds\u003c/td\u003e\n\u003ctd\u003ebirds#index\u003c/td\u003e\n\u003ctd\u003eShow all birds\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePOST\u003c/td\u003e\n\u003ctd\u003e/birds\u003c/td\u003e\n\u003ctd\u003ebirds#create\u003c/td\u003e\n\u003ctd\u003eCreate a new bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e/birds/:id\u003c/td\u003e\n\u003ctd\u003ebirds#show\u003c/td\u003e\n\u003ctd\u003eShow a specific bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cstrong\u003ePATCH or PUT\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003e/birds/:id\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003ebirds#update\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003eUpdate a specific bird\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDELETE\u003c/td\u003e\n\u003ctd\u003e/birds/:id\u003c/td\u003e\n\u003ctd\u003ebirds#destroy\u003c/td\u003e\n\u003ctd\u003eDelete a specific bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\n\n\n\u003ch2\u003eAdding Features\u003c/h2\u003e\n\n\u003cp\u003eOur birding app has grown wildly in popularity, which means it's time to add a\nnew feature to keep our users happy! Market research suggests we can increase\nuser engagement by adding a \"like\" feature to our application. To do this,\nwe'll need to update our \u003ccode\u003eBird\u003c/code\u003e model to keep track of the number of likes.\u003c/p\u003e\n\n\u003cp\u003eWe'll also need to create a new API endpoint so that users can update the number\nof likes for a specific bird.\u003c/p\u003e\n\n\u003ch2\u003eChanging Our Model With Migrations\u003c/h2\u003e\n\n\u003cp\u003eLet's start by creating a new migration to update our \u003ccode\u003eBird\u003c/code\u003e model and the\nassociated \u003ccode\u003ebirds\u003c/code\u003e table:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g migration AddLikesToBird likes:integer \u003cspan class=\"nt\"\u003e--no-test-framework\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eNote: the \u003ccode\u003e--no-test-framework\u003c/code\u003e argument isn't actually needed in this case\nbecause the Rails migration generator does not create tests. However, it\ndoesn't hurt to include it so we do so to encourage the habit.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThis will create a new migration file for updating our \u003ccode\u003ebirds\u003c/code\u003e table with a new\ncolumn for \u003ccode\u003elikes\u003c/code\u003e. Let's also add a default value of 0 likes, and ensure we're\nnot permitting null values to be saved to the likes column:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eAddLikesToBird\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eMigration\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mf\"\u003e6.1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003echange\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eadd_column\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birds\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:likes\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:integer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003enull: \u003c/span\u003e\u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003edefault: \u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eFor a refresher on migrations, check out the\n\u003ca href=\"https://guides.rubyonrails.org/active_record_migrations.html\"\u003eActive Record docs\u003c/a\u003e!\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eNext, run the migration:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe'll also want to re-seed our database. You can do so with this command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:reset\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will drop our old development database, and re-create it from scratch based\non our schema and seed file.\u003c/p\u003e\n\n\u003cp\u003eWith our data set up, let's turn to the next action: updating likes!\u003c/p\u003e\n\n\u003ch2\u003eUpdating Existing Birds\u003c/h2\u003e\n\n\u003cp\u003eTo start, we'll need to create a new route and controller action to give our\nclients the ability to update birds. Recall that following RESTful conventions,\nwe'll want to set up a \u003ccode\u003ePATCH /birds/:id\u003c/code\u003e route. Just like for our \u003ccode\u003eshow\u003c/code\u003e route,\nwe need the ID in the URL to identify \u003cstrong\u003ewhich\u003c/strong\u003e bird is being updated.\u003c/p\u003e\n\n\u003cp\u003eWe can use \u003ccode\u003eresources\u003c/code\u003e to add this route by adding the \u003ccode\u003e:update\u003c/code\u003e action in our\n\u003ccode\u003eroutes.rb\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birds\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:show\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:update\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, add an \u003ccode\u003eupdate\u003c/code\u003e action in our controller. Our goal in this action is to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003efind the bird that matches the ID from the route params\u003c/li\u003e\n\u003cli\u003eupdate the bird using the params from the body of the request\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBirdsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# rest of actions here...\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# PATCH /birds/:id\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bird not found\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eJust like in the \u003ccode\u003ecreate\u003c/code\u003e action, we are using strong params when updating the\nbird. We can modify the strong params in the \u003ccode\u003ebird_params\u003c/code\u003e method to allow the\n\u003ccode\u003elikes\u003c/code\u003e as well:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ebird_params\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epermit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:species\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:likes\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRun \u003ccode\u003erails s\u003c/code\u003e and test out this route in Postman. Try updating the likes for one\nspecific bird:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePATCH /birds/1\n\n\nHeaders\n-------\nContent-Type: application/json\n\n\nRequest Body\n------\n{\n  \"likes\": 1\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf we had the client application built out, to implement this feature, we would\nadd a \"Like\" button to each bird's information. When the button is clicked, the\nfrontend code would access the current value of \u003ccode\u003elikes\u003c/code\u003e, add 1 to it, then send\nthat information in the request body of a \u003ccode\u003ePUT\u003c/code\u003e OR \u003ccode\u003ePATCH\u003c/code\u003e request. But\nresponsibility for keeping track of and updating the likes doesn't really belong\nin the frontend. To fix this, we can use a custom route.\u003c/p\u003e\n\n\u003ch2\u003eCreating Custom Routes\u003c/h2\u003e\n\n\u003cp\u003eTo take the responsibility for handling likes off of the frontend, we can\nprovide a \u003cstrong\u003ecustom route\u003c/strong\u003e that will do the work of calculating the number of\nlikes and incrementing it. With this approach, all the frontend has to do is\nsend a request to our new custom route, without worrying about sending any data\nin the body of the request.\u003c/p\u003e\n\n\u003cp\u003eUpdate the \u003ccode\u003eroutes.rb\u003c/code\u003e file like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edraw\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birds\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:show\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:update\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"n\"\u003epatch\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/birds/:id/like\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"birds#increment_likes\"\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen create the \u003ccode\u003eincrement_likes\u003c/code\u003e controller action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eincrement_likes\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003elikes: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elikes\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bird not found\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNotice that in this action, the only information we need from \u003ccode\u003eparams\u003c/code\u003e is the\n\u003ccode\u003eid\u003c/code\u003e; we're able to use the bird's current number of likes to calculate the next\nnumber of likes! Our client app no longer needs to concern itself with sending\nthat data or performing that calculation.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eA note on breaking convention: by creating this custom route, we are breaking\nthe REST conventions we had been following up to this point. One alternate way\nto structure this kind of feature and keep our routes and controllers RESTful\nwould be to create a new controller, such as Birds::LikesController, and add\nan \u003ccode\u003eupdate\u003c/code\u003e action in this controller. The creator of Rails, DHH, advocates\nfor \u003ca href=\"http://jeromedalbert.com/how-dhh-organizes-his-rails-controllers/\"\u003ethis approach for managing sub-resources\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eContinuing on our journey with REST and CRUD, we've seen how to update a record,\nusing \u003ccode\u003ePATCH /birds/:id\u003c/code\u003e. We also saw how to break RESTful conventions and\ncreate a custom route.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eUnder what circumstances does it make sense to create a custom route?\u003c/li\u003e\n\u003cli\u003eWhat are the advantages and disadvantages of using custom routes?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/active_record_migrations.html\"\u003eActive Record Migrations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://jeromedalbert.com/how-dhh-organizes-his-rails-controllers/\"\u003eHow DHH Organizes His Rails Controllers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g75d9e39a276968d59f2238ac72b98398"},{"id":483295,"title":"Video: Delete","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-delete\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-delete\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-delete/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/605796901/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","exportId":"video-delete"},{"id":483296,"title":"Rails Resource Routing: Destroy","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-resources-destroy\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-destroy/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-destroy\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-destroy/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDelete a resource using Rails\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll continue working on our Bird API by adding a \u003ccode\u003edestroy\u003c/code\u003e\naction, so that clients can use our API to delete birds. To get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will download all the dependencies for our app and set up the database.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eHTTP Verb\u003c/th\u003e\n\u003cth\u003ePath\u003c/th\u003e\n\u003cth\u003eController#Action\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e/birds\u003c/td\u003e\n\u003ctd\u003ebirds#index\u003c/td\u003e\n\u003ctd\u003eShow all birds\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePOST\u003c/td\u003e\n\u003ctd\u003e/birds\u003c/td\u003e\n\u003ctd\u003ebirds#create\u003c/td\u003e\n\u003ctd\u003eCreate a new bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e/birds/:id\u003c/td\u003e\n\u003ctd\u003ebirds#show\u003c/td\u003e\n\u003ctd\u003eShow a specific bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePATCH or PUT\u003c/td\u003e\n\u003ctd\u003e/birds/:id\u003c/td\u003e\n\u003ctd\u003ebirds#update\u003c/td\u003e\n\u003ctd\u003eUpdate a specific bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cstrong\u003eDELETE\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003e/birds/:id\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003ebirds#destroy\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003eDelete a specific bird\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\n\n\n\u003ch2\u003eDeleting a Bird\u003c/h2\u003e\n\n\u003cp\u003eWe're at the last step on our journey to becoming CRUD experts! Our goal is to\ngive users the ability to delete birds via the API. To start, we'll need to set\nup a route to handle a \u003ccode\u003eDELETE /birds/:id\u003c/code\u003e request. We can do so by adding\n\u003ccode\u003e:destroy\u003c/code\u003e to our resources:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birds\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:show\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:update\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:destroy\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd since we're now using all five RESTful routes, we can omit the \u003ccode\u003eonly\u003c/code\u003e option:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birds\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRunning \u003ccode\u003erails routes\u003c/code\u003e will show us all the RESTful routes in our application,\nplus our custom route:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails routes\n\u003cspan class=\"gp\"\u003ePrefix Verb   URI Pattern               Controller#\u003c/span\u003eAction\n\u003cspan class=\"gp\"\u003e birds GET    /birds(.:format)          birds#\u003c/span\u003eindex\n\u003cspan class=\"gp\"\u003e       POST   /birds(.:format)          birds#\u003c/span\u003ecreate\n\u003cspan class=\"gp\"\u003e  bird GET    /birds/:id(.:format)      birds#\u003c/span\u003eshow\n\u003cspan class=\"gp\"\u003e       PATCH  /birds/:id(.:format)      birds#\u003c/span\u003eupdate\n\u003cspan class=\"gp\"\u003e       PUT    /birds/:id(.:format)      birds#\u003c/span\u003eupdate\n\u003cspan class=\"gp\"\u003e       DELETE /birds/:id(.:format)      birds#\u003c/span\u003edestroy\n\u003cspan class=\"gp\"\u003e       PATCH  /birds/:id/like(.:format) birds#\u003c/span\u003eincrement_likes\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe'll also need to add a \u003ccode\u003edestroy\u003c/code\u003e action to our controller where we'll be\ndeleting the bird from the database:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edestroy\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edestroy\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ehead\u003c/span\u003e \u003cspan class=\"ss\"\u003e:no_content\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bird not found\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn this controller action, our goal is to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eFind a bird using the ID from the route params\u003c/li\u003e\n\u003cli\u003eRemove it from the database with \u003ccode\u003ebird.destroy\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eYou'll also notice that instead of rendering a JSON response, we're returning\n\u003ccode\u003ehead :no_content\u003c/code\u003e if our bird was successfully deleted. \u003ccode\u003e:no_content\u003c/code\u003e will give\na 204 status code, indicating that the server has successfully fulfilled the\nrequest and that there is no content to send in the response. We're also not\nsending any payload of data in the body of the request.\u003c/p\u003e\n\n\u003cp\u003eOne thing to watch out for: if the API doesn't return JSON data, and you try to\nread the response data from a \u003ccode\u003efetch\u003c/code\u003e request, you will get an error:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://localhost:3000/birds/3\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eDELETE\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"c1\"\u003e// this line will error out, because there is no JSON to parse!\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eDepending on your needs, you could send back a JSON response to verify that the\nrequest was completed successfully. For example, \u003ccode\u003ejson-server\u003c/code\u003e handles a\nsuccessful delete request by sending an empty object:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edestroy\u003c/span\u003e\n\u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUltimately, you can decide which option you prefer based on how you'll use this\ndata in your client application.\u003c/p\u003e\n\n\u003cp\u003eMake sure to test these out in Postman to see the difference between using\n\u003ccode\u003ehead\u003c/code\u003e and \u003ccode\u003erender\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eNow that we've covered the Delete action, you can perform all four CRUD actions\nwith Rails and do so following RESTful conventions!\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following question:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat options did you learn about in this lesson for returning information to\nyour users about the status of a delete request?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://api.rubyonrails.org/v6.1.3.1/classes/ActionController/Head.html#method-i-head\"\u003eThe \u003ccode\u003ehead\u003c/code\u003e method\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE#responses\"\u003eDELETE request status codes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g69edca9bd5df924079bb888542b48a00"},{"id":483297,"title":"Video: Custom Rendering","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-custom-rendering\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-custom-rendering\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-custom-rendering/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/605875026/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","exportId":"video-custom-rendering"},{"id":483298,"title":"Controller Exception Handling","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-controller-exception-handling\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-controller-exception-handling/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-controller-exception-handling\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-controller-exception-handling/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse exception handling techniques like \u003ccode\u003erescue\u003c/code\u003e and \u003ccode\u003erescue_from\u003c/code\u003e in a Rails\ncontroller\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll finish work on our Bird API by refactoring the controller\nto add in some helpful reusable error handling code. To get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will download all the dependencies for our app, set up the database, and\nrun the Rails server.\u003c/p\u003e\n\n\u003ch2\u003eVideo Walkthrough\u003c/h2\u003e\n\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/evlSdyGoE3s?rel=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eDRYing Up Controller Code\u003c/h2\u003e\n\n\u003cp\u003eIn the current implementation of our \u003ccode\u003eBirdsController\u003c/code\u003e, we've defined actions to\nhandle all five RESTful routes plus one additional custom route. You'll notice\nthere is some common behavior between a lot of the methods. For all the routes\nthat include a route parameter (\u003ccode\u003e/birds/:id\u003c/code\u003e), we're using the ID in the params\nhash to look up a bird; if the bird is found, we're performing some action with\nit, and if not, we're sending an error message back.\u003c/p\u003e\n\n\u003cp\u003eFor example, have a look at the \u003ccode\u003eshow\u003c/code\u003e and \u003ccode\u003eupdate\u003c/code\u003e actions:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# GET /birds/:id\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bird not found\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# PATCH /birds/:id\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bird not found\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBetween these two methods, there's a good amount of repeated code:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eFinding a bird based on the ID\u003c/li\u003e\n\u003cli\u003ePerforming control flow (if/else) based on whether or not the bird exists\u003c/li\u003e\n\u003cli\u003eReturning an error message with a status of \u003ccode\u003e:not_found\u003c/code\u003e if the bird doesn't\nexist\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThat same code also exists in the \u003ccode\u003eincrement_likes\u003c/code\u003e and \u003ccode\u003edestroy\u003c/code\u003e actions. That\nmakes this a good opportunity for a refactor to DRY up some of this repeated\nlogic!\u003c/p\u003e\n\n\u003cp\u003eLet's start by making a private method for generating the \u003ccode\u003e:not_found\u003c/code\u003e response:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003erender_not_found_response\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bird not found\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can then update our actions to use this method instead of implementing the\nrendering logic directly:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# GET /birds/:id\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender_not_found_response\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# PATCH /birds/:id\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender_not_found_response\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can also make a helper method to find a bird based on the ID in the params\nhash:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efind_bird\u003c/span\u003e\n  \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, our controller actions don't need to worry about how the \u003ccode\u003efind_bird\u003c/code\u003e method\nis implemented, as long as it returns a bird from the database. This frees us up\nto change how the bird finding logic is implemented in the future (for example,\nusing something other than the ID to look up a bird in the database, like a URL\nslug or \u003ca href=\"https://en.wikipedia.org/wiki/Universally_unique_identifier\"\u003eUUID\u003c/a\u003e).\u003c/p\u003e\n\n\u003cp\u003eHere's how our controller actions can use this method:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# GET /birds/:id\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_bird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender_not_found_response\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# PATCH /birds/:id\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_bird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender_not_found_response\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eHandling Exceptions\u003c/h2\u003e\n\n\u003cp\u003eWe can also shorten up the code in each of our controller methods by using a\ndifferent approach to finding a bird using the ID. This will also help us\nimprove our error handling. Currently, we're using the \u003ca href=\"https://api.rubyonrails.org/v6.1.3.2/classes/ActiveRecord/FinderMethods.html#method-i-find_by\"\u003e\u003ccode\u003efind_by\u003c/code\u003e\u003c/a\u003e\nmethod to look up a bird. \u003ccode\u003efind_by\u003c/code\u003e returns \u003ccode\u003enil\u003c/code\u003e if the record isn't found in\nthe database, which makes it useful for \u003ccode\u003eif/else\u003c/code\u003e control flow, since \u003ccode\u003enil\u003c/code\u003e is a\nfalse-y value in Ruby.\u003c/p\u003e\n\n\u003cp\u003eIf we use the \u003ca href=\"https://api.rubyonrails.org/v6.1.3.2/classes/ActiveRecord/FinderMethods.html#method-i-find\"\u003e\u003ccode\u003efind\u003c/code\u003e\u003c/a\u003e method instead, we'll get an\n\u003ccode\u003eActiveRecord::RecordNotFound\u003c/code\u003e exception instead of \u003ccode\u003enil\u003c/code\u003e when the record\ndoesn't exist. Try updating the \u003ccode\u003efind_bird\u003c/code\u003e action like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efind_bird\u003c/span\u003e\n  \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen make a request for an ID that doesn't exist in the database, like\n\u003ccode\u003elocalhost:3000/birds/9999\u003c/code\u003e. You should see an error message like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eActiveRecord::RecordNotFound (Couldn't find Bird with 'id'=9999)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can handle this error in our controller method by using a\n\u003ca href=\"https://ruby-doc.org/core-2.7.3/doc/syntax/exceptions_rdoc.html\"\u003e\u003ccode\u003erescue\u003c/code\u003e block in our method\u003c/a\u003e, like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_bird\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordNotFound\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender_not_found_response\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNot only is this code shorter than the previous implementation, it also gives a\nclearer separation between the \"happy path\" of our code (no exceptions/errors)\nand the logic for handling exceptions/errors. Try making the same request in the\nbrowser to \u003ccode\u003elocalhost:3000/birds/9999\u003c/code\u003e — now that we're handling the exception\nin the controller, you should see a 404 status code in the console with the \u003ccode\u003e{ \"error\": \"Bird not found\" }\u003c/code\u003e JSON response instead of a 500 server error.\u003c/p\u003e\n\n\u003cp\u003eWe use the same approach to our \u003ccode\u003eupdate\u003c/code\u003e action as well:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_bird\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordNotFound\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender_not_found_response\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe tradeoff to this approach of using exception handling rather than an if/else\ncontrol flow is that it may be less apparent to other developers looking at our\ncode at first what code in the \u003ccode\u003eupdate\u003c/code\u003e block would cause that exception to be\nthrown.\u003c/p\u003e\n\n\u003cp\u003eWe can take this one step further, and use the \u003ca href=\"https://api.rubyonrails.org/classes/ActiveSupport/Rescuable/ClassMethods.html#method-i-rescue_from\"\u003e\u003ccode\u003erescue_from\u003c/code\u003e method\u003c/a\u003e\nto handle the \u003ccode\u003eActiveRecord::RecordNotFound\u003c/code\u003e exception from \u003cstrong\u003eall\u003c/strong\u003e of our controller\nactions:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBirdsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erescue_from\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordNotFound\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ewith: :render_not_found_response\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# rest of controller...\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBy using the \u003ccode\u003erescue_from\u003c/code\u003e method this way, if \u003cem\u003eany\u003c/em\u003e of our controller actions\nthrow an \u003ccode\u003eActiveRecord::RecordNotFound\u003c/code\u003e exception, our\n\u003ccode\u003erender_not_found_response\u003c/code\u003e method will return the appropriate JSON response.\u003c/p\u003e\n\n\u003cp\u003eHere's the fully refactored version of the controller:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBirdsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erescue_from\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordNotFound\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ewith: :render_not_found_response\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# GET /birds\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebirds\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebirds\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# POST /birds\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# GET /birds/:id\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_bird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# PATCH /birds/:id\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_bird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# PATCH /birds/:id/like\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eincrement_likes\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_bird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003elikes: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elikes\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# DELETE /birds/:id\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edestroy\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_bird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edestroy\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ehead\u003c/span\u003e \u003cspan class=\"ss\"\u003e:no_content\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efind_bird\u003c/span\u003e\n    \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ebird_params\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epermit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:species\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:likes\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003erender_not_found_response\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bird not found\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eUsing exception handling techniques like \u003ccode\u003erescue\u003c/code\u003e and \u003ccode\u003erescue_from\u003c/code\u003e opens up a\nlot of possibilities in terms of how you structure your code. For our controller\nactions in particular, it allows us to isolate the \"happy path\" of our code\n(performing CRUD actions and rendering a response to the users) from the\nexception handling logic. It also lets us handle exceptions in a consistent way,\nso that users of our API get the same response for common errors, like not being\nable to find a particular resource.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat is the difference in behavior between the \u003ccode\u003efind\u003c/code\u003e and \u003ccode\u003efind_by\u003c/code\u003e methods?\nWhy is that difference important for how we handle not-found errors?\u003c/li\u003e\n\u003cli\u003eLooking at the final version of the controller code, what sequence of events\nwould happen if we tried to submit a \u003ccode\u003ePATCH\u003c/code\u003e request for a bird that doesn't\nexist?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://api.rubyonrails.org/classes/ActiveSupport/Rescuable/ClassMethods.html#method-i-rescue_from\"\u003e\u003ccode\u003erescue_from\u003c/code\u003e method\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g95a8f7d429b1405260be20a6b1e292a8"},{"id":483299,"title":"Rails Update and Destroy Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-update-destroy-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-update-destroy-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-update-destroy-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-update-destroy-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eGenerate \u003ccode\u003eupdate\u003c/code\u003e and \u003ccode\u003edestroy\u003c/code\u003e routes for one resource\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll continue building an API for the plant store! The code for\nthe frontend React application is done; you can find it in the \u003ccode\u003eclient\u003c/code\u003e\ndirectory. Your job is to create the Rails API so that the \u003ccode\u003efetch\u003c/code\u003e requests on\nthe frontend work successfully.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eTo set up the frontend and backend dependencies, from the root directory, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo see how the React application and Rails API are interacting, you can run the\nRails application in one terminal by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, \u003cstrong\u003eopen another terminal\u003c/strong\u003e and run React:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEach application will run on its own port on \u003ccode\u003elocalhost\u003c/code\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eReact: \u003ca href=\"http://localhost:4000\"\u003ehttp://localhost:4000\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eRails: \u003ca href=\"http://localhost:3000\"\u003ehttp://localhost:3000\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eDeliverables\u003c/h2\u003e\n\n\u003ch3\u003eRoutes\u003c/h3\u003e\n\n\u003cp\u003eYour API should have the following routes as well as the associated controller\nactions that return the appropriate JSON data:\u003c/p\u003e\n\n\u003ch4\u003eUpdate Route\u003c/h4\u003e\n\n\u003cp\u003eMaking a PATCH request to this route with an object in the body should update one\nplant, and return the updated plant in the response. You should use strong\nparams to handle the update.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePATCH /plants/:id\n\n\nHeaders\n-------\nContent-Type: application/json\n\n\nRequest Body\n------\n{\n  \"is_in_stock\": false\n}\n\n\nResponse Body\n-------\n{\n  \"id\": 1,\n  \"name\": \"Aloe\",\n  \"image\": \"./images/aloe.jpg\",\n  \"price\": 11.50,\n  \"is_in_stock\": false\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch4\u003eDestroy Route\u003c/h4\u003e\n\n\u003cp\u003eMaking a DELETE request to this route should delete one plant from the database.\nYou should return a response of \u003ccode\u003ehead :no_content\u003c/code\u003e to indicate a successful\ndeletion.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eDELETE /plants/:id\n\n\nResponse Body\n------\nno content\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","exportId":"g5c38125798c3d590264ac061a1492206"},{"id":483300,"title":"Putting it All Together: Rails CRUD","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-mini-project-crud\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-mini-project-crud/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-mini-project-crud\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-mini-project-crud/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eGenerate an API that follows REST conventions\u003c/li\u003e\n\u003cli\u003eHandle full CRUD with one model\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow's your chance to put all the CRUD actions we've been learning to good use!\nWe're going to be building out an API in Rails as a backend for a spice store.\nThere's a React application in the \u003ccode\u003e/client\u003c/code\u003e directory that's all set up for the\nfrontend; your goal is to build out the necessary CRUD actions in the backend by\nfollowing RESTful conventions.\u003c/p\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eTo set up the frontend and backend dependencies, from the root directory, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003ch3\u003eSpice Model\u003c/h3\u003e\n\n\u003cp\u003eGenerate a class and migrations for a \u003ccode\u003eSpice\u003c/code\u003e model with the following attributes:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003etitle\u003c/code\u003e (string)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eimage\u003c/code\u003e (string)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003edescription\u003c/code\u003e (string)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003enotes\u003c/code\u003e (string)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003erating\u003c/code\u003e (float)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAfter you've created the model, check your work by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, use \u003ccode\u003erails c\u003c/code\u003e to view data about the spices.\u003c/p\u003e\n\n\u003ch3\u003eRoutes\u003c/h3\u003e\n\n\u003cp\u003eYour API should have the following routes:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eGET /spices\u003c/code\u003e: return an array of all spices\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ePOST /spices\u003c/code\u003e: create a new spice\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ePATCH /spices/:id\u003c/code\u003e: update an existing spice\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eDELETE /spices/:id\u003c/code\u003e: delete an existing spice\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eMake sure to follow REST conventions for generating these routes.\u003c/p\u003e\n\n\u003cp\u003eYou should also use strong params in the controller for the POST and PATCH\nrequests.\u003c/p\u003e\n\n\u003cp\u003eUse the tests to guide your progress and ensure that each route has the expected\nJSON response body and HTTP status code. You can also run the server with\n\u003ccode\u003erails s\u003c/code\u003e and test out the routes manually using Postman.\u003c/p\u003e\n\n\u003cp\u003eGood luck! 💪\u003c/p\u003e\n\n\u003cp\u003eOnce your API is working, you can try out the full application in the browser\nwhen you're ready to see everything come together. You can run the Rails\napplication in one terminal by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, \u003cstrong\u003eopen another terminal\u003c/strong\u003e and run React:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEach application will run on its own port on \u003ccode\u003elocalhost\u003c/code\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eReact: \u003ca href=\"http://localhost:4000\"\u003ehttp://localhost:4000\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eRails: \u003ca href=\"http://localhost:3000\"\u003ehttp://localhost:3000\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gb811e74fdb86d448221393a479f8442b"}]},{"id":49289,"name":"Validations","status":"completed","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g16404564787aee262075c64224213cf9","items":[{"id":483301,"title":"Video: Validations","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-validations\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-validations\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-validations/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/605968995/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/v5.1/active_record_validations.html\"\u003eActive Record Validations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://edgeapi.rubyonrails.org/classes/ActiveSupport/Rescuable/ClassMethods.html#method-i-rescue_from\"\u003e\u003ccode\u003erescue_from\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-validations"},{"id":483302,"title":"Active Record Validations","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-active-record-validations-readme\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-validations-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-validations-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cp\u003eAfter this lesson, you should be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the purpose of validation\u003c/li\u003e\n\u003cli\u003eIdentify when validation occurs in the lifespan of an object\u003c/li\u003e\n\u003cli\u003eUse built-in validation methods\u003c/li\u003e\n\u003cli\u003eAdd custom validation errors\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eContext: Databases and Data Validity\u003c/h2\u003e\n\n\u003cp\u003eWhat is a \"validation\"?\u003c/p\u003e\n\n\u003cp\u003eIn the context of Rails, \u003cstrong\u003evalidations\u003c/strong\u003e are special method calls that go at the top\nof model class definitions and prevent them from being saved to the database if\ntheir data doesn't look right.\u003c/p\u003e\n\n\u003cp\u003eIn general, \u003cstrong\u003evalidations\u003c/strong\u003e consist of code that performs the job of protecting\nthe database from invalid data.\u003c/p\u003e\n\n\u003cp\u003eActive Record can validate our models for us before they even touch the database.\nThis means it's harder to end up with bad data, which can cause problems later\neven if our code is technically bug-free.\u003c/p\u003e\n\n\u003cp\u003eWe can use \u003ccode\u003eActiveRecord::Base\u003c/code\u003e helper methods like \u003ccode\u003e#validates\u003c/code\u003e to set things\nup.\u003c/p\u003e\n\n\u003ch3\u003eActive Record Validations vs Database Constraints\u003c/h3\u003e\n\n\u003cp\u003eMany relational databases, such as SQLite and PostgreSQL, have data validation\nfeatures that check things like length and data type. While Active Record\nvalidations are added in the model files, these validations are typically added\nvia migrations; depending on the specific validation, they may or may not be\nreflected in the \u003ccode\u003eschema.rb\u003c/code\u003e file.\u003c/p\u003e\n\n\u003cp\u003eDatabase constraints and model validations are also functionally different.\nDatabase constraints will ALWAYS be checked when adding or updating data in the\ndatabase, while Active Record validations will only be checked when adding or\nupdating data through Ruby/Rails (e.g. if we use SQL code in the command line to\nmodify the database, Active Record validations are not run).\u003c/p\u003e\n\n\u003cp\u003eSome developers use both database constraints and Active Record validations,\nwhile others rely on Active Record validations alone. Ultimately, it depends on\nhow the developer plans to add and update data in the database. In this lesson,\nwe'll be focusing on Active Record validations.\u003c/p\u003e\n\n\u003ch3\u003eWhat is \"invalid data\"?\u003c/h3\u003e\n\n\u003cp\u003eSuppose you get a new phone and you ask all of your friends for their phone\nnumber again. One of them tells you, \"555-868-902\". If you're paying attention,\nyou'll probably wrinkle your nose and think, \"Wait a minute. That doesn't sound\nlike a real phone number.\"\u003c/p\u003e\n\n\u003cp\u003e\"555-868-902\" is an example of \u003cstrong\u003einvalid data\u003c/strong\u003e... for a phone number. It's\nprobably a valid account number for some internet service provider in Alaska,\nbut there's no way to figure out what your friend's phone number is from those\nnine numbers. It's a showstopper, and even worse, it kind of looks like valid\ndata if you're not looking closely.\u003c/p\u003e\n\n\u003ch3\u003eValidations Protect the Database\u003c/h3\u003e\n\n\u003cp\u003eInvalid data is the bogeyman of web applications: it hides in your database\nuntil the worst possible moment, then jumps out and ruins everything by causing\nconfusing errors.\u003c/p\u003e\n\n\u003cp\u003eImagine the phone number above being saved to the database in an application\nthat makes automatic calls using the Twilio API. When your system tries to call\nthis number, there will be an error because no such phone number exists, which\nmeans you need to have an entire branch of code dedicated to handling \u003cem\u003ejust\u003c/em\u003e\nthat edge case.\u003c/p\u003e\n\n\u003cp\u003eIt would be much easier if you never have bad data in the first place, so you\ncan focus on handling edge cases that are truly unpredictable.\u003c/p\u003e\n\n\u003cp\u003eThat's where validations come in.\u003c/p\u003e\n\n\u003ch2\u003eBasic Usage\u003c/h2\u003e\n\n\u003cp\u003eFor more examples of basic validation usage, see the Rails Guide for\n\u003ca href=\"http://guides.rubyonrails.org/active_record_validations.html\"\u003eActive Record Validations\u003c/a\u003e. Take a few minutes to\nbrowse the helpers listed in Section 2.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePerson\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActive\u003c/span\u003e \u003cspan class=\"no\"\u003eRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eBase\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003epresence: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"no\"\u003ePerson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"John Doe\"\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; true\u003c/span\u003e\n\u003cspan class=\"no\"\u003ePerson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"kp\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; false\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ccode\u003e#validates\u003c/code\u003e is our Swiss Army knife for validations. It takes two arguments:\nthe first is the \u003cstrong\u003ename of the attribute\u003c/strong\u003e we want to validate, and the second\nis a \u003cstrong\u003ehash of options\u003c/strong\u003e that will include the details of how to validate it.\u003c/p\u003e\n\n\u003cp\u003eIn this example, the options hash is \u003ccode\u003e{ presence: true }\u003c/code\u003e, which implements the\nmost basic form of validation, preventing the object from being saved if its\n\u003ccode\u003ename\u003c/code\u003e attribute is empty.\u003c/p\u003e\n\n\u003ch2\u003eLifecycle Timing\u003c/h2\u003e\n\n\u003cp\u003eBefore proceeding, keep the answer to this question in mind:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eWhat is the difference between \u003ccode\u003e#new\u003c/code\u003e and \u003ccode\u003e#create\u003c/code\u003e?\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eIf you've forgotten, \u003ccode\u003e#new\u003c/code\u003e instantiates a new Active Record model \u003cem\u003ewithout\u003c/em\u003e\nsaving it to the database, whereas \u003ccode\u003e#create\u003c/code\u003e immediately attempts to save it, as\nif you had called \u003ccode\u003e#new\u003c/code\u003e and then \u003ccode\u003e#save\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eDatabase activity triggers validation\u003c/strong\u003e. An Active Record model instantiated\nwith \u003ccode\u003e#new\u003c/code\u003e will not be validated, because no attempt to write to the database\nwas made. Validations won't run unless you call a method that actually hits the\nDB, like \u003ccode\u003e#save\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe only way to trigger validation without touching the database is to call the\n\u003ccode\u003e#valid?\u003c/code\u003e method.\u003c/p\u003e\n\n\u003cp\u003eFor a full list of methods that trigger validation, see \u003ca href=\"https://guides.rubyonrails.org/active_record_validations.html#when-does-validation-happen-questionmark\"\u003eSection\n1.2\u003c/a\u003e of the Rails Guide for Active Record\nValidations.\u003c/p\u003e\n\n\u003ch2\u003eValidation Failure\u003c/h2\u003e\n\n\u003cp\u003eHere it is, the moment of truth. What can we do when a record fails validation?\u003c/p\u003e\n\n\u003ch3\u003eHow can you tell when a record fails validation?\u003c/h3\u003e\n\n\u003cp\u003e\u003cstrong\u003ePay attention to return values!\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eBy default, Active Record does not raise an exception when validation fails. DB\noperation methods (such as \u003ccode\u003e#save\u003c/code\u003e) will simply return \u003ccode\u003efalse\u003c/code\u003e and decline to\nupdate the database.\u003c/p\u003e\n\n\u003cp\u003eEvery database method has a sister method with a \u003ccode\u003e!\u003c/code\u003e at the end which will raise\nan exception (\u003ccode\u003e#create!\u003c/code\u003e instead of \u003ccode\u003e#create\u003c/code\u003e and so on).\u003c/p\u003e\n\n\u003cp\u003eAnd of course, you can always check manually with \u003ccode\u003e#valid?\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePerson\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActive\u003c/span\u003e \u003cspan class=\"no\"\u003eRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eBase\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003epresence: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eperson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePerson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\n\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e \u003cspan class=\"c1\"\u003e#=\u0026gt; false\u003c/span\u003e\n\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esave\u003c/span\u003e \u003cspan class=\"c1\"\u003e#=\u0026gt; false\u003c/span\u003e\n\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esave!\u003c/span\u003e \u003cspan class=\"c1\"\u003e#=\u0026gt; EXCEPTION\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eFinding out why validations failed\u003c/h3\u003e\n\n\u003cp\u003eTo find out what went wrong, you can look at the model's \u003ccode\u003e#errors\u003c/code\u003e object.\u003c/p\u003e\n\n\u003cp\u003eYou can check all errors at once by examining \u003ccode\u003eerrors.messages\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eperson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePerson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\n\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emessages\u003c/span\u003e \u003cspan class=\"c1\"\u003e#=\u0026gt; empty\u003c/span\u003e\n\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esave\u003c/span\u003e \u003cspan class=\"c1\"\u003e#=\u0026gt; false\u003c/span\u003e\n\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e \u003cspan class=\"c1\"\u003e#=\u0026gt; false\u003c/span\u003e\n\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emessages\u003c/span\u003e \u003cspan class=\"c1\"\u003e#=\u0026gt; name: can't be blank\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can check one attribute at a time by passing the name to \u003ccode\u003eerrors\u003c/code\u003e as a key,\nlike so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eRendering Validation Errors As JSON\u003c/h2\u003e\n\n\u003cp\u003eWhen a validation error occurs on the server, we can give our users more details\nabout what went wrong by returning the validation errors from our controllers:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eperson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePerson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eperson_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSince we're sending these errors in the response, we can then use the errors\nobject on the frontend to display these errors to our users.\u003c/p\u003e\n\n\u003cp\u003eWe can also get an array of nicely-formatted errors with the \u003ccode\u003e.full_messages\u003c/code\u003e\nmethod:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eperson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePerson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eperson_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerrors: \u003c/span\u003e\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efull_messages\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAlso, if you're a fan of using \u003ccode\u003erescue\u003c/code\u003e for control flow instead of \u003ccode\u003eif/else\u003c/code\u003e,\nyou can use the \u003ccode\u003eActiveRecord::RecordInvalid\u003c/code\u003e exception class along with\n\u003ccode\u003ecreate!\u003c/code\u003e or \u003ccode\u003eupdate!\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eperson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePerson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eperson_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordInvalid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003einvalid\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerrors: \u003c/span\u003e\u003cspan class=\"n\"\u003einvalid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erecord\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efull_messages\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe'll cover error handling in controllers in more detail in the next lesson.\u003c/p\u003e\n\n\u003ch2\u003eOther Built-in Validators\u003c/h2\u003e\n\n\u003cp\u003eRails has a host of built-in helpers.\u003c/p\u003e\n\n\u003ch3\u003eLength\u003c/h3\u003e\n\n\u003cp\u003e\u003ccode\u003elength\u003c/code\u003e is one of the most versatile:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePerson\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActive\u003c/span\u003e \u003cspan class=\"no\"\u003eRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eBase\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003elength: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eminimum: \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:bio\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003elength: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003emaximum: \u003c/span\u003e\u003cspan class=\"mi\"\u003e500\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003elength: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003ein: \u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:registration_number\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003elength: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eis: \u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe \u003ccode\u003ein\u003c/code\u003e argument makes use of a \u003ca href=\"http://ruby-doc.org/core/Range.html\"\u003eRange\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eRemember that there's no syntactical magic happening with any of these method\ncalls. If we weren't using Ruby's \"poetry mode\" (which is considered standard\nfor Rails), the above code would look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePerson\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActive\u003c/span\u003e \u003cspan class=\"no\"\u003eRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eBase\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003e:minimum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:bio\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003e:maximum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e500\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003e:in\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:registration_number\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003e:is\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ePhew!\u003c/p\u003e\n\n\u003ch3\u003eUniqueness\u003c/h3\u003e\n\n\u003cp\u003eAnother common built-in validator is \u003ccode\u003euniqueness\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eAccount\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActive\u003c/span\u003e \u003cspan class=\"no\"\u003eRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eBase\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:email\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003euniqueness: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will prevent any account from being created with the same email as another already-existing account.\u003c/p\u003e\n\n\u003ch3\u003eCustom Messages\u003c/h3\u003e\n\n\u003cp\u003eThis isn't a validator in its own right, but a handy convenience option for specifying your own error messages:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePerson\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActive\u003c/span\u003e \u003cspan class=\"no\"\u003eRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eBase\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:not_a_robot\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eacceptance: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003emessage: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Humans only!\"\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eCustom Validations\u003c/h3\u003e\n\n\u003cp\u003eThere are two ways to implement custom validations, with examples in \u003ca href=\"http://guides.rubyonrails.org/active_record_validations.html#performing-custom-validations\"\u003eSection\n6\u003c/a\u003e of the Rails Guide.\u003c/p\u003e\n\n\u003cp\u003eOf the two, adding custom methods is the simplest. Here's an example of creating\na custom validation method to check the validity of an email address:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePerson\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidate\u003c/span\u003e \u003cspan class=\"ss\"\u003e:must_have_flatiron_email\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emust_have_flatiron_email\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ematch?\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/flatironschool.com/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:email\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"We're only allowed to have people who work for the company in the database!\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNote that here, we are calling the \u003ccode\u003e#validate\u003c/code\u003e method, rather than \u003ccode\u003e#validates\u003c/code\u003e,\nand passing it a method we write ourselves to perform our custom validation.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned the importance of validating data to ensure that no\nbad data ends up in our database. We also discussed the difference between model\nvalidations and database constraints. Finally, we saw some common methods for\nimplementing validations on our models using Active Record.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhen would you use the \u003ccode\u003evalidates\u003c/code\u003e method vs. the \u003ccode\u003evalidate\u003c/code\u003e method? What\nargument(s) get passed to each of them?\u003c/li\u003e\n\u003cli\u003eWhat are two ways to trigger validation?\u003c/li\u003e\n\u003cli\u003eHow can you get Active Record to return an Exception when validation fails?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://guides.rubyonrails.org/active_record_validations.html\"\u003eActive Record Validations\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"active-record-validations"},{"id":483303,"title":"Video: Custom Validations","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-custom-validations\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-custom-validations\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-custom-validations/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/606010437/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/active_record_validations.html#custom-methods\"\u003eRails Guides: Custom Validation Methods\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-custom-validations"},{"id":483304,"title":"Active Record Validations Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-active-record-validations-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-validations-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-validations-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-validations-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eWrite basic validations using Active Record helpers\u003c/li\u003e\n\u003cli\u003eWrite custom validations\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eThis project has starter code for a couple of models, \u003ccode\u003eAuthor\u003c/code\u003e and \u003ccode\u003ePost\u003c/code\u003e. To\nget set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen run \u003ccode\u003elearn test\u003c/code\u003e to run the tests. We'll be focusing solely on the model\nfiles for this lab, so there's no need to run \u003ccode\u003erails s\u003c/code\u003e or view anything in the\nbrowser.\u003c/p\u003e\n\n\u003ch2\u003eBasic Validations\u003c/h2\u003e\n\n\u003cp\u003eAdd validations to these models such that...\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eAll authors have a name\u003c/li\u003e\n\u003cli\u003eNo two authors have the same name\u003c/li\u003e\n\u003cli\u003eAuthor phone numbers are exactly ten digits\u003c/li\u003e\n\u003cli\u003eAll posts have a title\u003c/li\u003e\n\u003cli\u003ePost content is at least 250 characters long\u003c/li\u003e\n\u003cli\u003ePost summary is a maximum of 250 characters\u003c/li\u003e\n\u003cli\u003ePost category is either \u003ccode\u003eFiction\u003c/code\u003e or \u003ccode\u003eNon-Fiction\u003c/code\u003e. This step requires an\n\u003ccode\u003einclusion\u003c/code\u003e validator, which was not outlined in the lesson. You'll need to\nrefer to the \u003ca href=\"https://guides.rubyonrails.org/active_record_validations.html\"\u003eRails guide\u003c/a\u003e to look up how to use\nit.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eCustom Validations\u003c/h2\u003e\n\n\u003cp\u003eFinally, add a custom validator to the \u003ccode\u003ePost\u003c/code\u003e model that ensures the title is\nsufficiently clickbait-y. The validator should add a validation error if the\ntitle does not contain:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\"Won't Believe\"\u003c/li\u003e\n\u003cli\u003e\"Secret\"\u003c/li\u003e\n\u003cli\u003e\"Top [number]\"\u003c/li\u003e\n\u003cli\u003e\"Guess\"\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eUse the \u003ca href=\"https://guides.rubyonrails.org/active_record_validations.html#custom-methods\"\u003eCustom methods\u003c/a\u003e style of validator found in the Rails\ndocumentation.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/active_record_validations.html\"\u003eActive Record Validations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/active_record_validations.html#custom-methods\"\u003eCustom Methods\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gcde976746e936b094889477c9ca331dc"},{"id":483305,"title":"Controller Validations","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-controller-validations-readme\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-controller-validations-readme/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-controller-validations-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-controller-validations-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCheck the validity of a model in a controller\u003c/li\u003e\n\u003cli\u003eRender a response with the error messages\u003c/li\u003e\n\u003cli\u003eUse HTTP status codes to provide additional context\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that we've seen how Active Record can be used to validate our data, let's\nsee how we can use that in our controllers to give our user access to the\nvalidation errors, so they can fix their typos or other problems with their\nrequest.\u003c/p\u003e\n\n\u003cp\u003eTo get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eManually Checking Validation\u003c/h2\u003e\n\n\u003cp\u003eUp until this point, our \u003ccode\u003ecreate\u003c/code\u003e action has looked something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/birds_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet's add some validation to our \u003ccode\u003eBird\u003c/code\u003e model, so that we don't end up with bad\ndata:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/models/bird.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBird\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003epresence: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003euniqueness: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, if we try to create a bird using Postman with bad data, we've got a\nproblem!\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"species\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Archilochus colubris\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOur server still returns a \u003ccode\u003eBird\u003c/code\u003e object, but we can clearly see that it wasn't\nsaved successfully:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"species\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Archilochus colubris\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"created_at\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"updated_at\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"likes\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFrom this process, we can tell:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eOur model validation prevented this bad data from being saved in the database\n(yay!)\u003c/li\u003e\n\u003cli\u003eThe response doesn't tell us anything about why the data wasn't saved (boo.)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eTo provide this additional context, we need to update our controller action to\nchange the response based on whether or not the bird was saved successfully.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerrors: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, we get a different response after sending that same request in Postman:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"can't be blank\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFrom the controller, \u003ccode\u003ebird.errors\u003c/code\u003e will give a serializable object with all the\nerror messages from our Active Record validations.\u003c/p\u003e\n\n\u003cp\u003eWe also included the status code of \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/422\"\u003e422 Unprocessable Entity\u003c/a\u003e, indicating\nthis was a bad request.\u003c/p\u003e\n\n\u003cp\u003eWe can clean up this controller action by handling the\n\u003ccode\u003eActiveRecord::RecordInvalid\u003c/code\u003e exception class along with \u003ccode\u003ecreate!\u003c/code\u003e or \u003ccode\u003eupdate!\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordInvalid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003einvalid\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerrors: \u003c/span\u003e\u003cspan class=\"n\"\u003einvalid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erecord\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn the \u003ccode\u003erescue\u003c/code\u003e block, the \u003ccode\u003einvalid\u003c/code\u003e variable is an instance of the exception\nitself. From that \u003ccode\u003einvalid\u003c/code\u003e variable, we can access the actual Active Record\ninstance with the \u003ccode\u003erecord\u003c/code\u003e method, where we can retrieve its errors.\u003c/p\u003e\n\n\u003cp\u003eWe can take a similar approach to validation in our \u003ccode\u003eupdate\u003c/code\u003e method, since\nvalidations will also run when a model is updated:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_bird\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordInvalid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003einvalid\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerrors: \u003c/span\u003e\u003cspan class=\"n\"\u003einvalid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erecord\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe could also handle \u003cstrong\u003eall\u003c/strong\u003e \u003ccode\u003eActiveRecord::RecordInvalid\u003c/code\u003e exceptions in the\ncontroller with the \u003ccode\u003erescue_from\u003c/code\u003e method. We'll add it along with the\n\u003ccode\u003erescue_from\u003c/code\u003e that we already implemented for \u003ccode\u003eActiveRecord::RecordNotFound\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBirdsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erescue_from\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordNotFound\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ewith: :render_not_found_response\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# added rescue_from\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erescue_from\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordInvalid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ewith: :render_unprocessable_entity_response\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# rest of controller actions...\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003erender_unprocessable_entity_response\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einvalid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerrors: \u003c/span\u003e\u003cspan class=\"n\"\u003einvalid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erecord\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# rest of private methods...\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, our \u003ccode\u003ecreate\u003c/code\u003e and \u003ccode\u003eupdate\u003c/code\u003e actions can focus on the happy path:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# create! exceptions will be handled by the rescue_from ActiveRecord::RecordInvalid code\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_bird\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# update! exceptions will be handled by the rescue_from ActiveRecord::RecordInvalid code\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eFormatting the Error Response\u003c/h2\u003e\n\n\u003cp\u003eWhen we're sending back error messages, we should take care to format the error\nmessages in a way that can be easily displayed by our frontend. Take another\nlook at the current implementation:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerrors: \u003c/span\u003e\u003cspan class=\"n\"\u003einvalid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erecord\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will return a JSON object in the body of the response with a key of \u003ccode\u003eerrors\u003c/code\u003e\npointing to a nested object where the \u003cstrong\u003ekeys\u003c/strong\u003e are the invalid attributes, and\n\u003cstrong\u003evalues\u003c/strong\u003e are the validation error messages, like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"can't be blank\"\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"species\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"must be unique\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe could also return a different format by using the \u003ccode\u003e#full_messages\u003c/code\u003e method\nto output an array of pre-formatted error messages:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerrors: \u003c/span\u003e\u003cspan class=\"n\"\u003einvalid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erecord\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efull_messages\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThat would produce a slightly different output:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Name can't be blank\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Species must be unique\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNotice in either case, the key on our JSON object is \u003ccode\u003eerrors\u003c/code\u003e since we are\nreturning a collection of error messages (either an object or an array).\u003c/p\u003e\n\n\u003cp\u003eWhich format you choose will depend largely on how you plan on using this data\non the frontend. It's good to know you have options!\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWith model validations in place, we can help protect our database against bad\ndata. Active Record validations also help provide \u003cstrong\u003eerror messages\u003c/strong\u003e to indicate\nwhy a certain value wasn't considered valid data. We can access the model's\nvalidity and error messages in the controller. By sending this data in the\nresponse, we'll be able to provide additional context to our clients about what\nwent wrong with their request so they can fix it.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eIf we have Active Record validations in place, what is the difference in how\nvalidation errors will be handled if we use \u003ccode\u003ecreate\u003c/code\u003e vs. \u003ccode\u003ecreate!\u003c/code\u003e?\u003c/li\u003e\n\u003cli\u003eIn the following line of code, what is the \u003ccode\u003einvalid\u003c/code\u003e variable and how can we\nuse it: \u003ccode\u003erescue ActiveRecord::RecordInvalid =\u0026gt; invalid\u003c/code\u003e?\u003c/li\u003e\n\u003c/ol\u003e","exportId":"g7ffdd7ca860a2fc1deba273bf5f9efd3"},{"id":483306,"title":"Controller Validations Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-controller-validations-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-controller-validations-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-controller-validations-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-controller-validations-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCheck the validity of a model in a controller\u003c/li\u003e\n\u003cli\u003eRender a response with the error messages\u003c/li\u003e\n\u003cli\u003eUse HTTP status codes to provide additional context\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eTime to apply these new tools!\u003c/p\u003e\n\n\u003cp\u003eThe goal of this lab is to allow users of this blog-style application to create\nand edit authors and posts without worrying about typos or other mistakes\nleading to error-prone form submissions.\u003c/p\u003e\n\n\u003cp\u003eFor example, if someone creates a blog post with less than 100 characters of\ncontent, it's likely that they accidentally pasted the wrong text, or\nmisunderstood which information goes into which field. We can improve the user's\nexperience and the stability of our codebase by notifying users about these\nkinds of mistakes \u003cem\u003ebefore\u003c/em\u003e bad data gets into the database.\u003c/p\u003e\n\n\u003cp\u003eTo get started, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is a barebones app with two models, \u003ccode\u003eAuthor\u003c/code\u003e and \u003ccode\u003ePost\u003c/code\u003e. Right now, you\ncan...\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eGET /authors/1\u003c/code\u003e: \u003cstrong\u003eView an author\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ePOST /authors\u003c/code\u003e: \u003cstrong\u003eCreate an author\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eGET /posts/1\u003c/code\u003e: \u003cstrong\u003eView a post\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ePATCH /posts/1\u003c/code\u003e: \u003cstrong\u003eUpdate a post\u003c/strong\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eDeliverables\u003c/h2\u003e\n\n\u003ch3\u003eAuthor Validations\u003c/h3\u003e\n\n\u003cp\u003eAdd validations to \u003ccode\u003eAuthor\u003c/code\u003e such that...\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eThe name cannot be blank\u003c/li\u003e\n\u003cli\u003eThe e-mail is unique\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003ePost Validations\u003c/h3\u003e\n\n\u003cp\u003eAdd validations to \u003ccode\u003ePost\u003c/code\u003e such that...\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eThe title cannot be blank\u003c/li\u003e\n\u003cli\u003eThe category is either \u003ccode\u003e\"Fiction\"\u003c/code\u003e or \u003ccode\u003e\"Non-Fiction\"\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eThe content is at least 100 characters long\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003eController Actions\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003eChange \u003ccode\u003eAuthorsController#create\u003c/code\u003e to send back the error messages if the new\nauthor is invalid\u003c/li\u003e\n\u003cli\u003eChange \u003ccode\u003ePostsController#update\u003c/code\u003e to send back the error messages if the\nupdated post is invalid\u003c/li\u003e\n\u003c/ol\u003e","exportId":"g63a66f5e1c1dde8d71f6d1e673b4f20c"},{"id":483307,"title":"Validations Quiz","type":"Quizzes::Quiz","indent":1,"locked":false,"assignmentExportId":"gab9e8779bb0416c571d53e92b81fdc7c","questionCount":7,"timeLimit":null,"attempts":3,"graded":true,"pointsPossible":7.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-quiz-validations\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-quiz-validations/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eIt's time to check your knowledge! Use this quiz to create a custom study guide. Note any answers that were marked incorrect, so you can study the relevant material and try this quiz again.\u003c/p\u003e\n\u003cp\u003eIf you don't know the answer to a question, please do not guess. Instead, select \"I don't know\". It's OK not to know everything and to admit when we're unsure.\u003c/p\u003e","exportId":"g223abc7a504efa4cfbc7149a22ed8175"}]},{"id":49290,"name":"Client-Server Communication","status":"completed","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g74eb19cb5815cbd07039e29791d49260","items":[{"id":483308,"title":"Creating a Rails API from Scratch","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-creating-a-rails-api\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-creating-a-rails-api\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-creating-a-rails-api/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the \u003ccode\u003e--api\u003c/code\u003e flag to create an API-only Rails app\u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003eresource\u003c/code\u003e generator\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe've spent a lot of time now focusing on the backend, and now's a great\nopportunity to see what we can actually do with all the power of a Rails API to\nsupport a frontend application as well.\u003c/p\u003e\n\n\u003cp\u003eThroughout this section, we'll be building a DVD shop. We'll have a Rails API to\nsupport a React frontend application, and we'll be focusing on how that\nclient-server communication process works, as well as some challenges involved\nin communicating between two separate applications.\u003c/p\u003e\n\n\u003cp\u003eIn this lesson, we'll start by building the Rails backend from scratch and talk\nthrough some of the typical configuration when creating a new Rails API.\u003c/p\u003e\n\n\u003ch2\u003eGenerating a Rails API\u003c/h2\u003e\n\n\u003cp\u003eJust like we saw at the beginning of the phase, we can use \u003ccode\u003erails new\u003c/code\u003e to\ngenerate a new Rails application. We'll run that same command with a few\nadditional options to optimize our Rails app. Let's generate the backend code\nfor our \u003ccode\u003edvd-shop\u003c/code\u003e. Use \u003ccode\u003ecd ..\u003c/code\u003e to navigate out of the lab directory, and run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails new dvd-shop \u003cspan class=\"nt\"\u003e--api\u003c/span\u003e \u003cspan class=\"nt\"\u003e--minimal\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003e--api\u003c/code\u003e: this flag will create our new application with some additional\nAPI-specific configuration, and will skip the code for generating \u003ccode\u003e.erb\u003c/code\u003e files\nwith ActionView.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e--minimal\u003c/code\u003e: this flag skips a lot of additional Rails features that we\nwon't use in our API, such as code for sending emails and processing images.\nRead more about the \u003ca href=\"https://bigbinary.com/blog/rails-6-1-adds-minimal-option-support\"\u003e\u003ccode\u003e--minimal\u003c/code\u003e flag\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe reason we ask you to \u003ccode\u003ecd\u003c/code\u003e out of the lab directory is because when you\ngenerate a new Rails project, it will automatically create a new Git\nrepository for your Rails project. Since the lab directory is already a Git\nrepository, it's better to create this new project in its own directory, so\nyou don't end up with nested Git repositories.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eWith that code in place, let's generate the code for handling our first request\nfrom the client.\u003c/p\u003e\n\n\u003ch2\u003eUsing the Resource Generator\u003c/h2\u003e\n\n\u003cp\u003eOne of the main features of our frontend application will be to display a list\nof movies. For that feature, we'll want our API to handle a \u003ccode\u003eGET\u003c/code\u003e request to\n\u003ccode\u003e/movies\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eTo get that request working, we'll need to create a \u003cstrong\u003eroute\u003c/strong\u003e and \u003cstrong\u003econtroller\u003c/strong\u003e\naction on our Rails server. We'll also need a \u003cstrong\u003emodel\u003c/strong\u003e to interact with the\ndatabase, and a \u003cstrong\u003emigration\u003c/strong\u003e to generate the corresponding database table for\nthis model.\u003c/p\u003e\n\n\u003cp\u003eFor our \u003ccode\u003eMovie\u003c/code\u003e model, we'll want a table with the following attributes:\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eColumn Name\u003c/th\u003e\n\u003cth\u003eData Type\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003etitle\u003c/td\u003e\n\u003ctd\u003estring\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eyear\u003c/td\u003e\n\u003ctd\u003einteger\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003elength\u003c/td\u003e\n\u003ctd\u003einteger\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003edirector\u003c/td\u003e\n\u003ctd\u003estring\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003edescription\u003c/td\u003e\n\u003ctd\u003estring\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eposter_url\u003c/td\u003e\n\u003ctd\u003estring\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ecategory\u003c/td\u003e\n\u003ctd\u003estring\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ediscount\u003c/td\u003e\n\u003ctd\u003eboolean\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003efemale_director\u003c/td\u003e\n\u003ctd\u003eboolean\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eWe could create the route, model, controller, and migration individually, but\nsince this kind of operation is pretty common for a Rails developer, there's a\nhandy generator that will set up all the code we need: \u003ccode\u003erails g resource\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eNavigate into the \u003ccode\u003edvd-shop\u003c/code\u003e directory and run this code in your terminal:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g resource Movie title year:integer length:integer director description poster_url category discount:boolean female_director:boolean \u003cspan class=\"nt\"\u003e--no-test-framework\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis command will:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eGenerate a migration for creating a \u003ccode\u003emovies\u003c/code\u003e table with the specified attributes\u003c/li\u003e\n\u003cli\u003eGenerate a \u003ccode\u003eMovie\u003c/code\u003e model file\u003c/li\u003e\n\u003cli\u003eGenerate a \u003ccode\u003eMoviesController\u003c/code\u003e controller file\u003c/li\u003e\n\u003cli\u003eAdd \u003ccode\u003eresources :movies\u003c/code\u003e to the \u003ccode\u003eroutes.rb\u003c/code\u003e file\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIt's a powerful command, so make sure to use it sparingly! You should only use\n\u003ccode\u003erails g resource\u003c/code\u003e if you truly need all of that code generated.\u003c/p\u003e\n\n\u003ch2\u003eRunning the API\u003c/h2\u003e\n\n\u003cp\u003eTo get some sample data into our application, we've provided a \u003ccode\u003eseeds.rb\u003c/code\u003e file\nin the root directory of this repo. Copy the contents of this file into your\n\u003ccode\u003edb/seeds.rb\u003c/code\u003e file. Then, to set up and seed the database, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet's update our \u003ccode\u003eroutes.rb\u003c/code\u003e file to set up just the one route our frontend\nneeds, for the time being:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n\u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:movies\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can also add the index action to our controller:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emovies\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003emovies\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith that code in place, run \u003ccode\u003erails s\u003c/code\u003e to start the server, and visit\n\u003ccode\u003ehttp://localhost:3000/movies\u003c/code\u003e in the browser to see our movie data. Success!\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWhen creating a new Rails API project from scratch, you can use the \u003ccode\u003e--api\u003c/code\u003e flag\nto have Rails optimize your project for building a web API.\u003c/p\u003e\n\n\u003cp\u003eWe also saw how to use the \u003ccode\u003eresource\u003c/code\u003e generator, which can help quickly set\nup the code we need to create RESTful routes and CRUD functionality for one\nsingle resource.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following question:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat files are generated when running \u003ccode\u003erails g resource ResourceName\u003c/code\u003e?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/command_line.html\"\u003eThe Rails Command Line\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g1490c4c5f80eed373ab46decf1f1d069"},{"id":483309,"title":"Video: Client Configuration","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-client-configuration\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-client-configuration\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-client-configuration/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/606739492/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://create-react-app.dev/docs/proxying-api-requests-in-development/\"\u003eCreate React App: Proxying Requests\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-client-configuration"},{"id":483310,"title":"Video: Client-Server GET Requests","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-client-server-get-requests\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-client-server-get-requests\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-client-server-get-requests/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/606748418/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","exportId":"video-client-server-get-requests"},{"id":483311,"title":"Video: Client-Server POST Requests","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-client-server-post-requests\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-client-server-post-requests\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-client-server-post-requests/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/606767916/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","exportId":"video-client-server-post-requests"},{"id":483312,"title":"Video: Client-Server POST Request Error Handling","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-client-server-post-request-error-handling\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-client-server-post-request-error-handling\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-client-server-post-request-error-handling/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/607690385/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","exportId":"video-client-server-post-request-error-handling"},{"id":483313,"title":"Video: Client-Server DELETE Requests","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-client-server-delete-requests\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-client-server-delete-requests\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-client-server-delete-requests/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/606934036/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","exportId":"video-client-server-delete-requests"},{"id":483314,"title":"Adding React to Rails","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-adding-react-to-rails\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-adding-react-to-rails/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-adding-react-to-rails\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-adding-react-to-rails/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse \u003ccode\u003ecreate-react-app\u003c/code\u003e to generate a new React application within a Rails\nproject\u003c/li\u003e\n\u003cli\u003eProxy requests from React to Rails in development\u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003eforeman\u003c/code\u003e gem to run React and Rails together\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn the last lesson, we created a Rails API from scratch. Now it's time to see\nhow we can add a React frontend application as well.\u003c/p\u003e\n\n\u003cp\u003eThere are a number of ways to use React and Rails together, such as using the\n\u003ca href=\"https://github.com/rails/webpacker\"\u003e\u003ccode\u003ewebpacker\u003c/code\u003e gem\u003c/a\u003e to manage JavaScript as\npart of your Rails application. However, we like the simplicity and the tooling\nthat you get out of using \u003ca href=\"https://create-react-app.dev/\"\u003e\u003ccode\u003ecreate-react-app\u003c/code\u003e\u003c/a\u003e to\ngenerate a new React application within Rails. If you've used \u003ccode\u003ecreate-react-app\u003c/code\u003e\nbefore, you should feel right at home! We can also add a few additional tools to\nthe process to make running React and Rails together a bit easier.\u003c/p\u003e\n\n\u003ch2\u003eGenerating a React Application\u003c/h2\u003e\n\n\u003cp\u003eTo get started, let's spin up our React application using \u003ccode\u003ecreate-react-app\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpx create-react-app client \u003cspan class=\"nt\"\u003e--use-npm\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will create a new React application in a \u003ccode\u003eclient\u003c/code\u003e folder, and will use npm\ninstead of yarn to manage our dependencies.\u003c/p\u003e\n\n\u003cp\u003eWhen we're running React and Rails in development, we'll need two separate\nservers running on different ports — we'll run React on port 4000, and\nRails on port 3000. Whenever we want to make a request to our Rails API from\nReact, we'll need to make sure that our requests are going to port 3000.\u003c/p\u003e\n\n\u003cp\u003eWe can simplify this process of making requests to the correct port by using\n\u003ccode\u003ecreate-react-app\u003c/code\u003e in development to \u003ca href=\"https://create-react-app.dev/docs/proxying-api-requests-in-development/\"\u003eproxy the requests to our API\u003c/a\u003e.\nThis will let us write our network requests like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/movies\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// instead of fetch(\"http://localhost:3000/movies\")\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo set up this proxy feature, open the \u003ccode\u003epackage.json\u003c/code\u003e file in the \u003ccode\u003eclient\u003c/code\u003e\ndirectory and add this line at the top level of the JSON object:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"nl\"\u003e\"proxy\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"http://localhost:3000\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet's also update the \"start\" script in the the \u003ccode\u003epackage.json\u003c/code\u003e file to specify a\ndifferent port to run our React app in development:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"nl\"\u003e\"scripts\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"start\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"PORT=4000 react-scripts start\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith that set up, let's try running our servers! In your terminal, run Rails:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, open a new terminal, and run React:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will run \u003ccode\u003enpm start\u003c/code\u003e in the client directory. Verify that your app is\nworking by visiting:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"http://localhost:4000\"\u003ehttp://localhost:4000\u003c/a\u003e to view the React application\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"http://localhost:3000/movies\"\u003ehttp://localhost:3000/movies\u003c/a\u003e to view the Rails\napplication\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWe can also see how to make a request using \u003ccode\u003efetch\u003c/code\u003e. In the React application,\nupdate your \u003ccode\u003eApp.js\u003c/code\u003e file with the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003euseEffect\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003euseEffect\u003c/span\u003e\u003cspan class=\"p\"\u003e(()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/movies\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003emovies\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003emovies\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"p\"\u003e[]);\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eHello from React!\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will use the \u003ccode\u003euseEffect\u003c/code\u003e hook to fetch data from our Rails API, which you\ncan then view in the console.\u003c/p\u003e\n\n\u003ch2\u003eRunning React and Rails Together\u003c/h2\u003e\n\n\u003cp\u003eSince we'll often want to run our React and Rails applications together, it can\nbe helpful to be able to run them from just one command in the terminal instead\nof opening multiple terminals.\u003c/p\u003e\n\n\u003cp\u003eTo facilitate this, we'll use the excellent \u003ca href=\"https://github.com/ddollar/foreman\"\u003eforeman\u003c/a\u003e gem. Install it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egem \u003cspan class=\"nb\"\u003einstall \u003c/span\u003eforeman\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eForeman works with a special kind of file known as a Procfile, which lists\ndifferent processes to run for our application. Some hosting services, such as\nHeroku, use a Procfile to run applications, so by using a Procfile in\ndevelopment as well, we'll simplify the deploying process later.\u003c/p\u003e\n\n\u003cp\u003eIn the root directory, create a file \u003ccode\u003eProcfile.dev\u003c/code\u003e and add this code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eweb: PORT=4000 npm start --prefix client\napi: PORT=3000 rails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, run it with Foreman:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003eforeman start \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e Procfile.dev\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will start both React and Rails on separate ports, just like before; but\nnow we can run both with one command!\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eThere is one big caveat to this approach\u003c/strong\u003e: by running our client and server\nin the same terminal, it can be more challenging to read through the server logs\nand debug our code. Furthermore, \u003ccode\u003ebyebug\u003c/code\u003e will not work. If you're doing a lot of\ndebugging in the terminal, you should run the client and server separately to\nget a cleaner terminal output and allow terminal-based debugging with \u003ccode\u003ebyebug\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eYou can run each application separately by opening two terminal windows and\nrunning each of these commands in a separate window:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will run React on port 4000 (thanks to the configuration in the\n\u003ccode\u003eclient/package.json\u003c/code\u003e file), and Rails on port 3000 (the default port).\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn the past couple lessons, we've seen how to put together the two pieces we'll\nneed for full-stack applications by using \u003ccode\u003erails new\u003c/code\u003e to create a new Rails API,\nand \u003ccode\u003ecreate-react-app\u003c/code\u003e to create a React project. Throughout the rest of this\nmodule, we'll focus on how our two applications communicate and share data.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat options do you have for running Rails and React at the same time?\u003c/li\u003e\n\u003cli\u003eWhat are the advantages and disadvantages of using \u003ccode\u003eforeman\u003c/code\u003e as described in\nthis lesson?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://create-react-app.dev/docs/proxying-api-requests-in-development/\"\u003eProxying API Requests in Create React App\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g1caaffe0188828f4c4e51eabef5f0441"},{"id":483315,"title":"Debugging Network Requests","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-debugging-network-requests\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-debugging-network-requests/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-debugging-network-requests\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-debugging-network-requests/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eIdentify where to look when there are issues communicating between client and\nserver\u003c/li\u003e\n\u003cli\u003eUse the browser developer tools to debug on the frontend\u003c/li\u003e\n\u003cli\u003eUse server logging tools and \u003ccode\u003ebyebug\u003c/code\u003e to isolate errors on the backend\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that we're able to make requests using JavaScript to our Rails server, let's\nfocus on some common issues that arise when making network requests, and learn\ntechniques to help debug.\u003c/p\u003e\n\n\u003cp\u003eTo get the backend set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, in a new terminal, run the frontend:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eConfirm both applications are up and running by visiting\n\u003ca href=\"http://localhost:4000\"\u003e\u003ccode\u003elocalhost:4000\u003c/code\u003e\u003c/a\u003e and viewing the list of movies in your\nReact application.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNote: This lesson is written using Chrome as our browser of choice for\ndebugging. If you're using a different browser, the names and behavior of some\nof the debugging tools may vary.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003eFrontend Debugging Tools\u003c/h2\u003e\n\n\u003cp\u003eTo understand the debugging process, let's start building a new feature in our\napp allowing users to create new movies. The RESTful way to build a feature\nlike this would be to allow users to make a \u003ccode\u003ePOST\u003c/code\u003e request to \u003ccode\u003e/movies\u003c/code\u003e. In our\nReact app, there's some code in place for this request already:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// client/src/components/MovieForm.js\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleSubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epreventDefault\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/movies\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eformData\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen the user submits the form, we'll use \u003ccode\u003efetch\u003c/code\u003e to make a \u003ccode\u003ePOST\u003c/code\u003e request to\n\u003ccode\u003e/movies\u003c/code\u003e with all the data from the form in the body of the request.\u003c/p\u003e\n\n\u003cp\u003eTry it out now, before adding any code to handle this in the backend!\u003c/p\u003e\n\n\u003cp\u003eVisit \u003ca href=\"http://localhost:4000/new\"\u003e\u003ccode\u003elocalhost:4000/new\u003c/code\u003e\u003c/a\u003e to view the form, and\nclick the Add Movie button to submit it.\u003c/p\u003e\n\n\u003cp\u003eWhat went wrong? How can you tell what went wrong? Where would you look to debug\nthis error?\u003c/p\u003e\n\n\u003cp\u003eFrom the user's perspective, it appears that nothing happened: we're not seeing\nany error messages, but we're also not seeing any indication that our request\nwent through.\u003c/p\u003e\n\n\u003cp\u003eFrom a \u003cstrong\u003edeveloper's\u003c/strong\u003e perspective, we'll need to investigate more closely to see\nwhy this request didn't work.\u003c/p\u003e\n\n\u003cp\u003eThe first place we can look is in the developer tools, in the \u003cstrong\u003eConsole\u003c/strong\u003e tab.\nYou'll see an error message that looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePOST http://localhost:4000/movies 404 (Not Found)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs you may have anticipated, since we haven't created this route on the backend\nyet, Rails sends a 404 error when we make this request. And any time we use\n\u003ccode\u003efetch\u003c/code\u003e to make a network request that returns a bad status code (400 or 500),\nthe browser will display an error message about this in the console.\u003c/p\u003e\n\n\u003cp\u003eAn even better place to look than the Console tab when debugging network request\nproblems is in the \u003cstrong\u003eNetwork\u003c/strong\u003e tab. Open the Network tab, and click the Add\nMovie button to submit the form again. You'll see a new request in the Network\ntab. Click the request to view more details:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-debugging-network-requests/network-404-headers.png\" alt=\"network 404 request headers\"\u003e\u003c/p\u003e\n\n\u003cp\u003eHere we can see the 404 status code, as well as some additional information\nabout the request. Clicking the Preview tab will give more details about the\nresponse the server sent back:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-debugging-network-requests/network-404-preview.png\" alt=\"network 404 response preview\"\u003e\u003c/p\u003e\n\n\u003cp\u003eSince our Rails server is running in Development mode, we can see some\nadditional useful information here, such as the exception message that was\nthrown.\u003c/p\u003e\n\n\u003cp\u003eIf you open your terminal where your Rails server is running, you'll see\nthe same message in the server logs:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eStarted POST \"/movies\" for ::1 at 2021-05-08 10:02:41 -0400\n\nActionController::RoutingError (No route matches [POST] \"/movies\"):\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow that we know what the problem is, let's start fixing it!\u003c/p\u003e\n\n\u003ch2\u003eDebugging the Response\u003c/h2\u003e\n\n\u003cp\u003eIn your Rails app, add a new route:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edraw\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:movies\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, add a controller method:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMoviesController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emovies\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003emovies\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, let's try and make the same request from our frontend by submitting the\nform again. Our request still isn't working, but now we're no longer getting\nthat routing error. Instead, our Network tab shows a successful request:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-debugging-network-requests/network-204-headers.png\" alt=\"network 204 no content\"\u003e\u003c/p\u003e\n\n\u003cp\u003eBut our Console tab tells a different story:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eUncaught (in promise) SyntaxError: Unexpected end of JSON input\n  at MovieForm.js:19\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003ePay careful attention to this error!\u003c/strong\u003e This is a very common error message\nto see as you're developing API-driven applications. What do you think this\nerror message indicates?\u003c/p\u003e\n\n\u003cp\u003eWell, it's a\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\"\u003e\u003ccode\u003eSyntaxError\u003c/code\u003e\u003c/a\u003e,\nwhich means it's an error that occurs when JavaScript is parsing our code.\u003c/p\u003e\n\n\u003cp\u003eIt's coming from our \u003ccode\u003efetch\u003c/code\u003e request as part of the \u003ccode\u003epromise\u003c/code\u003e chain:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/movies\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eformData\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe reason for this specific error is that \u003cstrong\u003ewe expect the server to return a\nstring of JSON-formatted data\u003c/strong\u003e, but the server is not returning any content.\u003c/p\u003e\n\n\u003cp\u003eRemember, when we call \u003ccode\u003er.json()\u003c/code\u003e, we are instructing JavaScript to read the\nresponse (\u003ccode\u003er\u003c/code\u003e) and parse it as a JSON-formatted string. If the response does not\ncontain JSON-formatted data, \u003cstrong\u003ethis code will error out\u003c/strong\u003e. We are not sending\n\u003cstrong\u003eany\u003c/strong\u003e data in the response:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eKeep this in mind when you see this error message! The solution to this problem\nis to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003ereturn JSON data in the response\u003c/strong\u003e from your controller actions, or\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003edon't use the \u003ccode\u003e.json()\u003c/code\u003e method on the response\u003c/strong\u003e if your controller does not\nrespond with JSON data\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eDebugging Params\u003c/h2\u003e\n\n\u003cp\u003eLet's continue working on this feature, and see how we can access the data from\nthe fetch request in our controller action. Start by adding a \u003ccode\u003ebyebug\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebyebug\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, enter some data in the form, and submit the form again to make another\nrequest. In your server tab, you'll now enter a debugging session:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e    8:   def create\n    9:     byebug\n=\u0026gt; 10:   end\n   11:\n   12: end\n(byebug)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUse this as an opportunity to inspect the request object, in particular looking\nat the \u003ccode\u003eparams\u003c/code\u003e hash:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e(byebug) params\n#\u0026lt;ActionController::Parameters {\"title\"=\u0026gt;\"\", \"year\"=\u0026gt;2021, \"length\"=\u0026gt;\"0\",\n\"director\"=\u0026gt;\"\", ...\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou'll see that all the key-value pairs from the \u003ccode\u003eformData\u003c/code\u003e object —\nrepresenting the input fields from the form that were sent in the body of the\nrequest — are present in the params hash. Type \u003ccode\u003ec\u003c/code\u003e and hit enter to exit the\n\u003ccode\u003ebyebug\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWe can use that to create a new \u003ccode\u003eMovie\u003c/code\u003e, and send the movie object back as a\nresponse:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emovie_params\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epermit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:year\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:director\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:description\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:poster_url\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:category\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:discount\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:female_director\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith that in place, we can submit the request one more time to finally\ncreate a \u003ccode\u003eMovie\u003c/code\u003e! A good place to look after a successful request is in the\nRails logs to see all the details of the request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eStarted POST \"/movies\" for ::1 at 2021-05-08 10:36:35 -0400\n\nProcessing by MoviesController#create as */* Parameters: {\"title\"=\u0026gt;\"\",\n\"year\"=\u0026gt;2021, \"length\"=\u0026gt;\"0\", \"director\"=\u0026gt;\"\", \"description\"=\u0026gt;\"\",\n\"poster_url\"=\u0026gt;\"\", \"category\"=\u0026gt;\"\", \"discount\"=\u0026gt;false, \"female_director\"=\u0026gt;false,\n\"movie\"=\u0026gt;{\"title\"=\u0026gt;\"\", \"year\"=\u0026gt;2021, \"length\"=\u0026gt;\"0\", \"director\"=\u0026gt;\"\",\n\"description\"=\u0026gt;\"\", \"poster_url\"=\u0026gt;\"\", \"category\"=\u0026gt;\"\", \"discount\"=\u0026gt;false,\n\"female_director\"=\u0026gt;false}}\n\nUnpermitted parameter: :movie\n  TRANSACTION (0.1ms)  begin transaction\n  ↳ app/controllers/movies_controller.rb:9:in `create'\n\n  Movie Create (3.2ms) INSERT INTO \"movies\" (\"title\", \"year\", \"length\",\n  \"director\", \"description\", \"poster_url\", \"category\", \"discount\",\n  \"female_director\", \"created_at\", \"updated_at\") VALUES (?, ?, ?, ?, ?, ?, ?, ?,\n  ?, ?, ?) [[\"title\", \"\"], [\"year\", 2021], [\"length\", 0], [\"director\", \"\"],\n  [\"description\", \"\"], [\"poster_url\", \"\"], [\"category\", \"\"], [\"discount\", 0],\n  [\"female_director\", 0], [\"created_at\", \"2021-05-08 14:36:35.970843\"],\n  [\"updated_at\", \"2021-05-08 14:36:35.970843\"]] ↳\n  app/controllers/movies_controller.rb:9:in `create'\n\n  TRANSACTION (0.9ms)  commit transaction\n  ↳ app/controllers/movies_controller.rb:9:in `create'\n\nCompleted 201 Created in 9ms (Views: 0.3ms | ActiveRecord: 4.1ms | Allocations: 2132)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can also view the Network tab to see a preview of the response data:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-debugging-network-requests/network-201-preview.png\" alt=\"network 201 created preview\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eDebugging Server Errors\u003c/h2\u003e\n\n\u003cp\u003eLet's introduce one more error on the server to show another common class\nof errors we'll need to handle: server-side errors. In the \u003ccode\u003ecreate\u003c/code\u003e action,\nlet's imagine we made a typo (as we all do from time to time):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# Movi instead of Movie\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMovi\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSubmit the form again to initiate another request to this controller action.\nYou'll see a new error message in the browser console:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePOST http://localhost:4000/movies\n  500 (Internal Server Error)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhere would you look to debug this error? Well, there are a couple options, but\nyour best bet any time there is an error \u003cstrong\u003eon the server\u003c/strong\u003e as indicated with a\n500 status code is to look at the \u003cstrong\u003eserver logs\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eCheck your Rails server logs in the terminal, and you'll see:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eStarted POST \"/movies\" for ::1 at 2021-05-08 10:44:56 -0400\n   (0.1ms)  SELECT sqlite_version(*)\n\n...\n\nNameError (uninitialized constant MoviesController::Movi):\n\napp/controllers/movies_controller.rb:9:in `create'\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis gives us a clear place to look for the error. We can see:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ethe error itself: \u003ccode\u003eNameError (uninitialized constant MoviesController::Movi)\u003c/code\u003e,\nindicating that we're using a constant \u003ccode\u003eMovi\u003c/code\u003e incorrectly\u003c/li\u003e\n\u003cli\u003ethe file and line number of the error:\n\u003ccode\u003eapp/controllers/movies_controller.rb:9:in 'create'\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eNow, we know exactly where the error is! Sometimes your errors will be more\ndifficult to find, but utilizing the stack trace and the error message will give\na good indication of where to start looking.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWhen you see a \u003ccode\u003e404 Not Found\u003c/code\u003e error:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCheck the Network Tab on the frontend\u003c/li\u003e\n\u003cli\u003eCheck the Rails Server logs in the backend\u003c/li\u003e\n\u003cli\u003eAdd a new route to handle the HTTP Verb + Path for this request\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWhen you see an \u003ccode\u003eUnexpected end of JSON input\u003c/code\u003e error:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCheck your \u003ccode\u003efetch\u003c/code\u003e request\u003c/li\u003e\n\u003cli\u003eCheck the controller action, and make sure to \u003ccode\u003erender json:\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWhen you need to see data from the request in your controller:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAdd a \u003ccode\u003ebyebug\u003c/code\u003e to your controller method\u003c/li\u003e\n\u003cli\u003eMake a request from the browser\u003c/li\u003e\n\u003cli\u003eInspect \u003ccode\u003eparams\u003c/code\u003e in the \u003ccode\u003ebyebug\u003c/code\u003e session\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWhen you see a \u003ccode\u003e500 Internal Server Error\u003c/code\u003e error:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eOpen your Rails server log\u003c/li\u003e\n\u003cli\u003eLook for the last request that came through\u003c/li\u003e\n\u003cli\u003eFind the error message and stack trace to identify where the error originated\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eIn general, where does it make sense to look when debugging client errors\n(4XX HTTP Status codes)?\u003c/li\u003e\n\u003cli\u003eIn general, where does it make sense to look when debugging server errors\n(5XX HTTP status codes)?\u003c/li\u003e\n\u003cli\u003eWhat causes the \u003ccode\u003eUnexpected end of JSON input\u003c/code\u003e error and how can we fix it?\u003c/li\u003e\n\u003c/ol\u003e","exportId":"gb607944ff8e6d540f31ce1aac553bd74"},{"id":483316,"title":"Validation Messages and Error Handling","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-validation-messages-and-error-handling\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-validation-messages-and-error-handling/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-validation-messages-and-error-handling\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-validation-messages-and-error-handling/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDisplay validation messages on the frontend\u003c/li\u003e\n\u003cli\u003eUse HTTP status codes to interpret server response\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn previous lessons, we learned how to use Active Record to perform server-side\nvalidations. Now, let's see how we can use those error messages to display\nuseful information to our users so they can submit valid data.\u003c/p\u003e\n\n\u003cp\u003eTo get the backend set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, in a new terminal, run the frontend:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eConfirm both applications are up and running by visiting\n\u003ca href=\"http://localhost:4000\"\u003e\u003ccode\u003elocalhost:4000\u003c/code\u003e\u003c/a\u003e and viewing the list of movies in your\nReact application.\u003c/p\u003e\n\n\u003ch2\u003eWriting Server-Side Validations\u003c/h2\u003e\n\n\u003cp\u003eLet's start by adding some validations to our \u003ccode\u003eMovie\u003c/code\u003e model:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovie\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"no\"\u003eCATEGORIES\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Comedy'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Drama'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Animation'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Mystery'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Horror'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Fantasy'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Action'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Documentary'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Science Fiction'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003epresence: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:year\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003enumericality: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003egreater_than_or_equal_to: \u003c/span\u003e\u003cspan class=\"mi\"\u003e1888\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003eless_than_or_equal_to: \u003c/span\u003e\u003cspan class=\"no\"\u003eDate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etoday\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eyear\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:poster_url\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003epresence: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:category\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003einclusion: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003ein: \u003c/span\u003e\u003cspan class=\"no\"\u003eCATEGORIES\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003emessage: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"must be one of: \u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"no\"\u003eCATEGORIES\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e', '\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can also update our controller action to check the validity of our model when\nit is created, and respond appropriately:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordInvalid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerrors: \u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erecord\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efull_messages\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, in the browser, try to submit the form with some invalid data. Use the\nNetwork tab to view the response from the server. You should see that we are\nsuccessfully returning the validation errors and the status code from this\nrequest:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/validation-messages-and-error-handling/network-422-error.png\" alt=\"network 422 errors\"\u003e\u003c/p\u003e\n\n\u003cp\u003eNow that we have the error messages back from the server, how can we show them\nto our users so that they know how to fix them?\u003c/p\u003e\n\n\u003ch2\u003eDisplaying Validation Errors\u003c/h2\u003e\n\n\u003cp\u003eLet's focus on the React side of things. There are now two possible options when\nwe submit the form. Either we get a \u003cstrong\u003egood response\u003c/strong\u003e indicating that the form\ndata was saved successfully, or a \u003cstrong\u003ebad response\u003c/strong\u003e indicating that something\nwent wrong with our request. So, we need to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCheck if we got a good response or a bad response\u003c/li\u003e\n\u003cli\u003eIf we got a bad response:\n\n\u003cul\u003e\n\u003cli\u003eSave the error messages in state\u003c/li\u003e\n\u003cli\u003eDisplay the errors to our user\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIf we got a good response:\n\n\u003cul\u003e\n\u003cli\u003eNavigate the user to the home page to show them their newly created movie\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eLet's take things one step at a time. First: \u003cstrong\u003eCheck if we got a good response\nor a bad response\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eIn the \u003ccode\u003eMovieForm\u003c/code\u003e component's \u003ccode\u003ehandleSubmit\u003c/code\u003e function, modify the fetch request\nas follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/movies\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eformData\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}).\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, try submitting the form with invalid data again and take a look at the\nresponse object that is logged in the console:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/validation-messages-and-error-handling/bad-fetch-response.png\" alt=\"fetch bad response\"\u003e\u003c/p\u003e\n\n\u003cp\u003eWe can use the \u003ccode\u003e.ok\u003c/code\u003e property of the \u003ccode\u003eresponse\u003c/code\u003e object to see whether the\nresponse has a good status code (200-300 range) or a bad status code (400-500\nrange) and handle the response accordingly. If the response is not ok, we'll want\nto display some error messages to the user; that means we'll need to keep track\nof those error messages in state, and re-render the component when those error\nmessages are updated:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eMovieForm\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esetErrors\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseState\u003c/span\u003e\u003cspan class=\"p\"\u003e([]);\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// rest of component code\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eok\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003enewMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enewMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrorData\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003esetErrors\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrorData\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe'll also want to \u003ca href=\"https://reactjs.org/docs/conditional-rendering.html#inline-if-with-logical--operator\"\u003econditionally display\u003c/a\u003e the errors in the JSX\nbeing returned from our component:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// In the JSX returned by MovieForm:\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e \u003cspan class=\"na\"\u003eonSubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleSubmit\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"cm\"\u003e/* rest of form elements here... */\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eul\u003c/span\u003e \u003cspan class=\"na\"\u003estyle\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecolor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ered\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e \u003cspan class=\"na\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eerror\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eerror\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eul\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eSubmitButton\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"submit\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eAdd Movie\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eSubmitButton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow the user should see the error messages on the form when it doesn't pass our\nvalidations on the server!\u003c/p\u003e\n\n\u003ch2\u003eBonus: Refactoring with async/await\u003c/h2\u003e\n\n\u003cp\u003eYou may notice the code for the \u003ccode\u003efetch\u003c/code\u003e request in its entirety is a bit hard to\nread:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleSubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epreventDefault\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/movies\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eformData\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}).\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eok\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003enewMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enewMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrorData\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003esetErrors\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrorData\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn particular, working with the \u003ccode\u003eresponse\u003c/code\u003e object and the Promise chaining\nrequired to read the JSON data from the response isn't particularly elegant.\u003c/p\u003e\n\n\u003cp\u003eOne way we can clean this up is using the \u003ca href=\"https://javascript.info/async-await\"\u003e\u003ccode\u003easync/await\u003c/code\u003e\u003c/a\u003e syntax:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// make the function async to enable the await keyword\u003c/span\u003e\n\u003cspan class=\"k\"\u003easync\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleSubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epreventDefault\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// fetch returns a Promise, we must await it\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003eawait\u003c/span\u003e \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/movies\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eformData\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// response.json() returns a Promise, we must await it\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003eawait\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eok\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eMovie created:\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003esetErrors\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis code better expresses our function's intent when it comes to working with\nthe response. Our server will always send back JSON data, so we always want to\nparse the response; and after we've parsed the response, we can decide what to\ndo with that data based on whether or not the response was \u003ccode\u003eok\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eTo handle server-side validations, we can leverage Active Record to check our\nmodel's validity before saving bad data to the database. We can also send back\ndifferent response data with different status codes from our controller actions\nbased on the validity of our data.\u003c/p\u003e\n\n\u003cp\u003eTo help our users correct these validation errors, we need to show them the\nerror messages from the server. We can write some conditional code to handle\nsuccessful vs unsuccessful responses from the server. In a React application, we\ncan then use state to hold the error messages and render them somewhere on the\nform using JSX.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eHow can we differentiate between a successful and unsuccessful response using\n\u003ccode\u003efetch\u003c/code\u003e?\u003c/li\u003e\n\u003cli\u003eWhy might it be important to display validation error messages to our users?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#checking_that_the_fetch_was_successful\"\u003eUsing Fetch\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://javascript.info/async-await\"\u003easync/await\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g9cd0f1a8b8f2a09f8b5a53ffe48b5464"},{"id":483317,"title":"Putting it All Together: Client-Server Communication","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-debugging-network-requests-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-debugging-network-requests-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-debugging-network-requests-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-debugging-network-requests-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand how to communicate between client and server using fetch, and how\nthe server will process the request based on the URL, HTTP verb, and request\nbody\u003c/li\u003e\n\u003cli\u003eDebug common problems that occur as part of the request-response cycle\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eJust like the last lesson, we've got code for a React frontend and Rails API\nbackend set up. This time though, it's up to you to use your debugging skills to\nfind and fix the errors!\u003c/p\u003e\n\n\u003cp\u003eTo get the backend set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, in a new terminal, run the frontend:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eConfirm both applications are up and running by visiting\n\u003ca href=\"http://localhost:4000\"\u003e\u003ccode\u003elocalhost:4000\u003c/code\u003e\u003c/a\u003e and viewing the list of toys in your\nReact application.\u003c/p\u003e\n\n\u003ch2\u003eDeliverables\u003c/h2\u003e\n\n\u003cp\u003eIn this application, we have the following features:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDisplay a list of all the toys\u003c/li\u003e\n\u003cli\u003eAdd a new toy when the toy form is submitted\u003c/li\u003e\n\u003cli\u003eUpdate the number of likes for a toy\u003c/li\u003e\n\u003cli\u003eDonate a toy to Goodwill (and delete it from our database)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe code is in place for all these features on our frontend, but there are some\nproblems with our API! We're able to display all the toys, but the other three\nfeatures are broken.\u003c/p\u003e\n\n\u003cp\u003eUse your debugging tools to find and fix these issues.\u003c/p\u003e\n\n\u003cp\u003eThere are no tests for this lesson, so you'll need to do your debugging in the\nbrowser and using the Rails server logs and \u003ccode\u003ebyebug\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: You shouldn't need to modify any of the React code to get the\napplication working. You should only need to change the code for the Rails API.\u003c/p\u003e\n\n\u003cp\u003eAs you work on debugging these issues, use the space in this README file to take\nnotes about your debugging process. Being a strong debugger is all about\ndeveloping a process, and it's helpful to document your steps as part of\ndeveloping your own process.\u003c/p\u003e\n\n\u003ch2\u003eYour Notes Here\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eAdd a new toy when the toy form is submitted\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eHow I debugged:\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUpdate the number of likes for a toy\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eHow I debugged:\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDonate a toy to Goodwill (and delete it from our database)\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eHow I debugged:\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g52c1685d1ee3e9154a29c53dc7562f0c"}]},{"id":49291,"name":"Active Record Associations","status":"completed","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g9af1ecccfe0cb9b38a51cb3d53ff27ea","items":[{"id":483318,"title":"Video: Rails Relationships","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-rails-relationships\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-relationships\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-relationships/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/606853272/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/association_basics.html\"\u003eActive Record Associations\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-rails-relationships"},{"id":483319,"title":"Active Record Associations Review","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-active-record-associations-review-readme\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-associations-review-readme/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-associations-review-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-associations-review-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand how the foreign key is used to connect between two tables\u003c/li\u003e\n\u003cli\u003eCreate one-to-many relationships using the \u003ccode\u003ehas_many\u003c/code\u003e and \u003ccode\u003ebelongs_to\u003c/code\u003e Active\nRecord macros\u003c/li\u003e\n\u003cli\u003eCreate one-to-one relationships using the \u003ccode\u003ehas_one\u003c/code\u003e and \u003ccode\u003ebelongs_to\u003c/code\u003e macros\u003c/li\u003e\n\u003cli\u003eCreate many-to-many relationships using a join table and \u003ccode\u003ehas_many :through\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eUse convenience builders to write less verbose code\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eActive Record associations are an iconic Rails feature. They allow developers to\nwork with complex networks of related models without having to write a single\nline of SQL — as long as all of the names line up!\u003c/p\u003e\n\n\u003cp\u003eTo code along, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can use \u003ccode\u003erails console\u003c/code\u003e to follow along with the examples. Remember you'll\nneed to relaunch the console each time you make changes to the files.\u003c/p\u003e\n\n\u003ch2\u003eForeign Keys\u003c/h2\u003e\n\n\u003cp\u003eIt all starts in the database. \u003cstrong\u003eForeign keys\u003c/strong\u003e are columns that refer to the\nprimary key of another table. Conventionally, we label foreign keys in Active\nRecord using the name of the model you're referencing, and \u003ccode\u003e_id\u003c/code\u003e. So for example\nif the foreign key was for an \u003ccode\u003eauthors\u003c/code\u003e table it would be \u003ccode\u003eauthor_id\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWe can visualize the relationship between two tables using foreign keys in an\nEntity Relationship Diagram (ERD):\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/active-record-associations-review/posts-authors.png\" alt=\"one-to-many\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe schema for this ERD would be:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ecreate_table\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"authors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eforce: :cascade\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estring\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"name\"\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ecreate_table\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"posts\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eforce: :cascade\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estring\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"title\"\u003c/span\u003e\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etext\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"content\"\u003c/span\u003e\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einteger\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"author_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003enull: \u003c/span\u003e\u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLike any other column, foreign keys are accessible through instance methods of\nthe same name. This means you could find a given \u003ccode\u003epost\u003c/code\u003e's author with the following\nActive Record query:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eAuthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthor_id\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhich is equivalent to the SQL:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight sql\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"k\"\u003eFROM\u003c/span\u003e \u003cspan class=\"n\"\u003eauthors\u003c/span\u003e \u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e \u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e#\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eauthor_id\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd you could look up a given \u003ccode\u003eauthor\u003c/code\u003e's posts like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003ePost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ewhere\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"author_id = ?\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhich is equivalent to the SQL:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight sql\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"k\"\u003eFROM\u003c/span\u003e \u003cspan class=\"n\"\u003eposts\u003c/span\u003e \u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e \u003cspan class=\"n\"\u003eauthor_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e#\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is all great, but Rails is always looking for ways to save us keystrokes.\u003c/p\u003e\n\n\u003ch2\u003eOne-To-Many Relationships\u003c/h2\u003e\n\n\u003cp\u003eBy using Active Record's macro-style association class methods, we can add some\nconvenient instance methods to our models.\u003c/p\u003e\n\n\u003cp\u003eThe most common relationship is \u003cstrong\u003eone-to-many\u003c/strong\u003e. Active Record gives us the\n\u003ccode\u003ehas_many\u003c/code\u003e and \u003ccode\u003ebelongs_to\u003c/code\u003e macros for creating instance methods to access data\nacross models in a \u003cstrong\u003eone-to-many\u003c/strong\u003e relationship.\u003c/p\u003e\n\n\u003ch3\u003ebelongs_to\u003c/h3\u003e\n\n\u003cp\u003eEach \u003ccode\u003ePost\u003c/code\u003e is associated with \u003cstrong\u003eone\u003c/strong\u003e \u003ccode\u003eAuthor\u003c/code\u003e. Update your model to include\nthis association macro:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePost\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:author\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis gives us access to an \u003ccode\u003eauthor\u003c/code\u003e method in our \u003ccode\u003ePost\u003c/code\u003e class. We can now\nretrieve the actual \u003ccode\u003eAuthor\u003c/code\u003e object that is attached to a \u003ccode\u003epost\u003c/code\u003e as follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\n\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthor\u003c/span\u003e \u003cspan class=\"c1\"\u003e#=\u0026gt; #\u0026lt;Author @id=1\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003ehas_many\u003c/h3\u003e\n\n\u003cp\u003eIn the opposite direction, each \u003ccode\u003eAuthor\u003c/code\u003e might be associated with zero, one, or\nmany \u003ccode\u003ePost\u003c/code\u003e objects. We haven't changed the schema of the \u003ccode\u003eauthors\u003c/code\u003e table at\nall; Active Record is just going to use \u003ccode\u003eposts.author_id\u003c/code\u003e to do all of the\nlookups. Update your model to include this association macro:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eAuthor\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:posts\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow we can look up an author's posts just as easily:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eAuthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast\u003c/span\u003e\n\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eposts\u003c/span\u003e \u003cspan class=\"c1\"\u003e#=\u0026gt; [#\u0026lt;Post @id=3\u0026gt;, #\u0026lt;Post @id=4\u0026gt;]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRemember, Active Record uses its \u003ca href=\"http://api.rubyonrails.org/classes/ActiveSupport/Inflector.html\"\u003eInflector\u003c/a\u003e to switch between\nthe singular and plural forms of your models.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eName\u003c/th\u003e\n\u003cth\u003eData\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eModel\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eAuthor\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eForeign Key\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eauthor_id\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ebelongs_to\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e:author\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ehas_many\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e:posts\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eLike many other Active Record class methods, the symbol you pass determines the\nname of the instance method that will be defined. So \u003ccode\u003ebelongs_to :author\u003c/code\u003e will\ngive you a \u003ccode\u003epost.author\u003c/code\u003e instance method, and \u003ccode\u003ehas_many :posts\u003c/code\u003e will give you\n\u003ccode\u003eauthor.posts\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eConvenience Builders\u003c/h2\u003e\n\n\u003ch3\u003eBuilding a new item in a collection\u003c/h3\u003e\n\n\u003cp\u003eIf you want to add a new post for an author, you might start this way:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003enew_post\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eauthor_id: \u003c/span\u003e\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003etitle: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Web Development for Cats\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut the association macros save the day again, allowing this instead:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eAuthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\n\u003cspan class=\"n\"\u003enew_post\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eposts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003etitle: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Web Development for Cats\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eposts\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#=\u0026gt; [#\u0026lt;Post @id=1\u0026gt;, #\u0026lt;Post @id=5\u0026gt;]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will create a new \u003ccode\u003ePost\u003c/code\u003e object with the \u003ccode\u003eauthor_id\u003c/code\u003e already set for you!\nWe use this one as much as possible because it's just easier.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eauthor.posts.create\u003c/code\u003e will create a new instance and persist it to the database.\nYou can also use \u003ccode\u003eauthor.posts.build\u003c/code\u003e to generate a new instance without\npersisting.\u003c/p\u003e\n\n\u003ch3\u003eSetting a singular association\u003c/h3\u003e\n\n\u003cp\u003eThe setup process is a little bit less intuitive for singular associations.\nRemember, a given post \u003ccode\u003ebelongs_to\u003c/code\u003e an author. The verbose way of creating this\nassociation would be like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eAuthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Lasandra Gulgowski\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn the previous section, once the \u003ccode\u003ehas_many\u003c/code\u003e relationship is defined in the\n\u003ccode\u003eAuthor\u003c/code\u003e model, \u003ccode\u003eauthor.posts\u003c/code\u003e always exists, even if it's an empty array. Here,\n\u003ccode\u003epost.author\u003c/code\u003e is \u003ccode\u003enil\u003c/code\u003e until the author is defined, so using\n\u003ccode\u003epost.author.create\u003c/code\u003e would throw an error. Instead, Active Record allows us to\nprepend the attribute with \u003ccode\u003ebuild_\u003c/code\u003e or \u003ccode\u003ecreate_\u003c/code\u003e. The \u003ccode\u003ecreate_\u003c/code\u003e option will\npersist to the database for you.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003etitle: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Web Development for Dogs\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003enew_author\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate_author\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Lasandra Gulgowski\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esave\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthor\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#=\u0026gt; #\u0026lt;Author @name=\"Lasandra Gulgowski\"\u0026gt;\u003c/span\u003e\n\u003cspan class=\"n\"\u003enew_author\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eposts\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#=\u0026gt; [#\u0026lt;Post @title=\"Web Development for Dogs\"\u0026gt;]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRemember, if you use the \u003ccode\u003ebuild_\u003c/code\u003e option, you'll need to persist your new\n\u003ccode\u003eauthor\u003c/code\u003e with \u003ccode\u003e#save\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThese methods are also documented in the \u003ca href=\"http://guides.rubyonrails.org/association_basics.html\"\u003eRails Associations\nGuide\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003eCollection Convenience\u003c/h3\u003e\n\n\u003cp\u003eIf you add an existing object to a collection association, Active Record will\nconveniently take care of setting the foreign key for you:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eAuthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Lasandra Gulgowski\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eposts\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#=\u0026gt; [#\u0026lt;Post @title=\"Web Development for Dogs\"\u0026gt;]\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003etitle: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Web Development for Cats\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthor\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#=\u0026gt; nil\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eposts\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003epost\u003c/span\u003e\n\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthor\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#=\u0026gt; #\u0026lt;Author @name=\"Lasandra Gulgowski\"\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eOne-to-One Relationships\u003c/h2\u003e\n\n\u003cp\u003eA \u003cstrong\u003eone-to-one\u003c/strong\u003e relationship is probably the least common type of relationship\nyou'll find.\u003c/p\u003e\n\n\u003cp\u003eOne case where you might reach for a \u003cstrong\u003eone-to-one\u003c/strong\u003e relationship is for creating\na separate \u003ccode\u003eProfile\u003c/code\u003e model with data related to an \u003ccode\u003eAuthor\u003c/code\u003e. Profiles can get\npretty complex, so in large applications it can be a good idea to give them\ntheir own model. In this case:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eEvery author would have one, and only one, profile.\u003c/li\u003e\n\u003cli\u003eEvery profile would have one, and only one, author.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHere's an example of what that ERD would look like:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/active-record-associations-review/profiles-authors.png\" alt=\"one-to-one diagram\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003ebelongs_to\u003c/code\u003e makes another appearance in this relationship, but instead of\n\u003ccode\u003ehas_many\u003c/code\u003e the other model is declared with \u003ccode\u003ehas_one\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eAuthor\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:posts\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# add this:\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_one\u003c/span\u003e \u003cspan class=\"ss\"\u003e:profile\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eProfile\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# add this:\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:author\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf you're not sure which model should be declared with which macro, it's usually\na safe bet to put \u003ccode\u003ebelongs_to\u003c/code\u003e on whichever model has the foreign key column in\nits database table.\u003c/p\u003e\n\n\u003cp\u003eWith this in place, we can now do the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eAuthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\n\u003cspan class=\"n\"\u003eprofile\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eProfile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eprofile\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#=\u0026gt; #\u0026lt;Profile @username=\"ljenk\"\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eprofile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthor\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#=\u0026gt; #\u0026lt;Author @name=\"Leeroy Jenkins\"\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eMany-to-Many Relationships and Join Tables\u003c/h2\u003e\n\n\u003cp\u003eEach author has many posts, each post has one author.\u003c/p\u003e\n\n\u003cp\u003eThe universe is in balance. We're programmers, so this really disturbs us. Let's\nshake things up and think about tags.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eOne-to-one\u003c/strong\u003e doesn't work because a post can have multiple tags.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eOne-to-many\u003c/strong\u003e doesn't work because a tag can appear on multiple posts.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eBecause there is no \"owner\" model in this relationship, there's also no right\nplace to put the foreign key column.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003ccode\u003epost_id\u003c/code\u003e\u003c/th\u003e\n\u003cth\u003e\u003ccode\u003etag_id\u003c/code\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e1\u003c/td\u003e\n\u003ctd\u003e1\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e1\u003c/td\u003e\n\u003ctd\u003e2\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2\u003c/td\u003e\n\u003ctd\u003e1\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2\u003c/td\u003e\n\u003ctd\u003e3\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e3\u003c/td\u003e\n\u003ctd\u003e2\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e4\u003c/td\u003e\n\u003ctd\u003e2\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e4\u003c/td\u003e\n\u003ctd\u003e3\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eThis join table depicts the relationship between posts and tags in the seed\ndata. Post 1 has tags 1 and 2, Post 2 has tags 1 and 3, etc.\u003c/p\u003e\n\n\u003cp\u003eWe need a new table that sits between \u003ccode\u003eposts\u003c/code\u003e and \u003ccode\u003etags\u003c/code\u003e:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/active-record-associations-review/posts-post_tags-tags.png\" alt=\"many-to-many diagram\"\u003e\u003c/p\u003e\n\n\u003ch3\u003ehas_many :through\u003c/h3\u003e\n\n\u003cp\u003eTo work with the join table, both our \u003ccode\u003ePost\u003c/code\u003e and \u003ccode\u003eTag\u003c/code\u003e models will have a\n\u003ccode\u003ehas_many\u003c/code\u003e association with the \u003ccode\u003epost_tags\u003c/code\u003e table. We also still need to\nassociate \u003ccode\u003ePost\u003c/code\u003e and \u003ccode\u003eTag\u003c/code\u003e themselves. Ideally, we'd like to be able to call a\n\u003ccode\u003e@my_post.tags\u003c/code\u003e method, right? That's where \u003ccode\u003ehas_many :through\u003c/code\u003e comes in.\u003c/p\u003e\n\n\u003cp\u003eTo do this requires a bit of focus. But you can do it! First of all, let's add\nthe \u003ccode\u003ehas_many :post_tags\u003c/code\u003e line to our \u003ccode\u003ePost\u003c/code\u003e and \u003ccode\u003eTag\u003c/code\u003e models, and add the\n\u003ccode\u003ebelongs_to\u003c/code\u003e relationships to our \u003ccode\u003ePostTag\u003c/code\u003e model:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePost\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:author\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:post_tags\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePostTag\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:post\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:tag\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTag\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:post_tags\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo now we can run code like \u003ccode\u003epost.post_tags\u003c/code\u003e to get all the join entries. This\nis kinda sorta what we want. What we really want is to be able to call\n\u003ccode\u003epost.tags\u003c/code\u003e, so we need one more \u003ccode\u003ehas_many\u003c/code\u003e relationship to complete the link\nbetween tags and posts: \u003ccode\u003ehas_many :through\u003c/code\u003e. Essentially, our \u003ccode\u003ePost\u003c/code\u003e model has\nmany \u003ccode\u003etags\u003c/code\u003e \u003cem\u003ethrough\u003c/em\u003e the \u003ccode\u003epost_tags\u003c/code\u003e table, and vice versa. Let's write that\nout:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePost\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:author\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:post_tags\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:tags\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ethrough: :post_tags\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePostTag\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:post\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:tag\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTag\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:post_tags\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:posts\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ethrough: :post_tags\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow we've unlocked our \u003ccode\u003e@post.tags\u003c/code\u003e and \u003ccode\u003e@tag.posts\u003c/code\u003e methods:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\n\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etags\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#=\u0026gt; [#\u0026lt;Tag @id=1\u0026gt;, #\u0026lt;Tag @id=2\u0026gt;]\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003etag\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eTag\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast\u003c/span\u003e\n\u003cspan class=\"n\"\u003etag\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eposts\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#=\u0026gt; [#\u0026lt;Post @id=2\u0026gt;, #\u0026lt;Post @id=4\u0026gt;]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eConsult the documentation to learn more about the \u003ca href=\"http://guides.rubyonrails.org/association_basics.html#the-has-many-through-association\"\u003ehas many through\u003c/a\u003e association.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eFor every relationship, there is a foreign key somewhere. Foreign keys\ncorrespond to the \u003ccode\u003ebelongs_to\u003c/code\u003e macro on the model.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eOne-to-one\u003c/strong\u003e and \u003cstrong\u003emany-to-one\u003c/strong\u003e relationships only require a single foreign\nkey, which is stored in the 'subordinate' or 'owned' model. The other model can\naccess data in the associated table via a \u003ccode\u003ehas_one\u003c/code\u003e or \u003ccode\u003ehas_many\u003c/code\u003e method,\nrespectively.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eMany-to-many\u003c/strong\u003e relationships require a join table containing a foreign key for\nboth models. The models need to use the \u003ccode\u003ehas_many :through\u003c/code\u003e method to access\ndata from the related table via the join table.\u003c/p\u003e\n\n\u003cp\u003eYou can see the entire \u003ca href=\"http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html\"\u003elist of class methods\u003c/a\u003e\nin the Rails API docs.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eIn a one-to-many or one-to-one relationship, how do you determine which\nmodel's table should include a foreign key?\u003c/li\u003e\n\u003cli\u003eWhat is a join table and under what circumstances do we need one?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://guides.rubyonrails.org/association_basics.html\"\u003eActive Record Association Basics\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dbdiagram.io/d\"\u003eEntity Relationship Diagram Generator\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gb562c8f700013a0fcf6165b190df756d"},{"id":483320,"title":"Active Record Associations Review Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-active-record-associations-review-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-associations-review-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-associations-review-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-associations-review-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate one-to-many and many-to-many associations\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003ehas_many\u003c/code\u003e, \u003ccode\u003ebelongs_to\u003c/code\u003e and \u003ccode\u003ehas_many :through\u003c/code\u003e Active Record macros\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eFlatiron School has started its own taxi service, FlatironX, and we need to\nstart developing the application's domain model!\u003c/p\u003e\n\n\u003cp\u003eThree basic models have already been created, \u003ccode\u003ePassenger\u003c/code\u003e, \u003ccode\u003eRide\u003c/code\u003e, and \u003ccode\u003eTaxi\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eYour job is set up a \u003ccode\u003ehas_many :through\u003c/code\u003e relationship between these three\nmodels so that we can keep track of who's driving who around. It will work like\nthis:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eTaxi -\u0026lt; Rides \u0026gt;- Passengers\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eThis way, a \u003cstrong\u003etaxi\u003c/strong\u003e can have many \u003cstrong\u003epassengers\u003c/strong\u003e, and a \u003cstrong\u003epassenger\u003c/strong\u003e can have\nmany \u003cstrong\u003etaxis\u003c/strong\u003e!\u003c/p\u003e\n\n\u003ch2\u003eDeliverables\u003c/h2\u003e\n\n\u003ch3\u003eUpdating the Database with Migrations\u003c/h3\u003e\n\n\u003cp\u003eEach table only has a primary key, so you'll need to add the \u003cstrong\u003eforeign keys\u003c/strong\u003e to\nthe appropriate model so that Active Record can handle the \"has_many :through\"\nrelationship.\u003c/p\u003e\n\n\u003cp\u003eYou can either edit the migration files directly and add the foreign keys, or\ngenerate a new migration with \u003ccode\u003erails g migration\u003c/code\u003e to add columns to the\nappropriate table.\u003c/p\u003e\n\n\u003cp\u003eOnce your migrations are done, run \u003ccode\u003erails db:migrate\u003c/code\u003e to run the migrations.\u003c/p\u003e\n\n\u003ch3\u003eAdding Active Record Macros\u003c/h3\u003e\n\n\u003cp\u003eAfter completing the migrations, you'll also need to update the \u003ccode\u003eTaxi\u003c/code\u003e,\n\u003ccode\u003ePassenger\u003c/code\u003e, and \u003ccode\u003eRide\u003c/code\u003e models with the appropriate Active Record macros.\u003c/p\u003e\n\n\u003cp\u003eThe tests expect to be able to call certain instance methods on each of these\nmodels, such as \u003ccode\u003epassenger.taxis\u003c/code\u003e, so make sure to add the appropriate\n\u003ccode\u003ehas_many\u003c/code\u003e and \u003ccode\u003ebelongs_to\u003c/code\u003e macros to your models.\u003c/p\u003e\n\n\u003cp\u003eCheck out the join table section in the\n\u003ca href=\"http://guides.rubyonrails.org/association_basics.html#the-has-many-through-association\"\u003eActive Record Association Rails Guide\u003c/a\u003e if you need a\nrefresher on these.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://guides.rubyonrails.org/association_basics.html\"\u003eActive Record Associations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://guides.rubyonrails.org/association_basics.html#the-has-many-through-association\"\u003eActive Record Associations: Join Table section\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g9700abcd762ef2f4bb0b22df8d5a32d0"},{"id":483321,"title":"Displaying Associated Data","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-displaying-associated-data\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-displaying-associated-data/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-displaying-associated-data\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-displaying-associated-data/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Active Model associations in the controller\u003c/li\u003e\n\u003cli\u003eRender nested JSON data based on model associations\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, we're going to be building out an API for an exciting new\nbusiness: AirBudNB, a website for renting dog houses. We are using two models to\nrepresent our application's data: \u003cstrong\u003edog houses\u003c/strong\u003e and \u003cstrong\u003ereviews\u003c/strong\u003e. A dog house\nhas many reviews, and each review belongs to one dog house.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eDogHouse -\u0026lt; Review\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/displaying-associated-data/airbudnb-erd.png\" alt=\"AirBudNB entity relationship diagram\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe code for our models is already in place, so we can focus on getting the\ncontroller to return the right data. To get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eNesting has_many Associations\u003c/h2\u003e\n\n\u003cp\u003eOur designers have created a mockup of one of the pages of our application for\ndisplaying details about one individual dog house. It will look like this:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/displaying-associated-data/airbudnb-dog_houses-show.png\" alt=\"AirBudNB reviews page\"\u003e\u003c/p\u003e\n\n\u003cp\u003eOur API will need to serve up the data for this page as efficiently as possible.\nIdeally, that means we'll be able to have just \u003cstrong\u003eone\u003c/strong\u003e request that returns the\ndata about the dog house as well as a list of all its reviews.\u003c/p\u003e\n\n\u003cp\u003eStart up your Rails server and make a GET request to \u003ccode\u003e/dog_houses/1\u003c/code\u003e. Check\nout the controller action for this request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/dog_houses_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003edog_house\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDogHouse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edog_house\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eCurrently, this route returns \u003cem\u003eonly\u003c/em\u003e the data about the dog house, not its\nreviews:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"image\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://assets.petco.com/petco/image/upload/f_auto,q_auto/1563564-right-1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cozy Studio in Historic District\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"city\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Denver\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e90\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"favorite\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"latitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"39.7433\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"longitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"-104.98322\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003eNote\u003c/em\u003e: the seed file creates seed data randomly, so the data you see in your\nbrowser will be different.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eBased on our models, we know each dog house has many reviews associated with it,\nand we can use Active Record to access that data:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDogHouse\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can verify this by running \u003ccode\u003erails c\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eDogHouse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ereviews\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; #\u0026lt;ActiveRecord::Associations::CollectionProxy [#\u0026lt;Review id: 1...\u0026gt;, #\u0026lt;Review id: 2...\u0026gt;]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo we need some way to \u003cstrong\u003einclude\u003c/strong\u003e this review data in the response from our\ncontroller!\u003c/p\u003e\n\n\u003cp\u003eThankfully for us, Rails gives us some additional \u003ca href=\"https://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html#method-i-as_json\"\u003eserialization\u003c/a\u003e options when\nconverting Active Record objects to JSON data. In this case, the \u003ccode\u003einclude\u003c/code\u003e\noption will let us nest associated data in our response. Let's update the code\nin our controller:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edog_house\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003einclude: :reviews\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUsing \u003ccode\u003einclude: :reviews\u003c/code\u003e will call the \u003ccode\u003e.reviews\u003c/code\u003e method that is provided with\nthe \u003ccode\u003ehas_many :reviews\u003c/code\u003e macro, and will serialize the reviews as a nested array\nof JSON data. Try making that same \u003ccode\u003eGET /dog_houses/1\u003c/code\u003e request again, and you\nshould now see the reviews listed along with the dog house they belong to.\nAgain, your data will be different, but it should be structured as follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"image\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://assets.petco.com/petco/image/upload/f_auto,q_auto/1563564-right-1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cozy Studio in Historic District\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"city\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Denver\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e90\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"favorite\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"latitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"39.7433\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"longitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"-104.98322\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"reviews\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"username\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"emory_rolfson\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"comment\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Listicle diy messenger bag food truck yuccie pug thundercats.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"rating\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"username\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"willena\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"comment\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Brunch aesthetic williamsburg taxidermy.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"rating\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, our API returns all the data we need to handle this view on the frontend\nwith just one request.\u003c/p\u003e\n\n\u003ch2\u003eNesting belongs_to Data\u003c/h2\u003e\n\n\u003cp\u003eOne of the other pages our frontend will need is a page to list out all of the\ntop reviews, along with their associated dog house:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/displaying-associated-data/airbudnb-reviews-index.png\" alt=\"AirBudNB reviews page\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAgain, we'd like to make just one request to get all of the data to populate\nthis view. Currently, a \u003ccode\u003eGET\u003c/code\u003e to \u003ccode\u003e/reviews\u003c/code\u003e returns an array of all review\ndata, but it's missing the data we need for the associated dog house:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"username\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"alton\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"comment\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Meh polaroid letterpress occupy freegan.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"rating\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"username\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"malorie.grant\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"comment\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"8-bit 3 wolf moon tattooed blog +1.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"rating\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"username\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"mary.hodkiewicz\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"comment\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Fixie art party cronut pug tattooed.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"rating\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can see that each review has an associated dog house based on the\n\u003ccode\u003edog_house_id\u003c/code\u003e attribute, but it'd be quite the ordeal to make individual\nrequests for each dog house to get the associated data! Again, we can leverage\nthe power of our Active Record associations, and serialize the dog house along\nwith each review:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eReviewsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ereviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eorder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003erating: :desc\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ereviews\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003einclude: :dog_house\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith this \u003ccode\u003einclude: :dog_house\u003c/code\u003e option in place, we now get a nested object\nunder each review representing the dog house that the review belongs to:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"username\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"alton\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"comment\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Meh polaroid letterpress occupy freegan.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"rating\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"image\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://assets.petco.com/petco/image/upload/f_auto,q_auto/1563564-right-1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cozy Studio in Historic District\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"city\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Denver\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e90\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"favorite\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"latitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"39.7433\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"longitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"-104.98322\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"username\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"malorie.grant\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"comment\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"8-bit 3 wolf moon tattooed blog +1.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"rating\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"image\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://assets.petco.com/petco/image/upload/f_auto,q_auto/1563564-right-1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cozy Studio in Historic District\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"city\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Denver\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e90\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"favorite\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"latitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"39.7433\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"longitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"-104.98322\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"username\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"mary.hodkiewicz\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"comment\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Fixie art party cronut pug tattooed.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"rating\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"image\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://loveincorporated.blob.core.windows.net/contentimages/gallery/e7fd2f69-8c5b-4865-8add-d3ae27693f45-bowwowhaus.jpg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Mid Century Studio in Lively Uptown\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"city\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Houston\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e88\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"favorite\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"latitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"29.750588\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"longitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"-95.364063\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow we can retrieve all the data for our reviews page with just one request!\u003c/p\u003e\n\n\u003cp\u003eYou may notice that making the request for this data is a bit slow compared to\nsome of the other endpoints we've been working on. This is due to how Active\nRecord is accessing data for the associated dog house for each individual\nreview.\u003c/p\u003e\n\n\u003cp\u003eIf you open the Rails server log after making this request, you'll see why:\nthere are a lot of SQL queries being fired off at our database! This is an\nexample of the \u003ca href=\"https://www.sitepoint.com/silver-bullet-n1-problem/\"\u003eN+1 problem\u003c/a\u003e. First, we load all reviews with\n\u003ccode\u003eReview.all\u003c/code\u003e; then, for each review returned by \u003ccode\u003eReview.all\u003c/code\u003e, we make a separate\nquery for each dog house associated with that review. This is definitely not\nideal! We'll learn about a solution to this problem in a future lesson, but for\nnow, keep an eye out for slow queries and look at the SQL code being executed in\nyour Rails server to identify where these issues arise.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWhen developing APIs with our frontend needs in mind, it's best to structure our\ndata to minimize the number of requests needed for the frontend to retrieve that\ndata. We can take advantage of Active Record associations using \u003ccode\u003ehas_many\u003c/code\u003e and\n\u003ccode\u003ebelongs_to\u003c/code\u003e relationships, and serialize JSON data between related models using\nthe \u003ccode\u003einclude\u003c/code\u003e option.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following question:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat does the \u003ccode\u003einclude\u003c/code\u003e option do for us and how do we use it?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html#method-i-as_json\"\u003eSerialization: as_json\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g2a0bd513fc5c9e8cebb6922463a6c946"},{"id":483322,"title":"Displaying Associated Data Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-displaying-associated-data-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-displaying-associated-data-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-displaying-associated-data-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-displaying-associated-data-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Active Model associations in the controller\u003c/li\u003e\n\u003cli\u003eRender nested JSON data based on model associations\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll be creating an API for a Craigslist-style marketplace where a\nuser can sell items. We have two models, \u003ccode\u003eUser\u003c/code\u003e and \u003ccode\u003eItem\u003c/code\u003e, in a relationship\nwhere a user has many items, and each item belongs to a user.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eUser -\u0026lt; Item\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eGet the lab set up by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere is seed data in place so you can test your solution out in the browser or\nin Postman. You can also run \u003ccode\u003elearn test\u003c/code\u003e to run the tests.\u003c/p\u003e\n\n\u003ch2\u003eDeliverables\u003c/h2\u003e\n\n\u003cp\u003eHandle the following requests and return the appropriate JSON data in the response:\u003c/p\u003e\n\n\u003ch3\u003eUsers Show Route\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /users/:id\n\nResponse Body\n-------\n{\n  \"id\": 1,\n  \"username\": \"Dwayne\",\n  \"city\": \"Los Angeles\",\n  \"items\": [\n    {\n      \"id\": 1,\n      \"name\": \"Non-stick pan\",\n      \"description\": \"Sticks a bit\",\n      \"price\": 10\n    }\n  ]\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eItems Index Route\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /items\n\nResponse Body\n-------\n{\n  \"id\": 1,\n  \"name\": \"Non-stick pan\",\n  \"description\": \"Sticks a bit\",\n  \"price\": 10,\n  \"user\": {\n    \"id\": 1,\n    \"username\": \"Dwayne\",\n    \"city\": \"Los Angeles\"\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html#method-i-as_json\"\u003eSerialization: as_json\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gd1842ff1b231b6bd9735636f55329428"},{"id":483323,"title":"Deleting Associated Data","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-deleting-associated-data\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-deleting-associated-data/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-deleting-associated-data\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-deleting-associated-data/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand dependencies between models based on their relationships\u003c/li\u003e\n\u003cli\u003eDelete child records when the associated parent record is removed\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll be adding delete functionality to our API so that users\ncan remove a dog house from the database. We'll keep using the same starter code\nfrom the previous lesson. You can set up the models with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eDeleting Associations\u003c/h2\u003e\n\n\u003cp\u003eIn our AirBudNB app, there is a one-to-many relationship between a dog house\nand its reviews:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/displaying-associated-data/airbudnb-erd.png\" alt=\"AirBudNB entity relationship diagram\"\u003e\u003c/p\u003e\n\n\u003cp\u003eRecall that at the level of the database, this means that for every entry\nin the \u003ccode\u003ereviews\u003c/code\u003e table, there is a \u003ccode\u003edog_house_id\u003c/code\u003e foreign key column that points\nto the row in the \u003ccode\u003edog_houses\u003c/code\u003e table:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/deleting-associated-data/airbudnb-reviews-table.png\" alt=\"AirBudNB reviews table\"\u003e\u003c/p\u003e\n\n\u003cp\u003eImagine we're creating a feature to give users the ability to delete a dog house\nfrom the site. When that dog house is deleted, what should happen to the\nreviews? Both from our users' perspective and from the database's perspective, it\ndoesn't make much sense to keep a review around if there's no dog house for it\nto be associated with.\u003c/p\u003e\n\n\u003cp\u003eIn fact, if you try removing a record from the database now, you'll see an error!\nTry this out in a Rails console session with \u003ccode\u003erails c\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eDogHouse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edestroy\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; ActiveRecord::InvalidForeignKey (SQLite3::ConstraintException: FOREIGN KEY constraint failed)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe issue is that this dog house has reviews associated with it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eDogHouse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ereviews\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; #ActiveRecord::Associations::CollectionProxy [#Review id: 1, ...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThose reviews must have a valid \u003ccode\u003edog_house_id\u003c/code\u003e for their foreign key because of\na database constraint that was established when we created the \u003ccode\u003ereviews\u003c/code\u003e table:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCreateReviews\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eMigration\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mf\"\u003e6.1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003echange\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecreate_table\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n      \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estring\u003c/span\u003e \u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\n      \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estring\u003c/span\u003e \u003cspan class=\"ss\"\u003e:comment\u003c/span\u003e\n      \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einteger\u003c/span\u003e \u003cspan class=\"ss\"\u003e:rating\u003c/span\u003e\n\n      \u003cspan class=\"c1\"\u003e# foreign_key: true establishes a relationship between a review and a dog house\u003c/span\u003e\n      \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:dog_house\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003enull: \u003c/span\u003e\u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eforeign_key: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\n      \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etimestamps\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo before removing the dog house, we must first remove the reviews. We can do this\nmanually from the Rails console:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eDogHouse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ereviews\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edestroy_all\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNotice in the SQL generated by Active Record, this finds all the associated\nreviews for the dog house and deletes them from the database:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e  DogHouse Load (0.3ms)  SELECT \"dog_houses\".* FROM \"dog_houses\" ORDER BY \"dog_houses\".\"id\" ASC LIMIT ?  [[\"LIMIT\", 1]]\n  Review Load (0.2ms)  SELECT \"reviews\".* FROM \"reviews\" WHERE \"reviews\".\"dog_house_id\" = ?  [[\"dog_house_id\", 1]]\n  Review Destroy (0.4ms)  DELETE FROM \"reviews\" WHERE \"reviews\".\"id\" = ?  [[\"id\", 1]]\n  Review Destroy (0.1ms)  DELETE FROM \"reviews\" WHERE \"reviews\".\"id\" = ?  [[\"id\", 2]]\n  Review Destroy (0.1ms)  DELETE FROM \"reviews\" WHERE \"reviews\".\"id\" = ?  [[\"id\", 3]]\n  Review Destroy (0.1ms)  DELETE FROM \"reviews\" WHERE \"reviews\".\"id\" = ?  [[\"id\", 4]]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter deleting the reviews, we can then safely delete the dog house:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eDogHouse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edestroy\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHowever, there is a better way!\u003c/p\u003e\n\n\u003ch2\u003eUsing dependent: :destroy\u003c/h2\u003e\n\n\u003cp\u003eAs part of the class definition for our \u003ccode\u003eDogHouse\u003c/code\u003e model, we included the\n\u003ccode\u003ehas_many\u003c/code\u003e association reference:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/models/dog_house.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDogHouse\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is what lets us easily find all the reviews associated with a dog house\ninstance by simply calling \u003ccode\u003e.reviews\u003c/code\u003e on any instance of the \u003ccode\u003eDogHouse\u003c/code\u003e class.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003ehas_many\u003c/code\u003e association reference also lets you provide\n\u003ca href=\"https://guides.rubyonrails.org/association_basics.html#options-for-has-many\"\u003eadditional options\u003c/a\u003e to customize its behavior. In our case\n(and in many cases involving a one-to-many relationship), we can use the\n\u003ca href=\"https://guides.rubyonrails.org/association_basics.html#dependent\"\u003e\u003ccode\u003edependent: :destroy\u003c/code\u003e\u003c/a\u003e option. This will tell Active Record\nto delete all the associated records when the parent record is deleted.\u003c/p\u003e\n\n\u003cp\u003eExit the Rails console session, then add this code to the \u003ccode\u003eDogHouse\u003c/code\u003e class:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/models/dog_house.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDogHouse\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003edependent: :destroy\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo as soon as we call \u003ccode\u003e.destroy\u003c/code\u003e on an instance of a \u003ccode\u003eDogHouse\u003c/code\u003e, all the reviews\nassociated with that instance will be destroyed! Restart the Rails console and\ntry it out:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eDogHouse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esecond\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edestroy\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNo more error! We were able to delete the dog house from the database along with\nits associated reviews with just this one line of code. And the SQL generated by\nActive Record matches our two-step approach from earlier of deleting the reviews\nfirst, then deleting the dog house:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e  DogHouse Load (0.1ms)  SELECT \"dog_houses\".* FROM \"dog_houses\" ORDER BY \"dog_houses\".\"id\" ASC LIMIT ? OFFSET ?  [[\"LIMIT\", 1], [\"OFFSET\", 1]]\n  TRANSACTION (0.1ms)  begin transaction\n  Review Load (0.1ms)  SELECT \"reviews\".* FROM \"reviews\" WHERE \"reviews\".\"dog_house_id\" = ?  [[\"dog_house_id\", 2]]\n  Review Destroy (0.4ms)  DELETE FROM \"reviews\" WHERE \"reviews\".\"id\" = ?  [[\"id\", 5]]\n  Review Destroy (0.1ms)  DELETE FROM \"reviews\" WHERE \"reviews\".\"id\" = ?  [[\"id\", 6]]\n  Review Destroy (0.1ms)  DELETE FROM \"reviews\" WHERE \"reviews\".\"id\" = ?  [[\"id\", 7]]\n  Review Destroy (0.1ms)  DELETE FROM \"reviews\" WHERE \"reviews\".\"id\" = ?  [[\"id\", 8]]\n  Review Destroy (0.1ms)  DELETE FROM \"reviews\" WHERE \"reviews\".\"id\" = ?  [[\"id\", 9]]\n  Review Destroy (0.1ms)  DELETE FROM \"reviews\" WHERE \"reviews\".\"id\" = ?  [[\"id\", 10]]\n  DogHouse Destroy (0.1ms)  DELETE FROM \"dog_houses\" WHERE \"dog_houses\".\"id\" = ?  [[\"id\", 2]]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIt's always a good idea to clean up any unused data in the database when\ndeleting records, and to make sure there aren't any records that lose a\nnecessary association when their parent record is deleted. With Active Record,\nwe can use the \u003ccode\u003edependent: :destroy\u003c/code\u003e option to automatically remove associated\nrecords when the parent record is deleted.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following question:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eIn what situations would you need to use the \u003ccode\u003edependent: :destroy\u003c/code\u003e option?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/association_basics.html\"\u003eActive Record Associations Basics\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/association_basics.html#dependent\"\u003e\u003ccode\u003edependent: :destroy\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gc15f55aa1751fc43fc187a9ceb68e4ec"},{"id":483324,"title":"Nested Resource Routing","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-nested-resource-routing\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-nested-resource-routing/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-nested-resource-routing\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-nested-resource-routing/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand the value of nested routes\u003c/li\u003e\n\u003cli\u003eCreate nested routes\u003c/li\u003e\n\u003cli\u003eUnderstand how nested resource params are named\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe're going to keep working on our AirBudNB application, augmenting it to filter\nreviews by listing in a user-friendly and RESTful way.\u003c/p\u003e\n\n\u003cp\u003eTo set up the app, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eURL As Data\u003c/h3\u003e\n\n\u003cp\u003eYou've encountered REST already, but, just to review, it stands for\nREpresentational State Transfer and encapsulates a way of structuring a URL so\nthat access to specific resources is predictable and standardized.\u003c/p\u003e\n\n\u003cp\u003eIn practice, that means that, if we type \u003ccode\u003erails s\u003c/code\u003e and run our app,\nbrowsing to \u003ccode\u003e/reviews\u003c/code\u003e will show us the index of all \u003ccode\u003eReview\u003c/code\u003e objects. And if we\nwant to view a specific \u003ccode\u003eDogHouse\u003c/code\u003e, we can guess the URL for that (as long as we\nknow the dog house's \u003ccode\u003eid\u003c/code\u003e) by going to \u003ccode\u003e/dog_houses/:id\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWhy do we care?\u003c/p\u003e\n\n\u003cp\u003eLet's imagine we added a filter feature to our reviews page:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-nested-resource-routing/reviews-filter.png\" alt=\"reviews filter\"\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen the filter is active, we \u003cem\u003ecould\u003c/em\u003e make a request to our backend, using query\nparameters, to retrieve only the reviews that match the selected dog house:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003ehttp://localhost:3000/reviews?doghouse=1\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eThat's the opposite of REST. That makes me \u003cem\u003estressed\u003c/em\u003e. While using query params\nlike in the link above could work, we can do better by following REST\nconventions.\u003c/p\u003e\n\n\u003ch3\u003eDynamic Route Segments\u003c/h3\u003e\n\n\u003cp\u003eWhat we'd love to end up with here is something like \u003ccode\u003e/dog_houses/1/reviews\u003c/code\u003e for\nall of a dog house's reviews and \u003ccode\u003e/dog_houses/1/reviews/5\u003c/code\u003e to see an individual\nreview for that dog house.\u003c/p\u003e\n\n\u003cp\u003eWe know we can build out a route with dynamic segments, so our first instinct\nmight be to just define these in \u003ccode\u003eroutes.rb\u003c/code\u003e like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/dog_houses/:dog_house_id/reviews'\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/dog_houses/:dog_house_id/reviews/:review_id'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter adding those routes, let's check it out by browsing to\n\u003ccode\u003e/dog_houses/1/reviews\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eOops. Error. Gotta tell those routes explicitly which controller actions will\nhandle them. Okay, let's make it look more like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/dog_houses/:dog_house_id/reviews'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'dog_houses#reviews_index'\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/dog_houses/:dog_house_id/reviews/:id'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'dog_houses#review'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd to handle our new filtering routes, we'll need to add some code in our\n\u003ccode\u003edog_houses_controller\u003c/code\u003e to actually do the work.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e  \u003cspan class=\"c1\"\u003e# app/controllers/dog_houses_controller.rb\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ereviews_index\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edog_house\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDogHouse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:dog_house_id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ereviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edog_house\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ereviews\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ereviews\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003einclude: :dog_house\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ereview\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003einclude: :dog_house\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e If your IDs are different and you are having trouble with the URLs,\ntry running \u003ccode\u003erails db:reset\u003c/code\u003e to reset your database.\u003c/p\u003e\n\n\u003cp\u003eWe did it! We have much nicer URLs now. Are we done? Of course not. While this\nsetup will work, there are a couple of problems.\u003c/p\u003e\n\n\u003cp\u003eFirst, if we look at our \u003ccode\u003eroutes.rb\u003c/code\u003e, we've had to move away from using the\npreferred \u003ccode\u003eresources\u003c/code\u003e option and are now specifying HTTP verbs, routes, and\ncontroller actions. Given that implementing a filter is a fairly common task,\nthis is not ideal.\u003c/p\u003e\n\n\u003cp\u003eBeyond that, note that our \u003ccode\u003edog_houses_controller\u003c/code\u003e is now responsible for\nrendering reviews, which shouldn't be its responsibility. Furthermore, the code\nto find all reviews and to find individual reviews by their ID is essentially\nrepeated in both the \u003ccode\u003ereviews_controller\u003c/code\u003e and the \u003ccode\u003edog_houses_controller\u003c/code\u003e. Our\ncurrent code is violating both the DRY (Don't Repeat Yourself) and Separation of\nConcerns principles.\u003c/p\u003e\n\n\u003cp\u003eSeems like Rails would have a way to bail us out of this mess.\u003c/p\u003e\n\n\u003ch3\u003eNested Resource Routes\u003c/h3\u003e\n\n\u003cp\u003eTurns out, Rails \u003cem\u003edoes\u003c/em\u003e give us a way to make this a lot nicer.\u003c/p\u003e\n\n\u003cp\u003eIf we look again at our models, we see that a dog house \u003ccode\u003ehas_many :reviews\u003c/code\u003e and\na review \u003ccode\u003ebelongs_to :dog_house\u003c/code\u003e. Since a review can logically be considered a\n\u003cem\u003echild\u003c/em\u003e object of a dog house, it can also be considered a \u003cem\u003enested resource\u003c/em\u003e of\na dog house for routing purposes.\u003c/p\u003e\n\n\u003cp\u003eNested resources give us a way to document that parent/child relationship in our\nroutes and, ultimately, our URLs.\u003c/p\u003e\n\n\u003cp\u003eLet's get back into \u003ccode\u003eroutes.rb\u003c/code\u003e, delete the two routes we just added, and\nrecreate them as nested resources. We should end up with something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n\n\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edraw\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:dog_houses\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:show\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# nested resource for reviews\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:show\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:show\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow we have the resourced \u003ccode\u003e:dog_houses\u003c/code\u003e route, but by adding the \u003ccode\u003edo...end\u003c/code\u003e we\ncan pass it a block of its nested routes.\u003c/p\u003e\n\n\u003cp\u003eWe can still do things to the nested resources that we do to a non-nested\nresource, like limit them to only certain actions. In this case, we only want to\nnest \u003ccode\u003e:show\u003c/code\u003e and \u003ccode\u003e:index\u003c/code\u003e under \u003ccode\u003e:dog_houses\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eBelow that, we still have our regular resourced \u003ccode\u003e:reviews\u003c/code\u003e routes because we\nstill want to let people see all reviews or a single review, create reviews,\netc., outside of the context of a dog house.\u003c/p\u003e\n\n\u003cp\u003eYou can see the routes available by running \u003ccode\u003erails routes\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePrefix            Verb  URI Pattern                                     Controller#Action\ndog_house_reviews GET   /dog_houses/:dog_house_id/reviews(.:format)     reviews#index\n dog_house_review GET   /dog_houses/:dog_house_id/reviews/:id(.:format) reviews#show\n        dog_house GET   /dog_houses/:id(.:format)                       dog_houses#show\n          reviews GET   /reviews(.:format)                              reviews#index\n                  POST  /reviews(.:format)                              reviews#create\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNotice, in the 'Controller#Action' column, how now we are dealing with the\n\u003ccode\u003ereviews_controller\u003c/code\u003e rather than the \u003ccode\u003edog_houses_controller\u003c/code\u003e for our nested\nroutes — our code once again reflects good Separation of Concerns. And, since we\nalready have actions in \u003ccode\u003ereviews_controller\u003c/code\u003e to handle \u003ccode\u003e:show\u003c/code\u003e and \u003ccode\u003e:index\u003c/code\u003e, we\nwon't be repeating ourselves like we did in the \u003ccode\u003edog_houses_controller\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eNow we just need to update our \u003ccode\u003ereviews_controller\u003c/code\u003e to handle the nested\nresource. Let's update \u003ccode\u003eindex\u003c/code\u003e to account for the new routes:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/reviews_controller.rb\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:dog_house_id\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n      \u003cspan class=\"n\"\u003edog_house\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDogHouse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:dog_house_id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ereviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edog_house\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ereviews\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ereviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ereviews\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003einclude: :dog_house\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe added a condition to the \u003ccode\u003ereviews#index\u003c/code\u003e action to account for whether the\nuser is trying to access the index of \u003cem\u003eall\u003c/em\u003e reviews (\u003ccode\u003eReview.all\u003c/code\u003e) or just the\nindex of all reviews \u003cem\u003efor a certain dog house\u003c/em\u003e (\u003ccode\u003edog_house.reviews\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eThe condition hinges on whether there's a \u003ccode\u003e:dog_house_id\u003c/code\u003e key in the \u003ccode\u003eparams\u003c/code\u003e\nhash — in other words, whether the user navigated to\n\u003ccode\u003e/dog_houses/:dog_house_id/reviews\u003c/code\u003e or simply \u003ccode\u003e/reviews\u003c/code\u003e. We didn't have to\ncreate any new methods or make explicit calls to render new data. We just added\na simple check for \u003ccode\u003eparams[:dog_house_id]\u003c/code\u003e, and we're good to go.\u003c/p\u003e\n\n\u003cp\u003eWhere is \u003ccode\u003eparams[:dog_house_id]\u003c/code\u003e coming from? Rails provides it for us through\nthe nested route, so we don't have to worry about a collision with the \u003ccode\u003e:id\u003c/code\u003e\nparameter that \u003ccode\u003ereviews#show\u003c/code\u003e is looking for. Rails takes the parent resource's\nname and appends \u003ccode\u003e_id\u003c/code\u003e to it for a nice, predictable way to find the parent\nresource's ID. Since some of our review routes are nested like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:dog_houses\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:show\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:show\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe end up with these routes for reviews (notice the dynamic portions of the URI\nPatterns):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eVerb  URI Pattern                                     Controller#Action\nGET   /dog_houses/:dog_house_id/reviews               reviews#index\nGET   /dog_houses/:dog_house_id/reviews/:id           reviews#show\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou'll also notice we didn't make a single change to the \u003ccode\u003ereviews#show\u003c/code\u003e action.\nWhat about the new \u003ccode\u003e/dog_houses/:dog_house_id/reviews/:id\u003c/code\u003e route that we\nadded?\u003c/p\u003e\n\n\u003cp\u003eRemember, the point of nesting our resources is to DRY up our code. We had to\ncreate a conditional for the \u003ccode\u003ereviews#index\u003c/code\u003e action because it renders\n\u003cem\u003edifferent\u003c/em\u003e sets of reviews depending on the path,\n\u003ccode\u003e/dog_houses/:dog_house_id/reviews\u003c/code\u003e or \u003ccode\u003e/reviews\u003c/code\u003e. Conversely, the\n\u003ccode\u003ereviews#show\u003c/code\u003e route is going to render the \u003cem\u003esame\u003c/em\u003e information — data concerning\na single review — regardless of whether it is accessed via\n\u003ccode\u003e/dog_houses/:dog_house_id/reviews\u003c/code\u003e or \u003ccode\u003e/reviews/:id\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eFor good measure, let's go into our \u003ccode\u003edog_houses_controller.rb\u003c/code\u003e and delete the\ntwo actions (\u003ccode\u003ereview\u003c/code\u003e and \u003ccode\u003ereviews_index\u003c/code\u003e) that we added above so that it looks like\nthis:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/dog_houses_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDogHousesController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erescue_from\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordNotFound\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ewith: :render_not_found_response\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edog_house\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDogHouse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edog_house\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003erender_not_found_response\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Dog house not found\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eTop-tip:\u003c/strong\u003e Keep your application clean and easy to maintain by always removing\nunused code.\u003c/p\u003e\n\n\u003ch3\u003eCaveat on Nesting Resources More Than One Level Deep\u003c/h3\u003e\n\n\u003cp\u003eYou can nest resources more than one level deep, but that is generally a bad idea.\u003c/p\u003e\n\n\u003cp\u003eImagine if we also had comments on a review. This would be a perfectly fine use\nof nesting:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:comments\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe could then access a reviews's comments with \u003ccode\u003e/reviews/1/comments\u003c/code\u003e. That makes\na lot of sense.\u003c/p\u003e\n\n\u003cp\u003eBut if we then tried to add to our already nested \u003ccode\u003ereviews\u003c/code\u003e resource...\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:dog_houses\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:comments\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow we're getting into messy territory. Our URL is\n\u003ccode\u003e/dog_houses/1/reviews/1/comments\u003c/code\u003e, and we have to handle that filtering in our\ncontroller.\u003c/p\u003e\n\n\u003cp\u003eBut if we lean on our old friend Separation of Concerns, we can conclude that a\nreviews's comments are not the concern of a dog house and therefore don't\nbelong nested two levels deep under the \u003ccode\u003e:dog_houses\u003c/code\u003e resource.\u003c/p\u003e\n\n\u003cp\u003eIn addition, the reason to put the ID of the resource in the URL is so that we\nhave access to it in the controller. If we know we have the review with an ID of\n\u003ccode\u003e1\u003c/code\u003e, we can use our Active Record relationships to call:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e  \u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edog_house\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# This will tell us which dog house the review was for!\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# We don't need this information in the URL\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eNesting resources is a powerful tool that helps you keep your routes neat and\ntidy and is better than dynamic route segments for representing parent/child\nrelationships in your system.\u003c/p\u003e\n\n\u003cp\u003eHowever, as a general rule, you should only nest resources one level deep and\nensure that you are considering Separation of Concerns in your routing.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat are the benefits of using nested routes?\u003c/li\u003e\n\u003cli\u003eHow do we distinguish nested routes from parent routes in our \u003ccode\u003eroutes.rb\u003c/code\u003e\nfile?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html#nested-resources\"\u003eRouting: Nested Resources\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"ge7811c775b1eb08d4f19f0f13f0506b9"},{"id":483325,"title":"Nested Resource Routing Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-nested-resource-routing-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-nested-resource-routing-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-nested-resource-routing-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-nested-resource-routing-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate nested routes\u003c/li\u003e\n\u003cli\u003eUse params in nested routes\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll continue working on our Craigslist-style marketplace API, and\nbuild out some nested routes to give users easier access to our data.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eUser -\u0026lt; Item\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eGet the lab set up by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere is seed data in place so you can test your solution out in Postman. You\ncan also run \u003ccode\u003elearn test\u003c/code\u003e to run the tests.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eYou will need to handle the requests listed below and return the appropriate\nJSON data in the response.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e watch out for \u003ca href=\"https://api.rubyonrails.org/classes/AbstractController/DoubleRenderError.html\"\u003eRails' \u003ccode\u003eDoubleRenderError\u003c/code\u003e\u003c/a\u003e as you\nwork. The error is fairly straightforward: Rails only allows \u003ccode\u003erender\u003c/code\u003e to be\ncalled once in an action. We have seen one way to avoid this error: by using\nconditional code to ensure that only one \u003ccode\u003erender\u003c/code\u003e executes. A second way to\navoid the error is to include an explicit \u003ccode\u003ereturn\u003c/code\u003e, eg: \u003ccode\u003ereturn render json: ...\u003c/code\u003e to keep any later \u003ccode\u003erender\u003c/code\u003e statements from executing.\u003c/p\u003e\n\n\u003ch3\u003eNested Items Index Route\u003c/h3\u003e\n\n\u003cp\u003eThis route should show all items for one individual user.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /users/:user_id/items\n\nResponse Body\n-------\n[\n  {\n    \"id\": 1,\n    \"name\": \"Non-stick pan\",\n    \"description\": \"Sticks a bit\",\n    \"price\": 10,\n    \"user_id\": 1\n  },\n  {\n    \"id\": 1,\n    \"name\": \"Ceramic plant pots\",\n    \"description\": \"Plants not included\",\n    \"price\": 31,\n    \"user_id\": 1\n  }\n]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eNested Item Show Route\u003c/h3\u003e\n\n\u003cp\u003eThis route should show one item matching the \u003ccode\u003e:id\u003c/code\u003e from the URL.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /users/:user_id/items/:id\n\nResponse Body\n-------\n{\n  \"id\": 1,\n  \"name\": \"Non-stick pan\",\n  \"description\": \"Sticks a bit\",\n  \"price\": 10,\n  \"user_id\": 1\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eNested Item Create Route\u003c/h3\u003e\n\n\u003cp\u003eThis route should create a new item that belongs to a user.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePOST /users/:user_id/items\n\nHeaders:\n-------\nContent-Type: application/json\n\nRequest Body:\n-------\n{\n  \"name\": \"Garden gnomes\",\n  \"description\": \"No refunds\",\n  \"price\": 23\n}\n\nResponse Body:\n-------\n{\n  \"id\": 2,\n  \"name\": \"Garden gnomes\",\n  \"description\": \"No refunds\",\n  \"price\": 23,\n  \"user_id\": 1\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html#nested-resources\"\u003eRouting: Nested Resources\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g7cd554b64caa3e951ca433a0c833bd4e"},{"id":483326,"title":"Active Record Associations Quiz","type":"Quizzes::Quiz","indent":1,"locked":false,"assignmentExportId":"gf576aade466c333f55bfec8ca9c805c0","questionCount":7,"timeLimit":null,"attempts":3,"graded":true,"pointsPossible":7.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-quiz-active-record-associations\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-quiz-active-record-associations/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eIt's time to check your knowledge! Use this quiz to create a custom study guide. Note any answers that were marked incorrect, so you can study the relevant material and try this quiz again.\u003cbr\u003eIf you don't know the answer to a question, please do not guess. Instead, select \"I don't know\". It's OK not to know everything and to admit when we're unsure.\u003c/p\u003e\n\u003cp\u003eIf you get stuck, check out these pages from the Rails guides:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/association_basics.html\"\u003eAssociation Basics\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html#nested-resources\"\u003eRails Routing: Nested Resources\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g0e0fb49c1b2eae22124eb3b8d0fbcfdc"}]},{"id":49292,"name":"Serialization","status":"completed","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"gb700a0d0d6beaa6fecd952a65c6481cb","items":[{"id":483327,"title":"Video: Serializers Introduction","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-serializers-introduction\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-serializers-introduction\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-serializers-introduction/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/606907833/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/rails-api/active_model_serializers/tree/v0.10.6/docs\"\u003e\u003ccode\u003eactive_model_serializers\u003c/code\u003e gem\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-serializers-introduction"},{"id":483328,"title":"Active Model Serializer","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-using-active-model-serializer\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-using-active-model-serializer/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-using-active-model-serializer\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-using-active-model-serializer/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand the purpose of a serializer in a JSON API application\u003c/li\u003e\n\u003cli\u003eConfigure \u003ccode\u003eActiveModel::Serializer\u003c/code\u003e with a single model\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSo far, we've learned how to create a Rails API and to set up our routes and\ncontroller actions to handle various requests and return the requested JSON. In\nthis section, we'll learn how to customize the JSON that we return.\u003c/p\u003e\n\n\u003cp\u003eLet's start by taking a look at our movie app. To set up the app, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe have two actions set up: index and show. If you navigate to\n\u003ccode\u003elocalhost:3000/movies/1\u003c/code\u003e, you should see:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"title\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"The Color Purple\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"year\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1985\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"length\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e154\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"director\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Steven Spielberg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"description\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Whoopi Goldberg brings Alice Walker's Pulitzer Prize-winning feminist novel to life as Celie, a Southern woman who suffered abuse over decades. A project brought to a hesitant Steven Spielberg by producer Quincy Jones, the film marks Spielberg's first female lead.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"poster_url\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://pisces.bbystatic.com/image2/BestBuy_US/images/products/3071/3071213_so.jpg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"category\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Drama\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"discount\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"female_director\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"created_at\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"2021-05-21T17:11:35.682Z\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"updated_at\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"2021-05-21T17:11:35.682Z\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRails makes it very easy to provide this JSON: all we needed to do was set up a\n\u003ccode\u003eshow\u003c/code\u003e route in \u003ccode\u003eroutes.rb\u003c/code\u003e, and a \u003ccode\u003eshow\u003c/code\u003e action in our controller. But so far,\nwe have no control over specifically what information is returned. For example,\nwe might decide that we don't need to include the \u003ccode\u003ecreated_at\u003c/code\u003e or \u003ccode\u003eupdated_at\u003c/code\u003e\nattributes in our list. One way we could do this is by using Active Record's\nbuilt-in \u003ccode\u003eto_json\u003c/code\u003e method in our controller. It might look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/movies_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eto_json\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:year\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:director\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:description\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:poster_url\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:category\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:discount\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:female_director\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can simplify matters with the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eto_json\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eexcept: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:created_at\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:updated_at\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is fairly straightforward so far. But what if we also had a nested resource\nwe wanted to include? For example, if we had a blogging app in which posts\nbelong to authors, we might want to do something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eto_json\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:description\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"ss\"\u003einclude: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003eauthor: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e]}])\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEven in this very simple case, you can see how building out JSON strings by hand\nwould get to be very cumbersome — and very error-prone — very quickly.\u003c/p\u003e\n\n\u003cp\u003eBut there's an additional problem with this approach: it does not exhibit good\nseparation of concerns. Recall that, in a full-stack Rails app, the controller's\njob is to interact with the model to access whatever data is requested and then\npass that data along to the View layer. The views are responsible for\ndetermining exactly how the information is presented to the user. The same\nshould be true here: rather than depending on the controller to determine how\nthe data is returned, that task should be handled elsewhere. Enter\n\u003ccode\u003eActiveModel::Serializer\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eActiveModel::Serializer\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003eActiveModel::Serializer\u003c/code\u003e (or AMS) provides an easy way to customize how the\nJSON rendered by our controllers is structured. It is a very \"Rails-y\" tool, in\nthat it uses a \"convention over configuration\" approach, and is consistent with\nseparation of concerns. Let's take a look at how we can use it to render the\nJSON for our movie app.\u003c/p\u003e\n\n\u003ch3\u003eUsing AMS\u003c/h3\u003e\n\n\u003cp\u003eFirst we need to add the gem:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Gemfile\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#...\u003c/span\u003e\n\u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s1\"\u003e'active_model_serializers'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRun \u003ccode\u003ebundle install\u003c/code\u003e to activate the gem. Now we need to generate an\n\u003ccode\u003eActiveModel::Serializer\u003c/code\u003e for our \u003ccode\u003eMovie\u003c/code\u003e model. Thankfully, the gem provides a\ngenerator for that. Drop into your console and run:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003erails g serializer movie\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eTake a look at the generated \u003ccode\u003emovie_serializer.rb\u003c/code\u003e in the \u003ccode\u003eapp/serializers\u003c/code\u003e\ndirectory. It should look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/serializers/movie_serializer.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovieSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo customize our JSON, we simply provide the list of \u003ccode\u003eattributes\u003c/code\u003e that we want\nto be included:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovieSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:year\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:director\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:description\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:poster_url\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:category\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:discount\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:female_director\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith this in place, we can return our \u003ccode\u003emovies_controller\u003c/code\u003e to its original state:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/movies_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eMuch better!\u003c/p\u003e\n\n\u003cp\u003eAMS provides a convention-based approach to serializing our resources, which\nmeans that if we have a \u003ccode\u003eMovie\u003c/code\u003e model, we can also have a \u003ccode\u003eMovieSerializer\u003c/code\u003e\nserializer, and by default, Rails will use our serializer if we simply call\n\u003ccode\u003erender json: movie\u003c/code\u003e in our controller.\u003c/p\u003e\n\n\u003cp\u003eNow, if you return to the browser and navigate to \u003ccode\u003elocalhost:3000/movies\u003c/code\u003e or\n\u003ccode\u003elocalhost:3000/movies/:id\u003c/code\u003e, you'll see that we're rendering just the JSON we\nwant.\u003c/p\u003e\n\n\u003ch3\u003eCustom Methods\u003c/h3\u003e\n\n\u003cp\u003eSo far, we've used AMS to return the values of the attributes for our \u003ccode\u003eMovie\u003c/code\u003e\ninstances. But AMS also allows us to customize the information returned using an\ninstance method on the \u003ccode\u003eMovieSerializer\u003c/code\u003e class. For example, say we wanted to\ncreate a movie summary that consisted of the movie's title and the first 50\ncharacters of its description.\u003c/p\u003e\n\n\u003cp\u003eLet's start by adding \u003ccode\u003esummary\u003c/code\u003e to the list of attributes. Next, we'll define\nour method. For now, Let's put a \u003ccode\u003ebyebug\u003c/code\u003e in the method's body:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovieSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:year\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:director\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:description\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:poster_url\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:category\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:discount\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:female_director\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:summary\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esummary\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebyebug\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRefresh the page in the browser so you drop into \u003ccode\u003ebyebug\u003c/code\u003e and enter \u003ccode\u003eself\u003c/code\u003e at\nthe \u003ccode\u003ebyebug\u003c/code\u003e prompt. The \u003ccode\u003eMovieSerializer\u003c/code\u003e instance that's returned includes an\n\u003ccode\u003eobject\u003c/code\u003e attribute which, in turn, contains the first movie instance. This means\nyou can enter \u003ccode\u003eself.object\u003c/code\u003e in \u003ccode\u003ebyebug\u003c/code\u003e to access the movie instance, and\n\u003ccode\u003eself.object.\u0026lt;attribute_name\u0026gt;\u003c/code\u003e to access a specific attribute.\u003c/p\u003e\n\n\u003cp\u003eWith this information, let's enter \u003ccode\u003eq\u003c/code\u003e to break out of the \u003ccode\u003ebyebug\u003c/code\u003e, and create\nour \u003ccode\u003esummary\u003c/code\u003e method:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esummary\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eobject\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etitle\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e - \u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eobject\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edescription\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e49\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e...\"\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRestart the server and navigate back to \u003ccode\u003elocalhost:3000/movies\u003c/code\u003e and you should\nsee our new summary added at the end of the JSON.\u003c/p\u003e\n\n\u003ch2\u003eExplicitly Specifying a Serializer\u003c/h2\u003e\n\n\u003cp\u003eSo far, we have depended on Rails naming conventions for our serializers. When\nwe ran \u003ccode\u003erails g serializer movie\u003c/code\u003e, the AMS gem automatically created a\n\u003ccode\u003eMovieSerializer\u003c/code\u003e class for us. Whenever we use \u003ccode\u003erender json:\u003c/code\u003e with a \u003ccode\u003eMovie\u003c/code\u003e\ninstance or a collection of \u003ccode\u003eMovie\u003c/code\u003e instances, Rails will follow naming\nconventions and \u003cstrong\u003eimplicitly\u003c/strong\u003e look for a serializer that matches the name of\nthe model.\u003c/p\u003e\n\n\u003cp\u003eSometimes, however, we might want to create a custom serializer that doesn't\nfollow Rails naming conventions; for example, we might have multiple different\nserializers for our \u003ccode\u003eMovie\u003c/code\u003e class depending on what information our frontend\napplication needs. In that case, we'll need to \u003cstrong\u003eexplicitly\u003c/strong\u003e specify the\nserializer to be used.\u003c/p\u003e\n\n\u003cp\u003eLet's say, for example, that we decided we wanted to create a custom serializer\nsolely for displaying our movie summary. First, let's create a new file,\n\u003ccode\u003emovie_summary_serializer.rb\u003c/code\u003e, and move our custom method into it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovieSummarySerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:summary\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esummary\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eobject\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etitle\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e - \u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eobject\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edescription\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e49\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e...\"\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo use our summary, we'll add a new route to \u003ccode\u003eroutes.rb\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/movies/:id/summary'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'movies#summary'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd, finally, add a \u003ccode\u003esummary\u003c/code\u003e action to our controller. In it, we specify that\nwe want to use our new serializer to render the requested information:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/movies_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esummary\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eserializer: \u003c/span\u003e\u003cspan class=\"no\"\u003eMovieSummarySerializer\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow if you navigate to \u003ccode\u003elocalhost:3000/movies/1/summary\u003c/code\u003e in the browser, you\nshould see:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"summary\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"The Color Purple - Whoopi Goldberg brings Alice Walker's Pulitzer Pri...\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe code above allows us to easily display just our movie summary for a single\nmovie. If we wanted to use our new custom serializer to render the full\ncollection of movies, we would need to create another route and action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/movie_summaries'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'movies#summaries'\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# app/controllers/movies_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esummaries\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emovies\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003emovies\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eeach_serializer: \u003c/span\u003e\u003cspan class=\"no\"\u003eMovieSummarySerializer\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe use of \u003ccode\u003eeach_serializer: MovieSummarySerializer\u003c/code\u003e in our action tells the app\nto use our custom movie summary serializer to render each of the movies in the\ncollection.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eA note on breaking convention: by creating these custom routes, we are\nbreaking REST conventions. One alternate way to structure this kind of feature\nand keep our routes and controllers RESTful would be to create a new\ncontroller, such as Movies::SummaryController. The creator of Rails, DHH,\nadvocates for \u003ca href=\"http://jeromedalbert.com/how-dhh-organizes-his-rails-controllers/\"\u003ethis approach for managing sub-resources\u003c/a\u003e.\nUltimately, it is up to you as the developer to decide which approach works\nbest for a particular circumstance.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned that the \u003ccode\u003eActiveModel::Serializer\u003c/code\u003e gem enables us to\ncustomize how we want our JSON to be rendered without sacrificing the Rails\nprinciples of \"convention over configuration\" and separation of concerns. We\nalso learned how to implement AMS with a single model. In the next lesson, we'll\nlook at using AMS to serialize associations.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat do we mean when we say Active Model Serializer uses a convention-based\napproach?\u003c/li\u003e\n\u003cli\u003eWhat are some ways to break convention when using \u003ccode\u003eActiveModel::Serializer\u003c/code\u003e?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/rails-api/active_model_serializers/tree/v0.10.6/docs\"\u003eActiveModel::Serializer Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gdb93f4e54cf1093ac546b23862178041"},{"id":483329,"title":"Video: Serializing Relationships","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-serializing-relationships\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-serializing-relationships\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-serializing-relationships/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/606919896/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/rails-api/active_model_serializers/blob/v0.10.6/docs/general/serializers.md#associations\"\u003eActive Model Serializers: Associations\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-serializing-relationships"},{"id":483330,"title":"Serializing Associations","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-serializing-associations\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-serializing-associations/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-serializing-associations\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-serializing-associations/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eSerialize nested data using \u003ccode\u003ehas_many\u003c/code\u003e and \u003ccode\u003ebelongs_to\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe have seen how \u003ccode\u003eActiveModel::Serializer\u003c/code\u003e can be used to easily customize the\nJSON being returned for a single model. But what if we have multiple associated\nmodels? As it turns out, that situation can also be handled easily with AMS, by\nusing the Active Record macros \u003ccode\u003ehas_many\u003c/code\u003e and \u003ccode\u003ebelongs_to\u003c/code\u003e that we're already\nfamiliar with. In this lesson, we'll learn how to implement serializers for\nassociated models in our Movie app.\u003c/p\u003e\n\n\u003cp\u003eTo enable us to do this, we've expanded our movie app to include two more\nmodels. Specifically, we made the following changes:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eInstead of including \u003ccode\u003edirector\u003c/code\u003e as an attribute of our \u003ccode\u003eMovie\u003c/code\u003e instances,\nwe created a separate \u003ccode\u003eDirector\u003c/code\u003e class.\u003c/li\u003e\n\u003cli\u003eWe modified our app to include movie reviews using a \u003ccode\u003eReview\u003c/code\u003e class.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe relationships we want to model look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eDirector -\u0026lt; Movies -\u0026lt; Reviews\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo implement the \u003ccode\u003eDirector\u003c/code\u003e class, we made the following changes to our code:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eRemoved \u003ccode\u003edirector\u003c/code\u003e and \u003ccode\u003efemale_director\u003c/code\u003e as attributes in our movie migration\nfile; added a \u003ccode\u003edirector_id\u003c/code\u003e attribute\u003c/li\u003e\n\u003cli\u003eAdded a new migration for our \u003ccode\u003edirector\u003c/code\u003e model with three attributes: \u003ccode\u003ename\u003c/code\u003e,\n\u003ccode\u003ebirthplace\u003c/code\u003e and \u003ccode\u003efemale_director\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eAdded the \u003ccode\u003ebelongs_to :director\u003c/code\u003e macro to the \u003ccode\u003eMovie\u003c/code\u003e model and the\n\u003ccode\u003ehas_many :movies\u003c/code\u003e macro to the \u003ccode\u003eDirector\u003c/code\u003e model\u003c/li\u003e\n\u003cli\u003eAdded \u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003eshow\u003c/code\u003e routes for the \u003ccode\u003eDirector\u003c/code\u003e model in \u003ccode\u003econfig/routes.rb\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eAdded a \u003ccode\u003eDirectorsController\u003c/code\u003e and created the \u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003eshow\u003c/code\u003e actions\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eTo implement the \u003ccode\u003eReview\u003c/code\u003e class, we made the following changes:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eAdded a new migration with four attributes: \u003ccode\u003eauthor\u003c/code\u003e, \u003ccode\u003edate\u003c/code\u003e, \u003ccode\u003eurl\u003c/code\u003e, and\n\u003ccode\u003emovie_id\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eAdded the \u003ccode\u003ehas_many :reviews\u003c/code\u003e macro to the \u003ccode\u003eMovie\u003c/code\u003e model and the\n\u003ccode\u003ebelongs_to :movie\u003c/code\u003e macro to the \u003ccode\u003eReview\u003c/code\u003e model\u003c/li\u003e\n\u003cli\u003eAdded an \u003ccode\u003eindex\u003c/code\u003e route for the \u003ccode\u003eReview\u003c/code\u003e model in \u003ccode\u003econfig/routes.rb\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eCreated a \u003ccode\u003eReviewsController\u003c/code\u003e and added the \u003ccode\u003eindex\u003c/code\u003e action\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eSpend a few minutes looking through the code to familiarize yourself with how\neverything is set up.\u003c/p\u003e\n\n\u003ch2\u003eUsing ActiveModel::Serializer with Associated Data\u003c/h2\u003e\n\n\u003cp\u003eLet's see the updated version of our app in action. To set it up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe setup for \u003ccode\u003eMovie\u003c/code\u003e has not changed: you should still be able to navigate to\nits \u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003eshow\u003c/code\u003e routes, as well as the custom \u003ccode\u003e/movies/:id/summary\u003c/code\u003e and\n\u003ccode\u003emovie_summaries\u003c/code\u003e routes we created in the last lesson.\u003c/p\u003e\n\n\u003cp\u003eTake a look at the new \u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003eshow\u003c/code\u003e routes for \u003ccode\u003eDirector\u003c/code\u003e in the browser.\nYou'll see that the JSON for the directors includes two attributes that we don't\nwant: \u003ccode\u003ecreated_at\u003c/code\u003e and \u003ccode\u003eupdated_at\u003c/code\u003e. Luckily we know how to fix this — we simply\nneed to create a serializer for \u003ccode\u003edirector\u003c/code\u003e as we did for \u003ccode\u003emovies\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g serializer director\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can then add the desired attributes to the \u003ccode\u003edirector_serializer\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/serializers/director_serializer.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDirectorSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birthplace\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:female_director\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow if you navigate to \u003ccode\u003e/directors\u003c/code\u003e or \u003ccode\u003e/directors/:id\u003c/code\u003e you will see that we're\nonly displaying the desired attributes.\u003c/p\u003e\n\n\u003ch2\u003eSerializing a One-to-Many Association\u003c/h2\u003e\n\n\u003cp\u003eLet's take a look at our new \u003ccode\u003eMovie\u003c/code\u003e index route. Now that we've removed the\n\u003ccode\u003edirector\u003c/code\u003e and \u003ccode\u003efemale_director\u003c/code\u003e attributes, the JSON for \u003ccode\u003emovies\u003c/code\u003e no longer\nincludes any information about director. We need to figure out how to add the\ninformation about each movie's associated director to the JSON being returned by\nthe \u003ccode\u003emovies\u003c/code\u003e serializer. AMS allows us to do this using the same macros in the\nserializers that we use to set up associations in our model files. In this case,\nwe want our serializer to reflect the fact that \u003ccode\u003eMovie\u003c/code\u003e belongs to \u003ccode\u003eDirector\u003c/code\u003e,\nso we'll update the serializer as follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# serializers/movie_serializer.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovieSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:year\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:description\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:poster_url\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:category\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:discount\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:director\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow if you navigate to \u003ccode\u003elocalhost:3000/movies/1\u003c/code\u003e, you should see the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"title\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"The Color Purple\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"year\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1985\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"length\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e154\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"description\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Whoopi Goldberg brings Alice Walker's Pulitzer Prize-winning feminist novel to life as Celie, a Southern woman who suffered abuse over decades. A project brought to a hesitant Steven Spielberg by producer Quincy Jones, the film marks Spielberg's first female lead.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"poster_url\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://pisces.bbystatic.com/image2/BestBuy_US/images/products/3071/3071213_so.jpg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"category\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Drama\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"discount\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"director\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Steven Spielberg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"birthplace\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cincinnati, OH\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"female_director\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe once again can see the director information for our movie!\u003c/p\u003e\n\n\u003cp\u003eWe can also set up the relationship in the other direction, by adding the\ncorresponding macro in our \u003ccode\u003eDirectorSerializer\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# serializers/director_serializer.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDirectorSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birthplace\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:female_director\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:movies\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBecause we have included the \u003ccode\u003ehas_many\u003c/code\u003e macro in the \u003ccode\u003eDirector\u003c/code\u003e serializer, when\nwe navigate to \u003ccode\u003elocalhost:3000/directors/:id\u003c/code\u003e, we can see the list of movies that\nbelong to that particular director:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Steven Spielberg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"birthplace\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cincinnati, OH\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"female_director\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"movies\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"title\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"The Color Purple\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"year\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1985\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"length\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e154\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"description\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Whoopi Goldberg brings Alice Walker's Pulitzer Prize-winning feminist novel to life as Celie, a Southern woman who suffered abuse over decades. A project brought to a hesitant Steven Spielberg by producer Quincy Jones, the film marks Spielberg's first female lead.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"poster_url\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://pisces.bbystatic.com/image2/BestBuy_US/images/products/3071/3071213_so.jpg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"category\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Drama\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"discount\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eIMPORTANT\u003c/strong\u003e: You should only add macros to your serializers if you're sure you\nneed the data! The level of complexity ramps up quickly as you add more macros,\nso keeping them to a minimum will save you headaches in the long run. It's also\ngood to consider how much data is being sent with each request, since adding more\ndata means running more SQL code to access that info from different tables in the\ndatabase, which will make our responses slower.\u003c/p\u003e\n\n\u003cp\u003eRails automatically uses the appropriate serializer, based on naming\nconventions, to display the associated data for each of our models. We can see\nthat in the example above: Rails has used the \u003ccode\u003eMovieSerializer\u003c/code\u003e to render the\n\u003ccode\u003emovie\u003c/code\u003e JSON, so all of the attributes we listed in that serializer are rendered\nin the \u003ccode\u003eDirector\u003c/code\u003e's \u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003eshow\u003c/code\u003e routes.\u003c/p\u003e\n\n\u003ch2\u003eSerializing a Many-to-Many Association\u003c/h2\u003e\n\n\u003cp\u003eOur Movie example uses a one-to-many association (directors have many movies and\nmovies belong to a director), but you you can also use Active Model Serializers\nwith a many-to-many association.\u003c/p\u003e\n\n\u003cp\u003eFor example, if we had an app with \u003ccode\u003eArticle\u003c/code\u003e and \u003ccode\u003eTag\u003c/code\u003e models, we could create a\njoin table and set up \u003ccode\u003ehas_many :through\u003c/code\u003e associations for both models:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/models/article.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eArticle\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:article_tags\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:tags\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ethrough: :article_tags\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# app/models/article_tag.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eArticleTag\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:article\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:tag\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# app/models/tag.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTag\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:article_tags\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:articles\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ethrough: :article_tags\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, if we want the JSON for \u003ccode\u003eArticle\u003c/code\u003e to include a list of the article's tags,\nwe would simply use \u003ccode\u003ehas_many :tags\u003c/code\u003e in our \u003ccode\u003eArticleSerializer\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/serializers/article_serializer.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eArticleSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:author\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:content\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:tags\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBecause the \u003ccode\u003ehas_many :through\u003c/code\u003e association is defined in the model files, Rails\nwill know to nest a list of each article's tags in the JSON that's being\nreturned.\u003c/p\u003e\n\n\u003ch2\u003eAdding Custom Serializers\u003c/h2\u003e\n\n\u003cp\u003eLet's return to our Movie example. We have successfully set up our Director\nserializer to include a list of the director's movies in the JSON that's\nreturned:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Steven Spielberg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"birthplace\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cincinnati, OH\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"female_director\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"movies\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"title\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"The Color Purple\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"year\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1985\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"length\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e154\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"description\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Whoopi Goldberg brings Alice Walker's Pulitzer Prize-winning feminist novel to life as Celie, a Southern woman who suffered abuse over decades. A project brought to a hesitant Steven Spielberg by producer Quincy Jones, the film marks Spielberg's first female lead.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"poster_url\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://pisces.bbystatic.com/image2/BestBuy_US/images/products/3071/3071213_so.jpg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"category\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Drama\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"discount\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith only one Steven Spielberg movie in our data, including all that information\nisn't too unreasonable. But what happens when we add the rest of his movies to\nour database? We may decide we don't need to include \u003cstrong\u003eall\u003c/strong\u003e the details of\nevery movie in this view.\u003c/p\u003e\n\n\u003cp\u003eTo fix this, we can simply create a new, streamlined serializer:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g serializer director_movie\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere we'll include just the title and year of each of the director's movies:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDirectorMovieSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:year\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, if you refresh the page... nothing changes. Why not?\u003c/p\u003e\n\n\u003cp\u003eRecall that Rails automatically selects the serializer based on naming\nconventions, so it's still using the \u003ccode\u003eDirectorSerializer\u003c/code\u003e to render the data. To\nfix this, we need to tell the \u003ccode\u003eDirectorSerializer\u003c/code\u003e that it should be using this\nnew serializer instead; we need to pass it \u003cem\u003eexplicitly\u003c/em\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDirectorSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birthplace\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:female_director\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:movies\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eserializer: \u003c/span\u003e\u003cspan class=\"no\"\u003eDirectorMovieSerializer\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRails is still using \u003ccode\u003eDirectorSerializer\u003c/code\u003e to render the JSON for the director,\nbut now \u003ccode\u003eDirectorSerializer\u003c/code\u003e is passing along the request for the director's\nmovies to the new, simplified serializer.\u003c/p\u003e\n\n\u003cp\u003eNow if you refresh the page, you should see the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Steven Spielberg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"birthplace\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cincinnati, OH\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"female_director\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"movies\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"title\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"The Color Purple\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"year\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1985\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eDeeply Nested Models\u003c/h2\u003e\n\n\u003cp\u003eNow that we've got the JSON set up the way we want for our associated \u003ccode\u003eMovie\u003c/code\u003e\nand \u003ccode\u003eDirector\u003c/code\u003e models, we can turn our attention to the \u003ccode\u003eReview\u003c/code\u003e model. Let's\ntake another look at our model relationships:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eDirector -\u0026lt; Movies -\u0026lt; Reviews\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe've already set up the association in the \u003ccode\u003eMovie\u003c/code\u003e and \u003ccode\u003eReview\u003c/code\u003e model files:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/models/movie.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovie\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:director\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# app/models/review.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eReview\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:movie\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, we'll create our \u003ccode\u003ereview\u003c/code\u003e serializer:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g serializer review\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can also specify the attributes we want to include:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/serializers/review_serializer.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eReviewSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:author\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:date\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:url\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can now go to \u003ccode\u003elocalhost:3000/reviews\u003c/code\u003e and see our reviews listed. However,\nviewing a list of reviews separately from the information about the movies\nthey're associated with is not particularly helpful.\u003c/p\u003e\n\n\u003cp\u003eWhat we really want to do is render the information about a movie's reviews\nalong with the rest of the information about that movie. In fact, we don't\nreally need to render information about reviews at all \u003cem\u003eexcept\u003c/em\u003e as part of the\ndata rendered for a particular movie!\u003c/p\u003e\n\n\u003cp\u003eBefore we figure out how to get that in place, let's follow good programming\npractice and delete the code we no longer need: we'll remove the resource for\n\u003ccode\u003ereview\u003c/code\u003es from the \u003ccode\u003eroutes.rb\u003c/code\u003e file and the \u003ccode\u003eindex\u003c/code\u003e action from the\n\u003ccode\u003eReviewsController\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eOnce that's done, to get reviews included in the JSON that's returned for a\ngiven movie, we'll simply add the appropriate macro to the \u003ccode\u003eMovieSerializer\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovieSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:year\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:description\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:poster_url\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:category\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:discount\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:director\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow if we visit \u003ccode\u003elocalhost:3000/movies/1\u003c/code\u003e, we can verify that the reviews are\nnow included in the movie's JSON.\u003c/p\u003e\n\n\u003cp\u003eSo let's review where we are: the JSON for directors includes their movies, and\nthe JSON for movies includes their reviews. Given that, if we visit\n\u003ccode\u003elocalhost:3000/directors/1\u003c/code\u003e, will we see the full set of nested data?\nUnfortunately, no, we won't. Our \u003ccode\u003eDirector\u003c/code\u003e JSON will look just the same as it\ndid before we added the \u003ccode\u003eReview\u003c/code\u003e model:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Steven Spielberg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"birthplace\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cincinnati, OH\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"female_director\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"movies\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"title\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"The Color Purple\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"year\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1985\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is because, by default, \u003cstrong\u003eAMS only nests associations one level deep\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis behavior is intended to protect against overly complex JSON that's nested\nmany layers deep. Luckily, we can override the behavior by using the \u003ca href=\"https://github.com/rails-api/active_model_serializers/blob/v0.10.6/docs/general/adapters.md#include-option\"\u003einclude\noption\u003c/a\u003e in the top-level controller — in this case, the \u003ccode\u003eDirectorsController\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/directors_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDirectorsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edirectors\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDirector\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edirectors\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003einclude: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'movies'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'movies.reviews'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edirector\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDirector\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edirector\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003einclude: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'movies'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'movies.reviews'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet's take a look at the render statement in our \u003ccode\u003eshow\u003c/code\u003e action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edirector\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003einclude: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'movies'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'movies.reviews'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis code tells AMS that we want to render information for the \u003ccode\u003edirector\u003c/code\u003e, and\nto also include information for the \u003ccode\u003emovies\u003c/code\u003e associated with that director, and\nfor the \u003ccode\u003ereviews\u003c/code\u003e associated with those \u003ccode\u003emovies\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eFinally, because we're using our custom \u003ccode\u003eDirectorMovieSerializer\u003c/code\u003e to render the\nmovies in our \u003ccode\u003eDirector\u003c/code\u003e routes, we also need to add the \u003ccode\u003ehas_many :reviews\u003c/code\u003e\nmacro to that serializer:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDirectorMovieSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:year\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith these changes in place, refresh the page and you should now see this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Steven Spielberg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"birthplace\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cincinnati, OH\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"female_director\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"movies\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"title\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"The Color Purple\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"year\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1985\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"reviews\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n        \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"author\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Roger Ebert\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"date\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"December 20, 1985\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"url\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://www.rogerebert.com/reviews/the-color-purple-1985\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n        \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n        \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"author\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Variety Staff\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"date\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"December 31, 1984\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"url\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://variety.com/1984/film/reviews/the-color-purple-1200426436/\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n        \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n        \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"author\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Janet Maslin\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"date\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"December 18, 1985\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"url\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://www.nytimes.com/1985/12/18/movies/moviesspecial/the-color-purple.html\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n        \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNice!\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003eActiveModel::Serializer\u003c/code\u003e provides some powerful yet simple-to-use tools for\ncrafting the JSON our app returns, and it does so in a way that's consistent\nwith Rails conventions.\u003c/p\u003e\n\n\u003cp\u003eTo summarize:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eTo customize the JSON returned for a resource, create a \u003cstrong\u003eserializer\u003c/strong\u003e for\nthat resource and list the desired attributes.\u003c/li\u003e\n\u003cli\u003eThe serializer is used \u003cstrong\u003eimplicitly\u003c/strong\u003e by Rails based on naming conventions; to\noverride this, custom serializers can be passed \u003cstrong\u003eexplicitly\u003c/strong\u003e.\u003c/li\u003e\n\u003cli\u003eAMS enables the use of the \u003ccode\u003ebelongs_to\u003c/code\u003e and \u003ccode\u003ehas_many\u003c/code\u003e macros in serializers\nto render associated data; these macros should be used sparingly.\u003c/li\u003e\n\u003cli\u003eBy default, AMS will only nest associations one level deep in the serialized\nJSON. To override this, the \u003ccode\u003einclude\u003c/code\u003e option can be used.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eIf we have \u003ccode\u003eRecipe\u003c/code\u003e and \u003ccode\u003eIngredient\u003c/code\u003e resources and we want to nest\ningredients under recipes in the json we're returning, in which file would we\nuse the \u003ccode\u003ehas_many\u003c/code\u003e macro? In which file would we use the \u003ccode\u003ebelongs_to\u003c/code\u003e macro?\u003c/li\u003e\n\u003cli\u003eIf we want to specify a custom serializer for the parent resource (\u003ccode\u003eRecipe\u003c/code\u003e),\nin which file would we do that? In which file would we specify a custom\nserializer for the child resource (\u003ccode\u003eIngredient\u003c/code\u003e)?\u003c/li\u003e\n\u003cli\u003eIn which file do we use the \u003ccode\u003einclude\u003c/code\u003e keyword to set up deep nesting?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/rails-api/active_model_serializers/blob/0-10-stable/docs/general/getting_started.md\"\u003eGetting Started with Active Model Serializer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/rails-api/active_model_serializers/blob/v0.10.6/docs/general/adapters.md#include-option\"\u003eIncluding Nested Associations\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g7d73020b5bd9776c34ef2da4acb88edd"},{"id":483331,"title":"Active Model Serializer Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-active-model-serializer-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-model-serializer-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-model-serializer-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-model-serializer-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Active Model Serializer to render JSON\u003c/li\u003e\n\u003cli\u003eUse Active Model Serializer to render JSON for associations\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eFor this lab, we're going to return to our Blog application and update it to use\n\u003ccode\u003eActiveModel::Serializer\u003c/code\u003e for JSON serialization.\u003c/p\u003e\n\n\u003cp\u003eTo set up the app, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOur app includes four resources: \u003ccode\u003eAuthor\u003c/code\u003e, \u003ccode\u003eProfile\u003c/code\u003e, \u003ccode\u003ePost\u003c/code\u003e, and \u003ccode\u003eTag\u003c/code\u003e, as well\nas a \u003ccode\u003epost_tag\u003c/code\u003e join table. All the associations have been set up, as well as\n\u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003eshow\u003c/code\u003e routes and actions for each of the four resources.\u003c/p\u003e\n\n\u003cp\u003eStart by building the serializers based on the instructions below. Check your\nwork in the browser as you go. Then, run \u003ccode\u003elearn test\u003c/code\u003e to make sure your code\npasses the tests.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003ch3\u003eAuthor\u003c/h3\u003e\n\n\u003cp\u003eSet up a serializer for \u003ccode\u003eAuthor\u003c/code\u003e that returns the following JSON:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eThe author's \u003ccode\u003ename\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eThe author's \u003ccode\u003eprofile\u003c/code\u003e, including only the \u003ccode\u003eusername\u003c/code\u003e, \u003ccode\u003eemail\u003c/code\u003e, \u003ccode\u003ebio\u003c/code\u003e and\n\u003ccode\u003eavatar_url\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eA list of the author's posts, including:\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cul\u003e\n\u003cli\u003ethe \u003ccode\u003etitle\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003ethe first 40 characters of the post's content as \u003ccode\u003eshort_content\u003c/code\u003e, with a\ntrailing ellipsis (\u003ccode\u003e...\u003c/code\u003e) at the end\u003c/li\u003e\n\u003cli\u003ea list of the associated \u003ccode\u003etags\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: You will need to make serializers for the \u003ccode\u003eProfile\u003c/code\u003e and \u003ccode\u003ePost\u003c/code\u003e models\nto get this working.\u003c/p\u003e\n\n\u003ch3\u003ePosts\u003c/h3\u003e\n\n\u003cp\u003eSet up a serializer for the \u003ccode\u003ePost\u003c/code\u003e model that displays the following:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eThe post's \u003ccode\u003etitle\u003c/code\u003e and \u003ccode\u003econtent\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eThe name of the author\u003c/li\u003e\n\u003cli\u003eThe tags associated with the post\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003eTags\u003c/h3\u003e\n\n\u003cp\u003eSet up a serializer for \u003ccode\u003eTag\u003c/code\u003e that displays the following:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eThe name of the tag\u003c/li\u003e\n\u003cli\u003eA list of the posts the tag is associated with\u003c/li\u003e\n\u003c/ol\u003e","exportId":"ge9a13f96cbd8ad6ab15669dd7bff6f4a"},{"id":483332,"title":"Active Model Serializer Quiz","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"gfcad255311fb7745dfadb3cb9cce419d","questionCount":4,"timeLimit":null,"attempts":3,"graded":true,"pointsPossible":4.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-quiz-active-model-serializer\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-quiz-active-model-serializer/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eIt's time to check your knowledge! Use this quiz to create a custom study guide. Note any answers that were marked incorrect, so you can study the relevant material and try this quiz again.\u003c/p\u003e\n\u003cp\u003eIf you don't know the answer to a question, please do not guess. Instead, select \"I don't know\". It's OK not to know everything and to admit when we're unsure.\u003c/p\u003e","exportId":"g5bf105a033e7b94145957fe2678ca4e4"}]},{"id":49293,"name":"Applying Your Learning","status":"started","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"gc9d2f8f932a6b26800eb5c2df78a58d8","items":[{"id":483333,"title":"Rails Mock Challenge - Camping Fun","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-mock-challenge-camping-fun\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-mock-challenge-camping-fun/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-mock-challenge-camping-fun\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-mock-challenge-camping-fun/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003cp\u003eCongratulations! You have been hired by Access Camp and for your first job, you\nhave been tasked with building out a website to log campers with their\nactivities.\u003c/p\u003e\n\n\u003cp\u003eIn this repo, there is a Rails application with some features built out. There\nis also a fully built React frontend application, so you can test if your API is\nworking.\u003c/p\u003e\n\n\u003cp\u003eYour job is to build out the Rails API to add the functionality described in the\ndeliverables below.\u003c/p\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eTo download the dependencies for the frontend and backend, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere is some starter code in the \u003ccode\u003edb/seeds.rb\u003c/code\u003e file so that once you've\ngenerated the models, you'll be able to create data to test your application.\u003c/p\u003e\n\n\u003cp\u003eYou can run your Rails API on \u003ca href=\"http://localhost:3000\"\u003e\u003ccode\u003elocalhost:3000\u003c/code\u003e\u003c/a\u003e by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can run your React app on \u003ca href=\"http://localhost:4000\"\u003e\u003ccode\u003elocalhost:4000\u003c/code\u003e\u003c/a\u003e by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou are not being assessed on React, and you don't have to update any of the React\ncode; the frontend code is available just so that you can test out the behavior\nof your API in a realistic setting.\u003c/p\u003e\n\n\u003cp\u003eThere are also tests included which you can run using \u003ccode\u003erspec\u003c/code\u003e to check your work.\u003c/p\u003e\n\n\u003cp\u003eDepending on your preference, you can either check your progress by:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRunning \u003ccode\u003erspec\u003c/code\u003e and seeing if your code passes the tests\u003c/li\u003e\n\u003cli\u003eRunning the React application in the browser and interacting with the API via\nthe frontend\u003c/li\u003e\n\u003cli\u003eRunning the Rails server and using Postman to make requests\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eModels\u003c/h2\u003e\n\n\u003cp\u003eYou need to create the following relationships:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eA \u003ccode\u003eCamper\u003c/code\u003e has many \u003ccode\u003eSignups\u003c/code\u003e, and has many \u003ccode\u003eActivity\u003c/code\u003es through \u003ccode\u003eSignup\u003c/code\u003es\u003c/li\u003e\n\u003cli\u003eAn \u003ccode\u003eActivity\u003c/code\u003e has many \u003ccode\u003eSignups\u003c/code\u003e, and has many has many \u003ccode\u003eCamper\u003c/code\u003es through \u003ccode\u003eSignup\u003c/code\u003es\u003c/li\u003e\n\u003cli\u003eA \u003ccode\u003eSignup\u003c/code\u003e belongs to a \u003ccode\u003eCamper\u003c/code\u003e and belongs to a \u003ccode\u003eActivity\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eStart by creating the models and migrations for the following database tables:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/mock-challenge-camping-fun/diagram.png\" alt=\"domain diagram\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIf you use a Rails generator to create the models, make sure to use the\n\u003ccode\u003e--no-test-framework\u003c/code\u003e flag to avoid overwriting the test files.\u003c/p\u003e\n\n\u003cp\u003eAdd any code needed in the model files to establish the relationships.\u003c/p\u003e\n\n\u003cp\u003eThen, run the migrations and seed file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you aren't able to get the provided seed file working, you are welcome to\ngenerate your own seed data to test the application.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003eValidations\u003c/h2\u003e\n\n\u003cp\u003eAdd validations to the \u003ccode\u003eCamper\u003c/code\u003e model:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003emust have a \u003ccode\u003ename\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003emust have an \u003ccode\u003eage\u003c/code\u003e between 8 and 18\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAdd validations to the \u003ccode\u003eSignup\u003c/code\u003e model:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003emust have a \u003ccode\u003etime\u003c/code\u003e between 0 and 23 (referring to the hour of day for the\nactivity)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eRoutes\u003c/h2\u003e\n\n\u003cp\u003eSet up the following routes. Make sure to return JSON data in the format\nspecified along with the appropriate HTTP verb.\u003c/p\u003e\n\n\u003ch3\u003eGET /campers\u003c/h3\u003e\n\n\u003cp\u003eReturn JSON data in the format below. \u003cstrong\u003eNote\u003c/strong\u003e: you should return a JSON\nresponse in this format, without any additional nested data related to each\ncamper.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Caitlin\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"age\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Lizzie\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"age\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eGET /campers/:id\u003c/h3\u003e\n\n\u003cp\u003eIf the \u003ccode\u003eCamper\u003c/code\u003e exists, return JSON data in the format below. \u003cstrong\u003eNote\u003c/strong\u003e: you will\nneed to serialize the data for this response differently than for the\n\u003ccode\u003eGET /campers\u003c/code\u003e route. Make sure to include an array of activities for each\ncamper.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Caitlin\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"age\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"activities\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Archery\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"difficulty\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Swimming\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"difficulty\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eCamper\u003c/code\u003e does not exist, return the following JSON data, along with\nthe appropriate HTTP status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"error\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Camper not found\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003ePOST /campers\u003c/h3\u003e\n\n\u003cp\u003eThis route should create a new \u003ccode\u003eCamper\u003c/code\u003e. It should accept an object with the\nfollowing properties in the body of the request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Zoe\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"age\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eCamper\u003c/code\u003e is created successfully, send back a response with the new\n\u003ccode\u003eCamper\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Zoe\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"age\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eCamper\u003c/code\u003e is \u003cstrong\u003enot\u003c/strong\u003e created successfully, return the following JSON data,\nalong with the appropriate HTTP status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"validation errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eGET /activities\u003c/h3\u003e\n\n\u003cp\u003eReturn JSON data in the format below:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Archery\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"difficulty\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Swimming\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"difficulty\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eDELETE /activities/:id\u003c/h3\u003e\n\n\u003cp\u003eIf the \u003ccode\u003eActivity\u003c/code\u003e exists, it should be removed from the database, along with\nany \u003ccode\u003eSignup\u003c/code\u003es that are associated with it (a \u003ccode\u003eSignup\u003c/code\u003e belongs\nto an \u003ccode\u003eActivity\u003c/code\u003e, so you need to delete the \u003ccode\u003eSignup\u003c/code\u003es before the\n\u003ccode\u003eActivity\u003c/code\u003e can be deleted).\u003c/p\u003e\n\n\u003cp\u003eAfter deleting the \u003ccode\u003eActivity\u003c/code\u003e, return an \u003cem\u003eempty\u003c/em\u003e response body, along with the\nappropriate HTTP status code.\u003c/p\u003e\n\n\u003cp\u003eIf the \u003ccode\u003eActivity\u003c/code\u003e does not exist, return the following JSON data, along with\nthe appropriate HTTP status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"error\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Activity not found\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003ePOST /signups\u003c/h3\u003e\n\n\u003cp\u003eThis route should create a new \u003ccode\u003eSignup\u003c/code\u003e that is associated with an\nexisting \u003ccode\u003eCamper\u003c/code\u003e and \u003ccode\u003eActivity\u003c/code\u003e. It should accept an object with the following\nproperties in the body of the request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"time\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"camper_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"activity_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eSignup\u003c/code\u003e is created successfully, send back a response with the data\nrelated to the \u003ccode\u003eActivity\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Archery\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"difficulty\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eSignup\u003c/code\u003e is \u003cstrong\u003enot\u003c/strong\u003e created successfully, return the following JSON data,\nalong with the appropriate HTTP status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"validation errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","exportId":"g6936e389dfffdf05f4d11bedfffdfb9e"},{"id":483334,"title":"Rails Mock Challenge - Cosmic Travel","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-practice-challenge-cosmic-challenge\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-cosmic-challenge/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-cosmic-challenge\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-cosmic-challenge/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003cp\u003eIt is the year 2100 and you run an interplanetary space travel agency. You are building a website to book scientists on missions to other planets.\u003c/p\u003e\n\n\u003cp\u003eIn this repo, there is a Rails application with some features built out. There\nis also a fully built React frontend application, so you can test if your API is\nworking.\u003c/p\u003e\n\n\u003cp\u003eYour job is to build out the Rails API to add the functionality described in the\ndeliverables below.\u003c/p\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eTo download the dependencies for the frontend and backend, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere is some starter code in the \u003ccode\u003edb/seeds.rb\u003c/code\u003e file so that once you've\ngenerated the models, you'll be able to create data to test your application.\u003c/p\u003e\n\n\u003cp\u003eYou can run your Rails API on \u003ca href=\"http://localhost:3000\"\u003e\u003ccode\u003elocalhost:3000\u003c/code\u003e\u003c/a\u003e by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can run your React app on \u003ca href=\"http://localhost:4000\"\u003e\u003ccode\u003elocalhost:4000\u003c/code\u003e\u003c/a\u003e by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou are not being assessed on React, and you don't have to update any of the React\ncode; the frontend code is available just so that you can test out the behavior\nof your API in a realistic setting.\u003c/p\u003e\n\n\u003cp\u003eThere are also tests included which you can run using \u003ccode\u003erspec\u003c/code\u003e to check your work.\u003c/p\u003e\n\n\u003cp\u003eDepending on your preference, you can either check your progress by:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRunning \u003ccode\u003erspec\u003c/code\u003e and seeing if your code passes the tests\u003c/li\u003e\n\u003cli\u003eRunning the React application in the browser and interacting with the API via\nthe frontend\u003c/li\u003e\n\u003cli\u003eRunning the Rails server and using Postman (or equivalent API client) to make requests\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eModels\u003c/h2\u003e\n\n\u003cp\u003eIt is your job to build out Planet, Scientist, and Mission models so that scientists can book their missions. \u003cstrong\u003eIn a given mission, one scientist will visit one planet\u003c/strong\u003e. Over their careers, \u003cstrong\u003escientists will visit many planets\u003c/strong\u003e and \u003cstrong\u003eplanets will be visited by many scientists\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eYou need to create the following relationships:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eA \u003ccode\u003eScientist\u003c/code\u003e has many \u003ccode\u003eMissions\u003c/code\u003e, and has many \u003ccode\u003ePlanet\u003c/code\u003es through \u003ccode\u003eMission\u003c/code\u003es\u003c/li\u003e\n\u003cli\u003eAn \u003ccode\u003ePlanet\u003c/code\u003e has many \u003ccode\u003eMissions\u003c/code\u003e, and has many \u003ccode\u003eScientist\u003c/code\u003es through \u003ccode\u003eMission\u003c/code\u003es\u003c/li\u003e\n\u003cli\u003eA \u003ccode\u003eMission\u003c/code\u003e belongs to a \u003ccode\u003eScientist\u003c/code\u003e and belongs to a \u003ccode\u003ePlanet\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eStart by creating the models and migrations for the following database tables:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/mock-challenge-cosmic-challenge/cosmic_erd.png\" alt=\"cosmic_erd\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIf you use a Rails generator to create the models, make sure to use the\n\u003ccode\u003e--no-test-framework\u003c/code\u003e flag to avoid overwriting the test files.\u003c/p\u003e\n\n\u003cp\u003eAdd any code needed in the model files to establish the relationships.\u003c/p\u003e\n\n\u003cp\u003eThen, run the migrations and seed file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you aren't able to get the provided seed file working, you are welcome to\ngenerate your own seed data to test the application.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003eValidations\u003c/h2\u003e\n\n\u003cp\u003eAdd validations to the \u003ccode\u003eScientist\u003c/code\u003e model:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003emust have a \u003ccode\u003ename\u003c/code\u003e, and a \u003ccode\u003efield_of_study\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ename\u003c/code\u003es must be unique\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAdd validations to the \u003ccode\u003eMission\u003c/code\u003e model:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003emust have a \u003ccode\u003ename\u003c/code\u003e, a \u003ccode\u003escientist\u003c/code\u003e and a \u003ccode\u003eplanet\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003ea \u003ccode\u003escientist\u003c/code\u003e cannot join the same \u003ccode\u003emission\u003c/code\u003e twice\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eRoutes\u003c/h2\u003e\n\n\u003cp\u003eSet up the following routes. Make sure to return JSON data in the format\nspecified along with the appropriate HTTP verb.\u003c/p\u003e\n\n\u003ch3\u003eGET /scientists\u003c/h3\u003e\n\n\u003cp\u003eReturn JSON data in the format below. \u003cstrong\u003eNote\u003c/strong\u003e: you should return a JSON\nresponse in this format, without any additional nested data related to each\nscientist.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Mel T. Valent\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"field_of_study\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"xenobiology\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"avatar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://robohash.org/mel_t_valent?set=set5\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"P. Legrange\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"field_of_study\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"orbital mechanics\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"avatar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://robohash.org/p_legrange?set=set5\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eGET /scientists/:id\u003c/h3\u003e\n\n\u003cp\u003eIf the \u003ccode\u003eScientist\u003c/code\u003e exists, return JSON data in the format below. \u003cstrong\u003eNote\u003c/strong\u003e: you will\nneed to serialize the data for this response differently than for the\n\u003ccode\u003eGET /scientists\u003c/code\u003e route. Make sure to include an array of missions for each\nscientist.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Mel T. Valent\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"field_of_study\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"xenobiology\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"avatar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://robohash.org/mel_t_valent?set=set5\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"planets\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"TauCeti E\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"distance_from_earth\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"12 light years\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"nearest_star\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"TauCeti\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"image\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"planet3\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Maxxor\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"distance_from_earth\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"9 parsecs\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"nearest_star\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Canus Minor\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"image\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"planet7\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eScientist\u003c/code\u003e does not exist, return the following JSON data, along with\nthe appropriate HTTP status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"error\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Scientist not found\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003ePOST /scientists\u003c/h3\u003e\n\n\u003cp\u003eThis route should create a new \u003ccode\u003eScientist\u003c/code\u003e. It should accept an object with the\nfollowing properties in the body of the request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Evan T'Horizon\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"field_of_study\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"astronavigation\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"avatar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://robohash.org/evan_thorizon?set=set5\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eScientist\u003c/code\u003e is created successfully, send back a response with the new\n\u003ccode\u003eScientist\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Evan T'Horizon\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"field_of_study\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"astronavigation\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"avatar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://robohash.org/evan_thorizon?set=set5\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eScientist\u003c/code\u003e is \u003cstrong\u003enot\u003c/strong\u003e created successfully, return the following JSON data,\nalong with the appropriate HTTP status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"validation errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003ePATCH /scientists/:id\u003c/h3\u003e\n\n\u003cp\u003eThis route should update an existing \u003ccode\u003eScientist\u003c/code\u003e. It should accept an object with one or more of the\nfollowing properties in the body of the request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bevan T'Horizon\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"field_of_study\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"warp drive tech\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"avatar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://robohash.org/bevan_thorizon?set=set5\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eScientist\u003c/code\u003e is updated successfully, send back a response with the updated\n\u003ccode\u003eScientist\u003c/code\u003e and a 202 \u003ccode\u003e:accepted\u003c/code\u003e status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bevan T'Horizon\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"field_of_study\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"warp drive tech\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"avatar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://robohash.org/bevan_thorizon?set=set5\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eScientist\u003c/code\u003e is \u003cstrong\u003enot\u003c/strong\u003e updated successfully, return the following JSON data,\nalong with the appropriate HTTP status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"validation errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOR, given an invalid ID, the appropriate HTTP status code, and the following JSON:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"error\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Scientist not found\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eDELETE /scientists/:id\u003c/h3\u003e\n\n\u003cp\u003eIf the \u003ccode\u003eScientist\u003c/code\u003e exists, it should be removed from the database, along with\nany \u003ccode\u003eMission\u003c/code\u003es that are associated with it (a \u003ccode\u003eMission\u003c/code\u003e belongs\nto an \u003ccode\u003eScientist\u003c/code\u003e, so you need to delete the \u003ccode\u003eMission\u003c/code\u003es before the\n\u003ccode\u003eScientist\u003c/code\u003e can be deleted).\u003c/p\u003e\n\n\u003cp\u003eAfter deleting the \u003ccode\u003eScientist\u003c/code\u003e, return an \u003cem\u003eempty\u003c/em\u003e response body, along with the\nappropriate HTTP status code.\u003c/p\u003e\n\n\u003cp\u003eIf the \u003ccode\u003eScientist\u003c/code\u003e does not exist, return the following JSON data, along with\nthe appropriate HTTP status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"error\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Scientist not found\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eGET /planets\u003c/h3\u003e\n\n\u003cp\u003eReturn JSON data in the format below. \u003cstrong\u003eNote\u003c/strong\u003e: you should return a JSON\nresponse in this format, without any additional nested data related to each\nplanet.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"TauCeti E\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"distance_from_earth\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"12 light years\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"nearest_star\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"TauCeti\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"image\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"planet3\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Maxxor\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"distance_from_earth\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"9 parsecs\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"nearest_star\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Canus Minor\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"image\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"planet7\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003ePOST /missions\u003c/h3\u003e\n\n\u003cp\u003eThis route should create a new \u003ccode\u003eMissions\u003c/code\u003e. It should accept an object with the\nfollowing properties in the body of the request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Project Terraform\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"scientist_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"planet_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eMission\u003c/code\u003e is created successfully, send back a response with the \u003ccode\u003eplanet\u003c/code\u003e associated with the new \u003ccode\u003eMission\u003c/code\u003e (contrary to convention, which normally dictates the response would include data about the \u003cem\u003emission\u003c/em\u003e that was created):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Maxxor\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"distance_from_earth\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"9 parsecs\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"nearest_star\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Canus Minor\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"image\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"planet7\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eMission\u003c/code\u003e is \u003cstrong\u003enot\u003c/strong\u003e created successfully, return the following JSON data,\nalong with the appropriate HTTP status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"validation errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","exportId":"gaee865029dc07081ad583c591f508019"},{"id":483335,"title":"Rails Practice Challenge - Students","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-practice-challenge-students\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-students/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-students\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-students/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eTo download the dependencies for backend, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere is some starter code in the \u003ccode\u003edb/seeds.rb\u003c/code\u003e file so that once you've\ngenerated the models, you'll be able to create data to test your application.\u003c/p\u003e\n\n\u003cp\u003eYou can run your Rails API on \u003ca href=\"http://localhost:3000\"\u003e\u003ccode\u003elocalhost:3000\u003c/code\u003e\u003c/a\u003e by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere are no tests for this application, so you'll need to check your progress\nby running the server and using Postman make requests.\u003c/p\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe're going to build an API for an instructor to manage their students. Create\nthe following database structure. You will have two models (and their\ncorresponding tables), \u003ccode\u003eStudent\u003c/code\u003e and \u003ccode\u003eInstructor\u003c/code\u003e, with the following\nrelationships:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAn instructor has many students\u003c/li\u003e\n\u003cli\u003eA student belongs to an instructor\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe models should have the following attributes (along with any attributes\nneeded to create the relationships defined above):\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eInstructor\n\n\u003cul\u003e\n\u003cli\u003ename (must be present)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eStudent\n\n\u003cul\u003e\n\u003cli\u003ename (must be present)\u003c/li\u003e\n\u003cli\u003emajor\u003c/li\u003e\n\u003cli\u003eage (must be \u0026gt;= 18)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eMake sure to define validations for your models so that no bad data can be saved\nto the database.\u003c/p\u003e\n\n\u003ch2\u003eDeliverables\u003c/h2\u003e\n\n\u003cp\u003eAs a user, I can:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate, read, update and delete \u003cstrong\u003eInstructors\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate, read, update and delete \u003cstrong\u003eStudents\u003c/strong\u003e\n\n\u003cul\u003e\n\u003cli\u003eWhen creating or updating a student, they must be associated with an\ninstructor\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFollow good API design practices and use RESTful routing conventions. Make sure\nto handle errors and invalid data by returning the appropriate status code along\nwith a message.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eTime yourself while working on the deliverables\u003c/li\u003e\n\u003cli\u003eCommit when you hit 75 minutes\u003c/li\u003e\n\u003cli\u003eWhen you have finished all deliverables, commit again.\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g13f26c6b020e7fbf2bbada71d6ca6e7d"},{"id":483336,"title":"Rails Practice Challenge - Apartments","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-practice-challenge-apartments\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-apartments/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-apartments\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-apartments/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eTo download the dependencies for backend, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere is some starter code in the \u003ccode\u003edb/seeds.rb\u003c/code\u003e file so that once you've\ngenerated the models, you'll be able to create data to test your application.\u003c/p\u003e\n\n\u003cp\u003eYou can run your Rails API on \u003ca href=\"http://localhost:3000\"\u003e\u003ccode\u003elocalhost:3000\u003c/code\u003e\u003c/a\u003e by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere are no tests for this application, so you'll need to check your progress\nby running the server and using Postman to make requests.\u003c/p\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe're going to build an API for an apartment management company. Create the\nfollowing database structure. You will have three models (and their\ncorresponding tables), \u003ccode\u003eApartment\u003c/code\u003e, \u003ccode\u003eTenant\u003c/code\u003e and \u003ccode\u003eLease\u003c/code\u003e, with the following\nrelationships:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eA tenant has many apartments and has many leases\u003c/li\u003e\n\u003cli\u003eAn apartment has many tenants and has many leases\u003c/li\u003e\n\u003cli\u003eA lease belongs to an apartment and belongs to a tenant\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe models should have the following attributes (along with any attributes\nneeded to create the relationships defined above):\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eApartment\n\n\u003cul\u003e\n\u003cli\u003enumber\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eTenant\n\n\u003cul\u003e\n\u003cli\u003ename (must be present)\u003c/li\u003e\n\u003cli\u003eage (must be \u0026gt;= 18)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eLease\n\n\u003cul\u003e\n\u003cli\u003erent\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eMake sure to define validations for your models so that no bad data can be saved\nto the database.\u003c/p\u003e\n\n\u003ch2\u003eDeliverables\u003c/h2\u003e\n\n\u003cp\u003eAs a user, I can:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate, read, update and delete \u003cstrong\u003eApartments\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate, read, update and delete \u003cstrong\u003eTenants\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate and delete \u003cstrong\u003eLease\u003c/strong\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFollow good API design practices and use RESTful routing conventions. Make sure\nto handle errors and invalid data by returning the appropriate status code along\nwith a message.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eTime yourself while working on the deliverables\u003c/li\u003e\n\u003cli\u003eCommit when you hit 75 minutes\u003c/li\u003e\n\u003cli\u003eWhen you have finished all deliverables, commit again.\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g7cf9045415f827a5f5b8ab890ac1eca5"},{"id":483337,"title":"Rails Practice Challenge - Gym","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-practice-challenge-gym\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-gym/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-gym\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-gym/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eTo download the dependencies for backend, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere is some starter code in the \u003ccode\u003edb/seeds.rb\u003c/code\u003e file so that once you've\ngenerated the models, you'll be able to create data to test your application.\nYou can run your Rails API on \u003ca href=\"http://localhost:3000\"\u003e\u003ccode\u003elocalhost:3000\u003c/code\u003e\u003c/a\u003e by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere are no tests for this application, so you'll need to check your progress\nby running the server and using Postman to make requests.\u003c/p\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe're going to build an app for a Gym create the following database structure.\nYou will have three models (and their corresponding tables), \u003ccode\u003eGym\u003c/code\u003e, \u003ccode\u003eClient\u003c/code\u003e and\n\u003ccode\u003eMembership\u003c/code\u003e, with the following relationships:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eA client has many gyms and has many memberships\u003c/li\u003e\n\u003cli\u003eA gym has many clients and has many memberships\u003c/li\u003e\n\u003cli\u003eA membership belongs to a gym and belongs to a client\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eMigrations\u003c/h3\u003e\n\n\u003cp\u003eWrite migrations to create the following tables:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eGyms\u003c/strong\u003e Table:\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align: center\"\u003e\u003cstrong\u003eid\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"text-align: center\"\u003e\u003cstrong\u003ename\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"text-align: center\"\u003e\u003cstrong\u003eaddress\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003e1\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003eL.A.Fitness\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003eSuite 981 1795 Leida Fords, Nataliemouth, TN 14377-4979\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003e2\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003ePlanet Fitness\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e7768 David Avenue, Greenside, PA 67475-3655\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e\u003cstrong\u003eClients\u003c/strong\u003e Table:\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align: center\"\u003e\u003cstrong\u003eid\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"text-align: center\"\u003e\u003cstrong\u003ename\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"text-align: center\"\u003e\u003cstrong\u003eage\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003e1\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003eCasie Effertz\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e18\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003e2\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003eDorris Bogan\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e52\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003e3\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003eBernie Schiller\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e44\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003e4\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003eManie Dare\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e29\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e\u003cstrong\u003eMemberships\u003c/strong\u003e Table:\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align: center\"\u003e\u003cstrong\u003eid\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"text-align: center\"\u003e\u003cstrong\u003egym_id\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"text-align: center\"\u003e\u003cstrong\u003eclient_id\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"text-align: center\"\u003e\u003cstrong\u003echarge\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003e1\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e1\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e1\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e40\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003e2\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e1\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e2\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e40\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003e3\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e2\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e1\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e50\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003e4\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e2\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e3\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e60\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch3\u003eDeliverables\u003c/h3\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIt may be helpful to write a list of the routes you'll need before you begin.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eA user should be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eCreate a new membership\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eNew membership require a gym_id, client_id, and membership charge.\u003c/li\u003e\n\u003cli\u003eValidation: A client can have only one membership with gym\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eView one specific gym\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eif \u003ccode\u003eGym\u003c/code\u003e exists, return JSON data for the gym\u003c/li\u003e\n\u003cli\u003eelse return error with a status code\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eDelete a gym\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIf the \u003ccode\u003eGym\u003c/code\u003e exists, it should be removed from the database, along with\nany \u003ccode\u003eMembership\u003c/code\u003es that are associated with it (a \u003ccode\u003eMembership\u003c/code\u003e belongs\nto a \u003ccode\u003eGym\u003c/code\u003e, so you need to delete the \u003ccode\u003eMembership\u003c/code\u003es before the\n\u003ccode\u003eGym\u003c/code\u003e can be deleted).\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAfter deleting the \u003ccode\u003eGym\u003c/code\u003e, return an \u003cem\u003eempty\u003c/em\u003e response body, along with the\nappropriate HTTP status code.\u003c/p\u003e\n\n\u003cp\u003eIf the \u003ccode\u003eGym\u003c/code\u003e does not exist, return the following JSON data, along with\nthe appropriate HTTP status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"error\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Gym not found\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eView one specific client\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eif \u003ccode\u003eClient\u003c/code\u003e exists, return JSON data for the Client\u003c/li\u003e\n\u003cli\u003eelse return error with a status code\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eBonus\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003eOn client show route, send response that includes total amount for all\nmembership for that client.\u003c/li\u003e\n\u003cli\u003eCreate index and update routes for gym and client\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g63a1d4899c2813aff7983923122969e1"}]},{"id":49294,"name":"Auth","status":"started","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"ge622732e7f7c7a8b0940052f3219646f","items":[{"id":483338,"title":"Video: Sessions and Cookies: Configuration","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-sessions-and-cookies--configuration\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-sessions-and-cookies--configuration\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-sessions-and-cookies--configuration/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/609112816/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/action_controller_overview.html#session\"\u003eRails Guides: Session\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/action_controller_overview.html#cookies\"\u003eRails Guides: Cookies\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-sessions-and-cookies-configuration"},{"id":483339,"title":"Video: Sessions and Cookies Intro","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-sessions-and-cookies-intro\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-sessions-and-cookies-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-sessions-and-cookies-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/609140443/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/action_controller_overview.html#session\"\u003eRails Guides: Session\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/action_controller_overview.html#cookies\"\u003eRails Guides: Cookies\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.rubyinside.com/what-rubys-double-pipe-or-equals-really-does-5488.html\"\u003eRuby \u003ccode\u003e||=\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-sessions-and-cookies-intro"},{"id":483340,"title":"Cookies and Sessions","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-cookies-and-sessions-readme\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-cookies-and-sessions-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-cookies-and-sessions-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain what a cookie is and what cookies can be used for\u003c/li\u003e\n\u003cli\u003eIdentify how cookies are part of the request/response cycle\u003c/li\u003e\n\u003cli\u003eExplain what a session is in Rails\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eCookies are small pieces of information that are sent from the server to the\nclient. They are then stored on the client (in the browser) and sent back to the\nserver with each subsequent request.\u003c/p\u003e\n\n\u003cp\u003eHTTP is a \u003cstrong\u003estateless\u003c/strong\u003e protocol, since the server doesn't maintain information\nabout each client for all requests. Cookies help make \u003cstrong\u003estateful\u003c/strong\u003e HTTP requests\nby providing a mechanism for sending additional information to the server with\neach request.\u003c/p\u003e\n\n\u003cp\u003eCookies are \u003cem\u003edomain-specific\u003c/em\u003e. The browser stores cookies for each domain (e.g.\n\u003ccode\u003enytimes.com\u003c/code\u003e) separately, and only cookies for that domain are sent back to\nthe server with subsequent requests.\u003c/p\u003e\n\n\u003cp\u003eCookies are typically used to store session information (user login, shopping\ncart, etc.), personalization (user preferences, themes, etc.) and tracking\ninformation (analyzing user behavior). They provide a way for us to verify who\na user is once, and then remember it for their entire session. Without cookies,\nyou would have to provide your username and password on every single request to\nthe server.\u003c/p\u003e\n\n\u003cp\u003eIn this document, we'll cover what cookies are, how they fit into the HTTP\nrequest/response cycle, and how you can access them within your Rails\napplication.\u003c/p\u003e\n\n\u003ch2\u003ePage View Tracking\u003c/h2\u003e\n\n\u003cp\u003eLet's say we want to build a paid blog site, like Medium. Users can view up to\n5 articles per month for free, but after that, they need to subscribe to see\nmore content.\u003c/p\u003e\n\n\u003cp\u003eHow can we keep track of a user's page views?\u003c/p\u003e\n\n\u003cp\u003eWe could make a \u003ccode\u003eUser\u003c/code\u003e model, and create a \u003ccode\u003epageviews_remaining\u003c/code\u003e attribute to\nkeep track of how many articles the user can read; but ideally, we'd like to let\nusers browse the site without needing to log in, and still have some way of\ntracking their page views.\u003c/p\u003e\n\n\u003cp\u003eWhen a user views an article, their browser will make a request to\n\u003ccode\u003e/articles/:id\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eRemember what's included in an HTTP request:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAn \u003ca href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html\" title=\"HTTP RFC 9 — Method Definitions\"\u003eHTTP verb\u003c/a\u003e, like \u003ccode\u003eGET\u003c/code\u003e, \u003ccode\u003ePUT\u003c/code\u003e, or \u003ccode\u003ePOST\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eA path (\u003ccode\u003e/articles/:id\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003eVarious headers containing additional metadata (like the \u003ccode\u003eContent-Type\u003c/code\u003e of the\nrequest)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHTTP servers are typically stateless. They receive requests, process them,\nreturn data, then forget about them. This means that all required information\nmust be passed with the request, either in the path or in the headers.\u003c/p\u003e\n\n\u003cp\u003eFor example, \u003ccode\u003eGET\u003c/code\u003e requests usually encode the necessary information in the\npath. When you write a route matching \u003ccode\u003e/articles/:id\u003c/code\u003e, you are telling Rails to\npull the value \u003ccode\u003eid\u003c/code\u003e from the request path and save it in \u003ccode\u003eparams[:id]\u003c/code\u003e. In your\n\u003ccode\u003earticles_controller\u003c/code\u003e, you'll probably have a method that looks something like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003earticle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eArticle\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003earticle\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis code loads the row for that article from the database and returns it as an\nActive Record model object, which is then serialized as JSON. All the\ninformation needed for the \u003ccode\u003eGET\u003c/code\u003e request — in this case, the \u003ccode\u003eid\u003c/code\u003e of the article\nto render — is included in the path.\u003c/p\u003e\n\n\u003cp\u003eSimilarly, if we want to be able to keep track of page views, we need to figure\nout how to include that information in the request, either in the path or the\nheaders.\u003c/p\u003e\n\n\u003cp\u003eIt would be possible, though quite convoluted, to store this information in the\npath. Our JavaScript application could keep track of the articles the user has\nviewed, and include the remaining page views as an additional query parameter in\nthe request: \u003ccode\u003e/articles/3?pageviews_remaining=5\u003c/code\u003e. However, there are a few flaws\nto this approach: most obviously, it would be incredibly simple for the user to\nchange this number in the request and circumvent our paywall:\n\u003ccode\u003e/articles/3?pageviews_remaining=999\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eLuckily, cookies allow us to store this information in the only other place\navailable to us: HTTP headers.\u003c/p\u003e\n\n\u003ch2\u003eWhat's a Cookie, Anyway?\u003c/h2\u003e\n\n\u003cp\u003eLet's see what \u003ca href=\"http://tools.ietf.org/html/rfc6265\" title=\"HTTP State Management Mechanism\"\u003ethe spec\u003c/a\u003e has to say:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eThis section outlines a way for an origin server to send state\ninformation to a user agent and for the user agent to return the\nstate information to the origin server.\n\nTo store state, the origin server includes a Set-Cookie header in an\nHTTP response.  In subsequent requests, the user agent returns a\nCookie request header to the origin server.  The Cookie header\ncontains cookies the user agent received in previous Set-Cookie\nheaders.  The origin server is free to ignore the Cookie header or\nuse its contents for an application-defined purpose.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe description is quite technical, so let's look at their example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e== Server -\u0026gt; User Agent ==\nSet-Cookie: SID=31d4d96e407aad42\n\n== User Agent -\u0026gt; Server ==\nCookie: SID=31d4d96e407aad42\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn this example, the server is an HTTP server, and the User Agent is a browser.\nThe server responds to a request with the \u003ccode\u003eSet-Cookie\u003c/code\u003e header. This header sets\nthe value of the \u003ccode\u003eSID\u003c/code\u003e cookie to \u003ccode\u003e31d4d96e407aad42\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eNext, when the user visits another page on the same server, the browser sends\nthe cookie back to the server, including the \u003ccode\u003eCookie: SID=31d4d96e407aad42\u003c/code\u003e\nheader in its request.\u003c/p\u003e\n\n\u003cp\u003eCookies are stored in the browser. The browser doesn't care about what's in the\ncookies you set. It just stores the data and sends it along on future requests\nto your server. You can think of them as a hash — and indeed, as we'll see\nlater, Rails exposes cookies with a method that behaves much like a hash.\u003c/p\u003e\n\n\u003ch2\u003eUsing Cookies\u003c/h2\u003e\n\n\u003cp\u003eSo how would we use a cookie to store a reference to the user's page views?\nLet's say that we create a page view counter the first time a user views an\narticle. Then, in the \u003cstrong\u003eresponse\u003c/strong\u003e, we might include the header:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e== Server -\u0026gt; User Agent ==\nSet-Cookie: pageviews_remaining=5\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen the user views another article, we can instruct the browser to include\nthe cookie in the \u003cstrong\u003erequest\u003c/strong\u003e headers:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e== User Agent -\u0026gt; Server ==\nCookie: pageviews_remaining=5\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can look at this HTTP header, get the \u003ccode\u003epageviews_remaining\u003c/code\u003e from it, and\nwrite some conditional logic to customize the response based on the\n\u003ccode\u003epageviews_remaining\u003c/code\u003e to either return the article, or return a message\nindicating that our frontend should show the paywall.\u003c/p\u003e\n\n\u003ch2\u003eSecurity Concerns\u003c/h2\u003e\n\n\u003cp\u003eCookies are stored as plain text in a user's browser. Therefore, the user can\nsee what's in them, and they can set them to anything they want.\u003c/p\u003e\n\n\u003cp\u003eIf you open the developer console in your browser, you can see the cookies set\nby the current site. In Chrome's console, you can find this under\n\u003ccode\u003eApplication \u0026gt; Cookies\u003c/code\u003e. You can delete any cookie you like. For example, if you\ndelete your \u003ccode\u003euser_session\u003c/code\u003e cookie on \u003ccode\u003egithub.com\u003c/code\u003e and refresh the page, you will\nfind that you've been logged out.\u003c/p\u003e\n\n\u003cp\u003eYou can also edit cookies, for example with \u003ca href=\"https://chrome.google.com/webstore/detail/editthiscookie/fngmhnnpilhplaeedifhccceomclgfbg?hl=en\"\u003ethis extension\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis presents a problem for us. If users can edit their \u003ccode\u003epageviews_remaining\u003c/code\u003e\ncookie, then they can easily give themselves an unlimited amount of page views.\u003c/p\u003e\n\n\u003ch2\u003eRails to the Rescue\u003c/h2\u003e\n\n\u003cp\u003eFortunately, Rails has a solution to this. Instead of sending our cookies in\nplain text, we can use Rails to \u003cstrong\u003eencrypt\u003c/strong\u003e and \u003cstrong\u003esign\u003c/strong\u003e a special cookie known\nas a session using the \u003ccode\u003esession\u003c/code\u003e method. The \u003ccode\u003esession\u003c/code\u003e method is available\nin your controller, and it behaves like a hash:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e  \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:pageviews_remaining\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can store any simple Ruby object in the session.\u003c/p\u003e\n\n\u003cp\u003eBy default, Rails manages all session data in a single cookie. It \u003cem\u003eserializes\u003c/em\u003e\nall the key/value pairs you set with \u003ccode\u003esession\u003c/code\u003e, converting them from a Ruby\nobject into a big string. Whenever you set a \u003ccode\u003ekey\u003c/code\u003e with the \u003ccode\u003esession\u003c/code\u003e method,\nRails updates the value of its session cookie to this big string.\u003c/p\u003e\n\n\u003cp\u003eWhen you set cookies this way, Rails \u003cstrong\u003esigns\u003c/strong\u003e them to prevent users from\ntampering with them. Your Rails server has a key, configured in\n\u003ccode\u003econfig/credentials.yml.enc\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003edevelopment:\n  secret_key_base: kaleisgreat  # probably not the most secure key ever\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSomewhere else, Rails has a method, let's call it \u003ccode\u003esign\u003c/code\u003e, which takes a\n\u003ccode\u003emessage\u003c/code\u003e and a \u003ccode\u003ekey\u003c/code\u003e and returns a \u003ccode\u003esignature\u003c/code\u003e, which is just a string:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# sign(message: string, key: string) -\u0026gt; signature: string\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esign\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# cryptographic magic here\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003esignature\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt's guaranteed that given the same message and key, \u003ccode\u003esign\u003c/code\u003e will produce the\nsame output. Also, without the key, it is practically impossible to know what\n\u003ccode\u003esign\u003c/code\u003e would return for a given message. That is, signatures can't be forged.\u003c/p\u003e\n\n\u003cp\u003eRails creates a signature for every session cookie it sets, and appends the\nsignature to the cookie.\u003c/p\u003e\n\n\u003cp\u003eWhen it receives a cookie, Rails verifies that the signature matches the content\n(that is, that \u003ccode\u003esign(cookie_body, secret_key_base) == cookie_signature\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eThis prevents cookie tampering. If a user tries to edit their cookie and change\nthe \u003ccode\u003epageviews_remaining\u003c/code\u003e, the signature won't match, and Rails will silently\nignore the cookie and set a new one.\u003c/p\u003e\n\n\u003cp\u003eCryptography is a deep rabbit hole. At this point, you don't need to understand\nthe specifics of how cryptography works, just that Rails and other frameworks\nuse it to ensure that session data which is set on the server can't be edited by\nusers.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eCookies are foundational for the modern web.\u003c/p\u003e\n\n\u003cp\u003eMost sites use cookies, to let their users log in, keep track of their shopping\ncarts, or record other ephemeral session data. Almost nobody thinks these are\nbad uses of cookies: nobody really believes that you should have to type in your\nusername and password on every page, or that your shopping cart should clear if\nyou reload the page.\u003c/p\u003e\n\n\u003cp\u003eBut cookies let you store data in a user's browser, so by nature, they can be\nused for more controversial endeavors.\u003c/p\u003e\n\n\u003cp\u003eFor example, Google AdWords sets a cookie and uses that cookie to track what ads\nyou've seen and which ones you've clicked on. The tracking information helps\nAdWords decide what ads to show you.\u003c/p\u003e\n\n\u003cp\u003eThis is why, if you click on an ad, you may find that the ad follows you around\nthe internet. It turns out that this behavior is as effective as it is annoying:\npeople are far more likely to buy things from ads that they've clicked on once.\u003c/p\u003e\n\n\u003cp\u003eThis use of cookies worries people and the EU\n\u003ca href=\"https://en.wikipedia.org/wiki/General_Data_Protection_Regulation\"\u003ehas created legislation around the use of cookies\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eCookies, like any technology, are a tool. In the rest of this module, we're going\nto be using them to let users log in. Whether you later want to use them in such\na way that the EU passes another law is up to you.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat do we mean when we say that HTTP is stateless?\u003c/li\u003e\n\u003cli\u003eWhat Rails method can you use to protect cookies from being tampered with by\nusers? What two things does Rails do to secure the cookie?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html\" title=\"HTTP RFC 9 — Method Definitions\"\u003eHTTP RFC Section 9 — Methods\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://tools.ietf.org/html/rfc6265\" title=\"HTTP State Management Mechanism\"\u003eRFC 6265 — HTTP State Management Mechanism (the cookie spec)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/action_controller_overview.html#session\"\u003eRails Sessions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/General_Data_Protection_Regulation\"\u003eGeneral Data Protection Regulation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://termly.io/resources/templates/cookie-policy-template/#are-you-legally-required-to-have-a-cookie-policy\"\u003eLegal Cookie Requirements\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"cookies-and-sessions"},{"id":483341,"title":"Cookies in APIs","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-cookies-in-rails-api\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-cookies-in-rails-api/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-cookies-in-rails-api\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-cookies-in-rails-api/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eConfigure a Rails API to use cookies\u003c/li\u003e\n\u003cli\u003eUse the developer tools to inspect cookies\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eConfiguring Cookies in Rails APIs\u003c/h2\u003e\n\n\u003cp\u003eSince cookies are such an important part of most web applications, Rails has\nexcellent support for cookies and sessions baked in. Unfortunately for us, when\nyou create a new application in API mode with \u003ccode\u003erails new appname --api\u003c/code\u003e, the\ncode needed for working with sessions and cookies in the controller is\nexcluded by default.\u003c/p\u003e\n\n\u003cp\u003eTo add session and cookie support back in, we need to update our application's\nconfiguration in the \u003ccode\u003econfig/application.rb\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/application.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003emodule\u003c/span\u003e \u003cspan class=\"nn\"\u003eMyApp\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eApplication\u003c/span\u003e\n    \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eload_defaults\u003c/span\u003e \u003cspan class=\"mf\"\u003e6.1\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# This is set in apps generated with the --api flag, and removes session/cookie middleware\u003c/span\u003e\n    \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapi_only\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e# Must add these lines!\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# Adding back cookies and session middleware\u003c/span\u003e\n    \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003euse\u003c/span\u003e \u003cspan class=\"no\"\u003eActionDispatch\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eCookies\u003c/span\u003e\n    \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003euse\u003c/span\u003e \u003cspan class=\"no\"\u003eActionDispatch\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSession\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eCookieStore\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e# Use SameSite=Strict for all cookies to help protect against CSRF\u003c/span\u003e\n    \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eaction_dispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecookies_same_site_protection\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"ss\"\u003e:strict\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will add in the necessary \u003ca href=\"https://guides.rubyonrails.org/rails_on_rack.html#action-dispatcher-middleware-stack\"\u003emiddleware\u003c/a\u003e for working with sessions and cookies\nin our application.\u003c/p\u003e\n\n\u003cp\u003eThe last line adds some additional security to our cookies by also\nconfiguring the \u003ccode\u003eSameSite\u003c/code\u003e policy for our cookies as \u003ccode\u003estrict\u003c/code\u003e, which means\nthat the browser will only send these cookies in requests to websites that are\non the same domain. This is a relatively new feature, but an important one for\nsecurity! You can read more about \u003ca href=\"https://web.dev/samesite-cookies-explained/\"\u003e\u003ccode\u003eSameSite\u003c/code\u003e cookies here\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eTo access the \u003ccode\u003ecookies\u003c/code\u003e hash in our controllers, we also need to include the\n\u003ccode\u003eActionController::Cookies\u003c/code\u003e module in our \u003ccode\u003eApplicationController\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/application_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplicationController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActionController\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eAPI\u003c/span\u003e\n  \u003cspan class=\"kp\"\u003einclude\u003c/span\u003e \u003cspan class=\"no\"\u003eActionController\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eCookies\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSince all of our controllers inherit from \u003ccode\u003eApplicationController\u003c/code\u003e, adding this\nmodule here means all of our controllers will be able to work with cookies.\u003c/p\u003e\n\n\u003ch2\u003eWorking With Sessions and Cookies\u003c/h2\u003e\n\n\u003cp\u003eWe've included some starter code for a Rails API application with this lesson so\nyou can see a basic example of working with sessions and cookies. The\nconfiguration is already done, so we can work on inspecting sessions and cookies\nin the controller and see how we can interact with them in our code.\u003c/p\u003e\n\n\u003cp\u003eTo set up and run the Rails application, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, in the browser, make a request to \u003ccode\u003ehttp://localhost:3000/sessions\u003c/code\u003e. This\nwill run the code in our \u003ccode\u003eSessionsController#index\u003c/code\u003e method:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n  \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:session_hello\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e||=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"World\"\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ecookies\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:cookies_hello\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e||=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"World\"\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003esession: \u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ecookies: \u003c/span\u003e\u003cspan class=\"n\"\u003ecookies\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eto_hash\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn this method, we're setting values on the \u003ccode\u003esession\u003c/code\u003e hash and the \u003ccode\u003ecookies\u003c/code\u003e\nhash, and serializing them in the response so we can view their values in the\nbrowser.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIf you haven't encountered \u003ca href=\"http://www.rubyinside.com/what-rubys-double-pipe-or-equals-really-does-5488.html\"\u003e\u003ccode\u003e||=\u003c/code\u003e\u003c/a\u003e syntax in Ruby, it's a\nshorthand way to assign a value if the current value is \u003ccode\u003enil\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e. So\nif \u003ccode\u003esession[:session_hello]\u003c/code\u003e has not already been assigned a value, it will be\nassigned a value of \"World\". Otherwise, it won't get assigned a new value.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe first time a user makes a request to this controller, Rails will include the\n\u003ccode\u003eSet-Cookie\u003c/code\u003e \u003cstrong\u003eresponse header\u003c/strong\u003e with our sessions and cookies values, which\nwill instruct the browser to store these values in memory and send them with any\nfuture requests on this domain.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/cookies-in-rails-api/set-cookie-headers.png\" alt=\"set-cookie headers\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAfter making the request, you should see something like this in the browser:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"session\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"session_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"2ed452b4e28ca49ce32749fc67571ced\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"session_hello\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"World\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"cookies\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"cookies_hello\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"World\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"_session_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"AT26hlXMDW5EroI89/piWHiTDRF4SQvtuvoeNZYBYNaApyLvl8a1MvhnTsLfTK57QeJCMM6YkyFqaSWguqVMWljwl+ZmELmT/wHXfFJiGL0kvadecPhyXup+p7kO66HAFVBSTOKefbkhDtQz8Ex5pHW+UBAhFfoDnDZ9/4QgST3LPyGHKf4Pgix+JwOFU9MqeFQqXZTITRW7DFi+aGDdrb1hUeIGZLuezO2QN3+TEu2xHMc=--HJwJL83oJZqcaIL1--snxu+v1esfT9YLOXUGxLYw==\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFrom this, we can see that the session and cookies hashes can both be used to\nstore key-value pairs of data. The entire session hash is actually stored in\nthat \u003ccode\u003e_session_id\u003c/code\u003e cookie, in a signed and encrypted format, which makes it\nimpossible for users to tamper with.\u003c/p\u003e\n\n\u003cp\u003eYou can view cookie information directly in the browser as well. In the\ndeveloper tools, find the \u003cstrong\u003eApplication\u003c/strong\u003e tab, and go to the \u003cstrong\u003eCookies\u003c/strong\u003e section\n(under \"Storage\" in the pane on the left). There, you'll find all the cookies\nfor our domain (\u003ccode\u003ehttp://localhost:3000\u003c/code\u003e):\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/cookies-in-rails-api/cookies-devtools.png\" alt=\"cookies in dev tools\"\u003e\u003c/p\u003e\n\n\u003cp\u003eCookies can be edited directly in the dev tools. Try changing the value of the\n\u003ccode\u003ecookies_hello\u003c/code\u003e key to something new. Then refresh the page in the browser to\nmake another request. If you try to edit the \u003ccode\u003e_session_id\u003c/code\u003e cookie, on the other\nhand, it will have no effect thanks to Rails security features like signing and\nencryption.\u003c/p\u003e\n\n\u003cp\u003eFinally, you can also view cookies by looking at the \u003cstrong\u003erequest headers\u003c/strong\u003e (under\nthe Network tab, click \"sessions\" then \"Headers\"):\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/cookies-in-rails-api/cookies-headers.png\" alt=\"cookies in headers\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eExplore\u003c/h2\u003e\n\n\u003cp\u003eTry adding a \u003ccode\u003ebyebug\u003c/code\u003e at the top of the \u003ccode\u003eSessionsController#index\u003c/code\u003e method:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebyebug\u003c/span\u003e\n  \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:session_hello\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e||=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"World\"\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ecookies\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:cookies_hello\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e||=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"World\"\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003esession: \u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ecookies: \u003c/span\u003e\u003cspan class=\"n\"\u003ecookies\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eto_hash\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eExperiment in the browser by changing the cookie values and making more requests\nto the server. Use the \u003ccode\u003ebyebug\u003c/code\u003e to see how changing these values in the browser\naffects what is available in the session and cookies hashes.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eRails has a lot of great functionality built in to work with cookies and sessions.\nWhen working with Rails in API mode, we need to add some additional configuration\nto get them working again.\u003c/p\u003e\n\n\u003cp\u003eCookies are an integral part of modern web applications; they help keep track of\n\u003cstrong\u003estateful\u003c/strong\u003e information in an inherently \u003cstrong\u003estateless\u003c/strong\u003e protocol by\nautomatically passing additional data with each request using the headers. We\ncan get a better sense of how cookies are being used by websites using the\nbrowser dev tools.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat configuration changes need to be made to enable session and cookie\nsupport in a Rails API application?\u003c/li\u003e\n\u003cli\u003eWhat are the two ways you can inspect a website's cookies using the browser\ndev tools?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/rails_on_rack.html#action-dispatcher-middleware-stack\"\u003eRails Middleware Stack\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/security.html#sessions\"\u003eRails Session Security\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://api.rubyonrails.org/classes/ActionDispatch/Session/CookieStore.html\"\u003eRails Session Cookie Configuration\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.dev/samesite-cookies-explained/\"\u003eSameSite Cookies Explained\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/docs/devtools/storage/cookies/\"\u003eChrome DevTools: Working With Cookies\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gc6aa273a72046118b38b7cd7b7a284ca"},{"id":483342,"title":"Cookies and Sessions Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-cookies-and-sessions-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-cookies-and-sessions-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-cookies-and-sessions-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-cookies-and-sessions-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the session hash to persist data across multiple requests\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll be building out a blog paywall feature by using the session\nhash to keep track of how many page views a user has made.\u003c/p\u003e\n\n\u003cp\u003eThere is some starter code in place for a Rails API backend and a React\nfrontend. To get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can work on this lab by running the tests with \u003ccode\u003elearn test\u003c/code\u003e. It will also be\nhelpful to see what's happening during the request/response cycle by running the\napp in the browser. You can run the Rails server with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd you can run React in another terminal with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou don't have to make any changes to the React code to get this lab working.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eOur app will keep track of how many blog posts a user has viewed by using the\n\u003ccode\u003esession\u003c/code\u003e hash. Each user can view a \u003cstrong\u003emaximum of three articles\u003c/strong\u003e before seeing\nthe paywall.\u003c/p\u003e\n\n\u003cp\u003eWhen a user makes a \u003ccode\u003eGET\u003c/code\u003e request to \u003ccode\u003e/articles/:id\u003c/code\u003e, the following should\nhappen:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIf this is the first request this user has made, set \u003ccode\u003esession[:page_views]\u003c/code\u003e to\nan initial value of 0.\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eHint\u003c/strong\u003e: consider using \u003ccode\u003e||=\u003c/code\u003e to set this initial value!\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eFor every request to \u003ccode\u003e/articles/:id\u003c/code\u003e, increment the value of\n\u003ccode\u003esession[:page_views]\u003c/code\u003e by 1.\u003c/li\u003e\n\u003cli\u003eIf the user has viewed 3 or fewer pages, render a JSON response with the\narticle data.\u003c/li\u003e\n\u003cli\u003eIf the user has viewed more than 3 pages, render a JSON response including an\nerror message, and a status code of 401 unauthorized.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/v4.1.4/action_controller_overview.html#accessing-the-session\"\u003eRails - Accessing the Session\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g5eda3417cea6d37eeb7c65becf681b5b"},{"id":483343,"title":"Authenticating Users","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-authenticating-users-readme\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-authenticating-users-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-authenticating-users-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDefine the term \"authentication\"\u003c/li\u003e\n\u003cli\u003eUnderstand how websites use login to authenticate users\u003c/li\u003e\n\u003cli\u003eFollow REST conventions for handling session data\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe've covered how cookies can be used to store data in a user's browser.\u003c/p\u003e\n\n\u003cp\u003eOne of the most common uses of cookies is for login. In this lesson, we'll cover\nhow to use the Rails session to log users in.\u003c/p\u003e\n\n\u003ch2\u003eAuthentication\u003c/h2\u003e\n\n\u003cp\u003eNearly every website in the world uses what we like to call the \"wristband\"\npattern. A lot of nightclubs use this pattern as well.\u003c/p\u003e\n\n\u003cp\u003eYou arrive at the club. The bouncer checks your ID. They put a wristband on your\nwrist (or stamp your hand). They let you into the club.\u003c/p\u003e\n\n\u003cp\u003eIf you leave and come back, the bouncer doesn't look at your ID, they just look\nfor your wristband. If you buy a drink, the bartender doesn't need to see your\nID, since your wristband proves you're old enough to buy alcohol.\u003c/p\u003e\n\n\u003cp\u003eYou arrive at \u003ca href=\"http://mail.google.com\"\u003egmail.com\u003c/a\u003e. You submit your username and\npassword. Google's servers check to see if your credentials are correct. If they\nare, Google's servers issue a cookie to your browser. If you visit another page\non gmail — or anywhere on google.com for that matter — your browser will show\nthe cookie to the server. The server verifies this cookie, and lets you load\nyour inbox.\u003c/p\u003e\n\n\u003cp\u003eThe term we use to describe this process is \u003cstrong\u003eauthentication\u003c/strong\u003e. When we talk\nabout authentication in our applications, we are describing how our application\ncan \u003cstrong\u003econfirm that our users are who they say they are\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch2\u003eHow This Looks in Rails\u003c/h2\u003e\n\n\u003cp\u003eLet's look at what the simplest possible login system might look like in a Rails\nAPI/React application.\u003c/p\u003e\n\n\u003cp\u003eThe flow will look like this:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe user navigates to a login form on the React frontend.\u003c/li\u003e\n\u003cli\u003eThe user enters their username. There is no password (for now).\u003c/li\u003e\n\u003cli\u003eThe user submits the form, POSTing to \u003ccode\u003e/login\u003c/code\u003e on the Rails backend.\u003c/li\u003e\n\u003cli\u003eIn the create action of the \u003ccode\u003eSessionsController\u003c/code\u003e we set a cookie on the user's\nbrowser by writing their user ID into the session hash.\u003c/li\u003e\n\u003cli\u003eThereafter, the user is logged in. \u003ccode\u003esession[:user_id]\u003c/code\u003e will hold their user ID.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eLet's write a \u003ccode\u003eSessionsController\u003c/code\u003e to handle our login route. This controller has\none action, \u003ccode\u003ecreate\u003c/code\u003e, which we'll map in \u003ccode\u003eroutes.rb\u003c/code\u003e for \u003ccode\u003ePOST\u003c/code\u003e requests to\n\u003ccode\u003e/login\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/login\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"sessions#create\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTypically, your \u003ccode\u003ecreate\u003c/code\u003e method would look up a user in the database, verify\ntheir login credentials, and then store the authenticated user's id in the\nsession:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSessionsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eusername: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere's no way for the server to log you out right now. To log yourself out,\nyou'll have to delete the cookie from your browser.\u003c/p\u003e\n\n\u003cp\u003eHere's what the login component might look like on the frontend:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eLogin\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"nx\"\u003eonLogin\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esetUsername\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleSubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epreventDefault\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/login\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n      \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"nx\"\u003eusername\u003c/span\u003e \u003cspan class=\"p\"\u003e}),\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eonLogin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e \u003cspan class=\"na\"\u003eonSubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleSubmit\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\n        \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"text\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eusername\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eonChange\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003esetUsername\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etarget\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"submit\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eLogin\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen the user submits the form, they'll be logged in! Our \u003ccode\u003eonLogin\u003c/code\u003e callback function\nwould handle saving the logged in user's details in state.\u003c/p\u003e\n\n\u003ch2\u003eStaying Logged In\u003c/h2\u003e\n\n\u003cp\u003eUsing the wristband analogy, in the example above, we've shown our ID at the\ndoor (\u003ccode\u003eusername\u003c/code\u003e) and gotten our wristband (\u003ccode\u003esession[:user_id]\u003c/code\u003e) from the\nbackend. So our backend has a means of identifying us with each request using\nthe session hash.\u003c/p\u003e\n\n\u003cp\u003eOur frontend also knows who we are, because our user data was saved in state after\nlogging in.\u003c/p\u003e\n\n\u003cp\u003eWhat happens now if we leave the club and try to come back in, by refreshing the\npage on the frontend? Well, our \u003cstrong\u003efrontend\u003c/strong\u003e doesn't know who we are any more,\nsince we lose our frontend state after refreshing the page. Our \u003cstrong\u003ebackend\u003c/strong\u003e does\nknow who we are though — so we need a way of getting the user data from the\nbackend into state when the page first loads.\u003c/p\u003e\n\n\u003cp\u003eHere's how we might accomplish that. First, we need a route to retrieve the user's\ndata from the database using the session hash:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/me\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"users#show\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd a controller action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUsersController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n    \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Not authorized\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, we can try to log the user in from the frontend as soon as the application\nloads:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esetUser\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n  \u003cspan class=\"nx\"\u003euseEffect\u003c/span\u003e\u003cspan class=\"p\"\u003e(()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/me\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eok\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003esetUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"p\"\u003e[]);\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh2\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eWelcome, \u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eusername\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e!\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh2\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eLogin\u003c/span\u003e \u003cspan class=\"na\"\u003eonLogin\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003esetUser\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is the equivalent of letting someone use their wristband to come back into\nthe club.\u003c/p\u003e\n\n\u003ch2\u003eLogging Out\u003c/h2\u003e\n\n\u003cp\u003eThe log out flow is even simpler. We can add a new route for logging out:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003edelete\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/logout\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"sessions#destroy\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen add a \u003ccode\u003eSessionsController#destroy\u003c/code\u003e method, which will clear the username\nout of the session:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edestroy\u003c/span\u003e\n  \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edelete\u003c/span\u003e \u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehead\u003c/span\u003e \u003cspan class=\"ss\"\u003e:no_content\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere's how that might look in the frontend:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eNavbar\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"nx\"\u003eonLogout\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleLogout\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/logout\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eDELETE\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}).\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e(()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eonLogout\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003eonClick\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleLogout\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eLogout\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe \u003ccode\u003eonLogout\u003c/code\u003e callback function would handle removing the information about the\nuser from state.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eAt its base, login is very simple: the user provides you with credentials by\nfilling out a form, you verify those credentials and set a token in the\n\u003ccode\u003esession\u003c/code\u003e. In this example, our token was their user id. We can also log users\nout by removing their user ID from the session.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eIn the login and authentication flow you learned in this lesson for Rails\nAPI/React applications, in what two places is authentication information\nstored?\u003c/li\u003e\n\u003cli\u003eIn the login and authentication flow you learned in this lesson, what\nsequence of events happens if the user refreshes the page?\u003c/li\u003e\n\u003c/ol\u003e","exportId":"authenticating-users"},{"id":483344,"title":"Authenticating Users Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-authenticating-users-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-authenticating-users-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-authenticating-users-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-authenticating-users-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the session hash to log in a user\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll continue working on the blog site and set up a basic login\nfeature.\u003c/p\u003e\n\n\u003cp\u003eThere is some starter code in place for a Rails API backend and a React frontend.\nTo get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can work on this lab by running the tests with \u003ccode\u003elearn test\u003c/code\u003e. It will also be\nhelpful to see what's happening during the request/response cycle by running the\napp in the browser. You can run the Rails server with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd you can run React in another terminal with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou don't have to make any changes to the React code to get this lab working.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eFor our basic login feature, we'll need the following functionality:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eA user can log in by providing their username in a form\u003c/li\u003e\n\u003cli\u003eA user can log out\u003c/li\u003e\n\u003cli\u003eA user can remain logged in, even after refreshing the page\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWe'll need to create the routes and controller methods to handle each of these features. Let's get started!\u003c/p\u003e\n\n\u003ch3\u003eSessions\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eGenerate these routes:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003ePOST /login\u003c/code\u003e: run the \u003ccode\u003eSessionsController#create\u003c/code\u003e method\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eDELETE /logout\u003c/code\u003e: run the \u003ccode\u003eSessionsController#destroy\u003c/code\u003e method\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCreate a sessions controller.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eNote:\u003c/strong\u003e If you use the generators to generate your controllers, be sure to\npass the \u003ccode\u003e--no-test-framework\u003c/code\u003e flag to avoid generating unneeded files:\n\u003ccode\u003erails g controller Sessions --no-test-framework\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMake a \u003ccode\u003eSessionsController#create\u003c/code\u003e method. It should:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eFind a user in the database using the username from \u003ccode\u003eparams\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eSave the user's ID to the session hash\u003c/li\u003e\n\u003cli\u003eReturn the user as a JSON object\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMake a \u003ccode\u003eSessionsController#destroy\u003c/code\u003e method. It should:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRemove the user ID from the session hash\u003c/li\u003e\n\u003cli\u003eReturn an empty response with a 204 No Content status code\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eUsers\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eGenerate these routes:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eGET /me\u003c/code\u003e: run the \u003ccode\u003eUsersController#show\u003c/code\u003e method\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCreate a users controller.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eNote:\u003c/strong\u003e If you use the generators to generate your controllers, be sure to\npass the \u003ccode\u003e--no-test-framework\u003c/code\u003e flag to avoid generating unneeded files:\n\u003ccode\u003erails g controller Users --no-test-framework\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMake a \u003ccode\u003eUsersController#show\u003c/code\u003e method. It should:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eFind a user in the database using the user id from the session hash\u003c/li\u003e\n\u003cli\u003eReturn the user as a JSON object\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gfd0ac6a036eb0fcd2992aab69d53e7e8"},{"id":483345,"title":"Authorizing Requests","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-authorizing-requests-readme\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-authorizing-requests-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-authorizing-requests-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand the difference between \u003cem\u003eauthentication\u003c/em\u003e and \u003cem\u003eauthorization\u003c/em\u003e\u003c/li\u003e\n\u003cli\u003eRestrict access to routes to authorized users only\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSo far, we've been talking about how to \u003cstrong\u003eauthenticate\u003c/strong\u003e users, i.e., how to\nconfirm that a user is who they say they are. We've been using their username as\nour means of authentication; in the future, we'll also add a password to our\nauthentication process.\u003c/p\u003e\n\n\u003cp\u003eIn addition to \u003cstrong\u003eauthentication\u003c/strong\u003e, most applications also need to implement\n\u003cstrong\u003eauthorization\u003c/strong\u003e: giving certain users permission to access specific resources.\nFor example, we might want \u003cstrong\u003eall\u003c/strong\u003e users to be able to browse blog posts, but\nonly \u003cstrong\u003eauthenticated\u003c/strong\u003e users to have access to premium features, like creating\ntheir own blog posts. In this lesson, we'll learn how we can use the session\nhash to authenticate users' requests, and give them explicit permission to\naccess certain routes in our application.\u003c/p\u003e\n\n\u003ch2\u003eFirst Pass: Manual Checks\u003c/h2\u003e\n\n\u003cp\u003eLet's say we have a \u003ccode\u003eDocumentsController\u003c/code\u003e. Its \u003ccode\u003eshow\u003c/code\u003e method looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003edocument\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edocument\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow let's add a new requirement: documents should only be shown to users when\nthey're logged in. From a technical perspective, what does it actually mean for\na user to \u003cem\u003elog in\u003c/em\u003e? When a user logs in, all we are doing is using cookies to\nadd their \u003ccode\u003e:user_id\u003c/code\u003e to the \u003ccode\u003esession\u003c/code\u003e hash.\u003c/p\u003e\n\n\u003cp\u003eThe first thing you might do is to add a \u003cstrong\u003eguard clause\u003c/strong\u003e as the first line of\n\u003ccode\u003eDocumentsController#show\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Not authorized\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einclude?\u003c/span\u003e \u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\n  \u003cspan class=\"n\"\u003edocument\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edocument\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUnless the session includes \u003ccode\u003e:user_id\u003c/code\u003e, we return an error. \u003ccode\u003estatus:\n:unauthorized\u003c/code\u003e will return the specified HTTP status code. In this case, if a\nuser isn't logged in, we return \u003ccode\u003e401 Unauthorized\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eRefactor\u003c/h2\u003e\n\n\u003cp\u003eThis code works fine, so you use it in a few places. Now your\n\u003ccode\u003eDocumentsController\u003c/code\u003e looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDocumentsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Not authorized\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einclude?\u003c/span\u003e \u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edocument\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edocument\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Not authorized\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einclude?\u003c/span\u003e \u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edocuments\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edocuments\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Not authorized\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einclude?\u003c/span\u003e \u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edocument\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eauthor_id: \u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Not authorized\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einclude?\u003c/span\u003e \u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edocument\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# code to update a document\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThat doesn't look so DRY. Wouldn't it be great if there were a way to ask Rails\nto run some code \u003cstrong\u003ebefore\u003c/strong\u003e any controller \u003cstrong\u003eaction\u003c/strong\u003e?\u003c/p\u003e\n\n\u003cp\u003eFortunately, Rails gives us a solution: \u003ca href=\"http://guides.rubyonrails.org/action_controller_overview.html#filters\"\u003e\u003ccode\u003ebefore_action\u003c/code\u003e\u003c/a\u003e. We can\nrefactor our code like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDocumentsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebefore_action\u003c/span\u003e \u003cspan class=\"ss\"\u003e:authorize\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edocument\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edocument\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edocuments\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edocuments\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edocument\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eauthor_id: \u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eauthorize\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Not authorized\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einclude?\u003c/span\u003e \u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe've moved our guard clause into its own method and added the following code at\nthe top of our \u003ccode\u003eDocumentsController\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ebefore_action\u003c/span\u003e \u003cspan class=\"ss\"\u003e:authorize\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is a call to the \u003ccode\u003eActionController\u003c/code\u003e class method \u003ccode\u003ebefore_action\u003c/code\u003e.\n\u003ccode\u003ebefore_action\u003c/code\u003e registers a filter. A filter is a method which runs \u003cstrong\u003ebefore\u003c/strong\u003e,\n\u003cstrong\u003eafter\u003c/strong\u003e, or \u003cstrong\u003earound\u003c/strong\u003e a controller's action. In this case, the filter runs\nbefore all \u003ccode\u003eDocumentsController\u003c/code\u003e's actions, and kicks requests out with\n\u003ccode\u003e401 Unauthorized\u003c/code\u003e unless they're logged in.\u003c/p\u003e\n\n\u003ch2\u003eSkipping Filters for Certain Actions\u003c/h2\u003e\n\n\u003cp\u003eWhat if we wanted to let anyone see a list of documents, but keep the\n\u003ccode\u003ebefore_action\u003c/code\u003e filter for other \u003ccode\u003eDocumentsController\u003c/code\u003e methods? We could do\nthis:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDocumentsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebefore_action\u003c/span\u003e \u003cspan class=\"ss\"\u003e:authorize\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eskip_before_action\u003c/span\u003e \u003cspan class=\"ss\"\u003e:authorize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis class method tells Rails to skip the \u003ccode\u003eauthorize\u003c/code\u003e filter only on the \u003ccode\u003eindex\u003c/code\u003e\naction:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eskip_before_action\u003c/span\u003e \u003cspan class=\"ss\"\u003e:authorize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eTo \u003cstrong\u003eauthorize\u003c/strong\u003e a user for specific actions, we can take advantage of the fact\nthat all logged in users in our application will have a \u003ccode\u003e:user_id\u003c/code\u003e saved in the\nsession hash. We can use a \u003ccode\u003ebefore_action\u003c/code\u003e filter to run some code that will\ncheck the \u003ccode\u003e:user_id\u003c/code\u003e in the session and only authorize users to run those\nactions if they are logged in.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat is the difference between authentication and authorization?\u003c/li\u003e\n\u003cli\u003eWhat Rails method can we use to add an authorization step before each of the\nactions in our controller? What Rails method can we use to exclude one or\nmore of the actions from the authorization step?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://guides.rubyonrails.org/action_controller_overview.html#filters\"\u003eAction Controller Overview: Filters\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"authorizing-requests"},{"id":483346,"title":"Authorizing Requests Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-authorizing-requests-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-authorizing-requests-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-authorizing-requests-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-authorizing-requests-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the session hash to authorize a user to perform actions\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll continue working on the blog site, and add some features that\nonly logged in users have access to.\u003c/p\u003e\n\n\u003cp\u003eThere is some starter code in place for a Rails API backend and a React frontend.\nTo get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can work on this lab by running the tests with \u003ccode\u003elearn test\u003c/code\u003e. It will also be\nhelpful to see what's happening during the request/response cycle by running the\napp in the browser. You can run the Rails server with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd you can run React in another terminal with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou don't have to make any changes to the React code to get this lab working.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eNow that we've got the basic login feature working, let's reward our logged\nin users with some bonus content that only users who have logged in will be able to access!\u003c/p\u003e\n\n\u003cp\u003eWe added a new attribute to our articles, \u003ccode\u003eis_member_only\u003c/code\u003e, to reflect whether\nthe article should only be available to authorized users of the site. We also\ncreated a new \u003ccode\u003eMembersOnlyArticlesController\u003c/code\u003e class to display these exclusive\narticles to our logged in users.\u003c/p\u003e\n\n\u003cp\u003eYour goal is to add the following functionality to the\n\u003ccode\u003eMembersOnlyArticlesController\u003c/code\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIf a user is not signed in, the \u003ccode\u003e#index\u003c/code\u003e and \u003ccode\u003e#show\u003c/code\u003e actions should return a\nstatus code of 401 unauthorized, along with an error message\u003c/li\u003e\n\u003cli\u003eIf the user is signed in, the \u003ccode\u003e#index\u003c/code\u003e and \u003ccode\u003e#show\u003c/code\u003e actions should return the\nJSON data for the members-only articles.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://guides.rubyonrails.org/action_controller_overview.html#filters\"\u003eAction Controller Overview: Filters\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"ge47f46274d5ae68f0ff5e9073fbe6529"},{"id":483347,"title":"Video: BCrypt","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-bcrypt\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-bcrypt\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-bcrypt/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/607607242/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/bcrypt-ruby/bcrypt-ruby\"\u003e\u003ccode\u003ebcrypt\u003c/code\u003e gem\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/bcrypt-ruby/bcrypt-ruby/blob/master/lib/bcrypt/password.rb#L64-L78\"\u003eThe \u003ccode\u003e==\u003c/code\u003e method in BCrypt\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-bcrypt"},{"id":483348,"title":"Video: Auth: Signup","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-auth--signup\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-auth--signup\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-auth--signup/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/609222184/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://api.rubyonrails.org/classes/ActiveModel/SecurePassword/ClassMethods.html#method-i-has_secure_password\"\u003e\u003ccode\u003ehas_secure_password\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-auth-signup"},{"id":483349,"title":"Video: Auth: Login","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-auth--login\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-auth--login\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-auth--login/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/609282660/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","exportId":"video-auth-login"},{"id":483350,"title":"Video: Authorization","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-authorization\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-authorization\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-authorization/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/609304574/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/action_controller_overview.html#filters\"\u003eRails Guides: Filters - \u003ccode\u003ebefore_action\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"video-authorization"},{"id":483351,"title":"Video: Authorization: Client","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-authorization--client\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-authorization--client\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-authorization--client/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/609305905/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","exportId":"video-authorization-client"},{"id":483352,"title":"Password Protection","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-password-protection-readme\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-password-protection-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-password-protection-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain why it's a bad idea to store passwords in plaintext\u003c/li\u003e\n\u003cli\u003eWrite code to store and verify hashed, salted passwords\u003c/li\u003e\n\u003cli\u003eUse Rails' \u003ccode\u003ehas_secure_password\u003c/code\u003e to store and authenticate user login\ncredentials securely\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIt's quite difficult to manage passwords securely. About once a month, there is\nanother big hack in the news, and all the passwords and credit cards from some\npoor site show up on the dark web.\u003c/p\u003e\n\n\u003cp\u003eRails provides us with tools to store passwords securely so that even if our\ndatabase is compromised, no one can gain access to users' actual passwords.\u003c/p\u003e\n\n\u003ch2\u003eThe problem with passwords\u003c/h2\u003e\n\n\u003cp\u003eLet's imagine a \u003ccode\u003eSessionsController#create\u003c/code\u003e method that does very simple\nauthentication. It goes like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eusername: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epassword\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Invalid username or password\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe find the user in the database by their username, check to see if the provided\npassword is equal to the password stored in the database, and, if it is, set\n\u003ccode\u003euser_id\u003c/code\u003e in the \u003ccode\u003esession\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis is tremendously insecure because you then have to store all your users'\npasswords in the database, unencrypted.\u003c/p\u003e\n\n\u003cp\u003eNever do this.\u003c/p\u003e\n\n\u003cp\u003eEven if you don't care about the security of your site, people have a strong\ntendency to reuse passwords. That means that the inevitable security breach of\nyour site will leak passwords which some users also use for Gmail. Your \u003ccode\u003eusers\u003c/code\u003e\ntable probably has an \u003ccode\u003eemail\u003c/code\u003e column. This means that, if I'm a hacker, getting\naccess to your database has given me the Internet equivalent of the house keys\nand home address for some (probably surprisingly large) percentage of your\nusers.\u003c/p\u003e\n\n\u003ch2\u003eHashing Passwords\u003c/h2\u003e\n\n\u003cp\u003eSo how do we store passwords if we can't store passwords?\u003c/p\u003e\n\n\u003cp\u003eInstead of storing users' passwords in plain text, we store a hashed version of\nthem. A \u003cem\u003ehash\u003c/em\u003e is a \u003cem\u003efixed-length\u003c/em\u003e output computed by feeding a string to a\n\u003cem\u003ehash function\u003c/em\u003e. Hash functions have the property that they will always produce\nthe same output given the same input.\u003c/p\u003e\n\n\u003cp\u003eA helpful analogy for a hash function is making a smoothie. If I put the exact\nsame ingredients into the blender, I'll get the exact same smoothie every time.\nBut there's no way to reverse the operation, and get back the original\ningredients from the smoothie.\u003c/p\u003e\n\n\u003cp\u003eHash functions work in a similar way: given the same input, they'll always\nproduce the same output; and there's no way to reverse the output and recreate\nthe original input.\u003c/p\u003e\n\n\u003cp\u003eYou could even write a hash function yourself. Here's a very simple one:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# dumb_hash(input: string) -\u0026gt; number\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edumb_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ebytes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ereduce\u003c/span\u003e\u003cspan class=\"p\"\u003e(:\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis \u003ccode\u003edumb_hash\u003c/code\u003e function just finds the sum of the bytes that comprise the\nstring. It satisfies the criterion that the same string always produces the same\nresult. (It doesn't quite meet the \"fixed-length output\" requirement for hashes,\nbut for demo purposes, it'll do.)\u003c/p\u003e\n\n\u003cp\u003eWe could imagine using this function to avoid storing passwords in the database.\nOur \u003ccode\u003eUser\u003c/code\u003e model and \u003ccode\u003eSessionsController\u003c/code\u003e might look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/models/user.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# takes a plaintext password and stores a hashed version as a password_digest\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enew_password\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epassword_digest\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edumb_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enew_password\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# checks if the hashed plaintext password matches the password_digest\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eauthenticate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003edumb_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003epassword_digest\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# the hashing method\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edumb_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ebytes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ereduce\u003c/span\u003e\u003cspan class=\"p\"\u003e(:\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# app/controllers/sessions_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSessionsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eusername: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthenticate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n      \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Invalid username or password\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e \u003ca href=\"https://mitrev.net/ruby/2015/11/13/the-operator-in-ruby/\"\u003e\u003ccode\u003e\u0026amp;.\u003c/code\u003e\u003c/a\u003e is known in Ruby as the \"safe navigation\noperator\". If \u003ccode\u003euser\u003c/code\u003e is \u003ccode\u003enil\u003c/code\u003e, it will return \u003ccode\u003enil\u003c/code\u003e; if not, it will call the\n\u003ccode\u003e.authenticate\u003c/code\u003e method on \u003ccode\u003euser\u003c/code\u003e. It would be similar to writing\n\u003ccode\u003euser \u0026amp;\u0026amp; user.authenticate(params[:password])\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIn this world, we have saved the password hashes in a \u003ccode\u003epassword_digest\u003c/code\u003e column\nin the database. We are not storing the passwords themselves.\u003c/p\u003e\n\n\u003cp\u003eWith the code above, a user's password is set by calling\n\u003ccode\u003euser.password = *new_password*\u003c/code\u003e. Presumably, our \u003ccode\u003eUsersController\u003c/code\u003e would do\nthis, but we're not worrying about that for the moment.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003edumb_hash\u003c/code\u003e is, as its name suggests, a pretty dumb hash function to use for\nthis purpose. It's a poor choice because similar strings hash to similar values.\nIf my password was \u003ccode\u003eJoshua\u003c/code\u003e, you could log in as me by entering the password\n\u003ccode\u003eJnshub\u003c/code\u003e. Since 'n' is one less than 'o' and 'b' is one more than 'a', the\noutput of \u003ccode\u003edumb_hash\u003c/code\u003e would be the same. This is known as a \u003cem\u003ecollision\u003c/em\u003e. With\n\u003ccode\u003edumb_hash\u003c/code\u003e as our hashing function, there would be many, similar, variants of\nour \u003ccode\u003eJoshua\u003c/code\u003e password (many collisions) that could be used successfully to\naccess the account, making our authentication process much less secure.\u003c/p\u003e\n\n\u003cp\u003eUnfortunately, collisions are inevitable when you're writing a hash function,\nsince hash functions usually produce either a 32-bit or 64-bit number, and the\nspace of all possible strings is much larger than either \u003ccode\u003e2**32\u003c/code\u003e or \u003ccode\u003e2**64\u003c/code\u003e.\nFortunately, however, smart people who have thought about this a lot have\nwritten a lot of different hash functions that are well-suited to different\npurposes. And nearly all hash functions are designed with the quality that\nstrings that are similar, but not the same, will hash to significantly different\nvalues.\u003c/p\u003e\n\n\u003cp\u003eRuby internally uses \u003ca href=\"https://en.wikipedia.org/wiki/MurmurHash\"\u003eMurmurHash\u003c/a\u003e, which produces better results for\nthis:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"s1\"\u003e'Joshua'\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehash\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; 2365460548529352617\u003c/span\u003e\n\n\u003cspan class=\"s1\"\u003e'Jnshub'\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehash\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; -2645381839118209905\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut Murmur still isn't ideal, because while it does not produce collisions so\nreadily, it is still not difficult to produce them if that's what you're trying\nto do.\u003c/p\u003e\n\n\u003cp\u003eInstead, Rails uses a library called BCrypt. BCrypt is designed with these\nproperties in mind:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eBCrypt hashes similar strings to very different values.\u003c/li\u003e\n\u003cli\u003eIt is a \u003cem\u003ecryptographic hash\u003c/em\u003e. That means that, if you have an output in mind,\nfinding a string which produces that output is designed to be \"very\ndifficult.\" \"Very difficult\" means \"even if Google put all their computers on\nit, they couldn't do it.\"\u003c/li\u003e\n\u003cli\u003eBCrypt is designed to be slow. It is intentionally computationally expensive.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe last two features make BCrypt a particularly good choice for passwords. (2)\nmeans that, even if an attacker gets your database of hashed passwords, it is\nnot easy for them to turn a hash back into its original string. (3) means that,\neven if an attacker has a dictionary of common passwords to check against, it\nwill still take them a considerable amount of time to check for your password\nagainst that list.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://github.com/bcrypt-ruby/bcrypt-ruby\"\u003eBCrypt gem\u003c/a\u003e is open source, and their documentation has some\nexcellent examples that demonstrate this functionality. If you're interested in\nexploring more, their docs and source code are a great resource.\u003c/p\u003e\n\n\u003ch2\u003eSalt\u003c/h2\u003e\n\n\u003cp\u003eBut what if our attackers have done their homework?\u003c/p\u003e\n\n\u003cp\u003eSay I'm a hacker. I know I'm going to break into a bunch of sites and get their\npassword databases. I want to make that worth my while.\u003c/p\u003e\n\n\u003cp\u003eBefore I do all this breaking and entering, I'm going to find the ten million\nmost common passwords and hash them with BCrypt. I can do around 1,000 hashes\nper second, so that's about three hours. Maybe I'll do the top five hundred\nmillion just to be sure.\u003c/p\u003e\n\n\u003cp\u003eIt doesn't really matter that this is going to take long time to run — I'm only\ndoing it once. Let's call this mapping of strings to hash outputs a \u003ca href=\"https://en.wikipedia.org/wiki/Rainbow_table\"\u003e\"rainbow\ntable\"\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eNow, when I get your database, I just look and see if any of the passwords in it\nare in my rainbow table. If they are, then I know the password.\u003c/p\u003e\n\n\u003cp\u003eGoing back to our smoothie analogy, this would be the equivalent of someone\ntaking all the possible combinations of smoothie ingredients and running them\nthrough the blender to create a giant collection of smoothies. By tasting all\nthe smoothies, they could figure out which original ingredients were used to\nmake the smoothie they're trying to identify.\u003c/p\u003e\n\n\u003cp\u003eThe solution to the rainbow table problem is \u003cem\u003esalting\u003c/em\u003e our passwords. A salt is\na random string prepended to the password before hashing it. It's stored in\nplain text next to the password, so it's not a secret. But the fact that it's\nthere makes an attacker's life much more difficult: it's very unlikely that I\nconstructed my rainbow table with your particular salt in mind, so I'm back to\nrunning the hash algorithm over and over as I guess passwords. And, remember,\nBCrypt is designed to be expensive to run.\u003c/p\u003e\n\n\u003cp\u003eLet's update our \u003ccode\u003eUser\u003c/code\u003e model to use BCrypt:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Gemfile:\u003c/span\u003e\n\u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s1\"\u003e'bcrypt'\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# app/models/user.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eBase\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# generate a salted + hashed password and save it to password_digest\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enew_password\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esalt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBCrypt\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eEngine\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003egenerate_salt\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# =\u0026gt; $2a$12$UW5etUc/o1YL4sSdeTBPku\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epassword_digest\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBCrypt\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eEngine\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ehash_secret\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enew_password\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esalt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# =\u0026gt; $2a$12$UW5etUc/o1YL4sSdeTBPkueUWwNIPNdQNAwzuSGkS3L5coBKMMZHm\"\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# check the plaintext password against the salted + hashed password\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eauthenticate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# Salts generated by generate_salt are always 29 chars long.\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esalt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epassword_digest\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e28\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# compare the saved password_digest against the plaintext password by running the plaintext password through the same hashing function\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"no\"\u003eBCrypt\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eEngine\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ehash_secret\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esalt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epassword_digest\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOur \u003ccode\u003eusers.password_digest\u003c/code\u003e column really stores two values: the salt and the\nactual return value of BCrypt. We just concatenate them together in the column\nand use our knowledge of the length of salts — \u003ccode\u003egenerate_salt\u003c/code\u003e always produces\n29-character strings — to separate them.\u003c/p\u003e\n\n\u003cp\u003eAfter we've loaded the User, we find the salt which we previously stored in\ntheir \u003ccode\u003epassword_digest\u003c/code\u003e column. We run the password we were given in \u003ccode\u003eparams\u003c/code\u003e\nthrough BCrypt along with the salt we read from the database. If the results\nmatch, you're in. If they don't, no dice.\u003c/p\u003e\n\n\u003ch2\u003eRails Makes It Easier\u003c/h2\u003e\n\n\u003cp\u003eYou don't have to deal with all this yourself. Rails provides a method called\n\u003ccode\u003ehas_secure_password\u003c/code\u003e that you can use on your Active Record models to handle\nall of this. It looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_secure_password\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo use the \u003ccode\u003ehas_secure_password\u003c/code\u003e macro, you'll need to add \u003ccode\u003egem 'bcrypt'\u003c/code\u003e to\nyour Gemfile if it isn't there already.\u003c/p\u003e\n\n\u003cp\u003eWhen using \u003ca href=\"http://api.rubyonrails.org/classes/ActiveModel/SecurePassword/ClassMethods.html\"\u003e\u003ccode\u003ehas_secure_password\u003c/code\u003e\u003c/a\u003e, Rails will use the\n\u003ccode\u003ebcrypt\u003c/code\u003e gem to hash and salt all passwords on the \u003ccode\u003eUser\u003c/code\u003e model.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ca href=\"http://api.rubyonrails.org/classes/ActiveModel/SecurePassword/ClassMethods.html\"\u003e\u003ccode\u003ehas_secure_password\u003c/code\u003e\u003c/a\u003e method also provides two new\ninstance methods on your \u003ccode\u003eUser\u003c/code\u003e model: \u003ccode\u003epassword\u003c/code\u003e and \u003ccode\u003epassword_confirmation\u003c/code\u003e.\nThese methods don't correspond to database columns! Instead, to make these\nmethods work, your \u003ccode\u003eusers\u003c/code\u003e table \u003cstrong\u003emust\u003c/strong\u003e have a \u003ccode\u003epassword_digest\u003c/code\u003e column:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ecreate_table\u003c/span\u003e \u003cspan class=\"ss\"\u003e:users\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estring\u003c/span\u003e \u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estring\u003c/span\u003e \u003cspan class=\"ss\"\u003e:password_digest\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etimestamps\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThese two instance methods enable you to easily include password and password\nconfirmation fields in a signup (or password reset) form. \u003ccode\u003ehas_secure_password\u003c/code\u003e\nhandles these fields by adding a \u003ccode\u003ebefore_save\u003c/code\u003e hook to your model that compares\n\u003ccode\u003epassword\u003c/code\u003e and \u003ccode\u003epassword_confirmation\u003c/code\u003e. If they match (or if\n\u003ccode\u003epassword_confirmation\u003c/code\u003e is \u003ccode\u003enil\u003c/code\u003e), the user is saved and the hashed version of\nthe password is stored in the \u003ccode\u003epassword_digest\u003c/code\u003e column of the database, pretty\nmuch exactly like our example code before did.\u003c/p\u003e\n\n\u003cp\u003eUnder the hood, \u003ccode\u003ehas_secure_password\u003c/code\u003e calls upon an Active Record helper method,\n\u003ca href=\"https://apidock.com/rails/ActiveModel/Validations/HelperMethods/validates_confirmation_of\"\u003e\u003ccode\u003evalidates_confirmation_of\u003c/code\u003e\u003c/a\u003e. As such, as with other\nActive Record validator methods, when the fields don't match and the validation\nfails, an \u003ccode\u003eActiveRecord::RecordInvalid\u003c/code\u003e exception will be raised. You can handle\nthis exception by using \u003ccode\u003erescue\u003c/code\u003e or \u003ccode\u003erescue_from\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eAll together, the code implementing the signup functionality of our very secure\napp might look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eSignUp\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"nx\"\u003eonLogin\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esetUsername\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esetPassword\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003epasswordConfirmation\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esetPasswordConfirmation\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleSubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epreventDefault\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/signup\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n      \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003epassword_confirmation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003epasswordConfirmation\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e}),\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eonLogin\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e \u003cspan class=\"na\"\u003eonSubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleSubmit\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003elabel\u003c/span\u003e \u003cspan class=\"na\"\u003ehtmlFor\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"username\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eUsername:\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003elabel\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\n        \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"text\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"username\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eusername\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eonChange\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003esetUsername\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etarget\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003elabel\u003c/span\u003e \u003cspan class=\"na\"\u003ehtmlFor\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"password\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003ePassword:\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003elabel\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\n        \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"password\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"password\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003epassword\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eonChange\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003esetPassword\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etarget\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003elabel\u003c/span\u003e \u003cspan class=\"na\"\u003ehtmlFor\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"password_confirmation\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eConfirm Password:\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003elabel\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\n        \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"password\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"password_confirmation\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003epasswordConfirmation\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eonChange\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003esetPasswordConfirmation\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etarget\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"submit\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eSubmit\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/users_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUsersController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerrors: \u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efull_messages\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003euser_params\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epermit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:password_confirmation\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/sessions_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSessionsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eusername: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthenticate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n      \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Invalid username or password\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/models/user.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eBase\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_secure_password\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWhen dealing with users' passwords, it's important for security that we never\nstore passwords in our database directly in plain text. Instead, we can use a\ntrusted library like BCrypt to help keep our users' passwords safe.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat setup steps do you need to complete to use BCrypt in your Rails app?\u003c/li\u003e\n\u003cli\u003eWhat two things does BCrypt do to secure passwords?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/MurmurHash\"\u003eWikipedia — Murmur Hash\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Rainbow_table\"\u003eWikipedia — Rainbow Table\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.usenix.org/legacy/event/usenix99/provos/provos.pdf\"\u003eBCrypt USENIX paper\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://api.rubyonrails.org/classes/ActiveModel/SecurePassword/ClassMethods.html\"\u003eRails documentation — \u003ccode\u003ehas_secure_password\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"password-protection"},{"id":483353,"title":"Password Protection Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-password-protection-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-password-protection-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-password-protection-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-password-protection-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eImplement login and signup with a password\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003ehas_secure_password\u003c/code\u003e to hash and salt passwords\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe're going to make a Rails app that covers a simple authentication flow: users\ncan create accounts, log in, and log out.\u003c/p\u003e\n\n\u003cp\u003eThere is some starter code in place for a Rails API backend and a React frontend.\nTo get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can work on this lab by running the tests with \u003ccode\u003elearn test\u003c/code\u003e. It will also be\nhelpful to see what's happening during the request/response cycle by running the\napp in the browser. You can run the Rails server with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd you can run React in another terminal with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou don't have to make any changes to the React code to get this lab working.\u003c/p\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eOur app has three pages:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eA signup page, where the user enters their username, password, and password\nconfirmation.\u003c/li\u003e\n\u003cli\u003eA login page, where the user submits their username and password and are then\nlogged in.\u003c/li\u003e\n\u003cli\u003eA user homepage, which says, \"Welcome, ${username}!\"\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eUsers should not be able to log in if they enter an incorrect password.\u003c/p\u003e\n\n\u003cp\u003eNote: we're not covering password validations in this lab, so don't worry about\nthose. Password validation is hard to get right anyway — it's surprisingly easy\nto produce rules that decrease password security rather than enhance it.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eTo complete the lab and get the tests passing, you will need to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eCreate a User model, and migrations for a \u003ccode\u003eusers\u003c/code\u003e table with \u003ccode\u003eusername\u003c/code\u003e and\n\u003ccode\u003epassword_digest\u003c/code\u003e columns. Make sure to use \u003ccode\u003epassword_digest\u003c/code\u003e, not\n\u003ccode\u003epassword\u003c/code\u003e, in your migration, and to include the has_secure_password macro\nin your model.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eCreate a \u003ccode\u003eUsersController\u003c/code\u003e with a \u003ccode\u003ecreate\u003c/code\u003e method that responds to a \u003ccode\u003ePOST /signup\u003c/code\u003e request. It should: create a new user; save their hashed password in\nthe database; save the user's ID in the session hash; and return the user\nobject in the JSON response.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eAdd a \u003ccode\u003eshow\u003c/code\u003e method to your \u003ccode\u003eUsersController\u003c/code\u003e that responds to a \u003ccode\u003eGET /me\u003c/code\u003e\nrequest. If the user is authenticated, return the user object in the JSON\nresponse.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eCreate a Sessions controller with a \u003ccode\u003ecreate\u003c/code\u003e action for logging in that responds to a \u003ccode\u003ePOST /login\u003c/code\u003e request, and a\n\u003ccode\u003edestroy\u003c/code\u003e action for logging out that responds to a \u003ccode\u003eDELETE /logout\u003c/code\u003e request.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHappy coding!\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://api.rubyonrails.org/classes/ActiveModel/SecurePassword/ClassMethods.html\"\u003e\u003ccode\u003ehas_secure_password\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gafc3a4d2e43abaf2286e7dd0d8b355ec"},{"id":483354,"title":"Putting it All Together: Auth","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-putting-it-all-together-auth\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-putting-it-all-together-auth/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-putting-it-all-together-auth\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-putting-it-all-together-auth/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eAuthenticate a user with a username and password\u003c/li\u003e\n\u003cli\u003eAuthorize logged in users for specific actions\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eThis is the biggest lab yet for this phase, so make sure to set aside some time\nfor this one. It's set up with a few different checkpoints so that you can build\nout the features incrementally. By the end of this lab, you'll have built out\nfull authentication and authorization flow using sessions and cookies in Rails,\nso getting this lab under your belt will give you some good code to reference\nwhen you're building your next project with auth. Let's get started!\u003c/p\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eAs with other labs in this section, there is some starter code in place for a\nRails API backend and a React frontend. To get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can work on this lab by running the tests with \u003ccode\u003elearn test\u003c/code\u003e. It will also be\nhelpful to see what's happening during the request/response cycle by running the\napp in the browser. You can run the Rails server with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd you can run React in another terminal with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eFor all the deliverables below, if you use any Rails generators to create models\nor controllers, make sure to use the \u003ccode\u003e--no-test-framework\u003c/code\u003e flag to avoid\noverwriting the existing tests.\u003c/p\u003e\n\n\u003ch3\u003eModels\u003c/h3\u003e\n\n\u003cp\u003eCreate a \u003ccode\u003eUser\u003c/code\u003e model with the following attributes:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eusername\u003c/code\u003e that is a \u003ccode\u003estring\u003c/code\u003e type\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003epassword_digest\u003c/code\u003e that is a \u003ccode\u003estring\u003c/code\u003e type\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eimage_url\u003c/code\u003e that is a \u003ccode\u003estring\u003c/code\u003e type\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ebio\u003c/code\u003e that is a \u003ccode\u003estring\u003c/code\u003e type\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eYour \u003ccode\u003eUser\u003c/code\u003e model should also:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eincorporate the \u003ccode\u003ehas_secure_password\u003c/code\u003e macro to enable password encryption with\n\u003ccode\u003ebcrypt\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003evalidate the user's username to ensure that it is \u003cstrong\u003epresent\u003c/strong\u003e and \u003cstrong\u003eunique\u003c/strong\u003e\n(no two users can have the same username)\u003c/li\u003e\n\u003cli\u003ea user \u003cstrong\u003ehas many\u003c/strong\u003e recipes\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eNext, create a \u003ccode\u003eRecipe\u003c/code\u003e model with the following attributes:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ea recipe \u003cstrong\u003ebelongs to\u003c/strong\u003e a user\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003etitle\u003c/code\u003e that is a \u003ccode\u003estring\u003c/code\u003e type\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003einstructions\u003c/code\u003e that is a \u003ccode\u003etext\u003c/code\u003e type\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eminutes_to_complete\u003c/code\u003e that is an \u003ccode\u003einteger\u003c/code\u003e type\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAdd validations for the \u003ccode\u003eRecipe\u003c/code\u003e model:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003etitle\u003c/code\u003e must be present\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003einstructions\u003c/code\u003e must be present and at least 50 characters long\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eRun the migrations after creating your models.\u003c/p\u003e\n\n\u003cp\u003eEnsure that the tests for the models are passing before moving forward. To run\nthe tests for \u003cem\u003eonly\u003c/em\u003e the model files, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erspec spec/models\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eSign Up Feature\u003c/h3\u003e\n\n\u003cp\u003eAfter creating the models, the next step is building out a sign up feature.\u003c/p\u003e\n\n\u003cp\u003eHandle sign up by implementing a \u003ccode\u003ePOST /signup\u003c/code\u003e route. It should:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eBe handled in the \u003ccode\u003eUsersController\u003c/code\u003e with a \u003ccode\u003ecreate\u003c/code\u003e action\u003c/li\u003e\n\u003cli\u003eIn the \u003ccode\u003ecreate\u003c/code\u003e action, if the user is valid:\n\n\u003cul\u003e\n\u003cli\u003eSave a new user to the database with their username, encrypted password,\nimage URL, and bio\u003c/li\u003e\n\u003cli\u003eSave the user's ID in the session hash\u003c/li\u003e\n\u003cli\u003eReturn a JSON response with the user's ID, username, image URL, and bio; and\nan HTTP status code of 201 (Created)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIf the user is not valid:\n\n\u003cul\u003e\n\u003cli\u003eReturn a JSON response with the error message, and an HTTP status code of\n422 (Unprocessable Entity)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNote: Recall that we need to format our error messages in a way that makes it\neasy to display the information in our frontend. For this lab, because we are\nsetting up multiple validations on our \u003ccode\u003eUser\u003c/code\u003e and \u003ccode\u003eRecipe\u003c/code\u003e models, our error\nresponses need to be formatted in a way that accommodates multiple errors.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3\u003eAuto-Login Feature\u003c/h3\u003e\n\n\u003cp\u003eUsers can log into our app! 🎉 But we want them to \u003cstrong\u003estay\u003c/strong\u003e logged in when they\nrefresh the page, or navigate back to our site from somewhere else.\u003c/p\u003e\n\n\u003cp\u003eHandle auto-login by implementing a \u003ccode\u003eGET /me\u003c/code\u003e route. It should:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eBe handled in the \u003ccode\u003eUsersController\u003c/code\u003e with a \u003ccode\u003eshow\u003c/code\u003e action\u003c/li\u003e\n\u003cli\u003eIn the \u003ccode\u003eshow\u003c/code\u003e action, if the user is logged in (if their \u003ccode\u003euser_id\u003c/code\u003e is in the\nsession hash):\n\n\u003cul\u003e\n\u003cli\u003eReturn a JSON response with the user's ID, username, image URL, and bio; and\nan HTTP status code of 201 (Created)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIf the user is \u003cstrong\u003enot\u003c/strong\u003e logged in when they make the request:\n\n\u003cul\u003e\n\u003cli\u003eReturn a JSON response with an error message, and a status of 401\n(Unauthorized)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eMake sure the signup and auto-login features work as intended before moving\nforward. You can test the \u003ccode\u003eUsersController\u003c/code\u003e requests with RSpec:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erspec spec/requests/users_spec.rb\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou should also be able to test this in the React application by signing up via\nthe sign up form to check the \u003ccode\u003ePOST /signup\u003c/code\u003e route; and refreshing the page\nafter logging in, and seeing that you are still logged in to test the \u003ccode\u003eGET /me\u003c/code\u003e\nroute.\u003c/p\u003e\n\n\u003ch3\u003eLogin Feature\u003c/h3\u003e\n\n\u003cp\u003eNow that users can create accounts via the API, let's give them a way to log\nback into an existing account.\u003c/p\u003e\n\n\u003cp\u003eHandle login by implementing a \u003ccode\u003ePOST /login\u003c/code\u003e route. It should:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eBe handled in the \u003ccode\u003eSessionsController\u003c/code\u003e with a \u003ccode\u003ecreate\u003c/code\u003e action\u003c/li\u003e\n\u003cli\u003eIn the \u003ccode\u003ecreate\u003c/code\u003e action, if the user's username and password are authenticated:\n\n\u003cul\u003e\n\u003cli\u003eSave the user's ID in the session hash\u003c/li\u003e\n\u003cli\u003eReturn a JSON response with the user's ID, username, image URL, and bio\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIf the user's username and password are not authenticated:\n\n\u003cul\u003e\n\u003cli\u003eReturn a JSON response with an error message, and a status of 401\n(Unauthorized)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eMake sure this route works as intended by running \u003ccode\u003elearn test\u003c/code\u003e before moving\nforward. You should also be able to test this in the React application by\nlogging in via the login form.\u003c/p\u003e\n\n\u003ch3\u003eLogout Feature\u003c/h3\u003e\n\n\u003cp\u003eUsers can log into our app! 🎉 Now, let's give them a way to log out.\u003c/p\u003e\n\n\u003cp\u003eHandle logout by implementing a \u003ccode\u003eDELETE /logout\u003c/code\u003e route. It should:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eBe handled in the \u003ccode\u003eSessionsController\u003c/code\u003e with a \u003ccode\u003edestroy\u003c/code\u003e action\u003c/li\u003e\n\u003cli\u003eIn the \u003ccode\u003edestroy\u003c/code\u003e action, if the user is logged in (if their \u003ccode\u003euser_id\u003c/code\u003e is in\nthe session hash):\n\n\u003cul\u003e\n\u003cli\u003eRemove the user's ID from the session hash\u003c/li\u003e\n\u003cli\u003eReturn an empty response with an HTTP status code of 204 (No Content)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIf the user is \u003cstrong\u003enot\u003c/strong\u003e logged in when they make the request:\n\n\u003cul\u003e\n\u003cli\u003eReturn a JSON response with an error message, and a status of 401\n(Unauthorized)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eMake sure the login and logout features work as intended before moving forward.\nYou can test the \u003ccode\u003eSessionsController\u003c/code\u003e requests with RSpec:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erspec spec/requests/sessions_spec.rb\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou should also be able to test this in the React application by logging in to\ncheck the \u003ccode\u003ePOST /login\u003c/code\u003e route; and logging out with the logout button to test\nthe \u003ccode\u003eDELETE /logout\u003c/code\u003e route.\u003c/p\u003e\n\n\u003ch3\u003eRecipe List Feature\u003c/h3\u003e\n\n\u003cp\u003eUsers should only be able to view recipes on our site after logging in.\u003c/p\u003e\n\n\u003cp\u003eHandle recipe viewing by implementing a \u003ccode\u003eGET /recipes\u003c/code\u003e route. It should:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eBe handled in the \u003ccode\u003eRecipesController\u003c/code\u003e with a \u003ccode\u003eindex\u003c/code\u003e action\u003c/li\u003e\n\u003cli\u003eIn the \u003ccode\u003eindex\u003c/code\u003e action, if the user is logged in (if their \u003ccode\u003euser_id\u003c/code\u003e is in the\nsession hash):\n\n\u003cul\u003e\n\u003cli\u003eReturn a JSON response with an array of all recipes with their title,\ninstructions, and minutes to complete data along with a nested user object;\nand an HTTP status code of 201 (Created)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIf the user is \u003cstrong\u003enot\u003c/strong\u003e logged in when they make the request:\n\n\u003cul\u003e\n\u003cli\u003eReturn a JSON response with an error message, and a status of 401\n(Unauthorized)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eRecipe Creation Feature\u003c/h3\u003e\n\n\u003cp\u003eNow that users can log in, let's allow them to create new recipes!\u003c/p\u003e\n\n\u003cp\u003eHandle recipe creation by implementing a \u003ccode\u003ePOST /recipes\u003c/code\u003e route. It should:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eBe handled in the \u003ccode\u003eRecipesController\u003c/code\u003e with a \u003ccode\u003ecreate\u003c/code\u003e action\u003c/li\u003e\n\u003cli\u003eIn the \u003ccode\u003ecreate\u003c/code\u003e action, if the user is logged in (if their \u003ccode\u003euser_id\u003c/code\u003e is in the\nsession hash):\n\n\u003cul\u003e\n\u003cli\u003eSave a new recipe to the database if it is valid. The recipe should \u003cstrong\u003ebelong\nto\u003c/strong\u003e the logged in user, and should have title, instructions, and minutes to\ncomplete data provided from the params hash\u003c/li\u003e\n\u003cli\u003eReturn a JSON response with the title, instructions, and minutes to complete\ndata along with a nested user object; and an HTTP status code of 201\n(Created)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIf the user is \u003cstrong\u003enot\u003c/strong\u003e logged in when they make the request:\n\n\u003cul\u003e\n\u003cli\u003eReturn a JSON response with an error message, and a status of 401\n(Unauthorized)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIf the recipe is \u003cstrong\u003enot valid\u003c/strong\u003e:\n\n\u003cul\u003e\n\u003cli\u003eReturn a JSON response with the error messages, and an HTTP status code of\n422 (Unprocessable Entity)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAfter finishing the \u003ccode\u003eRecipeController\u003c/code\u003e features, you're done! Make sure to check\nyour work. You should be able to run the full test suite now with \u003ccode\u003elearn test\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eYou should also be able to test this in the React application by creating a new\nrecipe with the recipe form, and viewing a list of recipes.\u003c/p\u003e","exportId":"g3b4f39132eabdae42a9d54c5162fbd97"},{"id":483355,"title":"[Optional] JWT Auth in Redux and Rails","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-jwt-auth\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-jwt-auth/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-jwt-auth\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-jwt-auth/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: This optional assignment shows an alternative approach to using\nthe built-in session feature in Rails. It was originally written by an\ninstructor some time ago, and doesn't follow the same application structure\nyou've seen in other labs in this phase. Depending on your application's\narchitecture, this approach may be easier or more difficult to implement. The\nbenefit to JWT authentication and not using cookies/sessions for authentication\nis that it allows you truly treat your React and Rails applications as separate\napplications that don't need to be hosted on the same domain. If you have\nseparate repositories for your Rails API and React frontend, and plan on\ndeploying to separate hosting services, this approach will be easier to\nimplement. Otherwise, you're likely better off sticking with sessions and\ncookies!\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eSecond disclaimer\u003c/strong\u003e: This is a sample application and walks through \u003cem\u003eone\u003c/em\u003e\npossible auth implementation. It does not cover everything there is to know\nabout auth and is intended as an introduction. Please do not blindly copy/paste\nthe code here. Use this as a guide to get started.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eThird disclaimer\u003c/strong\u003e: there are tradeoffs to every auth implementation. To\nsecure our application further, we should set our tokens to expire and make sure\nour app is being served over \u003ca href=\"https://en.wikipedia.org/wiki/HTTPS\"\u003eHTTPS\u003c/a\u003e.\nFurthermore, there are some\n\u003ca href=\"https://stormpath.com/blog/where-to-store-your-jwts-cookies-vs-html5-web-storage\"\u003etradeoffs to storing JWTs in browser \u003ccode\u003elocalStorage\u003c/code\u003e\u003c/a\u003e.\n\u003ca href=\"https://stackoverflow.com/questions/35291573/csrf-protection-with-json-web-tokens/35347022#35347022\"\u003eThis StackOverflow post has a concise summary of the benefits/tradeoffs about where/how to store tokens client-side\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eWith that out of the way, here begins our journey:\u003c/p\u003e\n\n\u003ch2\u003eRAILS BCrypt, JWT 🔐\u003c/h2\u003e\n\n\u003ch3\u003eBuilding Our Server\u003c/h3\u003e\n\n\u003cp\u003eThis section will walk through building a rails server. Let's create our app\nwith:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails new backend_project_name \u003cspan class=\"nt\"\u003e--api\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe're going to need a few gems in our \u003ca href=\"https://learning.flatironschool.com/server/Gemfile\"\u003eGemfile\u003c/a\u003e so let's go ahead and\nadd them. \u003ccode\u003ecd\u003c/code\u003e into your project directory and run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle add jwt\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle add active_model_serializers\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle add faker\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf you get a gem not found error, try manually adding them to your\n\u003ca href=\"https://learning.flatironschool.com/server/Gemfile\"\u003eGemfile\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eDon't forget to uncomment \u003ccode\u003erack-cors\u003c/code\u003e and \u003ccode\u003ebcrypt\u003c/code\u003e from your\n\u003ca href=\"https://learning.flatironschool.com/server/Gemfile\"\u003eGemfile\u003c/a\u003e as well.\u003c/p\u003e\n\n\u003cp\u003eCall \u003ccode\u003ebundle install\u003c/code\u003e. Your \u003ca href=\"https://learning.flatironschool.com/server/Gemfile\"\u003eGemfile\u003c/a\u003e should look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003esource\u003c/span\u003e \u003cspan class=\"s1\"\u003e'https://rubygems.org'\u003c/span\u003e\n\u003cspan class=\"n\"\u003egit_source\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:github\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003erepo\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"https://github.com/\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"n\"\u003erepo\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e.git\"\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eruby\u003c/span\u003e \u003cspan class=\"s1\"\u003e'2.7.4'\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# Bundle edge Rails instead: gem 'rails', github: 'rails/rails', branch: 'main'\u003c/span\u003e\n\u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s1\"\u003e'rails'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'~\u0026gt; 6.1.4'\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Use sqlite3 as the database for Active Record\u003c/span\u003e\n\u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s1\"\u003e'sqlite3'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'~\u0026gt; 1.4'\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Use Puma as the app server\u003c/span\u003e\n\u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s1\"\u003e'puma'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'~\u0026gt; 5.0'\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Build JSON APIs with ease. Read more: https://github.com/rails/jbuilder\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# gem 'jbuilder', '~\u0026gt; 2.7'\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Use Redis adapter to run Action Cable in production\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# gem 'redis', '~\u0026gt; 4.0'\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Use Active Model has_secure_password\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# gem 'bcrypt', '~\u0026gt; 3.1.7'\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# Use Active Storage variant\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# gem 'image_processing', '~\u0026gt; 1.2'\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# Reduces boot times through caching; required in config/boot.rb\u003c/span\u003e\n\u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s1\"\u003e'bootsnap'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'\u0026gt;= 1.4.4'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003erequire: \u003c/span\u003e\u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# Use Rack CORS for handling Cross-Origin Resource Sharing (CORS), making cross-origin AJAX possible\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# gem 'rack-cors'\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003egroup\u003c/span\u003e \u003cspan class=\"ss\"\u003e:development\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:test\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# Call 'byebug' anywhere in the code to stop execution and get a debugger console\u003c/span\u003e\n  \u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s1\"\u003e'byebug'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eplatforms: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:mri\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:mingw\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:x64_mingw\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003egroup\u003c/span\u003e \u003cspan class=\"ss\"\u003e:development\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s1\"\u003e'listen'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'~\u0026gt; 3.3'\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring\u003c/span\u003e\n  \u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s1\"\u003e'spring'\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# Windows does not include zoneinfo files, so bundle the tzinfo-data gem\u003c/span\u003e\n\u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s1\"\u003e'tzinfo-data'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eplatforms: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:mingw\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:mswin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:x64_mingw\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:jruby\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"jwt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"~\u0026gt; 2.2\"\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"active_model_serializers\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"~\u0026gt; 0.10.12\"\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"faker\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"~\u0026gt; 2.19\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eDon't forget to enable\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\"\u003eCORS\u003c/a\u003e in your app.\nUncomment the following in \u003ca href=\"https://learning.flatironschool.com/server/config/initializers/cors.rb\"\u003e\u003ccode\u003econfig/initializers/cors.rb\u003c/code\u003e\u003c/a\u003e. Don't forget\nto change the origins from \u003ccode\u003eexample.com\u003c/code\u003e to \u003ccode\u003e*\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eDepending on the use-case and needs of our API, we might want to limit access to\nour app. For example, if our React frontend is deployed to \u003ccode\u003emyCoolReactApp.com\u003c/code\u003e,\nwe might want to limit access to that domain only. If certain endpoints are\nmeant to be public, we can make those available but limit to \u003ccode\u003eGET\u003c/code\u003e requests, for\nexample.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/initializers/cors.rb\u003c/span\u003e\n\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einsert_before\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003eRack\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eCors\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eallow\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eorigins\u003c/span\u003e \u003cspan class=\"s1\"\u003e'*'\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eresource\u003c/span\u003e \u003cspan class=\"s1\"\u003e'*'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"ss\"\u003eheaders: :any\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"ss\"\u003emethods: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:get\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:post\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:put\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:patch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:delete\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:options\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:head\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can refer to the \u003ca href=\"https://github.com/cyu/rack-cors\"\u003erack-cors gem\u003c/a\u003e for more\ninformation about this file.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003ePlease don't forget to change these settings before deploying your app to the\ninternet. \u003cem\u003ePlease\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\n\u003ch3\u003eCreating Users\u003c/h3\u003e\n\n\u003cp\u003eRun the following commands to set up the \u003ccode\u003eUser\u003c/code\u003e model:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g model User username password_digest bio avatar\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g controller api/v1/users\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g serializer user\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAdd \u003ccode\u003ehas_secure_password\u003c/code\u003e to \u003ca href=\"https://learning.flatironschool.com/server/app/models/user.rb\"\u003e\u003ccode\u003eapp/models/user.rb\u003c/code\u003e\u003c/a\u003e. Recall that\n\u003ccode\u003ehas_secure_password\u003c/code\u003e comes from\n\u003ca href=\"https://api.rubyonrails.org/classes/ActiveModel/SecurePassword/ClassMethods.html#method-i-has_secure_password\"\u003e\u003ccode\u003eActiveModel\u003c/code\u003e and adds methods to set and authenticate against a BCrypt password\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_secure_password\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou might also want to add some\n\u003ca href=\"https://guides.rubyonrails.org/active_record_validations.html\"\u003evalidations\u003c/a\u003e to\nyour users:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_secure_password\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003euniqueness: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003ecase_sensitive: \u003c/span\u003e\u003cspan class=\"kp\"\u003efalse\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003chr\u003e\n\n\u003cp\u003eA \u003cstrong\u003e(Not So) Quick BCrypt Tangent\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cp\u003eRecall that \u003ccode\u003eBCrypt\u003c/code\u003e allows us to\n\u003ca href=\"https://en.wikipedia.org/wiki/Salt_(cryptography)\"\u003esalt\u003c/a\u003e users' plaintext\npasswords before running them through a\n\u003ca href=\"https://en.wikipedia.org/wiki/Cryptographic_hash_function\"\u003ehashing function\u003c/a\u003e. A\nhashing function is, basically, a \u003cem\u003eone way\u003c/em\u003e function. Similar to putting\nsomething in a meat grinder: we cannot \u003cem\u003efeasibly\u003c/em\u003e reconstruct something that's\nbeen ground up by a meat grinder. We then store these passwords that have been\n'digested' by \u003ccode\u003eBCrypt\u003c/code\u003e in our database.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003ca href=\"https://blog.mozilla.org/webdev/2012/06/08/lets-talk-about-password-storage/\"\u003eNever ever ever store your users' plaintext passwords in your database\u003c/a\u003e.\nIt's bad form and should be avoided at all costs.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eLet's take a look at some of the functionality provided by \u003ccode\u003eBCrypt\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# in rails console\u003c/span\u003e\n\u003cspan class=\"no\"\u003eBCrypt\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003ePassword\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'P@ssw0rd'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; \"$2a$10$D0iXNNy/5r2YC5GC4ArGB.dNL6IpUzxH3WjCewb3FM8ciwsHBt0cq\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ccode\u003eBCrypt::Password\u003c/code\u003e\n\u003ca href=\"https://github.com/codahale/bcrypt-ruby/blob/master/lib/bcrypt/password.rb#L23\"\u003einherits from the Ruby \u003ccode\u003eString\u003c/code\u003e class\u003c/a\u003e\nand has its own\n\u003ca href=\"https://github.com/codahale/bcrypt-ruby/blob/master/lib/bcrypt/password.rb#L65\"\u003e== instance method\u003c/a\u003e\nthat allows us to run a plaintext password through \u003ccode\u003eBCrypt\u003c/code\u003e \u003cem\u003eusing the same\nsalt\u003c/em\u003e and compare it against an already digested password:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# in rails console\u003c/span\u003e\n\u003cspan class=\"n\"\u003esalted_pw\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBCrypt\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003ePassword\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'P@ssw0rd'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; \"$2a$10$YQvJPemUzm8IdCCaHxiOOes6HMEHda/.Hl60cUoYb4X4fncgT8ubG\"\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003esalted_pw\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eclass\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; BCrypt::Password\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003esalted_pw\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'P@ssw0rd'\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; true\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ccode\u003eBCrypt\u003c/code\u003e also provides a method that will take a stringified \u003ccode\u003epassword_digest\u003c/code\u003e\nand turn it into an instance of \u003ccode\u003eBCrypt::Password\u003c/code\u003e, allowing us to call the\nover-written \u003ccode\u003e==\u003c/code\u003e method.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# in rails console\u003c/span\u003e\n\u003cspan class=\"n\"\u003esample_digest\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epassword_digest\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; \"$2a$10$SJiIJnmQJ/A4z4fFG5EuE.aOoCjacFuQMVpVzQnhPSJKYLFCoqmWy\"\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003esample_digest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eclass\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; String\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003esample_digest\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'P@ssword'\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#  =\u0026gt; false\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ebcrypt_sample_digest\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBCrypt\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003ePassword\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esample_digest\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; \"$2a$10$dw4sYcbLXc8XRX6YGc7ve.ot6LbYevMbSpFQZUaa8tm5NI8cxBPwa\"\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ebcrypt_sample_digest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eclass\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; BCrypt::Password\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ebcrypt_sample_digest\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'P@ssw0rd'\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; true\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cimg src=\"https://media.giphy.com/media/26ufdipQqU2lhNA4g/giphy.gif\" alt=\"mind blown\"\u003e\u003c/p\u003e\n\n\u003cp\u003eWe have no way of storing instances of \u003ccode\u003eBCrypt::Password\u003c/code\u003e in our database.\nInstead, we're storing users' password digests \u003cstrong\u003e\u003ca href=\"https://learning.flatironschool.com/server/db/schema.rb\"\u003eas strings\u003c/a\u003e\u003c/strong\u003e. If we\nwere to build our own \u003ccode\u003eUser#authenticate\u003c/code\u003e method using \u003ccode\u003eBCrypt\u003c/code\u003e, it might look\nsomething like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eauthenticate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eplaintext_password\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"no\"\u003eBCrypt\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003ePassword\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epassword_digest\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eplaintext_password\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# in rails console\u003c/span\u003e\n\n\u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthenticate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'not my password'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; false\u003c/span\u003e\n\n\u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthenticate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'P@ssw0rd'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; #\u0026lt;User id: 21, username: \"sylviawoods\", password_digest: \"$2a$10$dw4sYcbLXc8XRX6YGc7ve.ot6LbYevMbSpFQZUaa8tm...\", avatar: nil, created_at: \"2018-08-31 02:11:15\", updated_at: \"2018-08-31 02:11:15\", bio: \"'Sylvia Woods was an American restaurateur who founded the sould food restaurant Sylvia's in Harlem on Lenox Avenue, New York City in 1962. She published two cookbooks and was an important figure in the community.\"\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eInstead of creating our own \u003ccode\u003eUser#authenticate\u003c/code\u003e method, we can use\n\u003ca href=\"https://api.rubyonrails.org/classes/ActiveModel/SecurePassword/ClassMethods.html#method-i-has_secure_password\"\u003e\u003ccode\u003eActiveModel#has_secure_password\u003c/code\u003e\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_secure_password\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cimg src=\"https://media.giphy.com/media/l4Jz3a8jO92crUlWM/giphy.gif\" alt=\"salt bae\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eEnd of BCrypt Tangent\u003c/strong\u003e.\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cp\u003eLet's add a \u003ccode\u003ecreate\u003c/code\u003e method to our \u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/users_controller.rb\"\u003e\u003ccode\u003eUsersController\u003c/code\u003e\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApi::V1::UsersController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003euser: \u003c/span\u003e\u003cspan class=\"no\"\u003eUserSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'failed to create user'\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003euser_params\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003epermit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:bio\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:avatar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can use the\n\u003ca href=\"https://gist.github.com/mlanett/a31c340b132ddefa9cca\"\u003ebuilt in Rails HTTP status code symbols\u003c/a\u003e\nwhen sending responses to the client; \u003ccode\u003estatus: :unprocessable_entity\u003c/code\u003e, for instance.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNeed a refresher on\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\"\u003eHTTP Status Codes\u003c/a\u003e?\nCheck out \u003ca href=\"http://httpstatusrappers.com/\"\u003ehttp://httpstatusrappers.com/\u003c/a\u003e!\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAnd update our \u003ca href=\"https://learning.flatironschool.com/server/app/serializers/user_serializer.rb\"\u003e\u003ccode\u003eUserSerializer\u003c/code\u003e\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUserSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:avatar\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:bio\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext let's add the routes we'll need for our server. In\n\u003ca href=\"https://learning.flatironschool.com/server/config/routes.rb\"\u003e\u003ccode\u003econfig/routes.rb\u003c/code\u003e\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edraw\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003enamespace\u003c/span\u003e \u003cspan class=\"ss\"\u003e:api\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enamespace\u003c/span\u003e \u003cspan class=\"ss\"\u003e:v1\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:users\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n      \u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/login'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'auth#create'\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/profile'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'users#profile'\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTake some time to test this either in\n\u003ca href=\"https://www.getpostman.com/apps\"\u003ePostman\u003c/a\u003e or with JavaScript fetch:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://localhost:3000/api/v1/users\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eAccept\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n    \u003cspan class=\"na\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"na\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003esylviawoods\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"na\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ewhatscooking\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"na\"\u003ebio\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eSylvia Woods was an American restaurateur who founded the sould food restaurant Sylvia's in Harlem on Lenox Avenue, New York City in 1962. She published two cookbooks and was an important figure in the community.\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"na\"\u003eavatar\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttps://upload.wikimedia.org/wikipedia/commons/4/49/Syvia_of_Sylvia%27s_reaturant_N.Y.C_%28cropped%29.jpg\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}),\u003c/span\u003e\n\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e if you're using Postman and your formatting is set to \"raw and JSON\",\nremember to use double quotes (\"\") in both keys and values in the request.\u003c/p\u003e\n\n\u003cp\u003eImportant! \u003cstrong\u003eMake Sure You Can POST and Create a New User Before Proceeding\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://media.giphy.com/media/pcPs6v6fhE7Ru/giphy.gif\" alt=\"intermission\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eJSON Web Tokens (JWT)\u003c/h3\u003e\n\n\u003cp\u003eToken-based authentication is \u003cstrong\u003estateless\u003c/strong\u003e. \u003cem\u003eWe are not storing any information\nabout a logged in user on the server\u003c/em\u003e (which also means we don't need a model or\ntable for our user sessions). No stored information means our application can\nscale and add more machines as necessary without worrying about where a user is\nlogged in. Instead, the client (browser) stores a token and sends that token\nalong with every authenticated request. Instead of storing a plaintext username,\nor user_id, we can encode user data with JSON Web Tokens (JWT) and store that\nencoded token client-side.\u003c/p\u003e\n\n\u003ch4\u003eJWT Auth Flow\u003c/h4\u003e\n\n\u003cp\u003e\u003cimg src=\"https://i.stack.imgur.com/f2ZhM.png\" alt=\"jwt\"\u003e\u003c/p\u003e\n\n\u003cp\u003eHere is the JWT authentication flow for logging in:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eAn already existing user requests access with their username and password\u003c/li\u003e\n\u003cli\u003eThe app validates these credentials\u003c/li\u003e\n\u003cli\u003eThe app gives a signed token to the client\u003c/li\u003e\n\u003cli\u003eThe client stores the token and presents it with every request. This token is\neffectively the user's access pass––it proves to our server that they are who\nthey claim to be.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eJWTs are composed of three strings separated by periods:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eaaaaaaaaaaaaaaa.bbbbbbbbbbbbbbbbbbbbb.ccccccccccccccccccc\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003eThe first part (\u003ccode\u003eaaaaaaaaaaaa\u003c/code\u003e) is the header\u003c/li\u003e\n\u003cli\u003eThe second part (\u003ccode\u003ebbbbbbbbbbbb\u003c/code\u003e) is the payload - the good stuff, like who\nthis person is, and their id in our database.\u003c/li\u003e\n\u003cli\u003eThe third part (\u003ccode\u003eccccccccccccc\u003c/code\u003e) is the signature. The signature is a hash of\nthe header and the payload. It is hashed with a secret key, that we will\nprovide (and should store in an environment variable using a gem like\n\u003ca href=\"https://github.com/laserlemon/figaro#getting-started\"\u003eFigaro\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHead on over to \u003ca href=\"http://jwt.io/#debugger\"\u003ejwt.io\u003c/a\u003e and see for yourself:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg width=\"750\" alt=\"JWTs\" src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-jwt-auth/jwt.png\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eEncoding and Decoding JWTs\u003c/h3\u003e\n\n\u003cp\u003eSince we've already added \u003ca href=\"https://github.com/jwt/ruby-jwt\"\u003e\u003ccode\u003egem jwt\u003c/code\u003e\u003c/a\u003e to our\n\u003ca href=\"https://learning.flatironschool.com/server/Gemfile\"\u003egemfile\u003c/a\u003e, let's explore some JWT methods by opening a \u003ccode\u003erails console\u003c/code\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eJWT.encode\u003c/code\u003e takes up to three arguments: a payload to encode, an application\nsecret of the user's choice, and an optional third that can be used to specify\nthe hashing algorithm used. Typically, we don't need to show the third. This\nmethod returns a JWT as a string.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eJWT.decode\u003c/code\u003e takes three arguments as well: a JWT as a string, an application\nsecret, and (optionally) a hashing algorithm.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#in rails console\u003c/span\u003e\n\u003cspan class=\"n\"\u003epayload\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003ebeef: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'steak'\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ejwt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eencode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'boeuf'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; \"eyJhbGciOiJIUzI1NiJ9.eyJiZWVmIjoic3RlYWsifQ._IBTHTLGX35ZJWTCcY30tLmwU9arwdpNVxtVU0NpAuI\"\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003edecoded_hash\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ejwt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'boeuf'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; [{\"beef\"=\u0026gt;\"steak\"}, {\"alg\"=\u0026gt;\"HS256\"}]\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edecoded_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; {\"beef\"=\u0026gt;\"steak\"}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eBuilding this functionality into our \u003ca href=\"https://learning.flatironschool.com/server/app/controllers/application_controller.rb\"\u003e\u003ccode\u003eApplicationController\u003c/code\u003e\u003c/a\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eGiven that many different controllers will need to\n\u003ca href=\"https://en.wikipedia.org/wiki/Authentication\"\u003eauthenticate\u003c/a\u003e and\n\u003ca href=\"https://en.wikipedia.org/wiki/Authorization\"\u003eauthorize\u003c/a\u003e\nusers––\u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/auth_controller.rb\"\u003e\u003ccode\u003eAuthController\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/users_controller.rb\"\u003e\u003ccode\u003eUsersController\u003c/code\u003e\u003c/a\u003e, etc — it makes sense to lift the\nfunctionality of encoding/decoding tokens to our top level\n\u003ca href=\"https://learning.flatironschool.com/server/app/controllers/application_controller.rb\"\u003e\u003ccode\u003eApplicationController\u003c/code\u003e\u003c/a\u003e. Recall that \u003cstrong\u003eall\u003c/strong\u003e\ncontrollers inherit from \u003ca href=\"https://learning.flatironschool.com/server/app/controllers/application_controller.rb\"\u003e\u003ccode\u003eApplicationController\u003c/code\u003e\u003c/a\u003e!\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplicationController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActionController\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eAPI\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eencode_token\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# payload =\u0026gt; { beef: 'steak' }\u003c/span\u003e\n    \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eencode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'my_s3cr3t'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# jwt string: \"eyJhbGciOiJIUzI1NiJ9.eyJiZWVmIjoic3RlYWsifQ._IBTHTLGX35ZJWTCcY30tLmwU9arwdpNVxtVU0NpAuI\"\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edecoded_token\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# token =\u0026gt; \"eyJhbGciOiJIUzI1NiJ9.eyJiZWVmIjoic3RlYWsifQ._IBTHTLGX35ZJWTCcY30tLmwU9arwdpNVxtVU0NpAuI\"\u003c/span\u003e\n\n    \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'my_s3cr3t'\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# JWT.decode =\u0026gt; [{ \"beef\"=\u0026gt;\"steak\" }, { \"alg\"=\u0026gt;\"HS256\" }]\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# [0] gives us the payload { \"beef\"=\u0026gt;\"steak\" }\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ca href=\"https://jwt.io/introduction/\"\u003eAccording to the JWT Documentation\u003c/a\u003e: Whenever the\nuser wants to access a protected route or resource, the user agent (browser in\nour case) should send the JWT, typically in the Authorization header using the\nBearer schema. The content of the header should look like the following:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eAuthorization: Bearer \u0026lt;token\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eThe corresponding \u003ccode\u003efetch\u003c/code\u003e request might look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://localhost:3000/api/v1/profile\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eGET\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eAuthorization\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e`Bearer \u0026lt;token\u0026gt;`\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eKnowing this, we can set up our server to anticipate a JWT sent along in request\nheaders, \u003cem\u003einstead\u003c/em\u003e of passing the token directly to\n\u003ccode\u003eApplicationController#decoded_token\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplicationController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActionController\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eAPI\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eencode_token\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# payload =\u0026gt; { beef: 'steak' }\u003c/span\u003e\n    \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eencode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'my_s3cr3t'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# jwt string: \"eyJhbGciOiJIUzI1NiJ9.eyJiZWVmIjoic3RlYWsifQ._IBTHTLGX35ZJWTCcY30tLmwU9arwdpNVxtVU0NpAuI\"\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eauth_header\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# { 'Authorization': 'Bearer \u0026lt;token\u0026gt;' }\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Authorization'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edecoded_token\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eauth_header\u003c/span\u003e\n      \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eauth_header\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e' '\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# headers: { 'Authorization': 'Bearer \u0026lt;token\u0026gt;' }\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ebegin\u003c/span\u003e\n        \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'my_s3cr3t'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ealgorithm: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'HS256'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e# JWT.decode =\u0026gt; [{ \"beef\"=\u0026gt;\"steak\" }, { \"alg\"=\u0026gt;\"HS256\" }]\u003c/span\u003e\n      \u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eDecodeError\u003c/span\u003e\n        \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eA few things to note about the code above:\u003c/p\u003e\n\n\u003cp\u003eThe\n\u003ca href=\"https://ruby-doc.org/core-2.2.0/doc/syntax/exceptions_rdoc.html\"\u003e\u003ccode\u003eBegin/Rescue\u003c/code\u003e syntax\u003c/a\u003e\nallows us to \u003cstrong\u003erescue\u003c/strong\u003e out of an exception in Ruby. Let's see an example in a\n\u003ccode\u003erails console\u003c/code\u003e. In the event our server receives and attempts to decode an\n\u003cstrong\u003einvalid token\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# in rails console\u003c/span\u003e\n\u003cspan class=\"n\"\u003einvalid_token\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"nnnnnnnooooooootttttt.vvvvvvaaaallliiiiidddddd.jjjjjjjwwwwwttttttt\"\u003c/span\u003e\n\n\u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einvalid_token\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'my_s3cr3t'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ealgorithm: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'HS256'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# =\u0026gt; Traceback (most recent call last):\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#         1: from (irb):6\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# JWT::DecodeError (Invalid segment encoding)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn other words, if our server receives a bad token, this will raise an exception\ncausing a \u003ca href=\"http://httpstatusrappers.com/500.html\"\u003e500 Internal Server Error\u003c/a\u003e. We\ncan account for this by \u003cstrong\u003erescuing out of this exception\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# in rails console\u003c/span\u003e\n\u003cspan class=\"n\"\u003einvalid_token\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"nnnnnnnooooooootttttt.vvvvvvaaaallliiiiidddddd.jjjjjjjwwwwwttttttt\"\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003ebegin\u003c/span\u003e\n  \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einvalid_token\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'my_s3cr3t'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ealgorithm: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'HS256'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eDecodeError\u003c/span\u003e\n  \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; nil\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eInstead of crashing our server, we simply return \u003ccode\u003enil\u003c/code\u003e and keep trucking along.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://media.giphy.com/media/3xb5V0fbxHXck/giphy.gif\" alt=\"keep trucking\"\u003e\u003c/p\u003e\n\n\u003cp\u003eWe can then complete our \u003ca href=\"https://learning.flatironschool.com/server/app/controllers/application_controller.rb\"\u003e\u003ccode\u003eApplicationController\u003c/code\u003e\u003c/a\u003e by\nautomatically obtaining the user whenever an authorization header is present:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplicationController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActionController\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eAPI\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eencode_token\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# don't forget to hide your secret in an environment variable\u003c/span\u003e\n    \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eencode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'my_s3cr3t'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eauth_header\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Authorization'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edecoded_token\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eauth_header\u003c/span\u003e\n      \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eauth_header\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e' '\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ebegin\u003c/span\u003e\n        \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'my_s3cr3t'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ealgorithm: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'HS256'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eDecodeError\u003c/span\u003e\n        \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecurrent_user\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003edecoded_token\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# decoded_token=\u0026gt; [{\"user_id\"=\u0026gt;2}, {\"alg\"=\u0026gt;\"HS256\"}]\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# or nil if we can't decode the token\u003c/span\u003e\n      \u003cspan class=\"n\"\u003euser_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edecoded_token\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"s1\"\u003e'user_id'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n      \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003euser_id\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003elogged_in?\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e!!\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrent_user\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRecall that a Ruby object/instance is 'truthy': \u003ccode\u003e!!user_instance #=\u0026gt; true\u003c/code\u003e and\nnil is 'false-y': \u003ccode\u003e!!nil #=\u0026gt; false\u003c/code\u003e. Therefore \u003ccode\u003elogged_in?\u003c/code\u003e will just return a\nboolean depending on what our \u003ccode\u003ecurrent_user\u003c/code\u003e method returns.\u003c/p\u003e\n\n\u003cp\u003eFinally, let's lock down our application to prevent unauthorized access:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplicationController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActionController\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eAPI\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebefore_action\u003c/span\u003e \u003cspan class=\"ss\"\u003e:authorized\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eencode_token\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# should store secret in env variable\u003c/span\u003e\n    \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eencode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'my_s3cr3t'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eauth_header\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# { Authorization: 'Bearer \u0026lt;token\u0026gt;' }\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Authorization'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edecoded_token\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eauth_header\u003c/span\u003e\n      \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eauth_header\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e' '\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# header: { 'Authorization': 'Bearer \u0026lt;token\u0026gt;' }\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ebegin\u003c/span\u003e\n        \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'my_s3cr3t'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ealgorithm: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'HS256'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eDecodeError\u003c/span\u003e\n        \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecurrent_user\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003edecoded_token\u003c/span\u003e\n      \u003cspan class=\"n\"\u003euser_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edecoded_token\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"s1\"\u003e'user_id'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n      \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003euser_id\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003elogged_in?\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e!!\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrent_user\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eauthorized\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003emessage: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Please log in'\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003elogged_in?\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eA few things to note about the code above: \u003ccode\u003ebefore_action :authorized\u003c/code\u003e will call\nthe authorized method \u003cstrong\u003ebefore anything else happens in our app\u003c/strong\u003e. This will\neffectively lock down the entire application. Next we'll augment our\n\u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/users_controller.rb\"\u003e\u003ccode\u003eUsersController\u003c/code\u003e\u003c/a\u003e and build our\n\u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/auth_controller.rb\"\u003e\u003ccode\u003eAuthController\u003c/code\u003e\u003c/a\u003e to allow signup/login.\u003c/p\u003e\n\n\u003ch3\u003eUpdating the \u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/users_controller.rb\"\u003eUsersController\u003c/a\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eLet's update the \u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/users_controller.rb\"\u003eUsersController\u003c/a\u003e so that it issues a token\nwhen users register for our app:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApi::V1::UsersController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eskip_before_action\u003c/span\u003e \u003cspan class=\"ss\"\u003e:authorized\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e\n      \u003cspan class=\"vi\"\u003e@token\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eencode_token\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003euser_id: \u003c/span\u003e\u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003euser: \u003c/span\u003e\u003cspan class=\"no\"\u003eUserSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"ss\"\u003ejwt: \u003c/span\u003e\u003cspan class=\"vi\"\u003e@token\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'failed to create user'\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003euser_params\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003epermit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:bio\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:avatar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe need to make sure to skip the \u003ccode\u003ebefore_action :authorized\u003c/code\u003e coming from\n\u003ca href=\"https://learning.flatironschool.com/server/app/controllers/application_controller.rb\"\u003eApplicationController\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApi::V1::UsersController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eskip_before_action\u003c/span\u003e \u003cspan class=\"ss\"\u003e:authorized\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt wouldn't make sense to ask our users to be logged in before they create an\naccount. This circular logic will make it \u003cstrong\u003eimpossible\u003c/strong\u003e for users to\nauthenticate into the app. How can a user create an account if our app asks them\nto be logged in or \u003ccode\u003eauthorized\u003c/code\u003e to do so? Skipping the before action 'unlocks'\nthis portion of our app.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://media.giphy.com/media/l1J9Jzcs9OHXa310k/giphy.gif\" alt=\"omg\"\u003e\u003c/p\u003e\n\n\u003cp\u003eTry creating a new user again with either\n\u003ca href=\"https://www.getpostman.com/apps\"\u003epostman\u003c/a\u003e or fetch and confirm that your server\nsuccessfully issues a token on signup.\u003c/p\u003e\n\n\u003cp\u003eYou'll also need to store that token somewhere when the response comes back so\nthat you can use it for subsequent requests.\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\"\u003e\u003ccode\u003elocalStorage\u003c/code\u003e\u003c/a\u003e\nworks for this, although there are some\n\u003ca href=\"https://stormpath.com/blog/where-to-store-your-jwts-cookies-vs-html5-web-storage\"\u003etradeoffs to storing JWTs in browser \u003ccode\u003elocalStorage\u003c/code\u003e\u003c/a\u003e that are out of the scope of\nthis lesson. Here's how you could use \u003ccode\u003elocalStorage\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://localhost:3000/api/v1/users\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eAccept\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enewUserData\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// save the token to localStorage for future access\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003elocalStorage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esetItem\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ejwt\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejwt\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// save the user somewhere (in state!) to log the user in\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003esetUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cimg src=\"https://media.giphy.com/media/fSkMuhRxstDi5g5dwo/giphy.gif\" alt=\"sign me up gif\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eImplementing Login\u003c/h3\u003e\n\n\u003cp\u003eA token should be issued in two different controller actions:\n\u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/users_controller.rb\"\u003e\u003ccode\u003eUsersController#create\u003c/code\u003e\u003c/a\u003e and\n\u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/auth_controller.rb\"\u003e\u003ccode\u003eAuthController#create\u003c/code\u003e\u003c/a\u003e. Think about what these methods are\nresponsible for––\u003cstrong\u003ea user signing up for our app for the first time\u003c/strong\u003e and \u003cstrong\u003ean\nalready existing user logging back in\u003c/strong\u003e. In both cases, our server needs to\nissue a new token🥇.\u003c/p\u003e\n\n\u003cp\u003eWe'll need to create a new controller to handle login:\n\u003ccode\u003erails g controller api/v1/auth\u003c/code\u003e. Next, let's add the following to this newly\ncreated \u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/auth_controller.rb\"\u003eAuthController\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApi::V1::AuthController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eskip_before_action\u003c/span\u003e \u003cspan class=\"ss\"\u003e:authorized\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eusername: \u003c/span\u003e\u003cspan class=\"n\"\u003euser_login_params\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e#User#authenticate comes from BCrypt\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthenticate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser_login_params\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# encode token comes from ApplicationController\u003c/span\u003e\n      \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eencode_token\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"ss\"\u003euser_id: \u003c/span\u003e\u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003euser: \u003c/span\u003e\u003cspan class=\"no\"\u003eUserSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"ss\"\u003ejwt: \u003c/span\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :accepted\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003emessage: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Invalid username or password'\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003euser_login_params\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# params { user: {username: 'Chandler Bing', password: 'hi' } }\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003epermit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can simply call our\n\u003ca href=\"https://learning.flatironschool.com/server/app/controllers/application_controller.rb\"\u003e\u003ccode\u003eApplicationController#encode_token\u003c/code\u003e\u003c/a\u003e method, passing\nthe found user's ID in a payload. The newly created JWT can then be passed back\nalong with the user's data. \u003cstrong\u003eThe user data can be stored in our application's\nstate\u003c/strong\u003e, e.g., \u003ca href=\"https://reactjs.org/\"\u003eReact\u003c/a\u003e or \u003ca href=\"https://redux.js.org/\"\u003eRedux\u003c/a\u003e,\nwhile the token can be stored client-side (similar to our signup feature).\u003c/p\u003e\n\n\u003cp\u003eA few things to keep in mind about the code above:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eUser.find_by({ name: 'Chandler Bing' })\u003c/code\u003e will either return a user instance\nif that user can be found \u003cstrong\u003eOR\u003c/strong\u003e it will return \u003ccode\u003enil\u003c/code\u003e if that user is not\nfound.\u003c/li\u003e\n\u003cli\u003eIn the event that the user is not found,\n\u003ccode\u003euser = User.find_by(username: params[:username])\u003c/code\u003e will evaluate to \u003ccode\u003enil\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eCan we call \u003ccode\u003e.authenticate\u003c/code\u003e on \u003ccode\u003enil\u003c/code\u003e? NO!!\n\u003ccode\u003eNoMethodError (undefined method 'authenticate' for nil:NilClass)\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eRuby, however, is \u003cstrong\u003elazy\u003c/strong\u003e. If Ruby encounters \u003ccode\u003e\u0026amp;\u0026amp;\u003c/code\u003e, both statements in the\nexpression must evaluate to true. If the statement on the left side evaluates\nto false, Ruby will \u003cstrong\u003enot even look at the statement on the right\u003c/strong\u003e. Let's see\nan example:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# in irb or a rails console\u003c/span\u003e\n\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; true\u003c/span\u003e\n\n\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; false\u003c/span\u003e\n\n\n\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003enot_a_variable\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; NameError (undefined local variable or method `not_a_variable` for main:Object)\u003c/span\u003e\n\n\u003cspan class=\"kp\"\u003efalse\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003enot_a_variable\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; false\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet's take another look at our previous example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"vi\"\u003e@user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eusername: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthenticate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf \u003ccode\u003e@user\u003c/code\u003e is \u003ccode\u003enil\u003c/code\u003e, which is false-y, \u003cstrong\u003eruby will not even attempt to call\n\u003ccode\u003e@user.authenticate\u003c/code\u003e\u003c/strong\u003e. Without this catch, we'd get a\n\u003ccode\u003eNoMethodError (undefined method 'authenticate' for nil:NilClass)\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eAgain, the client should be sending a JWT along with every authenticated\nrequest. Refer to this diagram from\n\u003ca href=\"https://www.vaadata.com/blog/jwt-tokens-and-security-working-principles-and-use-cases/\"\u003eVaadata\u003c/a\u003e:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://www.vaadata.com/blog/wp-content/uploads/2016/12/JWT_tokens_EN.png\" alt=\"Vaadata article on token auth\"\u003e\u003c/p\u003e\n\n\u003cp\u003eA sample request might look like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003etoken\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003elocalStorage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetItem\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ejwt\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://localhost:3000/api/v1/profile\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eGET\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eAuthorization\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e`Bearer \u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003etoken\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e`\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo, let's update our \u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/users_controller.rb\"\u003e\u003ccode\u003eUsersController\u003c/code\u003e\u003c/a\u003e so that an\nauthenticated user can access their profile information:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApi::V1::UsersController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eskip_before_action\u003c/span\u003e \u003cspan class=\"ss\"\u003e:authorized\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eprofile\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003euser: \u003c/span\u003e\u003cspan class=\"no\"\u003eUserSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrent_user\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :accepted\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e\n      \u003cspan class=\"vi\"\u003e@token\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eencode_token\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"ss\"\u003euser_id: \u003c/span\u003e\u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003euser: \u003c/span\u003e\u003cspan class=\"no\"\u003eUserSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"ss\"\u003ejwt: \u003c/span\u003e\u003cspan class=\"vi\"\u003e@token\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'failed to create user'\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003euser_params\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003epermit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:bio\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:avatar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOne final note about the snippet above:\n\u003ca href=\"https://learning.flatironschool.com/server/app/controllers/application_controller.rb\"\u003e\u003ccode\u003eApplicationController\u003c/code\u003e\u003c/a\u003e calls \u003ccode\u003eauthorized\u003c/code\u003e \u003cstrong\u003ebefore\nany other controller methods are called\u003c/strong\u003e. If authorization fails, our server\nwill never call \u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/users_controller.rb\"\u003e\u003ccode\u003eUsersController#profile\u003c/code\u003e\u003c/a\u003e and will instead:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003emessage: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Please log in'\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThat's it! You should now have a server set up to create a token when a user\nlogs in or signs up, and authenticate the user using that token for future\nrequests.\u003c/p\u003e\n\n\u003cp\u003eThe frontend implementation is up to you. Remember, the key to using JWT for\nauthentication is to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eStore the token in the browser when the user logs in (such as localStorage)\u003c/li\u003e\n\u003cli\u003eSend the token along with every request the user makes using an\n\u003ccode\u003eAuthentication\u003c/code\u003e header\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eExternal Resources\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/HTTPS\"\u003eHTTPS Wikipedia Article\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://stormpath.com/blog/where-to-store-your-jwts-cookies-vs-html5-web-storage\"\u003eStoring JWTs in Cookies vs HTML5 localStorage\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://stackoverflow.com/questions/35291573/csrf-protection-with-json-web-tokens/35347022#35347022\"\u003eStackOverflow Post on Cookies vs localStorage for Storing Tokens\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/learn-co-curriculum/mod3-project-week-setup-example\"\u003eMod3 API Setup Guide\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/cyu/rack-cors\"\u003erack-cors gem\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\"\u003eMDN article on CORS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/codahale/bcrypt-ruby\"\u003eBcrypt gem\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/codahale/bcrypt-ruby/blob/master/lib/bcrypt/password.rb#L23\"\u003eBcrypt::Password source code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Salt_(cryptography)\"\u003eWhat is a Salt in Cryptography\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Cryptographic_hash_function\"\u003eWhat is a Cryptographic Hash Function\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://api.rubyonrails.org/classes/ActiveModel/SecurePassword/ClassMethods.html#method-i-has_secure_password\"\u003eActiveModel has_secure_password docs\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://blog.mozilla.org/webdev/2012/06/08/lets-talk-about-password-storage/\"\u003eMozilla Blog Post on Storing Passwords in a Database\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/rails-api/active_model_serializers\"\u003eActiveModelSerializers gem\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/active_record_validations.html\"\u003eActiveRecord Validations Documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.sitepoint.com/active-model-serializers-rails-and-json-oh-my/\"\u003eSitePoint Article on ActiveModelSerializers in Rails\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.getpostman.com/apps\"\u003ePostman App for making HTTP requests\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://jwt.io/introduction/\"\u003eJWT Documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/jwt/ruby-jwt\"\u003eJWT Ruby Gem on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://blog.angular-university.io/angular-jwt/\"\u003eJWT in Depth\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://scotch.io/tutorials/the-ins-and-outs-of-token-based-authentication\"\u003eScotch.io: The Ins and Outs of Token Based Authentication\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Authentication\"\u003eAuthentication\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Authorization\"\u003eAuthorization\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://stackoverflow.com/questions/6556522/authentication-versus-authorization\"\u003eAuthentication vs Authorization\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/laserlemon/figaro#getting-started\"\u003eFigaro Gem for hiding secrets in your app\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://ruby-doc.org/core-2.2.0/doc/syntax/exceptions_rdoc.html\"\u003eRuby Begin Rescue Documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://httpstatusrappers.com\"\u003eHTTP Status Rappers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\"\u003eMDN Article on HTTP Status Codes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://gist.github.com/mlanett/a31c340b132ddefa9cca\"\u003eRails Status Code Symbols Cheat Sheet\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://reactjs.org/\"\u003eReact Documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/\"\u003eRedux Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g7c44c258b0a75bee40ce25c9b42f8de4"}]},{"id":49295,"name":"Deploying","status":"completed","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g32f9df5b86744c6eab4a027a8d551f91","items":[{"id":483356,"title":"Intro to Deploying","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-intro-to-deploying\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-intro-to-deploying\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-intro-to-deploying/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand what \"deploying\" means\u003c/li\u003e\n\u003cli\u003eUnderstand the responsibilities of a web server\u003c/li\u003e\n\u003cli\u003eEvaluate platforms for deploying Rails applications\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSo far during this phase, we've been working on developing applications and\nrunning them locally on our own computers. If we want other folks to be able to\ninteract with our applications, that means we need to deploy them to another\ncomputer that's configured to allow requests over the internet, from anywhere in\nthe world!\u003c/p\u003e\n\n\u003cp\u003eThis process essentially involves:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003etaking our application's code\u003c/li\u003e\n\u003cli\u003euploading it to a server that's configured to run our code and allow HTTP\nrequests\u003c/li\u003e\n\u003cli\u003erunning our code on that server\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAs a web developer, it's essential to familiarize yourself with the deployment\nprocess for a few reasons:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIt's increasingly expected that developers participate in the deployment\nprocess. While many companies employ specialized DevOps (Developer Operations)\nengineers, it is not uncommon for engineers on other teams to have a hand in\ndeploying and troubleshooting issues in production.\u003c/li\u003e\n\u003cli\u003eDeploying your site early in the development process can be helpful for\ncatching bugs that you may not encounter running your code locally,\nparticularly when it comes to project dependencies and working with\nthird-party services.\u003c/li\u003e\n\u003cli\u003eUnderstanding how your app will perform in different environments (development\nand production) can help you optimize your code's performance.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIn this lesson, we'll explore the deploying process and identify the things a\nweb server needs in order to host a Rails application.\u003c/p\u003e\n\n\u003ch2\u003eDefining a Web Server\u003c/h2\u003e\n\n\u003cp\u003eAll web servers share the same common goal: they must be able to handle HTTP\nrequests, and send back a response. The simplest kind of websites are known as\n\u003ca href=\"https://en.wikipedia.org/wiki/Static_web_page\"\u003e\u003cstrong\u003estatic\u003c/strong\u003e websites\u003c/a\u003e, which typically means sites that store\nall their content in pre-built HTML, JavaScript and CSS files that are saved to\nthe file system and sent back when a client makes a request for that specific file:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-intro-to-deploying/static-server.png\" alt=\"static server diagram\"\u003e\u003c/p\u003e\n\n\u003cp\u003eStatic websites are still quite common on the web; but there's also a large portion\nof the web that is \u003ca href=\"https://en.wikipedia.org/wiki/Dynamic_web_page\"\u003e\u003cstrong\u003edynamic\u003c/strong\u003e\u003c/a\u003e. With dynamic pages, the content\nreturned from an HTTP request isn't derived from just an HTML file, but instead is\nprocessed by some code running on the server before it's sent back to the client.\nAll Rails applications are \u003cstrong\u003edynamic\u003c/strong\u003e, since every request needs to be processed\nby Rails in order to determine the correct response.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-intro-to-deploying/dynamic-server.png\" alt=\"dynamic server diagram\"\u003e\u003c/p\u003e\n\n\u003cp\u003eSince hosting a server for dynamic websites is a bit more complicated, let's\ndiscuss some things a dynamic server needs in order to do its job.\u003c/p\u003e\n\n\u003ch2\u003eApplication Environment\u003c/h2\u003e\n\n\u003cp\u003eOne big consideration for developing any application is: what \u003cem\u003eenvironments\u003c/em\u003e\ndoes the application need to run in?\u003c/p\u003e\n\n\u003cp\u003eBroadly speaking, application environments are split into three categories:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eDevelopment\u003c/strong\u003e: When you're working on your application locally, running the\ncode on your personal computer, it's running in the \u003cstrong\u003edevelopment\u003c/strong\u003e\nenvironment. In a development environment, you should be able to easily use\ndebugging tools (like \u003ccode\u003ebyebug\u003c/code\u003e), and code analysis tools (like ESLint, which\nwarns you when you're using React incorrectly). You should be able to quickly\nsee the result of adding new code and how that affects your application.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTesting\u003c/strong\u003e: When your test runner (like RSpec or Jest) is running, it runs in\na \u003cstrong\u003etesting\u003c/strong\u003e environment. In this environment, your code should run as\nquickly as possible so that you can get rapid feedback on your application by\nrunning your test suite. It should also be as close as possible to your\nproduction environment (though this comes with tradeoffs related to how\nquickly your tests can run).\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eProduction\u003c/strong\u003e: When your application is deployed to a server, it will be\nrunning in a \u003cstrong\u003eproduction\u003c/strong\u003e environment. Some features you have available in\nthe development environment, like debugging tools and hot-reloading when code\nchanges, aren't available in this environment. Instead, the focuses of a\nproduction environment are to run your application quickly; be resilient to\nerrors (and to keep a log of what goes wrong); to handle lots of traffic; and\ngenerally to make your application as great as it can be for your users.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eOther environments you may use when building an application are a QA (quality\nassurance, for manual testing of features) environment and a staging\nenvironment (a preview of the production environment, usually used as the last\nstage before deploying a new feature).\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eTake a moment to think about all the things that are required to run a Rails\napplication in your local development environment. When you're working on a lab,\nwhat setup is needed so that you can type \u003ccode\u003erails s\u003c/code\u003e in the terminal, and view\nyour website in the browser?\u003c/p\u003e\n\n\u003cp\u003eFor starters, there's your \u003cem\u003eenvironment setup\u003c/em\u003e: you could be running on OSX, or\nWSL, or Linux; you'll need to have a recent version of Ruby installed; you'll\nneed Git for version control; and a few other system dependencies.\u003c/p\u003e\n\n\u003cp\u003eThere are also all of your \u003cem\u003eapplication dependencies\u003c/em\u003e: the code specific to\nyour Rails app that needs to run. That includes the Rails gem itself as well\nas all the other gems in your Gemfile.\u003c/p\u003e\n\n\u003cp\u003eYou'll also need some kind of \u003cem\u003edatabase\u003c/em\u003e to persist all your data. It's helpful\nto think of the database in isolation from the rest of your application, as a\nkind of resource that's available to your Rails app; ideally, even if your Rails\napp goes down for some reason, your database shouldn't go down with it!\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eA note on databases: for the labs in this phase, we've been using SQLite as a\nlightweight database. It's great for quick development, but it doesn't scale\nwell to larger applications. We'll be using Postgresql for our database moving\nforward. More on that later!\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSince all of these elements are required in order to run our application,\nwhatever system we choose to deploy our code on will need to be able to handle a\nsimilar environment setup. Let's explore some options.\u003c/p\u003e\n\n\u003ch2\u003eDeploying Options\u003c/h2\u003e\n\n\u003cp\u003eWhen it comes to deciding which platform to use to host our deployed\napplications, there are a number of options, each of which comes with some\ntradeoffs. For Rails in particular, a few popular choices are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://render.com/\"\u003eRender\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/\"\u003eAmazon Web Services (AWS)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.digitalocean.com/\"\u003eDigital Ocean\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eOne thing these services all have in common: they all have the ability to easily\nconfigure an environment to run our Rails applications in. These services own\nthe hardware (the physical servers and networking infrastructure) that your code\nwill run on, but they also have configurable \u003ca href=\"https://en.wikipedia.org/wiki/OS-level_virtualization\"\u003e\u003cstrong\u003econtainers\u003c/strong\u003e\u003c/a\u003e with\nresources dedicated to run your code.\u003c/p\u003e\n\n\u003cp\u003eThese containers are what makes it possible to quickly and easily set up a new\nproduction environment that has all the functionality needed to run your site:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eOS\u003c/strong\u003e: Typically Linux. Applications like Rails work well across platforms,\nso even if you're using a different OS in development, deploying to a server\nthat runs Linux works just fine!\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRuby\u003c/strong\u003e: You should use the exact same version of Ruby in development and in\nproduction. Since new Ruby versions have new features, as well as fixing\nsecurity issues in older versions, it's critical to use the same version in\nboth environments.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eNodeJS\u003c/strong\u003e: It's important to use the same NodeJS version in both environments\nfor the same reasons listed for Ruby.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDatabase\u003c/strong\u003e: While it's possible to use different databases in a development\nand production environment, it's generally not a good idea to do so: there are\nsome differences in how (for example) SQLite and Postgresql interpret\ndifferent SQL commands and what features are available in both, so it's\nconsidered a best practice to use the same database in development and in\nproduction.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThere are a lot of considerations when it comes to choosing a platform for\ndeploying your application, such as:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eCost\u003c/strong\u003e: How much will this platform charge me? How much do I get for free?\nFlat rate per month? Calculated based on usage?\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eEase of use\u003c/strong\u003e: How much work does it take to deploy my application the first\ntime? How easy is it to deploy new versions?\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eScalability\u003c/strong\u003e: As my application gets more users, how easy is it to handle\nincreased traffic?\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePerformance\u003c/strong\u003e: Does my application need to handle a lot of traffic? Be optimized\nfor video processing? Store a lot of files? Handle large database tables?\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFor now, since we're deploying our very first Rails projects, we're going to\nprioritize \u003cstrong\u003ecost\u003c/strong\u003e and \u003cstrong\u003eease of use\u003c/strong\u003e to decide on a platform, and use Render\nfor deploying in the coming lessons.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://render.com/\"\u003eRender\u003c/a\u003e is first and foremost a Platform as a Service (PaaS), which\nmeans they manage the hardware your code runs on as well as the software\nenvironment, with an aim of making it as simple as possible to take the code\nfrom your machine and run it on theirs. Render also has a free tier for\ndevelopers to try out the service at no cost.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/ruby-rails-tutorial.html\"\u003eAWS's Elastic Beanstalk\u003c/a\u003e and\n\u003ca href=\"https://docs.digitalocean.com/products/app-platform/languages-frameworks/ruby-on-rails/\"\u003eDigital Ocean's App Platform\u003c/a\u003e are both Platform as a Service\noptions as well, so you're welcome to try them out for future projects if you're\ninterested in exploring other options.\u003c/p\u003e\n\n\u003cp\u003eThe downside to PaaS options is that they tend to cost more in the long run as\nyour application scales up, since you're not only paying for the hardware your\ncode runs on, you're also paying for the platform maintenance and security. They\nalso tend to make it more challenging to fine-tune the environment in a way that\nis optimal for \u003cem\u003eyour\u003c/em\u003e specific application, rather than \u003cem\u003eall\u003c/em\u003e applications\nrunning on their service.\u003c/p\u003e\n\n\u003cp\u003eThe upside is that compared to handling that configuration ourselves, using Render\nwill make it much easier to get our app up and running in a production environment\non a server.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eThe end goal of developing web applications is to share them with the world, and\ndeploying is the crucial last step in this process! As a developer, it's\nimportant to equip yourself with the knowledge of what it takes to deploy a\nwebsite so you can evaluate the available options and choose the right one for\nyour project.\u003c/p\u003e\n\n\u003cp\u003eIn the coming lessons, we'll go through that deployment process with a couple of\napplications of varying complexity so you can build the confidence to deploy your\nown projects independently.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eHow does having an understanding of the deployment process help you as a\ndeveloper?\u003c/li\u003e\n\u003cli\u003eWhat are the advantages and disadvantages of using a Platform as a Service\n(PAAS) to deploy a Rails app?\u003c/li\u003e\n\u003c/ol\u003e","exportId":"intro-to-deploying"},{"id":494203,"title":"Deploying a Rails API to Render","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-deploying-rails-api-to-render\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-deploying-rails-api-to-render\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-deploying-rails-api-to-render/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eSet up your local environment for deploying with Render\u003c/li\u003e\n\u003cli\u003eDeploy a basic Rails application to Render\u003c/li\u003e\n\u003cli\u003eBack up and re-deploy our apps' databases\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll be deploying a basic, standalone Rails API application to\nRender. We'll give instructions to generate the application from scratch and\ntalk through the steps to get the code running on a Render server.\u003c/p\u003e\n\n\u003cp\u003eIn coming lessons, we'll learn how to add more complexity to the application\nwith a React frontend. Since the setup for a Rails-React application is a bit\ntrickier, it'll be beneficial to see the setup for Rails alone first. Let's get\nstarted!\u003c/p\u003e\n\n\u003ch2\u003eEnvironment Setup\u003c/h2\u003e\n\n\u003cp\u003eTo make sure you're able to deploy your application, you'll need to do the\nfollowing:\u003c/p\u003e\n\n\u003ch3\u003eSign Up for a Render Account\u003c/h3\u003e\n\n\u003cp\u003eYou can sign up for a free account at\n\u003ca href=\"https://dashboard.render.com/register\"\u003ehttps://dashboard.render.com/register\u003c/a\u003e. We recommend that you\nsign up using GitHub as that will make it a little easier for you to connect\nRender to your GitHub account.\u003c/p\u003e\n\n\u003cp\u003eOnce you've completed the signup process, you will be taken to the Render\ndashboard:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/deploying-rails-api/render-dashboard.png\" alt=\"Render dashboard\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn order to connect Render to your GitHub account, you'll need to click the\n\"New Web Service\" button in the \"Web Services\" box. On the next page, you will\nsee a GitHub heading on the right side and below that a link that's labeled\neither \"Connect account\" or \"Configure account\".\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/deploying-rails-api/configure-github.png\" alt=\"Connect GitHub\"\u003e\u003c/p\u003e\n\n\u003cp\u003eClick that link; a modal will appear asking you for permission to install Render\non your GitHub account:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/deploying-rails-api/install-render.png\" alt=\"Install Render\"\u003e\u003c/p\u003e\n\n\u003cp\u003eClick \"Install.\" You should then be taken back to the \"Create a New Web Service\"\npage, which should now show a list of your GitHub repos. We won't actually\ncreate a web service just yet so you are free to navigate away from the page at\nthis point.\u003c/p\u003e\n\n\u003ch3\u003eInstall the Latest Ruby Version\u003c/h3\u003e\n\n\u003cp\u003eVerify which version of Ruby you're running by entering this in the terminal:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003eruby \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe recommend version 2.7.4. If you need to upgrade you can install it using rvm:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ervm \u003cspan class=\"nb\"\u003einstall \u003c/span\u003e2.7.4 \u003cspan class=\"nt\"\u003e--default\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou should also install the latest versions of \u003ccode\u003ebundler\u003c/code\u003e and \u003ccode\u003erails\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egem \u003cspan class=\"nb\"\u003einstall \u003c/span\u003ebundler\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egem \u003cspan class=\"nb\"\u003einstall \u003c/span\u003erails\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eInstall PostgreSQL\u003c/h3\u003e\n\n\u003cp\u003eRender requires that you use PostgreSQL for your database instead of SQLite.\nPostgreSQL (or just Postgres for short) is an advanced database management\nsystem with more features than SQLite. If you don't already have it installed,\nyou'll need to set it up.\u003c/p\u003e\n\n\u003ch4\u003ePostgreSQL Installation for WSL\u003c/h4\u003e\n\n\u003cp\u003eTo install Postgres for WSL, run the following commands from your Ubuntu\nterminal:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eapt update\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eapt \u003cspan class=\"nb\"\u003einstall \u003c/span\u003epostgresql postgresql-contrib libpq-dev\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen confirm that Postgres was installed successfully:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003epsql \u003cspan class=\"nt\"\u003e--version\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRun this command to start the Postgres service:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eservice postgresql start\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFinally, you'll also need to create a database user so that you are able to\nconnect to the database from Rails. First, check what your operating system\nusername is:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003ewhoami\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf your username is \"ian\", for example, you'd need to create a Postgres user\nwith that same name. To do so, run this command to open the Postgres CLI:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo\u003c/span\u003e \u003cspan class=\"nt\"\u003e-u\u003c/span\u003e postgres \u003cspan class=\"nt\"\u003e-i\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFrom the Postgres CLI, run this command (replacing \"ian\" with your username):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ecreateuser \u003cspan class=\"nt\"\u003e-sr\u003c/span\u003e ian\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen enter \u003ccode\u003econtrol + d\u003c/code\u003e or type \u003ccode\u003elogout\u003c/code\u003e to exit.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/wsl/tutorials/wsl-database#install-postgresql\"\u003eThis guide\u003c/a\u003e has more info on setting up Postgres on WSL if you\nget stuck.\u003c/p\u003e\n\n\u003ch4\u003ePostgreSQL Installation for OSX\u003c/h4\u003e\n\n\u003cp\u003eTo install Postgres for OSX, you can use Homebrew:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebrew \u003cspan class=\"nb\"\u003einstall \u003c/span\u003epostgresql\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOnce Postgres has been installed, run this command to start the Postgres\nservice:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebrew services start postgresql\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ePhew! With that out of the way, let's get started on building our Rails\napplication and deploying it to Render.\u003c/p\u003e\n\n\u003ch2\u003eCreating a Rails App to Deploy\u003c/h2\u003e\n\n\u003cp\u003eWe'll be following the steps in the \u003ca href=\"https://render.com/docs/deploy-rails\"\u003eGetting Started with Ruby on Rails on\nRender\u003c/a\u003e guide, so if you get stuck and are looking\nfor more assistance, check that guide first.\u003c/p\u003e\n\n\u003cp\u003eThe first thing we'll need to do is create our new Rails application. Make\nsure you're in a non-lab directory, then run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails new bird-app \u003cspan class=\"nt\"\u003e--api\u003c/span\u003e \u003cspan class=\"nt\"\u003e--minimal\u003c/span\u003e \u003cspan class=\"nt\"\u003e--database\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003epostgresql\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will set up our app to run in API mode, with the minimum dependencies\nneeded, and with PostgreSQL as the database.\u003c/p\u003e\n\n\u003cp\u003eNext, we'll need to configure our \u003ccode\u003eGemfile.lock\u003c/code\u003e file to support the same OS as\nRender, which runs Ubuntu. This way, regardless of what OS you're using in\ndevelopment, \u003ccode\u003ebundler\u003c/code\u003e will be able to install the same gems on Render using any\nUbuntu-specific gem dependencies.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003ecd\u003c/code\u003e into the app's directory, and run this command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle lock \u003cspan class=\"nt\"\u003e--add-platform\u003c/span\u003e x86_64-linux\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will add additional platforms to your \u003ccode\u003eGemfile.lock\u003c/code\u003e file that will allow\nthe necessary dependencies to be installed after you deploy your app.\u003c/p\u003e\n\n\u003ch2\u003eBuilding the Demo App\u003c/h2\u003e\n\n\u003cp\u003eNext, let's set up up a migration, model, route, and controller so we have some\ndata to display in our application:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g resource Bird name species\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAdd this data to the \u003ccode\u003edb/seeds.rb\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Black-Capped Chickadee'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Poecile Atricapillus'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Grackle'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Quiscalus Quiscula'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Common Starling'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Sturnus Vulgaris'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Mourning Dove'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Zenaida Macroura'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen run this command to generate the database and run the migrations and seed\nfile:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:create db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003erails db:create\u003c/code\u003e creates a new PostgreSQL database to be associated with your\napplication based on the configuration in the \u003ccode\u003econfig/database.yml\u003c/code\u003e file.\nUnlike with SQLite, the actual database file isn't created in the \u003ccode\u003edb\u003c/code\u003e folder;\nit lives elsewhere in your file system, depending on your PostgreSQL\nconfiguration. If you have problems with this step, see the\n\u003cstrong\u003eTroubleshooting\u003c/strong\u003e section below.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eNext, edit the \u003ccode\u003eapp/birds_controller.rb\u003c/code\u003e file and add an \u003ccode\u003eindex\u003c/code\u003e action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e  \u003cspan class=\"c1\"\u003e# GET /birds\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebirds\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebirds\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFinally, open \u003ccode\u003econfig/routes.rb\u003c/code\u003e, un-comment out the root path definition and\nupdate it to:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eroot\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"birds#index\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo make sure the app works locally before deploying, run \u003ccode\u003erails s\u003c/code\u003e. If you visit\neither \u003ca href=\"http://localhost:3000\"\u003ehttp://localhost:3000\u003c/a\u003e or\n\u003ca href=\"http://localhost:3000/birds\"\u003ehttp://localhost:3000/birds\u003c/a\u003e, you should see the\nJSON for the list of birds.\u003c/p\u003e\n\n\u003ch2\u003ePreparing your App for Deployment\u003c/h2\u003e\n\n\u003cp\u003eBefore we can deploy our app, we need to make a few modifications.\u003c/p\u003e\n\n\u003cp\u003eFirst, open the \u003ccode\u003econfig/database.yml\u003c/code\u003e file, scroll down to the \u003ccode\u003eproduction\u003c/code\u003e\nsection, and update the code to the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight yaml\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eproduction\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e*default\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eurl\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026lt;%= ENV['DATABASE_URL'] %\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, open \u003ccode\u003econfig/puma.rb\u003c/code\u003e and find the section shown below. Here, you will\nun-comment out two lines of code and make one small edit:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Specifies the number of `workers` to boot in clustered mode.\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Workers are forked web server processes. If using threads and workers together\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# the concurrency of the application would be max `threads` * `workers`.\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Workers do not work on JRuby or Windows (both of which do not support\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# processes).\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003cspan class=\"n\"\u003eworkers\u003c/span\u003e \u003cspan class=\"no\"\u003eENV\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"WEB_CONCURRENCY\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e### CHANGE: Un-comment out this line; update the value to 4\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# Use the `preload_app!` method when specifying a `workers` number.\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# This directive tells Puma to first boot the application and load code\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# before forking the application. This takes advantage of Copy On Write\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# process behavior so workers use less memory.\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003cspan class=\"n\"\u003epreload_app!\u003c/span\u003e \u003cspan class=\"c1\"\u003e### CHANGE: Un-comment out this line\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, open the \u003ccode\u003econfig/environments/production.rb\u003c/code\u003e file and find the following\nline:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epublic_file_server\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eenabled\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eENV\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"RAILS_SERVE_STATIC_FILES\"\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nf\"\u003epresent?\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUpdate it to the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epublic_file_server\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eenabled\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eENV\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'RAILS_SERVE_STATIC_FILES'\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nf\"\u003epresent?\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"no\"\u003eENV\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'RENDER'\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nf\"\u003epresent?\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFinally, inside the \u003ccode\u003ebin\u003c/code\u003e folder create a \u003ccode\u003ebirds-build.sh\u003c/code\u003e script and copy the\nfollowing into it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e#!/usr/bin/env bash\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# exit on error\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e errexit\n\nbundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# bundle exec rake assets:precompile # These lines are commented out because we have an API only app\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# bundle exec rake assets:clean\u003c/span\u003e\nbundle \u003cspan class=\"nb\"\u003eexec \u003c/span\u003erake db:migrate \nbundle \u003cspan class=\"nb\"\u003eexec \u003c/span\u003erake db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOur API-only app doesn't include any assets, so we've commented out the lines to\nprecompile and clean them.\u003c/p\u003e\n\n\u003cp\u003eThen run the following command in the terminal to update the permissions on the\nscript and make sure it's executable:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"go\"\u003echmod a+x bin/birds-build.sh\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere will be no output from this command, but if you run \u003ccode\u003els -l bin\u003c/code\u003e, you\nshould see the three x's in the permissions string, indicating that the file is\nexecutable:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e-rwxr-xr-x\u003c/span\u003e  1 \u0026lt;username\u0026gt;  staff   253 Oct 23 07:44 birds-build.sh\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eDeploying\u003c/h2\u003e\n\n\u003ch3\u003ePush the Code to GitHub\u003c/h3\u003e\n\n\u003cp\u003eIn order to deploy our app to Render, we first need to create a remote repo and\npush our code up. Start by making a commit to save your local changes:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egit add \u003cspan class=\"nb\"\u003e.\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egit commit \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Initial commit'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, on the repository list page of your GitHub account, click the green \"New\"\nbutton in the upper right corner. (Alternatively, you can navigate to\n\u003ca href=\"https://github.com/new\"\u003ehttps://github.com/new\u003c/a\u003e). In the form that opens, enter\na name for your repo (\u003ccode\u003ebird-app\u003c/code\u003e makes sense) and make sure \"Public\" is\nselected. You can leave everything else as is. Click the \"Create repository\"\nbutton at the bottom of the page.\u003c/p\u003e\n\n\u003cp\u003eOn the next page, copy the code in the \"push an existing repository from the\ncommand line\" section and run it in your terminal:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003egit remote add origin git@github.com:\u0026lt;your-github-name\u0026gt;\u003c/span\u003e/bird-app.git\n\u003cspan class=\"go\"\u003egit branch -M main\ngit push -u origin main\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen you refresh the GitHub page, you should see that your code has been pushed\nup.\u003c/p\u003e\n\n\u003ch3\u003eCreate the Database on Render\u003c/h3\u003e\n\n\u003cp\u003eOne limitation of Render is that it only allows one PostgreSQL instance to be\ncreated per user account. With this instance, we can create an app, give it some\nseed data, and deploy it, storing the data in the PostgreSQL instance's\ndatabase. But then what happens if you want to deploy additional apps to Render?\nYou can probably see how using a single database for multiple apps could get\ncomplicated very quickly and potentially cause problems. Fortunately, Render\nallows users to create \u003ca href=\"https://render.com/docs/databases#multiple-databases-in-a-single-postgresql-instance\"\u003emultiple databases within a single PostgreSQL\ninstance\u003c/a\u003e so you can have a separate database for each app you\ndeploy.\u003c/p\u003e\n\n\u003cp\u003eLet's start by creating the PostgreSQL instance.\u003c/p\u003e\n\n\u003cp\u003eGo to the \u003ca href=\"https://dashboard.render.com/\"\u003eRender dashboard\u003c/a\u003e, click the \"New +\" button and select\n\"PostgreSQL\". Enter a name for your database. This can be whatever you like —\nwe're using \u003ccode\u003emy_database\u003c/code\u003e. The remaining fields can be left as is.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/deploying-rails-api/create-database.png\" alt=\"Creating a new database\"\u003e\u003c/p\u003e\n\n\u003cp\u003eScroll to the bottom of the page and click \"Create Database\". Leave the database\npage open — you'll need to copy information from it as we proceed.\u003c/p\u003e\n\n\u003cp\u003eNext, let's create a database specifically for our bird app. We'll do this using\nthe PostgreSQL interactive terminal, \u003ca href=\"https://www.postgresql.org/docs/current/app-psql.html\"\u003e\u003ccode\u003epsql\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe command to launch the interactive terminal is provided in the Render\ndatabase page. Scroll down to the \"Connections\" section and copy the PSQL\ncommand. Paste it into your terminal and press enter. This command connects you\nto the remote database. You should now see the \u003ccode\u003epsql\u003c/code\u003e command prompt,\n\u003ccode\u003emy_database=\u0026gt;\u003c/code\u003e, and if you run the \u003ccode\u003e\\l\u003c/code\u003e command to list the databases, you'll\nsee a table that includes \u003ccode\u003emy_database\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eTo create the database for our bird app, we'll run the \u003ccode\u003eCREATE DATABASE\u003c/code\u003e SQL\ncommand. Again, you can name your database whatever you like; we're using\n\u003ccode\u003ebird_app_db\u003c/code\u003e. Be sure to include the semi-colon at the end of the command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight sql\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eCREATE\u003c/span\u003e \u003cspan class=\"k\"\u003eDATABASE\u003c/span\u003e \u003cspan class=\"n\"\u003ebird_app_db\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow if you run the \u003ccode\u003e\\l\u003c/code\u003e command again, you should see that \u003ccode\u003ebird_app_db\u003c/code\u003e has\nbeen added to the list of databases.\u003c/p\u003e\n\n\u003cp\u003eYou can now exit \u003ccode\u003epsql\u003c/code\u003e using the \u003ccode\u003e\\q\u003c/code\u003e command.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: The Render database page will not show the information about the\n\u003ccode\u003ebird_app_db\u003c/code\u003e database; it will only show the name you assigned when you\ncreated the PostgreSQL instance on Render (\u003ccode\u003emy_database\u003c/code\u003e). To see any other\ndatabases you have on your PostgreSQL instance, you'll need to use \u003ccode\u003epsql\u003c/code\u003e.\nFor now, be sure to make a note of your new database's name as we'll need to\nuse it in the next step.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3\u003eCreate the Web Service on Render\u003c/h3\u003e\n\n\u003cp\u003eOpen a new browser tab and navigate back to the Render dashboard. Click the \"New\n+\" button and select \"Web Service\". You'll see a list of all the repositories in\nyour GitHub account. Find the repo you just created for the bird app and click\nthe \"Select\" button.\u003c/p\u003e\n\n\u003cp\u003eIn the page that opens, enter a name for your app and make sure the Environment\nis set to Ruby:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/deploying-rails-api/create-web-service.png\" alt=\"Creating a new web service\"\u003e\u003c/p\u003e\n\n\u003cp\u003eScroll down and set the Build Command to \u003ccode\u003e./bin/birds-build.sh\u003c/code\u003e and the Start\nCommand to \u003ccode\u003ebundle exec puma -C config/puma.rb\u003c/code\u003e:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/deploying-rails-api/update-commands.png\" alt=\"Update Build and Start commands\"\u003e\u003c/p\u003e\n\n\u003cp\u003eNext, scroll down and click the \"Advanced\" button, then click \"Add Environment\nVariable.\" Enter \u003ccode\u003eDATABASE_URL\u003c/code\u003e as the key, then navigate back to the tab you\nleft open with your database information. Click the \"Connect\" button in the\nupper right corner, copy the Internal Database URL, and paste it into the value\nbox. You will see a long URL that ends with \u003ccode\u003emy_database\u003c/code\u003e. You'll need to remove\nthe \u003ccode\u003emy_database\u003c/code\u003e and replace it with \u003ccode\u003ebird_app_db\u003c/code\u003e (or whatever you named it).\nIt should look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003epostgres://my_database_user:#################################################/bird_app_db\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eClick \"Add Environment Variable\" again. Add \u003ccode\u003eRAILS_MASTER_KEY\u003c/code\u003e as the key. The\nvalue is in the \u003ccode\u003econfig/master.key\u003c/code\u003e file in your app's files. Copy the value and\npaste it in.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/deploying-rails-api/add-env-variables.png\" alt=\"Add environment variables\"\u003e\u003c/p\u003e\n\n\u003cp\u003eScroll down to the bottom of the page and click \"Create Web Service\". The deploy\nprocess will begin automatically. Warning: this process can take a while! You\nmight want to go for a walk or get a snack.\u003c/p\u003e\n\n\u003cp\u003eWhen the deploy process is complete, you should see something like this in the\nlog:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/deploying-rails-api/successful-deploy-log.png\" alt=\"Log showing successful build and deploy\"\u003e\u003c/p\u003e\n\n\u003cp\u003eClick on your app's URL in the upper left corner of the screen (just below the\nname of the app). Once the page has loaded (which may take a few moments), you\nshould see the JSON for the list of birds. If you get a \"Page not found\" error,\nwait a few minutes and refresh the page.\u003c/p\u003e\n\n\u003ch2\u003eAdding New Features\u003c/h2\u003e\n\n\u003cp\u003eSince Render integrates the deploying process with GitHub, it's straightforward\nto add new features to your code and deploy them. Let's start by adding a new\ncontroller action in the \u003ccode\u003eBirdsController\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordNotFound\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bird not found\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTest your code locally by running \u003ccode\u003erails s\u003c/code\u003e and visiting\n\u003ca href=\"http://localhost:3000/birds/1\"\u003ehttp://localhost:3000/birds/1\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eNext, we'll commit and push our changes and deploy the app. Before we do that,\nhowever, we need to modify the build script, \u003ccode\u003ebin/birds-build.sh\u003c/code\u003e. The reason\nfor this is the script currently contains the \u003ccode\u003edb:seed\u003c/code\u003e command. If we keep that\ncommand in the script, it will re-seed the data every time we push up a change,\nresulting in duplicate records. Go ahead and open the script and delete (or\ncomment out) the last line.\u003c/p\u003e\n\n\u003cp\u003eNow we can go ahead and make a commit and push it to GitHub:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egit add \u003cspan class=\"nb\"\u003e.\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egit commit \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Add show action'\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egit push\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter pushing the new code, start the deploy process by returning to the app's\npage on Render, clicking the \"Manual Deploy\" button in the upper right corner\nand selecting \"Deploy latest commit.\" You will now see the deploy based on the\nnew commit in progress:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/deploying-rails-api/deploying-new-content.png\" alt=\"Deploying new action\"\u003e\u003c/p\u003e\n\n\u003cp\u003eOnce the deploy is complete, refresh the page and verify that the show action is\nworking. Remember that it may take a few minutes for the new content to become\navailable.\u003c/p\u003e\n\n\u003ch2\u003eTroubleshooting\u003c/h2\u003e\n\n\u003cp\u003eIf you ran into any errors along the way, here are some things you can try to\ntroubleshoot:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eIf you're on a Mac and got a server connection error when you tried to run\n\u003ccode\u003erails db:create\u003c/code\u003e, one option for solving this problem for Mac users is to\ninstall the Postgres app. To do this, first uninstall \u003ccode\u003epostgresql\u003c/code\u003e by running\n\u003ccode\u003ebrew remove postgresql\u003c/code\u003e. Next, download the app from the\n\u003ca href=\"https://postgresapp.com/downloads.html\"\u003ePostgres downloads page\u003c/a\u003e and install it. Launch the app and click\n\"Initialize\" to create a new server. You should now be able to run\n\u003ccode\u003erails db:create\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eIf you're using WSL and got the following error running \u003ccode\u003erails db:create\u003c/code\u003e:\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e  PG::ConnectionBad: FATAL:  role \"yourusername\" does not exist\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe issue is that you did not create a role in Postgres for the default user\n  account. Check \u003ca href=\"https://www.youtube.com/watch?v=bQC5izDzOgE\"\u003ethis video\u003c/a\u003e for\n  one possible fix.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eIf your app failed to deploy at the build stage, make sure your local\nenvironment is set up correctly by following the steps at the beginning of\nthis lesson. Check that you have the latest versions of Ruby and Bundler, and\nensure that PostgreSQL was installed successfully.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eIf you deployed successfully, but you ran into issues when you visited the\nsite, make sure you migrated and seeded the database. Also, make sure that\nyour application works locally and try to debug any issues on your local\nmachine before re-deploying. You can also check the deployment log on the\napp's page in the Render dashboard.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eNotes on Render's Free Tier\u003c/h2\u003e\n\n\u003ch3\u003eFree Web Services\u003c/h3\u003e\n\n\u003cp\u003eAccording to Render's documentation on its \u003ca href=\"https://render.com/docs/free#free-web-services\"\u003eFree Web\nServices\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWeb Services on the free plan are automatically spun down after 15 minutes of\ninactivity. When a new request for a free service comes in, Render spins it up\nagain so it can process the request.\u003c/p\u003e\n\n\u003cp\u003eThis can cause a response delay of up to 30 seconds for the first request that\ncomes in after a period of inactivity.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThis means that, when you try to navigate to your app in the browser, it might\ntake a while to load — in our testing, it was often longer than 30 seconds, and\nsometimes quite a bit longer!\u003c/p\u003e\n\n\u003ch3\u003eFree PostgreSQL Databases\u003c/h3\u003e\n\n\u003cp\u003eWith Render's free tier, databases expire after 90 days. This means that, before\nthe end of the 90 days, you will need to back up your databases, delete the\nPostgreSQL instance from Render, create a new PostgreSQL instance, and populate\nit from the database backups. Render should send an email warning you that your\ndatabase will be expiring soon.\u003c/p\u003e\n\n\u003ch2\u003eBacking Up and Recreating Your Databases on Render\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e You do not need to complete the steps in this section until you get\nclose to the end of the 90 days. Feel free to skip this section until then if\nyou prefer.\u003c/p\u003e\n\n\u003cp\u003eBefore we launch into the instructions for backing up and recreating your Render\nPostgreSQL instance, let's take a closer look at the PSQL connection string. To\nget the connection string, navigate to your database in the Render dashboard,\nclick the connect button then the \"External Connection\" tab, then copy/paste the\n\"PSQL Command\" into your text editor. It will look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePGPASSWORD=############# psql -h ################-postgres.render.com -U my_database_user my_database\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe first element is the password for your database, which will be a\n32-character string. Next is the command you're running, in this case, \u003ccode\u003epsql\u003c/code\u003e.\nThe next component is the host (indicated by the \u003ccode\u003e-h\u003c/code\u003e flag), which will end with\n\"-postgres.render.com\". Next is the name of the database user (indicated by the\n\u003ccode\u003e-U\u003c/code\u003e flag), followed by the name of the database itself.\u003c/p\u003e\n\n\u003cp\u003eIf you paste the connection string into your terminal and run it, then run the\n\u003ccode\u003e\\l\u003c/code\u003e command to list your databases, you'll see that the username and database\nname match the entry for your PostgreSQL instance in the table that's printed.\nYou should also see the \u003ccode\u003ebird_app_db\u003c/code\u003e in the list. Note that the username is the\nsame as for the PostgreSQL instance.\u003c/p\u003e\n\n\u003ch3\u003eBacking Up Our Databases\u003c/h3\u003e\n\n\u003cp\u003eTo back up our databases, we're going to modify the connection string. We'll do\nthat once for each of the two databases we need to back up. We recommending\nmaking the edits to the string in your text editor then copy/pasting it into the\nterminal when you're done.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e Technically, we don't need to back up \u003ccode\u003emy_database\u003c/code\u003e because we don't\nhave any data stored in it. We'll do it here to demonstrate the process of\nbacking up and restoring multiple databases.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe first part of the string, the password, will remain the same. The \u003ccode\u003epsql\u003c/code\u003e\ncommand should be updated to \u003ccode\u003epg_dump\u003c/code\u003e instead. The host and username should\nalso stay the same. After that, we'll add the following options:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e--format\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ecustom \u003cspan class=\"nt\"\u003e--no-acl\u003c/span\u003e \u003cspan class=\"nt\"\u003e--no-owner\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe final component of the original connection string is the name of the\ndatabase. Leave the name and, after it, add a \u003ccode\u003e\u0026gt;\u003c/code\u003e to indicate that we want the\nresults of the command to be written to a file, followed by the name we want to\nuse for the backup file, with the \u003ccode\u003e.sql\u003c/code\u003e extension:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003emy_database \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e my_database.sql\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe updated string will look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003ePGPASSWORD\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c\"\u003e############# pg_dump -h ################-postgres.render.com -U my_database_user --format=custom --no-acl --no-owner my_database \u0026gt; my_database.sql\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ccode\u003ecd\u003c/code\u003e out of the app's directory, then run the command. It will not print any\noutput, but if you run \u003ccode\u003els\u003c/code\u003e, you should see the newly-created \u003ccode\u003e.sql\u003c/code\u003e file in the\ncurrent directory.\u003c/p\u003e\n\n\u003cp\u003eRepeat the process above for the \u003ccode\u003ebird_app_db\u003c/code\u003e database. The string will be\nexactly the same except for the last two elements: the name of the database and\nthe name of the backup file.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: Take care not to store any of the PSQL commands inside a project\nrepo. Those commands contain secure information so you don't want them to be\ndeployed to GitHub accidentally!\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3\u003eReplacing the Expiring PostgreSQL Instance\u003c/h3\u003e\n\n\u003cp\u003eReturn to the database page in the Render dashboard. Scroll to the bottom of the\npage, click \"Delete Database\" and follow the instructions. Next, create a new\nPostgreSQL instance by clicking the \"New +\" button and selecting PostgreSQL.\nGive your new instance a name (we'll use \u003ccode\u003emy_new_db\u003c/code\u003e), then scroll down to the\nbottom of the page, and click \"Create Database.\"\u003c/p\u003e\n\n\u003ch3\u003eRestoring the Databases to the New Instance\u003c/h3\u003e\n\n\u003cp\u003eOnce the new instance has been created (which might take a few minutes), copy\nthe new PSQL connection string and paste it into your code editor. Once again,\nwe'll be editing this string, this time to create the command to restore the\ndatabases from the backup files.\u003c/p\u003e\n\n\u003cp\u003eThe restore string will consist of the following:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ethe database password,\u003c/li\u003e\n\u003cli\u003ethe \u003ccode\u003epg_restore\u003c/code\u003e command,\u003c/li\u003e\n\u003cli\u003ethe host,\u003c/li\u003e\n\u003cli\u003ethe user,\u003c/li\u003e\n\u003cli\u003ethe options: \u003ccode\u003e--verbose --clean --no-acl --no-owner\u003c/code\u003e,\u003c/li\u003e\n\u003cli\u003ethe \u003ccode\u003e-d\u003c/code\u003e flag (for \u003ccode\u003edbname\u003c/code\u003e) followed by the name of the new database you're\nrestoring the data to (\u003ccode\u003emy_new_db\u003c/code\u003e),\u003c/li\u003e\n\u003cli\u003ethe name of the \u003ccode\u003e.sql\u003c/code\u003e file you're restoring from\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe final string will look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePGPASSWORD=################ pg_restore -h #################-postgres.render.com -U my_new_db_user --verbose --clean --no-acl --no-owner -d my_new_db my_database.sql\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRun the command in the terminal. You should see a flurry of activity as it\ncreates the database tables.\u003c/p\u003e\n\n\u003cp\u003eWe've restored the main database for our PostgreSQL instance, so the next step\nis to restore the database we created for our bird app. Before you can do that,\nyou'll first need to create the new database in PSQL. Execute the PSQL\nconnection string for the new PostgreSQL instance to launch the interactive\nterminal, then run the CREATE DATABASE command (you can use the same database\nname or a different one, as you prefer):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight sql\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eCREATE\u003c/span\u003e \u003cspan class=\"k\"\u003eDATABASE\u003c/span\u003e \u003cspan class=\"n\"\u003ebird_app_db\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOnce you've done that, you can restore the bird app data to the new database.\nUpdate the restore command, changing the database name and backup file name, and\nrun it in the terminal.\u003c/p\u003e\n\n\u003ch3\u003eConnecting the New Databases to Your Web Services\u003c/h3\u003e\n\n\u003cp\u003eThe final step in the process is to update the bird app's Web Service so that it\npoints to the new database. From the Render dashboard, select the bird app, then\nclick \"Environment\" in the nav on the left. Delete the value associated with the\nDATABASE_URL key and replace it with the Internal URL for the new \u003ccode\u003ebird_app_db\u003c/code\u003e\ndatabase. Now, if you click the app's URL, you should see the JSON for the list\nof birds.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eCongrats on deploying your first Rails app to the world wide web! Understanding\nthe deployment process and what it takes to run your application on another\ncomputer is an important step toward becoming a full-stack developer. Like\nanything new, this process can be daunting the first time you try it, but with\npractice and exposure, you'll build confidence over time.\u003c/p\u003e\n\n\u003cp\u003eIn the next lesson, we'll work on deploying a more complex application with a\nRails API backend and a React frontend, and talk through some of the challenges\nof running these two applications together.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhen creating a new Rails app from the terminal, what additional flag do you\nneed to use to be able to deploy it on Render?\u003c/li\u003e\n\u003cli\u003eWhat familiar process is used for deploying code to Render?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://render.com/docs/deploy-rails\"\u003eGetting Started with Ruby on Rails on Render\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://render.com/docs/databases\"\u003eRender Databases Guide\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"deploying-a-rails-api-to-render"},{"id":494204,"title":"Deploying a Rails-React App to Render","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-deploying-rails-react-to-render\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-deploying-rails-react-to-render\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-deploying-rails-react-to-render/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand the React build process and how to serve a React app from Rails\u003c/li\u003e\n\u003cli\u003eUnderstand challenges of client-side routing in a deployed application\u003c/li\u003e\n\u003cli\u003eDeploy a Rails API with a React frontend to Render\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn the previous lesson, we deployed a small Rails API application to Render to\nlearn how the deployment process works in general, and what steps are required\nto take the code from our machine and get it to run on a server.\u003c/p\u003e\n\n\u003cp\u003eIn this lesson, we'll be tackling a more complex app with a modern React-Rails\nstack, and explore some of the challenges of getting these two apps to run\ntogether on a single server.\u003c/p\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eTo follow along with this lesson, we have a pre-built React-Rails application\nthat you'll be deploying to Render. To start, head to this link, and \u003cstrong\u003efork\u003c/strong\u003e\nand \u003cstrong\u003eclone\u003c/strong\u003e the repository there:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/learn-co-curriculum/phase-4-deploying-demo-app-render\"\u003ehttps://github.com/learn-co-curriculum/phase-4-deploying-demo-app-render\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAfter downloading the code, set up the repository locally:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:create db:migrate\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis application has a Rails API with session-based authentication, a React\nfrontend using React Router for client-side routing, and PostgreSQL for the\ndatabase.\u003c/p\u003e\n\n\u003cp\u003eSpend some time familiarizing yourself with the code for the demo app before\nproceeding. We'll be walking through its setup and why certain choices were\nmade through the course of this lesson.\u003c/p\u003e\n\n\u003ch2\u003eReact Production Build\u003c/h2\u003e\n\n\u003cp\u003eOne of the great features that Create React App provides to developers is the\nability to build different versions of a React application for different\nenvironments.\u003c/p\u003e\n\n\u003cp\u003eWhen working in the \u003cstrong\u003edevelopment\u003c/strong\u003e environment, a typical workflow for adding\nnew features to a React application is something like this:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRun \u003ccode\u003enpm start\u003c/code\u003e to run a development server\u003c/li\u003e\n\u003cli\u003eMake changes to the app by editing the files\u003c/li\u003e\n\u003cli\u003eView those changes in the browser\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eTo enable this \u003cem\u003eexcellent\u003c/em\u003e developer experience, Create React App uses\n\u003ca href=\"https://webpack.js.org/\"\u003ewebpack\u003c/a\u003e under the hood to create a development server\nwith hot module reloading, so any changes to the files in our application will\nbe instantly visible to us in the browser. It also has a lot of other nice\nfeatures in development mode, like showing us good error and warning messages\nvia the console.\u003c/p\u003e\n\n\u003cp\u003eCreate React App is \u003cem\u003ealso\u003c/em\u003e capable of building an entirely different version of\nour application for \u003cstrong\u003eproduction\u003c/strong\u003e, also thanks to webpack. The end goal of our\napplication is to get it into the hands of our users via our website. For our\napp to run in production, we have a different set of needs:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eBuild\u003c/strong\u003e the static HTML, JavaScript and CSS files needed to run our app in\nthe browser, keeping them as small as possible\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eServe\u003c/strong\u003e the application's files from a server hosted online, rather than a\nlocal webpack development server\u003c/li\u003e\n\u003cli\u003eDon't show any error messages/warnings that are meant for developers rather\nthan our website's users\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eBuilding a Static React App\u003c/h3\u003e\n\n\u003cp\u003eWhen developing the frontend of a site using Create React App, our ultimate goal\nis to create a \u003cstrong\u003estatic site\u003c/strong\u003e consisting of pre-built HTML, JavaScript, and CSS\nfiles, which can be served by Rails when a user makes a request to the server to\nview our frontend. To demonstrate this process of \u003cstrong\u003ebuilding\u003c/strong\u003e the production\nversion of our React app and \u003cstrong\u003eserving\u003c/strong\u003e it from the Rails app, follow these\nsteps.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e1.\u003c/strong\u003e Build the production version of our React app:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm run build \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis command will generate a bundled and minified version of our React app in\nthe \u003ccode\u003eclient/build\u003c/code\u003e folder.\u003c/p\u003e\n\n\u003cp\u003eCheck out the files in that directory, and in particular the JavaScript files.\nYou'll notice they have very little resemblance to the files in your \u003ccode\u003esrc\u003c/code\u003e\ndirectory! This is because of that \u003cstrong\u003ebundling\u003c/strong\u003e and \u003cstrong\u003eminification\u003c/strong\u003e process:\ntaking the source code you wrote, along with any external JavaScript libraries\nyour code depends on, and squishing it as small as possible.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e2.\u003c/strong\u003e Move our static frontend files to the \u003ccode\u003e/public directory\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003emv \u003c/span\u003eclient/build/\u003cspan class=\"k\"\u003e*\u003c/span\u003e public\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis command will move all of the files and folders that are inside the\n\u003ccode\u003eclient/build\u003c/code\u003e directory into to the \u003ccode\u003epublic\u003c/code\u003e directory. The \u003ccode\u003epublic\u003c/code\u003e directory\nis used by Rails to serve \u003cstrong\u003estatic\u003c/strong\u003e assets, so when we run the Rails server, it\nwill be able to display the files from our production version of the React\napplication. When a user visits \u003ccode\u003ehttp://localhost:3000\u003c/code\u003e, Rails will return the\n\u003ccode\u003eindex.html\u003c/code\u003e file from this directory.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e3.\u003c/strong\u003e Run the Rails server:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eVisit \u003ca href=\"http://localhost:3000\"\u003ehttp://localhost:3000\u003c/a\u003e in the browser. You should\nsee the production version of the React application!\u003c/p\u003e\n\n\u003cp\u003eExplore the React app in the browser using the React dev tools. What differences\ndo you see between this version of the app and what you're used to when running\nin development mode?\u003c/p\u003e\n\n\u003cp\u003eNow you've seen how to build a production version of the React application\nlocally, and some of the differences between this version and the development\nversion you're more familiar with.\u003c/p\u003e\n\n\u003cp\u003eThere is one other issue with our React application to dive into before we deploy\nit: how can we deal with client-side routing?\u003c/p\u003e\n\n\u003ch3\u003eConfiguring Rails for Client-Side Routing\u003c/h3\u003e\n\n\u003cp\u003eIn our React application, we're using React Router to handle client-side\nrouting. Client-side routing means that a user should be able to navigate to the\nReact application, load all the HTML/CSS/JavaScript code just \u003cstrong\u003eonce\u003c/strong\u003e, and then\nclick through links in our site to navigate to different pages without making\nanother request to the server for a new HTML document.\u003c/p\u003e\n\n\u003cp\u003eWe have two client-side routes defined:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// client/src/components/App.js\u003c/span\u003e\n\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eSwitch\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eRoute\u003c/span\u003e \u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/new\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eNewRecipe\u003c/span\u003e \u003cspan class=\"na\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eRoute\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eRoute\u003c/span\u003e \u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eRecipeList\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eRoute\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eSwitch\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen we run the app using \u003ccode\u003enpm start\u003c/code\u003e and webpack is handling the React server,\nit can handle these client-side routing requests just fine! \u003cstrong\u003eHowever\u003c/strong\u003e, when\nwe're running React within the Rails application, we also have routes defined\nfor our Rails API, and Rails will be responsible for all the routing logic in\nour application. So let's think about what will happen from the point of view of\n\u003cstrong\u003eRails\u003c/strong\u003e when a user makes a request to these routes.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eGET /\u003c/code\u003e: Rails will respond with the \u003ccode\u003epublic/index.html\u003c/code\u003e file\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eGET /new\u003c/code\u003e: Rails will look for a \u003ccode\u003eGET /new\u003c/code\u003e route in the \u003ccode\u003econfig/routes.rb\u003c/code\u003e\nfile. If we don't have this route defined, it will return a 404 error.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAny other client-side routes we define in React will have the same issue as\n\u003ccode\u003e/new\u003c/code\u003e: since Rails is handling the routing logic, it will look for routes\ndefined in the \u003ccode\u003econfig/routes.rb\u003c/code\u003e file to determine how to handle all requests.\u003c/p\u003e\n\n\u003cp\u003eWe can solve this problem by setting up a \u003cstrong\u003ecustom route\u003c/strong\u003e in our Rails\napplication, and handle any requests that come through that \u003cstrong\u003earen't\u003c/strong\u003e requests\nfor our API routes by returning the \u003ccode\u003epublic/index.html\u003c/code\u003e file instead.\u003c/p\u003e\n\n\u003cp\u003eHere's how it works:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edraw\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003enamespace\u003c/span\u003e \u003cspan class=\"ss\"\u003e:api\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:recipes\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/signup\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"users#create\"\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/me\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"users#show\"\u003c/span\u003e\n    \u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/login\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"sessions#create\"\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edelete\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/logout\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"sessions#destroy\"\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"*path\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"fallback#index\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003econstraints: \u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003exhr?\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehtml?\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAll the routes for our API are defined \u003cstrong\u003efirst\u003c/strong\u003e in the \u003ccode\u003eroutes.rb\u003c/code\u003e file. We use\nthe \u003ca href=\"https://guides.rubyonrails.org/routing.html#controller-namespaces-and-routing\"\u003enamespacing\u003c/a\u003e to differentiate the API requests from other requests.\u003c/p\u003e\n\n\u003cp\u003eThe last method in the \u003ccode\u003eroutes.rb\u003c/code\u003e file handles all other \u003ccode\u003eGET\u003c/code\u003e requests by\nsending them to a special \u003ccode\u003eFallbackController\u003c/code\u003e with an \u003ccode\u003eindex\u003c/code\u003e action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/fallback_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFallbackController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActionController\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eBase\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003efile: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'public/index.html'\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis action has just one job: to render the HTML file for our React application!\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: It's important that this \u003ccode\u003eFallbackController\u003c/code\u003e inherits from\n\u003ccode\u003eActionController::Base\u003c/code\u003e instead of \u003ccode\u003eApplicationController\u003c/code\u003e, which is what\nyour API controllers inherit from. Why? The \u003ccode\u003eApplicationController\u003c/code\u003e class in a\nRails API inherits from the\n\u003ca href=\"https://api.rubyonrails.org/classes/ActionController/API.html\"\u003e\u003ccode\u003eActionController::API\u003c/code\u003e class\u003c/a\u003e, which doesn't include\nthe methods for rendering HTML. For our other controllers, this isn't a\nproblem, since they only need to render JSON responses. But for the\n\u003ccode\u003eFallbackController\u003c/code\u003e, we need the ability to render an HTML file for our React\napplication.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eExperiment with the code above. Run \u003ccode\u003erails s\u003c/code\u003e to run the application. Try\ncommenting out the last line of the \u003ccode\u003eroutes.rb\u003c/code\u003e file, and visit\n\u003ca href=\"http://localhost:3000/new\"\u003ehttp://localhost:3000/new\u003c/a\u003e. You should see a 404\npage. Comment that line back in, and make the same request. Success!\u003c/p\u003e\n\n\u003cp\u003eNow that you've seen how to create a production version of our React app\nlocally, and tackled some thorny client-side routing issues, let's talk about\nhow to deploy the application to Render.\u003c/p\u003e\n\n\u003ch2\u003eRender Build Process\u003c/h2\u003e\n\n\u003cp\u003eThink about the steps to build our React application locally. What did we have\nto do to build the React application in such a way that it could be served by\nour Rails application? Well, we had to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRun \u003ccode\u003enpm install --prefix client\u003c/code\u003e to install any dependencies\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003enpm run build --prefix client\u003c/code\u003e to create the production app\u003c/li\u003e\n\u003cli\u003eMove the code from the \u003ccode\u003eclient/build\u003c/code\u003e folder to the \u003ccode\u003epublic\u003c/code\u003e folder\u003c/li\u003e\n\u003cli\u003eRun \u003ccode\u003erails s\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWe would also need to repeat these steps any time we made any changes to the\nReact code, i.e., to anything in the \u003ccode\u003eclient\u003c/code\u003e folder. Ideally, we'd like to be\nable to \u003cstrong\u003eautomate\u003c/strong\u003e those steps when we deploy this app to Render, so we can\njust push up new versions of our code to GitHub and deploy them like we were\nable to do in the previous lesson.\u003c/p\u003e\n\n\u003cp\u003eLuckily, we already have something that will help us do that! Recall from the\nlast lesson that one of the deployment steps was to create a build script in the\n\u003ccode\u003ebin\u003c/code\u003e directory. If you look in the \u003ccode\u003ebin\u003c/code\u003e directory of our demo app, you'll see\na \u003ccode\u003erecipes-build.sh\u003c/code\u003e file that contains the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e#!/usr/bin/env bash\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# exit on error\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e errexit\n\nbundle \u003cspan class=\"nb\"\u003einstall\n\u003c/span\u003ebundle \u003cspan class=\"nb\"\u003eexec \u003c/span\u003erake db:migrate \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis file runs the commands to build the Rails API portion of our app when\nchanges are pushed to GitHub. All we need to do is add the corresponding\ncommands for the front end:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e#!/usr/bin/env bash\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# exit on error\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e errexit\n\n\u003cspan class=\"c\"\u003e# Add build commands for front end\u003c/span\u003e\n\u003cspan class=\"nb\"\u003erm\u003c/span\u003e \u003cspan class=\"nt\"\u003e-rf\u003c/span\u003e public\nnpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e npm run build \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003cspan class=\"nb\"\u003ecp\u003c/span\u003e \u003cspan class=\"nt\"\u003e-a\u003c/span\u003e client/build/. public/\n\nbundle \u003cspan class=\"nb\"\u003einstall\n\u003c/span\u003ebundle \u003cspan class=\"nb\"\u003eexec \u003c/span\u003erake db:migrate \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe code we added does the following whenever a build is launched:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRemoves the \u003ccode\u003epublic\u003c/code\u003e folder that contains the current front end production\nbuild.\u003c/li\u003e\n\u003cli\u003eInstalls the dependencies for the app.\u003c/li\u003e\n\u003cli\u003eRuns the production build.\u003c/li\u003e\n\u003cli\u003eRecreates the \u003ccode\u003epublic\u003c/code\u003e directory and copies the new production build files\ninto it.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFinally, we need to run the following command in the terminal to make sure the\nscript is executable:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003echmod \u003c/span\u003ea+x bin/recipes-build.sh\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith this build script, any time we make a change to our app — in either the\nfront end or the back end — all we need to do is push the changes to GitHub and\nrelaunch the build from the Render dashboard!\u003c/p\u003e\n\n\u003ch2\u003eCreating the Master Key File\u003c/h2\u003e\n\n\u003cp\u003eYou may recall that, in the last lesson, we made edits to several files to\nconfigure the app for Render. Those edits have all been made to the demo app's\nfiles. However, there is one thing missing.\u003c/p\u003e\n\n\u003cp\u003eRecall that when we created the Web Service on Render, we added an environment\nvariable called \u003ccode\u003eRAILS_MASTER_KEY\u003c/code\u003e and pasted in the value that's in the\n\u003ccode\u003econfig/master.key\u003c/code\u003e file. If you look in the \u003ccode\u003econfig\u003c/code\u003e folder for the demo app,\nhowever, you'll see that file isn't there.\u003c/p\u003e\n\n\u003cp\u003eWhen you create a Rails app from scratch, the \u003ccode\u003emaster.key\u003c/code\u003e file is automatically\ncreated. However, this file contains secure information so it should not be\npushed to GitHub. If you look in the \u003ccode\u003e.gitignore\u003c/code\u003e file, you'll see it listed\nthere. As a result, when you fork and clone a repo from GitHub (as you did with\nthe demo app), the \u003ccode\u003emaster.key\u003c/code\u003e file will not be present. So we need to create\nit.\u003c/p\u003e\n\n\u003cp\u003eTo do that, first delete the \u003ccode\u003econfig/credentials.yml.enc\u003c/code\u003e file, which holds the\nencrypted version of the key. Then run the following command in the terminal:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ EDITOR\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"code --wait\"\u003c/span\u003e bin/rails credentials:edit\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: if you use a different text editor than VS Code, you will need to replace\n\u003ccode\u003ecode\u003c/code\u003e with the appropriate command.\u003c/p\u003e\n\n\u003cp\u003eThe command above will open a file in VS Code and \"wait\" for you to close it\nbefore completing the process of creating the credential files. You can edit the\nsecret key base in the file if you choose, but we'll leave it as is, so go ahead\nand close the file. The command in the terminal will now complete, and you\nshould see both the \u003ccode\u003ecredentials.yml.enc\u003c/code\u003e and \u003ccode\u003emaster.key\u003c/code\u003e files in the \u003ccode\u003econfig\u003c/code\u003e\nfolder.\u003c/p\u003e\n\n\u003cp\u003eSee the Rails Guide on \u003ca href=\"https://guides.rubyonrails.org/security.html#environmental-security\"\u003eEnvironmental Security\u003c/a\u003e if you'd like\nmore information about these files.\u003c/p\u003e\n\n\u003ch2\u003eDeploy to Render\u003c/h2\u003e\n\n\u003cp\u003eWe're now ready to create a new database and Web Service and deploy the app to\nRender. If you need a refresher on any of the steps below, look back at the\nprevious lesson.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eCommit and push your latest changes.\u003c/li\u003e\n\u003cli\u003eGo to the Render dashboard, click on your PostgreSQL instance, and copy the\nPSQL connection command.\u003c/li\u003e\n\u003cli\u003eRun the command in the terminal to open the PSQL terminal, then use the SQL\n\"CREATE DATABASE\" command to create a new database for the app (e.g.,\n\u003ccode\u003erecipe_app_db\u003c/code\u003e). Exit PSQL with the \u003ccode\u003e\\q\u003c/code\u003e command.\u003c/li\u003e\n\u003cli\u003eReturn to the Render dashboard and create a new Web Service.\u003c/li\u003e\n\u003cli\u003eGive the app a name and set the Environment to Ruby.\u003c/li\u003e\n\u003cli\u003eEnter the build command (\u003ccode\u003e./bin/recipes-build.sh\u003c/code\u003e) and start command (\u003ccode\u003ebundle\nexec puma -C config/puma.rb\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003eAdd the \u003ccode\u003eDATABASE_URL\u003c/code\u003e environment variable; be sure to change the database\nname in the URL to \u003ccode\u003erecipe_app_db\u003c/code\u003e (or whatever you named it).\u003c/li\u003e\n\u003cli\u003eAdd the \u003ccode\u003eRAILS_MASTER_KEY\u003c/code\u003e environment variable; enter the key contained in\nthe \u003ccode\u003emaster.key\u003c/code\u003e file we created above as the value.\u003c/li\u003e\n\u003cli\u003eClick the \"Create Web Service\" button at the bottom of the page.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eMaking an Update\u003c/h2\u003e\n\n\u003cp\u003eTry making a minor change in the app's front end. Commit and push the changes,\nthen launch a new build from the Render dashboard. Once the deploy is complete,\nrefresh the page and verify that our updated build script has deployed the\nchange.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eCreating a website out of multiple applications working together adds a\nsignificant amount of complexity when it comes time to deploy our application.\nThe upside to this approach is we get to leverage the strengths of each of the\ntools we're using: React for a speedy, responsive user interface, and Rails for\na robust, well-designed backend to communicate with the database.\u003c/p\u003e\n\n\u003cp\u003eBy spending some time up front to understand and automate parts of the\ndeployment process, we can make future deployments simpler.\u003c/p\u003e\n\n\u003cp\u003eFor your future projects using a React frontend and Rails API backend, we'll\nprovide a template project to use so you don't have to worry about configuring\nthe tricky parts of the deployment process yourself. However, it's helpful to\nhave an understanding of this configuration should you wish to customize it\nor troubleshoot issues related to deployments in the future.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhy does deploying the production version of our Rails/React app lead to\nrouting problems? What are the two ways we can fix the issue?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://blog.Render.com/a-rock-solid-modern-web-stack\"\u003eRender Rails-React Setup\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/learn-co-curriculum/phase-4-deploying-demo-app-render\"\u003eDemo App\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"deploying-a-rails-react-app-to-render"},{"id":483361,"title":"Deploying Quiz","type":"Quizzes::Quiz","indent":0,"locked":false,"assignmentExportId":"g460c5e42fffa1df4bfcbe155d17e516a","questionCount":5,"timeLimit":null,"attempts":3,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-quiz-deploying\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\"\u003e\n  \u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-quiz-deploying/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\n\u003c/header\u003e\n\n\u003cp\u003eIt's time to check your knowledge! Use this quiz to create a custom study guide.\nNote any answers that were marked incorrect, so you can study the relevant\nmaterial and try this quiz again.\u003c/p\u003e\n\n\u003cp\u003eIf you don't know the answer to a question, please do not guess. Instead, select\n\"I don't know\". It's OK not to know everything and to admit when we're unsure.\u003c/p\u003e","exportId":"g2a0853c1241e49db847e0ce9493490b6"}]},{"id":49296,"name":"Code Challenges","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"g644adb6b778c32aa7e46883c6d768da6","items":[{"id":483362,"title":"Phase 4 Rubric","type":"Assignment","indent":0,"locked":false,"submissionTypes":null,"graded":false,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e\u003cspan\u003e: Students must score\u0026nbsp;3 or higher on\u0026nbsp;\u003c/span\u003e\u003cstrong\u003eeach\u003c/strong\u003e\u003cspan\u003e\u0026nbsp;deliverable to pass the overall code challenge.\u003c/span\u003e\u003c/p\u003e","exportId":"g66b20be01ec7d2e39201c8e6337a5fe2"},{"id":483363,"title":"Phase 4 Code Challenge Instructions","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch4\u003e\u003cstrong\u003eBefore you can start working on the code challenge\u003c/strong\u003e\u003c/h4\u003e\n\u003col\u003e\n    \u003cli\u003eFind your code challenge in the Code Challenges module\u003c/li\u003e\n    \u003cli\u003eOpen the code challenge assignment and download the linked ZIP file\u003c/li\u003e\n    \u003cli\u003eUnzip the file on your computer into a directory where you normally work on labs\n        \u003cul style=\"list-style-type: circle;\"\u003e\n            \u003cli\u003eFor WSL users \u003cstrong\u003eonly\u003c/strong\u003e, make sure to move the folder to your Linux file system after unzipping.\n                \u003cul style=\"list-style-type: circle;\"\u003e\n                    \u003cli data-stringify-indent=\"0\"\u003eOpen Ubuntu\u003c/li\u003e\n                    \u003cli data-stringify-indent=\"0\"\u003eType\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003ccode class=\"c-mrkdwn__code\" data-stringify-type=\"code\"\u003eexplorer.exe .\u003c/code\u003e\n                        \u003cspan\u003e (type that exactly - including the period after explorer.exe) \u003c/span\u003eto open the current WSL directory in the file explorer\n                    \u003c/li\u003e\n                    \u003cli data-stringify-indent=\"0\"\u003eCopy the code challenge directory into the WSL directory in the file explorer\u003c/li\u003e\n                    \u003cli data-stringify-indent=\"0\"\u003eIf you have trouble with any of these steps, watch the \u003cstrong\u003eWSL Troubleshooting \u003c/strong\u003evideo below\u003c/li\u003e\n                \u003c/ul\u003e\n            \u003c/li\u003e\n        \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n        \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;cd\u0026nbsp;\u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e into the directory in your terminal (after, run \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;ls \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;; you should see a \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;bin/ \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;directory and a \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;code-challenge.bundle \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;file)\n    \u003c/li\u003e\n    \u003cli\u003eRun \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;ruby bin/start \u0026lt;your-name\u0026gt;\u0026nbsp;\u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e from the directory; this will create a new directory called \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;code-challenge/\u0026nbsp;\u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n        \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;cd\u0026nbsp;\u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e to and open the new \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;code-challenge/ \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;directory in your code editor\n    \u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4\u003e\u003cstrong\u003eTo work on your code challenge\u003c/strong\u003e\u003c/h4\u003e\n\u003col\u003e\n    \u003cli\u003eEnsure that you're in the\u0026nbsp;\u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;code-challenge/ \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;directory\u003c/li\u003e\n    \u003cli\u003eFollow the instructions in the \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;README.md \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;file\u003c/li\u003e\n    \u003cli\u003e\n        \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;git add . \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;and \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;git commit \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;inside of the\u0026nbsp;\u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;code-challenge/ \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;directory often as you're working\n    \u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4\u003e\u003cstrong\u003eTo submit the code challenge\u003c/strong\u003e\u003c/h4\u003e\n\u003col\u003e\n    \u003cli\u003eNavigate to the parent directory of \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;code-challenge/ \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;in your terminal.\u003c/li\u003e\n    \u003cli\u003eRun \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;ruby bin/end \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e, which will create a new file, \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;\u0026lt;your-name\u0026gt;.bundle \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;in that directory (for example, \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;alicia.bundle \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e).\u003c/li\u003e\n    \u003cli\u003eNavigate back to the code challenge assignment in the Phase 4 Milestones module in Canvas\u003c/li\u003e\n    \u003cli\u003eUpload \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;\u0026lt;your-name\u0026gt;.bundle \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;to the assignment and submit\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eReach out to your instructors\u0026nbsp;\u003cstrong\u003eimmediately\u0026nbsp;\u003c/strong\u003eif you run into issues downloading, working on, or uploading your code challenge.\u003c/p\u003e\n\u003cp\u003eUse this video to guide you through these instructions:\u003c/p\u003e\n\u003cp\u003e\n    \u003ciframe src=\"https://www.youtube-nocookie.com/embed/3AM3qXUtnQY\" width=\"560\" height=\"315\" allowfullscreen=\"allowfullscreen\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\u003e\u003c/iframe\u003e\n\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ch4\u003e\u003cstrong\u003eWSL Troubleshooting\u003c/strong\u003e\u003c/h4\u003e\n\u003cp\u003eIf you are having trouble working on your code challenge in WSL, make sure to follow the steps in this video to ensure your code is running in the WSL file system.\u003c/p\u003e\n\u003cp\u003e\n    \u003ciframe title=\"embedded content\" src=\"https://www.loom.com/embed/eca62789008d4c879c206c57ef999824\" width=\"640\" height=\"480\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\"\u003e\u003c/iframe\u003e\n\u003c/p\u003e","exportId":"phase-4-code-challenge-instructions"},{"id":483364,"title":"Phase 4 Code Challenge: Pizzas","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a file upload","graded":true,"pointsPossible":15.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cp\u003e\u003ca class=\"instructure_file_link inline_disabled\" title=\"phase-4-rails-api-code-challenge-pizza-restaurants-070822.zip\" href=\"viewer/files/phase-4-rails-api-code-challenge-pizza-restaurants-070822.zip?canvas_=1\u0026amp;canvas_qs_wrap=1\" target=\"_blank\"\u003ephase-4-rails-api-code-challenge-pizza-restaurants-070822.zip\u003c/a\u003e\u003c/p\u003e","exportId":"g631544e193ded0257d6614233b950fab"}]},{"id":49297,"name":"Phase 4 Project","status":"completed","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g2037806fa5058e66f6d5018c744e01cf","items":[{"id":483368,"title":"Phase 4 Project Guidelines","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-project-guidelines\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-project-guidelines\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-project-guidelines/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eBuild a full-stack project with a React frontend and a Rails backend\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou've made it! You're ready to build a full-stack application with a \u003cem\u003epowerful\u003c/em\u003e\nbackend framework! The goals of this project are to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eput together all the skills you've learned throughout the program\u003c/li\u003e\n\u003cli\u003eprepare you for building a capstone project in Phase 5\u003c/li\u003e\n\u003cli\u003ebuild a quality project to include in your portfolio\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe instructions below will walk you through the process of ideating and\nplanning your app: deciding on your models and relationships, planning how the\ninformation will be laid out on the page, etc. You should work through all the\nplanning steps before you start doing any coding.\u003c/p\u003e\n\n\u003ch2\u003eRequirements\u003c/h2\u003e\n\n\u003cp\u003eFor this project, you must:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse a Rails API backend with a React frontend.\u003c/li\u003e\n\u003cli\u003eHave \u003cstrong\u003eat least\u003c/strong\u003e three models on the backend, that include the following:\n\n\u003cul\u003e\n\u003cli\u003eAt least two one-to-many relationships.\u003c/li\u003e\n\u003cli\u003eAt least one reciprocal many-to-many relationship (implemented by using 2\nhas-many-through relationships). \u003cstrong\u003eNote:\u003c/strong\u003e in order to accomplish this, your\nproject must include a joins table. This joins table must include a user\nsubmittable attribute.\u003c/li\u003e\n\u003cli\u003eFull CRUD actions for at least one resource.\u003c/li\u003e\n\u003cli\u003eMinimum of create and read actions for EACH resource.\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003cli\u003eHave at least three different client-side routes using React Router. Be sure\nto include a nav bar or other UI element that allows users to navigate\nbetween routes.\u003c/li\u003e\n\u003cli\u003eImplement authentication/authorization, including password protection. A user\nmust be able to:\n\n\u003cul\u003e\n\u003cli\u003esign up with a new user account,\u003c/li\u003e\n\u003cli\u003elog in to the site with a secure password and stay logged in via user ID in\nthe session hash, and\u003c/li\u003e\n\u003cli\u003elog out of the site.\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: a user should only be able to edit and delete resources if they are\nlogged in and the creator of that resource. For example, if we consider the\nexample described below with models of User, DogHouse, and Review, I would only\nbe able to edit or delete the reviews that I created.\u003c/p\u003e\n\n\u003ch2\u003eProject Setup\u003c/h2\u003e\n\n\u003cp\u003eOnce you've got a solid plan in place for your app and you're ready to start\ncoding, it's recommended that you use this project template:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/learn-co-curriculum/project-template-react-rails-api\"\u003ehttps://github.com/learn-co-curriculum/project-template-react-rails-api\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe project template is set up the same way as all of the labs from this phase.\nIt has also been configured to enable you to deploy the app to Render using a\nsimilar process to the one described in the Deploying module.\u003c/p\u003e\n\n\u003cp\u003eMake sure to follow the setup instructions in the template's readme to get\nstarted.\u003c/p\u003e\n\n\u003cp\u003eAlternately, if you'd like to set everything up from scratch, you can use this\nproject setup guide:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/learn-co-curriculum/react-rails-project-setup-guide\"\u003ehttps://github.com/learn-co-curriculum/react-rails-project-setup-guide\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eProject Guidance\u003c/h2\u003e\n\n\u003ch3\u003ePlanning\u003c/h3\u003e\n\n\u003ch4\u003eUser Stories\u003c/h4\u003e\n\n\u003cp\u003eStart by deciding on a domain for your app (such as \"AirBNB for dogs\"). Then,\ndecide what \u003cstrong\u003euser stories\u003c/strong\u003e your app will need. It is helpful to break up your\nuser stories between what is required for the \u003ca href=\"https://blog.crisp.se/2016/01/25/henrikkniberg/making-sense-of-mvp\"\u003e\u003cstrong\u003eMinimum Viable Product\u003c/strong\u003e (MVP)\u003c/a\u003e\nversion of your app, and what you'd like to save for stretch features after\nyou've met your MVP goals.\u003c/p\u003e\n\n\u003cp\u003eFor example:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eMVP: As a user, I can:\n\n\u003cul\u003e\n\u003cli\u003eSign up for an account,\u003c/li\u003e\n\u003cli\u003eLog in to the site \u0026amp; remain logged in,\u003c/li\u003e\n\u003cli\u003eLog out,\u003c/li\u003e\n\u003cli\u003eView a list of all available dog houses in my area and their respective\nreviews,\u003c/li\u003e\n\u003cli\u003eCreate a review for one specific dog house,\u003c/li\u003e\n\u003cli\u003eModify or delete a review that I left,\u003c/li\u003e\n\u003cli\u003eCreate a new dog house listing.\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003cli\u003eStretch: As a user, I can:\n\n\u003cul\u003e\n\u003cli\u003eView dog houses on a map,\u003c/li\u003e\n\u003cli\u003eSearch dog houses based on their distance from my location,\u003c/li\u003e\n\u003cli\u003eFilter dog houses based on their average rating.\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4\u003eModels and Relationships\u003c/h4\u003e\n\n\u003cp\u003eAfter deciding on your app's user stories, you can design the \u003cstrong\u003emodels\u003c/strong\u003e that\nyour application will need in order to represent these user stories.\u003c/p\u003e\n\n\u003cp\u003eLook at the list of your user stories, and pick out the different nouns/objects\nthat you need to represent these user stories. These objects inform what models\nyou need. For example, from the list above, we have:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUser\u003c/li\u003e\n\u003cli\u003eDog House\u003c/li\u003e\n\u003cli\u003eReview\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eYou can also get a sense of the relationships between the models and use that as\nthe basis of your \u003cstrong\u003eEntity Relationship Diagram\u003c/strong\u003e (ERD). For example, we can\ntell based on the user stories above that a \u003cstrong\u003ereview\u003c/strong\u003e belongs to a specific\n\u003cstrong\u003euser\u003c/strong\u003e — since a user is able to create a review — and a \u003cstrong\u003ereview\u003c/strong\u003e belongs to\na specific \u003cstrong\u003edog house\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eYou can use a website like \u003ca href=\"https://dbdiagram.io/\"\u003edbdiagram.io\u003c/a\u003e to help make an ERD and represent\nthese relationships, or draw out something simple:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eUser -\u0026lt; Review \u0026gt;- DogHouse\n\nDogHouse \u0026gt;- User\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is also a good time to think about what attributes your models will need.\nWhat foreign keys are needed to establish relationships? What other attributes\nmight you need to display data in your frontend, or make other aspects of your\nuser stories work?\u003c/p\u003e\n\n\u003ch4\u003eWireframes\u003c/h4\u003e\n\n\u003cp\u003eFor your frontend, it's a good idea to follow the ideas from\n\u003ca href=\"https://reactjs.org/docs/thinking-in-react.html\"\u003eThinking in React\u003c/a\u003e as you're designing your React application. That means\nstarting with a visual representation of what your application should look like,\nin the form of a wireframe. The wireframe should give you a basic visual\nrepresentation of what each page of your application should look like, and it\nshould capture all of your user stories.\u003c/p\u003e\n\n\u003cp\u003eHere are some tools for wireframing (pen and paper is also a fine choice!):\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://excalidraw.com/\"\u003eExcalidraw - basic hand-drawn wireframes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.figma.com/\"\u003eFigma - professional design tool\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://balsamiq.com/\"\u003eBalsamiq - professional wireframe tool\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eUse your wireframe to plan out what components you'll need and design your\ncomponent hierarchy, following the ideas from \u003ca href=\"https://reactjs.org/docs/thinking-in-react.html\"\u003eThinking in React\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003eExecution\u003c/h3\u003e\n\n\u003cp\u003eOnce you have your plan in place, and have a sense of your:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUser stories\u003c/li\u003e\n\u003cli\u003eModels (including relationships and attributes)\u003c/li\u003e\n\u003cli\u003eWireframes\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIt's time to start building! As you're building, work on each feature in\n\u003ca href=\"https://agileforall.com/vertical-slices-and-scale/\"\u003evertical slices\u003c/a\u003e rather\nthan horizontal. For example, rather than building out \u003cstrong\u003eall\u003c/strong\u003e the models,\nroutes and controller actions in the backend, then working on the components in\nthe frontend and finally styling everything, work on one \u003cstrong\u003efeature\u003c/strong\u003e at a time,\nsuch as working on login, then displaying a list of dog houses, then leaving a\nreview.\u003c/p\u003e\n\n\u003cp\u003eYou can visualize all the parts of an app you need to build as a grid, with the\ndesired features in columns and the different layers of the stack in rows:\u003c/p\u003e\n\n\u003ctable\u003e\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003cth\u003eSign in flow\u003c/th\u003e\n\u003cth\u003eView dog houses\u003c/th\u003e\n\u003cth\u003eLeave a review\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eMigrations\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eModels\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eSeed Data\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eController actions\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eView Logic\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eData Fetching\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eStyling\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\n\u003cp\u003eYou may be tempted to order your project timeline row-by-row. Do not do this! If\nyou try to build all your migrations, then all your models, then all your\ncontrollers, then all your fetch calls, then all your view logic you will have\na bad time. Inevitably, your view logic ends up requiring changes to the\nunderlying layers, and you end up building models that you never use. If you\ninstead build \u003cstrong\u003eeach feature\u003c/strong\u003e (each \u003cstrong\u003evertical slice\u003c/strong\u003e) in its entirety before\nmoving on to the next feature, you'll minimize rewriting, and end up with\nworking features without waste.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAdd feature by feature, not model by model or layer by layer.\u003c/li\u003e\n\u003cli\u003eTest each feature, add styles, and create seed data as you go (not all at once\nat the end)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAlso, remember to prioritize your MVP features. It can be tempting to try and\nbuild everything at once, but that is a sure-fire way to end up with many broken\nfeatures instead of a solid core of working features.\u003c/p\u003e\n\n\u003ch2\u003eDeploying\u003c/h2\u003e\n\n\u003cp\u003eThe template project has all the starter code needed to help you deploy your\napplication to Render. It's recommended to deploy your project early and push up\nchanges often to ensure that your code works equally well in production and\ndevelopment environments.\u003c/p\u003e\n\n\u003cp\u003eFollow the instructions in the template to deploy your app!\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/learn-co-curriculum/project-template-react-rails-api\"\u003eProject Template: React/Rails API\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dbdiagram.io/\"\u003eERD Visualizations: dbdiagram.io\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://excalidraw.com/\"\u003eExcalidraw - basic hand-drawn wireframes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.figma.com/\"\u003eFigma - professional design tool\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://balsamiq.com/\"\u003eBalsamiq - professional wireframe tool\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"phase-4-project-guidelines"}]},{"id":49298,"name":"Blog Links","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"g3c4a667b10f1b859c671e1c03580ba90","items":[{"id":483376,"title":"Phase 4 Blog","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cp\u003e\u003cspan\u003eSubmit the link to your blog post below.\u003c/span\u003e\u003c/p\u003e","exportId":"gc9fe59f13503557cc1e406a309244d50"}]},{"id":49299,"name":"Data Structures","status":"started","unlockDate":null,"prereqs":[],"requirement":"all","sequential":false,"exportId":"g80c6e20b53abc1568e0740e2d47f2294","items":[{"id":483377,"title":"Introduction to Data Structures","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-intro-to-data-structures\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-intro-to-data-structures\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-intro-to-data-structures/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand what you will learn in this section\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, we'll return to a topic that will help you greatly as you\nprepare for the job hunt and get ready for technical interviews: data\nstructures! Understanding \u003cstrong\u003ewhen to use different data structures\u003c/strong\u003e as well as\n\u003cstrong\u003ehow to implement them\u003c/strong\u003e will equip you with more tools to solve common\nalgorithm problems more efficiently, and will also improve your skills at\nwriting Object Oriented code.\u003c/p\u003e\n\n\u003cp\u003eThe objectives for this section are to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eEvaluate the tradeoffs between choosing one data structure over another\u003c/li\u003e\n\u003cli\u003eImplement common data structures\u003c/li\u003e\n\u003cli\u003eIdentify the Big O of common data structure methods\u003c/li\u003e\n\u003cli\u003eApply common data structures to algorithm problems\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIn the coming lessons, we'll cover these objectives by introducing several\ncommon data structures, showing how to implement them in Ruby, and giving you\npractice with problems that can be solved using these data structures so you can\nrecognize common patterns to identify when a particular data structure is\nappropriate.\u003c/p\u003e\n\n\u003cp\u003eLet's dive in!\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://visualgo.net/en\"\u003eVisuAlgo\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eVisualize algorithms with animations!\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.cs.usfca.edu/%7Egalles/visualization/Algorithms.html\"\u003eData Structure Visualizations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://leetcode.com/explore/learn/\"\u003eLeetCode Learn\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eStudy guides for common data structures\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"introduction-to-data-structures"},{"id":483378,"title":"Using Data Structures","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-using-data-structures\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-using-data-structures\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-using-data-structures/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDefine \"Data Structure\"\u003c/li\u003e\n\u003cli\u003eEvaluate the properties of common data structures (arrays and hashes)\u003c/li\u003e\n\u003cli\u003eEstablish a general process to build data structures\u003c/li\u003e\n\u003cli\u003eIdentify when to use different data structures\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWhat is a data structure? In essence, a data structure is a tool for organizing\na collection data so that we can interact with it efficiently. All data\nstructures share the following characteristics:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThey store \u003cstrong\u003ecollections of values\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eThey also store the \u003cstrong\u003erelationship between those values\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eThey provide \u003cstrong\u003emethods for interacting with those values\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eConsider a data structure you've been using for quite some time: an \u003cstrong\u003earray\u003c/strong\u003e.\nArrays are a common data structure that are built in to most programming\nlanguages. In Ruby and JavaScript, arrays have the following characteristics:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThey stores a collection of values of any data type\u003c/li\u003e\n\u003cli\u003eThey stores those values in an indexed list\u003c/li\u003e\n\u003cli\u003eThey provide many methods for interacting with those values, like:\n\n\u003cul\u003e\n\u003cli\u003eaccessing elements at a particular index position\u003c/li\u003e\n\u003cli\u003eadding elements\u003c/li\u003e\n\u003cli\u003eremoving elements\u003c/li\u003e\n\u003cli\u003eand iterating through every element\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy Do We Need Different Data Structures?\u003c/h2\u003e\n\n\u003cp\u003eWhile built-in data structures like arrays and hashes are useful in many\nscenarios, it's also beneficial to be able to create custom data structures that\ncan be used to help solve specific problems \u003cstrong\u003emore efficiently\u003c/strong\u003e than using\nbuilt-in data structures. Different data structures excel in different\nsituations.\u003c/p\u003e\n\n\u003cp\u003eFor example, imagine a problem where you needed to add and remove elements from\nthe beginning of a list. If we tried solving this problem using an array, our\nsolution wouldn't be particularly efficient, since adding/removing elements from\nthe beginning of an array has a Big O runtime of O(n), because adding/removing\nelements from the beginning of an array causes every other element in the array\nto be re-indexed. We can solve these kinds of problems using another data\nstructure that you'll learn about later in this section, a \u003cstrong\u003elinked list\u003c/strong\u003e,\nwhich has a O(1) runtime for adding/removing elements from the beginning of the\nlist.\u003c/p\u003e\n\n\u003cp\u003eIn fact, you've already interacted a lot of different data structures besides\njust arrays and hashes!\u003c/p\u003e\n\n\u003cp\u003eFor example, any time you've interacted with the DOM in JavaScript, you've been\ninteracting with a special data structure known as a \u003cstrong\u003etree\u003c/strong\u003e; and\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\"\u003e\u003ccode\u003equerySelector\u003c/code\u003e\u003c/a\u003e is a \u003cstrong\u003etree traversal method\u003c/strong\u003e for efficiently finding a\nchild element within the DOM tree.\u003c/p\u003e\n\n\u003cp\u003eReact also uses its own custom data structure, the \u003ca href=\"https://github.com/acdlite/React-fiber-architecture#what-is-a-fiber\"\u003eReact fiber tree\u003c/a\u003e,\nwhich allows it to efficiently perform updates to the DOM based on changes to\nstate (and also is the reason you need to provide a special \u003ccode\u003ekey\u003c/code\u003e prop for lists\nof elements).\u003c/p\u003e\n\n\u003cp\u003eAnother place you've seen a common data structure in action is the\n\u003ca href=\"https://en.wikipedia.org/wiki/Call_stack\"\u003ecall stack\u003c/a\u003e, which uses a \u003cstrong\u003estack\u003c/strong\u003e data structure to keep track of all the\ncurrently running functions in a program and make sure they're executed in the\ncorrect order.\u003c/p\u003e\n\n\u003cp\u003eIn the rest of lessons in this section, we'll show you how to build some of\nthese common data structures, including linked lists, stacks, and binary search\ntrees, and identify when to use them to solve specific problems.\u003c/p\u003e\n\n\u003ch2\u003eBuilding Custom Data Structures\u003c/h2\u003e\n\n\u003cp\u003eTo get a sense of what the general process of building data structures is like,\nlet's build out our very own version of the \u003ccode\u003eArray\u003c/code\u003e data structure in Ruby. As a\nreminder, every data structure we make needs a way to do the following things:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eStore \u003cstrong\u003ecollections of values\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eStore the \u003cstrong\u003erelationship between those values\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eProvide \u003cstrong\u003emethods for interacting with those values\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eTo start off, every data structure we'll build will be defined as a class. For\nour array implementation, we'll call our class \u003ccode\u003eMyArray\u003c/code\u003e to differentiate it\nfrom the built-in \u003ccode\u003eArray\u003c/code\u003e class:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyArray\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEach data structure will also use \u003cstrong\u003eanother data structure\u003c/strong\u003e in order to store\nthe collection of values and help establish the relationships between them. To\nbuild our custom \u003ccode\u003eMyArray\u003c/code\u003e class, let's use a \u003ccode\u003eHash\u003c/code\u003e as the underlying data\nstructure, along with a \u003ccode\u003elength\u003c/code\u003e attribute to keep track of how many elements\nare in the array:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyArray\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_reader\u003c/span\u003e \u003cspan class=\"ss\"\u003e:hash\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@hash\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@length\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOur data structures also need to provide \u003cstrong\u003emethods\u003c/strong\u003e for interacting with the\ndata. Here's how we could implement \u003ccode\u003epush\u003c/code\u003e and \u003ccode\u003epop\u003c/code\u003e for this class:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyArray\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_reader\u003c/span\u003e \u003cspan class=\"ss\"\u003e:hash\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@hash\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@length\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehash\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003epop\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehash\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003earr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMyArray\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\n\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eputs\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epop\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; 2\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe've now defined our very own custom data structure! While it's highly unlikely\nthat you'll need to build your own \u003cem\u003earray\u003c/em\u003e class in the future, understanding\nthis general approach to building data structures will help when you need to\ncreate other data structures that aren't provided by your programming language,\nsuch as a linked list.\u003c/p\u003e\n\n\u003cp\u003eAnother advantage of building custom data structures like this for solving\nalgorithm problems is that it makes it easier to understand the Big O runtime.\u003c/p\u003e\n\n\u003cp\u003eFor example, in the code above, we can safely say that the \u003ccode\u003epush\u003c/code\u003e and \u003ccode\u003epop\u003c/code\u003e\noperations have a O(1) runtime, since accessing and deleting elements from a\nhash has a O(1) runtime. You can refer to this \u003ca href=\"https://www.bigocheatsheet.com/\"\u003eBig O Cheat Sheet\u003c/a\u003e\nfor more details on common runtimes.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIf you'd like to explore this further, try adding a \u003ccode\u003eshift\u003c/code\u003e and \u003ccode\u003eunshift\u003c/code\u003e\nmethod to the array class. How does adding/removing elements from the\nbeginning instead of the end of the list affect the runtime of those methods?\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we defined a \"data structure\" as a tool that stores a\n\u003cstrong\u003ecollection of values\u003c/strong\u003e along with the \u003cstrong\u003erelationship between those values\u003c/strong\u003e\nand provides \u003cstrong\u003emethods for interacting with those values\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eDifferent data structures are more efficient at solving different problems, so\nthe more data structures you familiarize yourself with, the more tools you'll\nhave at your disposal to tackle different kinds of problems as efficiently as\npossible.\u003c/p\u003e\n\n\u003cp\u003eIn general, building a data structure involves creating a class definition;\nusing an auxiliary data structure to store values; and writing different methods\nfor interacting with those values.\u003c/p\u003e\n\n\u003cp\u003eIn the coming lessons, we'll explore several common data structures by providing\ninstructions on how to build them, and then giving problems to practice using\nthose data structures in different scenarios.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.bigocheatsheet.com/\"\u003eBig O Cheat Sheet\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"using-data-structures"},{"id":483380,"title":"Stack Data Structure","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-stack\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-stack\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-stack/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eLearn what a \u003ccode\u003eStack\u003c/code\u003e is\u003c/li\u003e\n\u003cli\u003eIdentify common methods for a \u003ccode\u003eStack\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eIdentify common use cases for a \u003ccode\u003eStack\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn what \u003ccode\u003eStack\u003c/code\u003es are and what methods they commonly\ninclude. We'll discuss time complexity considerations when using \u003ccode\u003eStack\u003c/code\u003es and\nprovide some common real-world examples of when \u003ccode\u003eStack\u003c/code\u003es are used. We'll also\nwalk through an example algorithm, first coding it without using a \u003ccode\u003eStack\u003c/code\u003e, and\nthen with one.\u003c/p\u003e\n\n\u003ch2\u003eDefining a Stack\u003c/h2\u003e\n\n\u003cp\u003eA \u003ccode\u003eStack\u003c/code\u003e is a linear data structure that allows you to store a list of data of\nsome sort, and to add and remove values. Values in the stack are processed in\n\u003cstrong\u003eFirst In, Last Out\u003c/strong\u003e (FILO) order. In other words, the value that was added to\nthe \u003ccode\u003eStack\u003c/code\u003e most recently will be the first one removed. This can be contrasted\nwith another similar data structure, a \u003ccode\u003eQueue\u003c/code\u003e, which is processed in \u003cstrong\u003eFirst In,\nFirst Out\u003c/strong\u003e (FIFO) order.\u003c/p\u003e\n\n\u003cp\u003eIf we consider an airport security checkpoint as a real world example, the stack\nof bins is our \u003ccode\u003eStack\u003c/code\u003e: when a passenger grabs a bin from the stack, it's the\nlast bin that was added; in other words, \u003cstrong\u003eFirst In, Last Out\u003c/strong\u003e. (You can also\nthink of it as \u003cstrong\u003eLast In, First Out\u003c/strong\u003e; the two terms are equivalent.) The line\nof passengers waiting to pass through security would be our \u003ccode\u003eQueue\u003c/code\u003e: the first\nperson to join the line will be the first one through the checkpoint\n(\u003cstrong\u003eFirst In, First Out\u003c/strong\u003e).\u003c/p\u003e\n\n\u003cp\u003eIt can be useful to think of a \u003ccode\u003eStack\u003c/code\u003e as a vertical structure, like a stack of\nplates: we generally refer to adding items to, and removing them from, the \u003cem\u003etop\u003c/em\u003e\nof the \u003ccode\u003eStack\u003c/code\u003e:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-stack/stack.png\" alt=\"Stack\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eStack vs. Array\u003c/h3\u003e\n\n\u003cp\u003eYou may be wondering why we wouldn't just use an array instead of implementing a\n\u003ccode\u003eStack\u003c/code\u003e. After all, arrays are also used to store a list of data, and also allow\nyou to add and remove values. In fact, one way to implement a \u003ccode\u003eStack\u003c/code\u003e (although\nnot generally the best way) is by using an array as the underlying data\nstructure — you'll be doing that in the next lesson.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eStack\u003c/code\u003es have several benefits for certain problems when compared to arrays.\n\u003ccode\u003eStack\u003c/code\u003es have a more limited set of methods for interacting with data compared\nto arrays: with a \u003ccode\u003eStack\u003c/code\u003e, you can only interact with the element at the \u003cem\u003etop\u003c/em\u003e,\nwhereas arrays allow you to access and interact with elements at \u003cem\u003eany\u003c/em\u003e position.\nThis restriction is actually a good thing when it comes to solving certain kinds\nof problems, since it can guide you to a more elegant and easy-to-understand\nsolution.\u003c/p\u003e\n\n\u003ch2\u003eStack Methods\u003c/h2\u003e\n\n\u003cp\u003eThe implementation of a \u003ccode\u003eStack\u003c/code\u003e will vary depending on what's needed, but, at a\nminimum, generally includes the following methods:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003epush\u003c/code\u003e: add an element to the top of the stack\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003epop\u003c/code\u003e: remove the element at the top of the stack\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003epeek\u003c/code\u003e (or \u003ccode\u003etop\u003c/code\u003e): return the value of the element at the top of the stack\nwithout removing it\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIn some implementations, you might also want to include a \u003ccode\u003elimit\u003c/code\u003e attribute,\nto indicate the maximum size of the \u003ccode\u003eStack\u003c/code\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eFun Fact: the phrase \u003cstrong\u003estack overflow\u003c/strong\u003e was originally coined to describe the\nsituation of trying to push an item to a full \u003ccode\u003eStack\u003c/code\u003e — it isn't just a place\nto find answers to coding questions! The reverse situation — trying to pop\nan item off of an empty \u003ccode\u003eStack\u003c/code\u003e — is referred to as \u003cstrong\u003estack underflow\u003c/strong\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSome other common methods you might see implemented include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eempty?\u003c/code\u003e/\u003ccode\u003efull?\u003c/code\u003e: return true if the \u003ccode\u003eStack\u003c/code\u003e is empty/full; false\notherwise\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003esearch(target)\u003c/code\u003e: return the distance between the top of the stack and the\ntarget element if it's present; -1 otherwise\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003esize\u003c/code\u003e: return the number of elements contained in the \u003ccode\u003eStack\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eOther methods are possible as well, of course: the methods the developer chooses\nto define in a given implementation of a \u003ccode\u003eStack\u003c/code\u003e will depend on their particular\nneeds.\u003c/p\u003e\n\n\u003cp\u003eNote also that there is nothing magical about the names of the methods. The\nnames listed above are typically used by convention — and, as always, sticking\nto convention generally makes your code easier to read for other developers. But\nif you have a good reason for breaking convention in a particular circumstance,\nthere's no reason you can't!\u003c/p\u003e\n\n\u003ch3\u003eTime Complexity of Stack Methods\u003c/h3\u003e\n\n\u003cp\u003eWith the exception of \u003ccode\u003esearch\u003c/code\u003e, all of the \u003ccode\u003eStack\u003c/code\u003e methods listed above (for\nexample, pushing an element onto the \u003ccode\u003eStack\u003c/code\u003e) have time complexity of O(1). The\ntime complexity for \u003ccode\u003esearch\u003c/code\u003e is O(n).\u003c/p\u003e\n\n\u003cp\u003eLet's look at an example use of a \u003ccode\u003eStack\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ereverse_string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estack\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeach\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ereversed\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\"\u003c/span\u003e\n  \u003cspan class=\"k\"\u003euntil\u003c/span\u003e \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eempty?\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ereversed\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epop\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ereversed\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ereverse_string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"hello\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; \"olleh\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere we are iterating through the string and adding each character to the\n\u003ccode\u003eStack\u003c/code\u003e, which has a time complexity of O(n). Then, we loop through the \u003ccode\u003eStack\u003c/code\u003e,\npop each character off and add it to the reversed string, again yielding a time\ncomplexity of O(n). This gives O(2n), which simplifies to O(n).\u003c/p\u003e\n\n\u003ch2\u003eWhen To Use a Stack\u003c/h2\u003e\n\n\u003cp\u003eThere are a number of practical use cases for a \u003ccode\u003eStack\u003c/code\u003e. Some common ones include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe \u003ca href=\"https://en.wikipedia.org/wiki/Call_stack\"\u003ecall stack\u003c/a\u003e in computing\u003c/li\u003e\n\u003cli\u003eCode compilers checking if brackets are balanced when a program is run\u003c/li\u003e\n\u003cli\u003eBrowser history and back/forward buttons\u003c/li\u003e\n\u003cli\u003eUndo/redo in software programs\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eA \u003ccode\u003eStack\u003c/code\u003e can also be used to help traverse a more complex data structure known\nas a \u003ccode\u003eTree\u003c/code\u003e. (We'll learn about \u003ccode\u003eTree\u003c/code\u003es a bit later in this section.) For\nexample, one common use of \u003ccode\u003eStack\u003c/code\u003es is in implementing a depth-first search\nthrough a \u003ccode\u003eTree\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3\u003eExample\u003c/h3\u003e\n\n\u003cp\u003eLet's take a look at an example to see how we might use a \u003ccode\u003eStack\u003c/code\u003e in solving a\nproblem.\u003c/p\u003e\n\n\u003cp\u003eWe want to write an \u003ccode\u003eevaluate_keystrokes\u003c/code\u003e method that will take as input a\nstring that represents a series of keystrokes. The string may contain some\nnumber of occurrences of the \u003ccode\u003e\u0026lt;\u003c/code\u003e character, which indicates a backspace. We want\nour method to return the \"interpreted\" version of the string.\u003c/p\u003e\n\n\u003cp\u003eFor example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eevaluate_keystrokes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'abcde\u0026lt;fg\u0026lt;h'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; 'abcdfh'\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eevaluate_keystrokes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'abcd\u0026lt;\u0026lt;\u0026lt;fg\u0026lt;h'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; 'afh'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eA solution that doesn't use a \u003ccode\u003eStack\u003c/code\u003e might look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eevaluate_keystrokes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\"\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eskip\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\u0026lt;\"\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eskip\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eskip\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"n\"\u003eskip\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eskip\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere, we're iterating through our string from back to front and using a\nplaceholder variable (\u003ccode\u003eskip\u003c/code\u003e) to keep track of how many times we need to\nbackspace by skipping over characters. If we don't need to backspace, we simply\nadd the current character to our \u003ccode\u003eresult\u003c/code\u003e variable.\u003c/p\u003e\n\n\u003cp\u003eNow let's take a look at how we might approach this problem using a \u003ccode\u003eStack\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eevaluate_keystrokes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estack\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeach\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\u0026lt;\"\u003c/span\u003e\n      \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epop\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\"\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003euntil\u003c/span\u003e \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eempty?\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epop\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith this code, every time we encounter the \u003ccode\u003e\u0026lt;\u003c/code\u003e, we \"erase\" the previous\ncharacter by \u003ccode\u003epop\u003c/code\u003eping it off the stack. By the end, all the characters that\ndon't get \"erased\" remain in the \u003ccode\u003estack\u003c/code\u003e, so we simply \u003ccode\u003epop\u003c/code\u003e them off and add them\nto the \u003ccode\u003eresult\u003c/code\u003e string.\u003c/p\u003e\n\n\u003cp\u003eWe can streamline our method even further by using a ternary expression:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eevaluate_keystrokes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estack\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeach\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\n    \u003cspan class=\"n\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\u0026lt;\"\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epop\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\"\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003euntil\u003c/span\u003e \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eempty?\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epop\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis problem is one that lends itself pretty naturally to using a \u003ccode\u003eStack\u003c/code\u003e,\nresulting in code that is simpler and easier to read.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned about the \u003ccode\u003eStack\u003c/code\u003e data structure and the methods that\nan implementation of a \u003ccode\u003eStack\u003c/code\u003e usually includes. We also talked about some\nreal-world use cases for a \u003ccode\u003eStack\u003c/code\u003e and went through an example algorithm. In the\nnext lesson, you'll tackle implementing a \u003ccode\u003eStack\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Stack_(abstract_data_type)\"\u003eWikipedia: Stack (abstract data type)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"stack-data-structure"},{"id":483381,"title":"Implement a Stack Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-implement-a-stack\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-implement-a-stack/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-implement-a-stack\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-implement-a-stack/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eImplement a \u003ccode\u003eStack\u003c/code\u003e using an array as the underlying data structure\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn the previous lesson, you learned what a \u003ccode\u003eStack\u003c/code\u003e is and what methods they\ncommonly include. In this lab, you will be building out an implementation of a\n\u003ccode\u003eStack\u003c/code\u003e. You will be using an array as the underlying data structure, and\ncalling on some built-in Ruby array methods to build your \u003ccode\u003eStack\u003c/code\u003e class's\nfunctionality.\u003c/p\u003e\n\n\u003cp\u003eStart by forking and cloning this lab. You'll be writing your code in the\n\u003ccode\u003elib/stack.rb\u003c/code\u003e file. You can run the tests at any point using \u003ccode\u003elearn test\u003c/code\u003e to\ncheck your work.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eFirst, create the \u003ccode\u003eStack\u003c/code\u003e class and set it up to initialize an instance variable\n\u003ccode\u003e@stack\u003c/code\u003e that points to an empty array.\u003c/p\u003e\n\n\u003cp\u003eOnce you have the first test passing, build out the following methods:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eStack#push(value)\u003c/code\u003e: add an element to the top of the stack\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eStack#pop\u003c/code\u003e: remove the element at the top of the stack\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eStack#peek\u003c/code\u003e: return the value of the element at the top of the stack without\nremoving it\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eBonus\u003c/h3\u003e\n\n\u003cp\u003eIf you'd like an extra challenge, try implementing the additional functionality\nbelow. There are tests for these in the \u003ccode\u003espec/stack_spec.rb\u003c/code\u003e file; uncomment the\n\u003cstrong\u003ebonus methods\u003c/strong\u003e section in the test file to try these out.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eModify your \u003ccode\u003eStack#initialize\u003c/code\u003e method to take an optional \u003ccode\u003elimit\u003c/code\u003e value and\nset that as an attribute.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eUpdate the \u003ccode\u003eStack#push\u003c/code\u003e value to only push the passed-in value if there's\nstill room in the \u003ccode\u003eStack\u003c/code\u003e. If the \u003ccode\u003eStack\u003c/code\u003e is full, the method should throw an\nerror.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eImplement the following additional methods:\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eStack#size\u003c/code\u003e: returns the number of elements contained in the \u003ccode\u003eStack\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eStack#empty?\u003c/code\u003e: returns true if the \u003ccode\u003eStack\u003c/code\u003e is empty; false otherwise\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eStack#full?\u003c/code\u003e: returns true if the \u003ccode\u003eStack\u003c/code\u003e is full; false otherwise\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eStack#search(value)\u003c/code\u003e: returns the distance between the top of the stack and the\ntarget element if it's present; -1 otherwise\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAfter you've made these changes, you might want to take another look through\nyour code and see if there's any refactoring you can do.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we got some practice building a data structure from scratch by\nimplementing a \u003ccode\u003eStack\u003c/code\u003e class. Recall that the runtime of our data structure will\ndepend on what data structure it uses under the hood. For this lab, we used an\narray as the underlying data structure, which means the runtime for the\n\u003ccode\u003e#search\u003c/code\u003e method is O(n), and the runtime for all of the other methods is O(1).\u003c/p\u003e\n\n\u003cp\u003eWhile our implementation is efficient in terms of time complexity, we have to\nconsider space complexity as well. One of the characteristics of an \u003ccode\u003eArray\u003c/code\u003e is\nthat each of the elements can be accessed directly using the \u003ccode\u003e[]\u003c/code\u003e operator. In\norder for this to work, all the elements need to be stored in a continuous block\nof memory. If we're trying to add an element and we're out of memory where the\narray is located, the entire array will need to be relocated. This is expensive\nin terms of memory, which means using an array as our underlying data structure\nis not optimal from the perspective of space complexity. Refer to \u003ca href=\"https://github.com/learn-co-curriculum/arrays-underneath\"\u003ethis\nlesson\u003c/a\u003e for a more comprehensive explanation of space and\ntime efficiency issues with arrays.\u003c/p\u003e\n\n\u003cp\u003eGiven that a \u003ccode\u003eStack\u003c/code\u003e only uses \u003ccode\u003epush\u003c/code\u003e and \u003ccode\u003epop\u003c/code\u003e methods, we don't need to use an\nunderlying data structure that allows direct access to all of the elements. A\nbetter choice is a \u003ccode\u003eLinkedList\u003c/code\u003e, because it uses a hash as \u003cem\u003eits\u003c/em\u003e underlying data\nstructure and hashes do not need to be stored in a continuous block of memory.\nThe \u003ccode\u003eLinkedList\u003c/code\u003e is the next data structure we'll learn about. Before we get to\nthat, however, let's get a little practice using \u003ccode\u003eStack\u003c/code\u003es.\u003c/p\u003e","exportId":"ge10216cd35ee3675960a40fbdb222f0a"},{"id":483382,"title":"Balancing Parentheses Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-balancing-parentheses\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-balancing-parentheses/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-balancing-parentheses\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-balancing-parentheses/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the \u003ccode\u003eStack\u003c/code\u003e implementation we built in the previous lab to solve a problem\u003c/li\u003e\n\u003cli\u003eWrite an algorithm to check whether the parentheses in a string are balanced\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll use the \u003ccode\u003eStack\u003c/code\u003e class you built in the previous lab to write\nan algorithm that takes a string as input and checks to see whether the\nparentheses in the string are balanced.\u003c/p\u003e\n\n\u003cp\u003eA single pair of parentheses is defined as balanced if it consists of an opening\nparenthesis followed by a matching closing parenthesis. A string containing some\nnumber of \u003ccode\u003e(\u003c/code\u003e and \u003ccode\u003e)\u003c/code\u003e characters will be considered balanced if it includes only\nbalanced pairs:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eBalanced: \u003ccode\u003e()\u003c/code\u003e, \u003ccode\u003e(()())\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eNot balanced: \u003ccode\u003e())()\u003c/code\u003e, \u003ccode\u003e)\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eYou will be using the \u003ccode\u003eStack\u003c/code\u003e implementation we developed in an earlier lesson\nto help you solve this lab. We have included the code in \u003ccode\u003elib/stack.rb\u003c/code\u003e. We have\nalso required that file in \u003ccode\u003elib/balancing_parentheses.rb\u003c/code\u003e, where you will be\ncoding your solution.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eWrite a \u003ccode\u003ebalancing_parentheses\u003c/code\u003e method in the \u003ccode\u003elib/balancing_parentheses.rb\u003c/code\u003e\nfile that:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eTakes as input a string consisting of some number of \u003ccode\u003e(\u003c/code\u003e and \u003ccode\u003e)\u003c/code\u003e characters\u003c/li\u003e\n\u003cli\u003eCreates an instance of the \u003ccode\u003eStack\u003c/code\u003e class\u003c/li\u003e\n\u003cli\u003eUsing the stack, checks the string to determine whether the parentheses\ninside it are balanced\u003c/li\u003e\n\u003cli\u003eReturns the number of additional parentheses that would need to be added to\nthe string to make it balanced\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eHere are some examples of the expected return value for your method for various\ninputs:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eInput: `()`\nOutput: 0\n\nInput: `())()`\nOutput: 1\n\nInput: `(()()(()`\nOutput: 2\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNote: There are a number of ways to solve this problem, but for this lab you\nneed to use a stack (specifically, an instance of our \u003ccode\u003eStack\u003c/code\u003e class) in the\nsolution.\u003c/p\u003e","exportId":"g14191492ca3fdfa0ccc48ee1c92d67a3"},{"id":483383,"title":"Create a Queue from Two Stacks Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-queue-from-stack\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-queue-from-stack/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-queue-from-stack\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-queue-from-stack/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eImplement a \u003ccode\u003eMyQueue\u003c/code\u003e class using two \u003ccode\u003eStack\u003c/code\u003es\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eRecall in an earlier lesson we talked about the difference between a \u003ccode\u003eStack\u003c/code\u003e and\na \u003ccode\u003eQueue\u003c/code\u003e. Basically, they are very similar, except that \u003ccode\u003eStack\u003c/code\u003es process\nrecords in \u003cstrong\u003e\"First In, Last Out\"\u003c/strong\u003e (FILO) order, while \u003ccode\u003eQueue\u003c/code\u003es process records\nin \u003cstrong\u003e\"First In, First Out\"\u003c/strong\u003e (FIFO) order. We used as a real-world example of a\n\u003ccode\u003eQueue\u003c/code\u003e a line of airline passengers waiting to pass through the security\ncheckpoint: the passenger who joined the line first will be the first to pass\nthrough security (most of the time, anyway).\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-queue-from-stack/stack-vs-queue.png\" alt=\"stack-vs-queue\"\u003e\u003c/p\u003e\n\n\u003cp\u003eBecause the behavior of a \u003ccode\u003eQueue\u003c/code\u003e is a bit different from that of a \u003ccode\u003eStack\u003c/code\u003e, the\nmethod names that are used (by convention) are a bit different as well. Rather\nthan including \u003ccode\u003e#push\u003c/code\u003e and \u003ccode\u003e#pop\u003c/code\u003e methods, a \u003ccode\u003eQueue\u003c/code\u003e implementation generally\nhas an \u003ccode\u003e#add\u003c/code\u003e method, which adds an element to the end of the \u003ccode\u003eQueue\u003c/code\u003e, and a\n\u003ccode\u003e#remove\u003c/code\u003e method, which removes the first element in the \u003ccode\u003eQueue\u003c/code\u003e. (You might\nalso see these methods called \u003ccode\u003e#enqueue\u003c/code\u003e and \u003ccode\u003e#dequeue\u003c/code\u003e.) Finally, like a\n\u003ccode\u003eStack\u003c/code\u003e, a \u003ccode\u003eQueue\u003c/code\u003e usually includes a \u003ccode\u003e#peek\u003c/code\u003e method, but, in this case, \u003ccode\u003e#peek\u003c/code\u003e\nreturns the element that went into the \u003ccode\u003eQueue\u003c/code\u003e \u003cstrong\u003efirst\u003c/strong\u003e rather than the one\nthat went in most recently.\u003c/p\u003e\n\n\u003cp\u003eIn this lab, you will implement a \u003ccode\u003eMyQueue\u003c/code\u003e class, but you will be doing it a\nbit differently than you did for the \u003ccode\u003eStack\u003c/code\u003e class. Specifically, you will use\n\u003ccode\u003eStack\u003c/code\u003e as the underlying data structure rather than an array. We have included\nthe code in \u003ccode\u003elib/stack.rb\u003c/code\u003e. We have also required that file in\n\u003ccode\u003elib/queue_from_stack.rb\u003c/code\u003e, where you will be coding your solution.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eStart by creating the \u003ccode\u003eMyQueue\u003c/code\u003e class, and set it up to initialize \u003cstrong\u003e\u003cem\u003etwo\u003c/em\u003e\u003c/strong\u003e\nnew, empty instances of the \u003ccode\u003eStack\u003c/code\u003e class; in order for the tests to pass, you\nwill need to name these \u003ccode\u003e@s1\u003c/code\u003e and \u003ccode\u003e@s2\u003c/code\u003e. You should \u003cstrong\u003enot\u003c/strong\u003e initialize an empty\narray for your \u003ccode\u003eMyQueue\u003c/code\u003e instance.\u003c/p\u003e\n\n\u003cp\u003eOnce you have the first test passing, build out the following methods:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eMyQueue#add(value)\u003c/code\u003e: adds an element to the end of the \u003ccode\u003eQueue\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eMyQueue#remove\u003c/code\u003e: removes and returns the first element in the \u003ccode\u003eQueue\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eMyQueue#peek\u003c/code\u003e: returns the first element in the \u003ccode\u003eQueue\u003c/code\u003e without removing it\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eNote: in solving this challenge, you can only use the four methods included in\nthe \u003ccode\u003eStack\u003c/code\u003e implementation — \u003ccode\u003e#push\u003c/code\u003e, \u003ccode\u003e#pop\u003c/code\u003e, \u003ccode\u003e#peek\u003c/code\u003e, and \u003ccode\u003e#empty?\u003c/code\u003e — and the\n\u003cstrong\u003etwo\u003c/strong\u003e instances of \u003ccode\u003eStack\u003c/code\u003e that are created when the \u003ccode\u003eMyQueue\u003c/code\u003e instance is\ninitialized.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eHint:\u003c/strong\u003e If you're having a little trouble figuring out how to approach this\nproblem, give some thought to what will happen if you \u003ccode\u003epop\u003c/code\u003e each element off of\none \u003ccode\u003eStack\u003c/code\u003e instance and \u003ccode\u003epush\u003c/code\u003e it onto another. You should be able to use this\ninformation to set up your \u003ccode\u003eadd\u003c/code\u003e method such that the order of the elements is\ncorrect for using \u003ccode\u003e#push\u003c/code\u003e and \u003ccode\u003e#pop\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eAs you can probably imagine, implementing a \u003ccode\u003eQueue\u003c/code\u003e using a \u003ccode\u003eStack\u003c/code\u003e as the\nunderlying data structure is not the the most efficient way to go. Hopefully,\nhowever, building out this class gave you a good feel for the difference in how\nthese two data structures process records.\u003c/p\u003e","exportId":"gd0e6927931843a2e5319e399e688c543"},{"id":483384,"title":"Singly Linked List Data Structure","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-singly-linked-list\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-singly-linked-list\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-singly-linked-list/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eIdentify the use cases for a Singly Linked List\u003c/li\u003e\n\u003cli\u003eDemonstrate common methods for a Singly Linked List\u003c/li\u003e\n\u003cli\u003eDifferentiate between a Singly Linked List and an array\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn what a \u003cstrong\u003eSingly Linked List\u003c/strong\u003e is, along with how to\nbuild a \u003ccode\u003eLinkedList\u003c/code\u003e class. We'll also learn some of its common methods to get\nan understanding of what the differences between a Singly Linked List and an\narray are.\u003c/p\u003e\n\n\u003ch2\u003eWhat Is a Linked List?\u003c/h2\u003e\n\n\u003cp\u003eA linked list is a linear (ordered) collection of data that consists of several\nelements, called \u003cstrong\u003enodes\u003c/strong\u003e, with each node pointing to the next node in the\nlist. Unlike arrays, linked lists aren't indexed.\u003c/p\u003e\n\n\u003cp\u003eThink of it like a train: each car is connected to the next car, which is\nconnected to the next car, and so forth. In an array, we can say \"Give me the\nsixth element,\" but in a linked list, we have to start at the beginning of the\ntrain, and go from the first car, to the second car, and so forth:\u003c/p\u003e\n\n\u003cp\u003eThe nodes in a linked list each have a value, and a pointer to another node,\notherwise pointing to nil if it is at the end of the list.\u003c/p\u003e\n\n\u003ch2\u003eWhy Linked Lists?\u003c/h2\u003e\n\n\u003cp\u003eLinked lists and arrays are both data structures that can hold ordered lists of\ndata. Depending on what kind of operations you need to perform with that list,\nthere are some scenarios where a linked list can be more efficient than an\narray, such as efficiently adding and removing elements from any arbitrary\nposition within the list.\u003c/p\u003e\n\n\u003cp\u003eThink about if we have a sorted dog array of 5 elements representing\ndog breeds:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bulldog\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Chihuahua\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"German Shepard\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Retriever\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Shiba Inu\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n   \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e          \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e            \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e             \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e          \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter creating our array, we realize we forgot to add one dog in our array, a\nChow Chow! To fix our array, we would need to \u003cem\u003einsert\u003c/em\u003e the \"Chow Chow\" element\ninto the array in the correct index, which would be 2. Because there is already\nan element in the 2th index, and more elements in the sequential indexes, all of\nthose elements would have to be shifted down a spot, and given a new index.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-singly-linked-list/pup_array.png\" alt=\"Pup Array\"\u003e\u003c/p\u003e\n\n\u003cp\u003eSince this is a smaller array, it doesn't seem like the biggest deal to move\nthe last 3 elements down a place, but as you can imagine, if we had an array of\nhundreds or thousands or even millions of elements, reindexing \u003cem\u003eall\u003c/em\u003e of those\nelements would take a really long time! This is where linked lists come in\nhandy.\u003c/p\u003e\n\n\u003ch2\u003eDefining a Singly Linked List\u003c/h2\u003e\n\n\u003cp\u003eTime to build our custom data structure! Since our \u003ccode\u003eLinkedList\u003c/code\u003e class is going\nto contain a series of nodes linked together, we'll start by creating \u003ccode\u003eNode\u003c/code\u003e\nclass:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eNode\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:data\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:next_node\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enext_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@next_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enext_node\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEach node needs to keep track of some data, as well as a reference to the next\nnode in the list.\u003c/p\u003e\n\n\u003cp\u003eNext, we can build out a \u003ccode\u003eLinkedList\u003c/code\u003e class, with an \u003ccode\u003einitialize\u003c/code\u003e method where\nwe declare an instance variable for the \u003ccode\u003ehead\u003c/code\u003e of the linked list:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eLinkedList\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:head\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@head\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe \u003ccode\u003ehead\u003c/code\u003e node is going to be the very first node in our linked list, and will\npoint to the next node once we start adding more elements.\u003c/p\u003e\n\n\u003ch3\u003eAdding Nodes\u003c/h3\u003e\n\n\u003cp\u003eLet's say we want to recreate the data structure of dogs we had before\n(\u003ccode\u003e[\"Bulldog\", \"Chihuahua\", \"German Shepard\", \"Retriever\", \"Shiba Inu\"]\u003c/code\u003e). This\ntime we'll use a linked list instead of an array. The simplest way to do this is\nto create a series of nodes and link them together using the \u003ccode\u003enext_node\u003c/code\u003e\nattribute:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ebulldog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eNode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bulldog\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Bulldog\u003c/span\u003e\n\u003cspan class=\"n\"\u003echihuahua\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eNode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Chihuahua\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003ebulldog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003echihuahua\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Bulldog -\u0026gt; Chihuahua\u003c/span\u003e\n\u003cspan class=\"n\"\u003egerman_shepard\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eNode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"German Shepard\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003echihuahua\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egerman_shepard\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Bulldog -\u0026gt; Chihuahua -\u0026gt; German Shepard\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhile this technically qualifies as a linked list, it's not the most pleasant to\nwork with! We can make our data structure a bit more developer-friendly by using\nthe \u003ccode\u003eLinkedList\u003c/code\u003e class to build a list by creating an \u003ccode\u003eappend\u003c/code\u003e method in our\n\u003ccode\u003eLinkedList\u003c/code\u003e class.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eappend\u003c/code\u003e method should add a node to the \u003ccode\u003ehead\u003c/code\u003e of the list if the list is\nempty, and add it to the end of the list if not:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eLinkedList\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:head\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@head\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# Add element to the beginning of the list if the list is empty\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enil?\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehead\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e# Otherwise, traverse the list to find the last node\u003c/span\u003e\n    \u003cspan class=\"n\"\u003elast_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003elast_node\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e\n      \u003cspan class=\"n\"\u003elast_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elast_node\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e# and add the node to the end\u003c/span\u003e\n    \u003cspan class=\"n\"\u003elast_node\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow we can build our linked list like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003elist\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eLinkedList\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\n\u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eNode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bulldog\"\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Bulldog\u003c/span\u003e\n\u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eNode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Chihuahua\"\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Bulldog -\u0026gt; Chihuahua\u003c/span\u003e\n\u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eNode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"German Shepard\"\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Bulldog -\u0026gt; Chihuahua -\u0026gt; German Shepard\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eWhen to use a Singly Linked List\u003c/h2\u003e\n\n\u003cp\u003eLinked Lists are ideal for situations when you need quick insertion and\ndeletion, but are more expensive than arrays when it comes to searching, since\narrays are indexed. The Big O for both insertion as well as deletion at a known\nnode in a linked list is \u003ccode\u003e0(1)\u003c/code\u003e because we don't need to update indexes for the\nother elements in the list when a new element is added: we just need to adjust\nwhich node the \u003ccode\u003enext_node\u003c/code\u003e points to. With an array, insertion and deletion from\nanywhere other than the end are \u003ccode\u003eO(n)\u003c/code\u003e, because other elements need to be\nreindexed.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-singly-linked-list/pup_linked_list.png\" alt=\"Pup Linked List\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWe use linked lists because they can be less expensive than arrays when it comes\nto insertion and deletion within lists. Linked Lists are a very common interview\ndata structure, so make sure you get to know them! In the next lesson, we'll\nbuild more methods in our \u003ccode\u003eLinkedList\u003c/code\u003e class.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Linked_list\"\u003eLinked list\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.rubyguides.com/2017/08/ruby-linked-list/\"\u003ePractical Linked List in Ruby\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"singly-linked-list-data-structure"},{"id":483385,"title":"Singly Linked List Methods Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-implement-singly-linked-list\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-implement-singly-linked-list/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-implement-singly-linked-list\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-implement-singly-linked-list/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eBuild out common methods for a Singly Linked List\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn the previous lesson, you learned what a Singly Linked List is and we built\nout the initial \u003ccode\u003eLinkedList\u003c/code\u003e and \u003ccode\u003eNode\u003c/code\u003e classes, as well as learned how to\n\u003ccode\u003eappend\u003c/code\u003e on to a linked list. We also learned how to add to our Singly Linked\nList. In this lab, let's build out some more of the common methods we might need\nwhen using a Singly Linked List.\u003c/p\u003e\n\n\u003cp\u003eFork and clone this lab; you'll be coding in the \u003ccode\u003elib\u003c/code\u003e folder. You can run the\ntests at any point using \u003ccode\u003elearn test\u003c/code\u003e to check your work.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eStart by building out the \u003ccode\u003eLinkedList\u003c/code\u003e class.\u003c/p\u003e\n\n\u003cp\u003eOnce you have the first test passing, build out the following methods:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eLinkedList#prepend(node)\u003c/code\u003e: adds a node to the beginning of the list (the \u003ccode\u003ehead\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eLinkedList#append(node)\u003c/code\u003e: adds a node to the end of the list (feel free to\nreuse/modify the code from the previous lesson)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eLinkedList#delete_head\u003c/code\u003e: delete the \u003ccode\u003ehead\u003c/code\u003e node\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eLinkedList#delete_tail\u003c/code\u003e: removes the node at the end of the list\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eLinkedList#add_after(index, node)\u003c/code\u003e: adds a node after the given index of the linked\nlist\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eLinkedList#search(value)\u003c/code\u003e: finds a node with the given value within the list\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gb4cbadd7fe7030e0212dae9eda9775fd"},{"id":483386,"title":"Singly Linked List Return Node Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-singly-linked-list-return-node\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-singly-linked-list-return-node/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-singly-linked-list-return-node\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-singly-linked-list-return-node/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eBuild a Singly Linked List and use it to solve an algorithm\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that we have learned to build out our \u003ccode\u003eLinkedList\u003c/code\u003e and \u003ccode\u003eNode\u003c/code\u003e classes, as\nwell as implemented some common methods to get a feel for working with linked\nlists, let's use our Singly Linked List to solve an algorithm!\u003c/p\u003e\n\n\u003cp\u003eFork and clone this lab; you'll be coding in the \u003ccode\u003elib\u003c/code\u003e folder. You can\nrun the tests at any point using \u003ccode\u003elearn test\u003c/code\u003e to check your work.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eWrite a method \u003ccode\u003e#nth_from_end\u003c/code\u003e that takes a number \u003ccode\u003en\u003c/code\u003e and returns the value at\nthe \u003ccode\u003en\u003c/code\u003eth node from the \u003cstrong\u003eend\u003c/strong\u003e of the linked list. If the \u003ccode\u003en\u003c/code\u003eth node does not\nexist, return \u003ccode\u003enil\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eFor example, when given a linked list \u003ccode\u003e3 -\u0026gt; 2 -\u0026gt; 1\u003c/code\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWhen \u003ccode\u003en = 1\u003c/code\u003e, return \u003ccode\u003e1\u003c/code\u003e (the element at the end of the list)\u003c/li\u003e\n\u003cli\u003eWhen \u003ccode\u003en = 3\u003c/code\u003e, return \u003ccode\u003e3\u003c/code\u003e (the third element from the end)\u003c/li\u003e\n\u003cli\u003eWhen \u003ccode\u003en = 4\u003c/code\u003e, return \u003ccode\u003enil\u003c/code\u003e (since 4 is greater than the length of the list)\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g6174e7653b61b7391203fa5a8e714cbb"},{"id":483387,"title":"Doubly Linked List Data Structure","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-doubly-linked-list\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-doubly-linked-list\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-doubly-linked-list/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eIdentify the use cases for a \u003cstrong\u003edoubly linked list\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eDemonstrate common methods for a doubly linked list\u003c/li\u003e\n\u003cli\u003eDifferentiate between a doubly linked list and a singly linked list\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe learned in the last lesson about singly linked lists, their use cases, and\nthe general concept behind linked lists. In this lesson, we're going to dive\ninto what a doubly linked list is, and what the difference is between singly and\ndoubly linked lists.\u003c/p\u003e\n\n\u003ch2\u003eDefining a Doubly Linked List\u003c/h2\u003e\n\n\u003cp\u003eIn the previous lessons we learned how unlike arrays, linked lists are not\nindexed, and in order to search from node to node, we need use pointers to go\nfrom one node onto the next node. But what if we wanted to go back a node? In a\nsingly linked list, a node doesn't know which node came before it, because it\ndoesn't have a pointer pointing to the previous node. Doubly linked lists have\npointers to the next node \u003cem\u003eas well as\u003c/em\u003e the previous node. Let's take a look at\nhow we would build this out in our \u003ccode\u003eNode\u003c/code\u003e class:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eNode\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:data\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:next_node\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:prev_node\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enext_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eprev_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@next_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enext_node\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@prev_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprev_node\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAll we really had to do was a \u003ccode\u003eprev_node\u003c/code\u003e attribute, and now we have two\npointers on our \u003ccode\u003eNode\u003c/code\u003e class, so that each node points in two directions: to the\nnext node in the list, and to the previous node. While this is a really small\nand easy change to make to the structure of our node, by doing this change we\nare able to make our linked list much more useful, efficient, and dynamic!\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-doubly-linked-list/pup_doubly_linked_list.png\" alt=\"Pup Linked List\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eSingly vs Doubly Linked Lists\u003c/h2\u003e\n\n\u003cp\u003eOne way we can improve the time complexity of our singly linked list\nimplementation is by adding additional references to nodes in the list. For\nexample, consider the following \u003ccode\u003eSinglyLinkedList\u003c/code\u003e class:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSinglyLinkedList\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:head\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@head\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enil?\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehead\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# traverse the entire list to find the last node\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# add a new node at the end\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# 1 -\u0026gt; 2 -\u0026gt; 3\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# 1 -\u0026gt; 2 -\u0026gt; 3 -\u0026gt; 4\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe time complexity of its \u003ccode\u003eappend\u003c/code\u003e method is O(n), since we need to traverse\neach element of the linked list in order to find the last node and remove it. We\ncan make the \u003ccode\u003eappend\u003c/code\u003e method efficient by keeping track of the list's \u003cstrong\u003etail\u003c/strong\u003e\nnode in addition to the head:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSinglyLinkedList\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:head\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:tail\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@head\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@tail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enil?\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehead\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# no need to traverse! we can access the last node directly (self.tail)\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# 1 -\u0026gt; 2 -\u0026gt; 3\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etail\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# 1 -\u0026gt; 2 -\u0026gt; 3 -\u0026gt; 4\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# we also need to make sure to keep track of the new tail\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter this refactor, the time complexity of our \u003ccode\u003eappend\u003c/code\u003e method is O(1), since\nwe no longer need to traverse the list in order to find the tail before\nappending a new node. The tradeoff to keeping references to additional nodes in\nour list, like the tail, is it takes more space to keep track of these\nadditional references. Adding additional reference can also increase the written\ncomplexity of our code for certain methods, since we need to maintain those\nreferences correctly.\u003c/p\u003e\n\n\u003cp\u003eA \u003cstrong\u003edoubly linked list\u003c/strong\u003e makes insertion and removal more efficient in certain\ncases by keeping references to the \u003cstrong\u003eprevious\u003c/strong\u003e node in addition to the next\nnode.\u003c/p\u003e\n\n\u003cp\u003eLet's say we have a singly linked list, and we wanted to remove the last item.\nWe would have to traverse the \u003cem\u003eentire\u003c/em\u003e list in order to find the \u003cem\u003esecond to last\nnode\u003c/em\u003e in the list and assign it as the new tail, since we can't go directly to\nthe tail and work backwards:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSinglyLinkedList\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:head\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:tail\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@head\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@tail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edelete_tail\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enil?\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e# traverse the entire list to find the second-to-last node (prev)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprev\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eprev\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e# remove the last node by removing the link between the second-to-last node and the tail\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 1 -\u0026gt; 2 -\u0026gt; 3\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 1 -\u0026gt; 2\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn this case, the time complexity for removing a node from the end of the list\nis O(n) since we need to traverse the list to find the second-to-last node.\u003c/p\u003e\n\n\u003cp\u003eWith a \u003cstrong\u003edoubly linked list\u003c/strong\u003e, we already have a pointer on each node pointing\nto the previous node, so we can just take one step backwards from the \u003ccode\u003etail\u003c/code\u003e by\nusing \u003ccode\u003e.prev_node\u003c/code\u003e without needing to iterate:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDoublyLinkedList\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:head\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:tail\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@head\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@tail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edelete_tail\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enil?\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003etail\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehead\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# access the second-to-last node (self.tail.prev_node)\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eprev\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etail\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eprev_node\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# update the tail and next_node pointers\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# 1 \u0026lt;-\u0026gt; 2 \u0026lt;-\u0026gt; 3\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eprev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprev\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# 1 \u0026lt;-\u0026gt; 2\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter this refactor, our time complexity for removing a node from the end of the\nlist is O(1), since we don't need to traverse the entire list to find the new\ntail.\u003c/p\u003e\n\n\u003cp\u003eThe tradeoff is that we now need to maintain these references between nodes\ncorrectly for \u003cem\u003eall\u003c/em\u003e our linked list methods. For example, the \u003ccode\u003eappend\u003c/code\u003e method\nfor a doubly linked list is more complicated than for a singly linked list,\nsince we have to keep track of the \u003ccode\u003enext_node\u003c/code\u003e and \u003ccode\u003eprev_node\u003c/code\u003e correctly any\ntime a node is added:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDoublyLinkedList\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:head\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:tail\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@head\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@tail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enil?\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehead\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eprev_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etail\u003c/span\u003e\n      \u003cspan class=\"n\"\u003etail\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eSingly linked lists and doubly linked lists are very similar. Unlike arrays,\nthey are not indexed, and they use pointers to reference their nodes. Singly\nlinked lists are one-directional, while doubly linked lists go both ways. Having\nthe extra \u003ccode\u003eprev_node\u003c/code\u003e pointer in a doubly linked list can be useful in the\nfollowing scenarios:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRemoving an item form the end of a list\u003c/li\u003e\n\u003cli\u003eReversing the list (traversal from tail to head)\u003c/li\u003e\n\u003cli\u003eImplementing \"previous/next\" operations or \"undo/redo\" operations (like\nbuilding a playlist or a text editor)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe trade-offs are that a doubly linked list takes up more memory than to a\nsingly linked list, since we have to keep track of multiple pointers on each\nnode; and the code for a doubly linked list is also more complicated to write\nand maintain because of the added complexity of keeping both the \u003ccode\u003enext_node\u003c/code\u003e and\n\u003ccode\u003eprev_node\u003c/code\u003e references.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Linked_list\"\u003eLinked List\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.rubyguides.com/2017/08/ruby-linked-list/\"\u003ePractical Linked List in Ruby\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"doubly-linked-list-data-structure"},{"id":483388,"title":"Reverse a Doubly Linked List","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-reverse-doubly-linked-list\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-reverse-doubly-linked-list/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-reverse-doubly-linked-list\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-reverse-doubly-linked-list/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eBuild a doubly linked list and use it to solve an algorithm\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eAt this point we've learned how to solve algorithms with singly linked lists,\nand learned what doubly linked lists are, so it's time to put that knowledge to\nuse and solve an algorithm with a doubly linked list!\u003c/p\u003e\n\n\u003cp\u003eFork and clone this lab; you'll be coding in the \u003ccode\u003elib\u003c/code\u003e folder. You can\nrun the tests at any point using \u003ccode\u003elearn test\u003c/code\u003e to check your work.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eWrite a method \u003ccode\u003eLinkedList#reverse!\u003c/code\u003e that reverses the list in place, so the\nhead is the new tail, the tail is the new head, and all of the \u003ccode\u003eprev_node\u003c/code\u003e and\n\u003ccode\u003enext_node\u003c/code\u003e attributes of each node in the list point to the correct nodes.\u003c/p\u003e\n\n\u003cp\u003eFor example:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eInput:  \u003ccode\u003e6 \u0026lt;--\u0026gt; 7 \u0026lt;--\u0026gt; 8\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eOutput: \u003ccode\u003e8 \u0026lt;--\u0026gt; 7 \u0026lt;--\u0026gt; 6\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eInput:  \u003ccode\u003e11 \u0026lt;--\u0026gt; 18 \u0026lt;--\u0026gt; 19 \u0026lt;--\u0026gt; 94\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eOutput: \u003ccode\u003e94 \u0026lt;--\u0026gt; 19 \u0026lt;--\u0026gt; 18 \u0026lt;--\u0026gt; 11\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eInput:  \u003ccode\u003e41 \u0026lt;--\u0026gt; 101 \u0026lt;--\u0026gt; 8 \u0026lt;--\u0026gt; 28 \u0026lt;--\u0026gt; 32\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eOutput: \u003ccode\u003e32 \u0026lt;--\u0026gt; 28 \u0026lt;--\u0026gt; 8 \u0026lt;--\u0026gt; 101 \u0026lt;--\u0026gt; 41\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eBonus\u003c/h3\u003e\n\n\u003cp\u003eTry to solve the problem recursively!\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eHint: You might want to create a recursive helper method \u003ccode\u003ereverse_node\u003c/code\u003e\ninstead of trying to use the \u003ccode\u003ereverse!\u003c/code\u003e method recursively.\u003c/p\u003e\n\u003c/blockquote\u003e","exportId":"g91b0187c4eb8bfa5bd50f979cad55bc4"},{"id":483389,"title":"Tree Data Structure","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-tree\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-tree\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-tree/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eBecome familiar with three types of tree data structures: \u003cstrong\u003eTree\u003c/strong\u003e,\n\u003cstrong\u003eBinary Tree\u003c/strong\u003e and \u003cstrong\u003eBinary Search Tree\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eIdentify common use cases for Trees\u003c/li\u003e\n\u003cli\u003eIdentify common methods for Trees\u003c/li\u003e\n\u003cli\u003eConsider some of the efficiency issues of using Trees\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eThe next data structure we'll be learning about is the \u003cstrong\u003etree\u003c/strong\u003e. A tree has some\nsimilarities to a linked list: both consist of nodes, each of which has a value\nand a reference to other nodes. Unlike a linked list, however, which only points\nto a single \"next\" node, nodes in trees can point to multiple child nodes. For\nthis reason, a tree can be used to represent more complex data relationships\nthan can be expressed using a linked list or other linear data structure.\u003c/p\u003e\n\n\u003ch2\u003eTrees, Binary Trees, and Binary Search Trees\u003c/h2\u003e\n\n\u003cp\u003eIn the context of computing and data structures (as in the real world), there\nare lots of different \u003ca href=\"https://en.wikipedia.org/wiki/List_of_data_structures#Trees\"\u003etypes of trees\u003c/a\u003e. In this lesson, we'll\nfirst learn about the most general type of tree, and then look at a couple of\nspecial cases that place certain constraints on how the tree is structured.\u003c/p\u003e\n\n\u003ch3\u003eTree\u003c/h3\u003e\n\n\u003cp\u003eA \u003cstrong\u003etree\u003c/strong\u003e is a data structure that consists of a \u003cstrong\u003enode\u003c/strong\u003e (called the \u003cstrong\u003eroot\u003c/strong\u003e\nnode) that can have zero or more \u003cstrong\u003echild\u003c/strong\u003e nodes. Each child node can, in turn,\nhave zero or more children of its own:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/tree.png\" alt=\"tree\"\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen we represent a tree in code, each of its nodes will have two attributes: a\nvalue or data of some sort and an array containing a list of references to its\nchild nodes. Although the diagrams in this lesson show nodes with values that\nare integers, the value of a node can be of any data type.\u003c/p\u003e\n\n\u003cp\u003eSay we have the following very simple tree that we need to represent in code:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/simple-tree.png\" alt=\"simple tree\"\u003e\u003c/p\u003e\n\n\u003cp\u003eEach node in our tree would be a hash containing key/value pairs for the two\nattributes:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003echild_one\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003echild_two\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e39\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eroot_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\n    \u003cspan class=\"n\"\u003echild_one\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"n\"\u003echild_two\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEach element in a node's \u003ccode\u003echildren\u003c/code\u003e array is itself a node:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eroot_node\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; { value: 20, children: [ { value: 45, children: [] }, ... ] }\u003c/span\u003e\n\u003cspan class=\"n\"\u003eroot_node\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:children\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; { value: 50, children: [] }\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf we were to add a child node to \u003ccode\u003echild_one\u003c/code\u003e, with a value of 45:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/simple-tree-with-child.png\" alt=\"simple tree with new child\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe updated code would look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003echild_three\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e45\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003echild_one\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003echild_three\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003echild_two\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e39\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eroot_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\n    \u003cspan class=\"n\"\u003echild_one\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"n\"\u003echild_two\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eBinary Tree\u003c/h3\u003e\n\n\u003cp\u003eA \u003cstrong\u003ebinary tree\u003c/strong\u003e is a special kind of tree in which each node has at most two\nchild nodes, referred to as the \u003cstrong\u003eleft\u003c/strong\u003e child and \u003cstrong\u003eright\u003c/strong\u003e child.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/binary-tree.png\" alt=\"binary tree\"\u003e\u003c/p\u003e\n\n\u003cp\u003eEach node in a binary tree has three attributes: a \u003ccode\u003evalue\u003c/code\u003e, and references to\nits \u003ccode\u003eleft_child\u003c/code\u003e and \u003ccode\u003eright_child\u003c/code\u003e. If a node doesn't have either or both of\nthese child nodes, the attributes will be set to \u003ccode\u003enil\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWe can revisit the simple example we used above because that tree also meets the\ndefinition of a binary tree:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/binary-tree-simple.png\" alt=\"simple tree with new child\"\u003e\u003c/p\u003e\n\n\u003cp\u003eTo represent that same structure as a binary tree, the code would look like\nthis:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003echild_three\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e45\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eleft_child: \u003c/span\u003e\u003cspan class=\"kp\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eright_child: \u003c/span\u003e\u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003echild_one\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eleft_child: \u003c/span\u003e\u003cspan class=\"n\"\u003echild_three\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eright_child: \u003c/span\u003e\u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003echild_two\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e39\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eleft_child: \u003c/span\u003e\u003cspan class=\"kp\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eright_child: \u003c/span\u003e\u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eroot_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eleft_child: \u003c/span\u003e\u003cspan class=\"n\"\u003echild_one\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eright_child: \u003c/span\u003e\u003cspan class=\"n\"\u003echild_two\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eBinary Search Tree\u003c/h3\u003e\n\n\u003cp\u003eA \u003cstrong\u003ebinary search tree (BST)\u003c/strong\u003e is a special kind of a binary tree in which the\nvalue of a node's left child (if it has one) must be less than the value of the\nnode itself, and the value of its right child (if it has one) must be greater\nthan the value of the node itself:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/binary-search-tree.png\" alt=\"binary search tree\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIf you look at the nodes in the diagram above, you will see that they all meet\nthe constraints: each left child's value is less its parent's value, and each\nright child's value is greater than its parent's value. However, while this is\n\u003cstrong\u003enecessary\u003c/strong\u003e to make the tree a valid binary search tree, it is not\n\u003cstrong\u003esufficient\u003c/strong\u003e. We must also verify that \u003cstrong\u003eall\u003c/strong\u003e the \"left descendants\" of a\nnode are less than the parent node. You can see this in the highlighted portion\nof this diagram:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/bst-left-side-highlighted.png\" alt=\"bst left side highlighted\"\u003e\u003c/p\u003e\n\n\u003cp\u003eNotice that all the values in the left half of the diagram are less than 50, the\nvalue of the root node. And, if you take a look at the right half of the\ndiagram, you'll see that all those values are greater than 50.\u003c/p\u003e\n\n\u003cp\u003eBut we still aren't done — we need to do the same check for \u003cem\u003e\u003cstrong\u003eall\u003c/strong\u003e\u003c/em\u003e the\nsubtrees.\u003c/p\u003e\n\n\u003cp\u003eLet's take a look at another example:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/invalid-bst.png\" alt=\"invalid bst\"\u003e\u003c/p\u003e\n\n\u003cp\u003eFirst, we'll look at each individual node and its children — so far so good.\nEach left child is less than its parent and each right child is greater than its\nparent. So now let's look at the left side overall:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/invalid-bst-left-side-highlighted.png\" alt=\"invalid bst left side highlighted\"\u003e\u003c/p\u003e\n\n\u003cp\u003eStill good: all the values in the left half of the tree are less than the root\nnode's value. But now, what if we repeat the process for the \u003cstrong\u003esubtree\u003c/strong\u003e with\nthe root node that has a value of 77:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/invalid-bst-left-subtree.png\" alt=\"invalid bst left subtree\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe values of both \"left descendants\" are less than 77, but \u003cstrong\u003enot\u003c/strong\u003e all the\n\"right descendants\" are greater than 77. If you take another look at the full\ntree, you'll see a similar issue on the right side:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/invalid-bst-errors-highlighted.png\" alt=\"invalid bst with errors highlighted\"\u003e\u003c/p\u003e\n\n\u003cp\u003eSo what benefit is there to constructing a tree with these rigid constraints? If\nyou think about it from the point of view of searching, it makes sense. Say we\nwere searching the tree for the value 62. We would start at the root and compare\nits value to 62. 62 is less than 110, so we would then proceed to the left child\nand repeat the comparison. 62 is less than 77 so we would continue down the left\nside and compare 62 to 52. 62 is greater than 52, but the 52 node doesn't have a\nright child so we would conclude (incorrectly) that the value we want isn't in\nthe tree.\u003c/p\u003e\n\n\u003cp\u003eThis is, in fact, the whole point of binary search trees. Let's take another\nlook at our earlier, valid, example:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/binary-search-tree.png\" alt=\"binary search tree\"\u003e\u003c/p\u003e\n\n\u003cp\u003eSay we wanted to search this tree for the value 25. The process would take four\nsteps:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e50 -\u0026gt; 12 -\u0026gt; 24 -\u0026gt; 25\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf you think through the process for another value or two, you should be able to\nconvince yourself that, with a tree of this \u003cstrong\u003eheight\u003c/strong\u003e (or number of levels),\nfour is the maximum number of steps it would take to either find the value or\ndetermine that it isn't present.\u003c/p\u003e\n\n\u003cp\u003eIf, on the other hand, we were searching an unordered tree, our only option\nwould be to systematically \u003cstrong\u003etraverse\u003c/strong\u003e every node in the tree in turn until we\neither found the value or finished searching the entire tree (we'll talk about\ntree traversal in the next lesson). For this example, in the worst case, it\nwould take 12 steps (the number of nodes in our example tree).\u003c/p\u003e\n\n\u003ch2\u003eExample Uses of Trees\u003c/h2\u003e\n\n\u003cp\u003eTrees give us a way to represent multidimensional data. Unlike a linear\nstructure like an array or linked list, trees can be used to model more complex\nrelationships among elements. Some examples of real-world uses of trees include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe \u003ca href=\"https://en.wikipedia.org/wiki/Document_Object_Model\"\u003eDOM\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eComputer File Systems, which are organized by folders and subfolders\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Decision_tree\"\u003eDecision trees\u003c/a\u003e, sometimes used in Artificial intelligence\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eImplementing a Tree\u003c/h2\u003e\n\n\u003cp\u003eThe implementation of a \u003ccode\u003eTree\u003c/code\u003e class is very similar to what we did for the\n\u003ccode\u003eLinkedList\u003c/code\u003e. It includes two classes: one for the tree itself and one for the\nnodes. The \u003ccode\u003eTree\u003c/code\u003e class will have a single attribute, \u003ccode\u003eroot\u003c/code\u003e, and, for a\nnon-binary tree, the \u003ccode\u003eNode\u003c/code\u003e class will have two attributes: a \u003ccode\u003evalue\u003c/code\u003e and a\n\u003ccode\u003echildren\u003c/code\u003e array:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTree\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@root\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eNode\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@value\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@children\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe implementation for a \u003ccode\u003eBinaryTree\u003c/code\u003e or \u003ccode\u003eBinarySearchTree\u003c/code\u003e class would be\nalmost the same, except rather than a \u003ccode\u003echildren\u003c/code\u003e array, the \u003ccode\u003eNode\u003c/code\u003e class would\ninclude \u003ccode\u003eleft_child\u003c/code\u003e and \u003ccode\u003eright_child\u003c/code\u003e attributes:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBinaryTree\u003c/span\u003e \u003cspan class=\"c1\"\u003e# or BinarySearchTree\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@root\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eNode\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@value\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@left_child\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@right_child\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eCommon Methods\u003c/h2\u003e\n\n\u003cp\u003eThe methods included in an implementation of a tree structure — and how they\nare implemented — will vary depending on the type of tree being used and what\nit's being used for. However, at a minimum, a typical implementation will likely\ninclude methods for inserting and removing nodes, and for searching or\ntraversing the tree.\u003c/p\u003e\n\n\u003cp\u003eAs an example, let's consider an \u003ccode\u003eadd\u003c/code\u003e method to add a new node. If we are using\na simple tree to represent something like a file structure, our goal would\npresumably be to add a new child to a particular node, so we would need a way to\nreference or find that node and add the new node to its \u003ccode\u003echildren\u003c/code\u003e array. In\nthis case, it may make sense to create the \u003ccode\u003eadd\u003c/code\u003e method in the \u003ccode\u003eNode\u003c/code\u003e class. The\nmethod would be called on the node we want to append the new node to, and the\nnew node would be passed in to the method as an argument. (Alternatively, just\nthe value could be passed in and the new node created inside the method.)\u003c/p\u003e\n\n\u003cp\u003eIf, on the other hand, we're adding a new element to a binary search tree, we\nwould need to define a very specific algorithm to traverse the tree and insert\nthe new node at the correct location. In this case, the \u003ccode\u003eadd\u003c/code\u003e method would need\nto be in the \u003ccode\u003eBinarySearchTree\u003c/code\u003e class.\u003c/p\u003e\n\n\u003ch2\u003eBig O\u003c/h2\u003e\n\n\u003cp\u003eSince the methods in a tree implementation will vary depending on what type of\ntree it is and how it's being used, the Big O of those methods will vary as\nwell.\u003c/p\u003e\n\n\u003cp\u003eUsing the \u003ccode\u003eadd\u003c/code\u003e example from above, the efficiency in the first case — where\nwe're adding a new node to a particular parent node — would be O(1).\u003c/p\u003e\n\n\u003cp\u003eIn the second case where we're adding an element into a binary search tree, we\nwill need to do some traversal. However, as we discussed above, the maximum\nnumber of steps this took was less than the number of nodes contained in the\ntree. As it turns out, for search algorithms where you're able to cut the\nproblem in half at each step, the number of steps is approximately equal to\nlog₂n. In Big O notation, this is expressed as O(log n).\u003c/p\u003e\n\n\u003cp\u003eIf you take a look at how O(log n) looks compared to other common runtimes, we\ncan see that it's great! Not quite as good as constant time, but much better\nthan linear O(n) or quadratic O(n²) time:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/data-structures-and-algorithms/Big-O-graph.png\" alt=\"Big O Graph\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eMathematical aside\u003c/strong\u003e: don't worry too much about the math here. Basically, the\nlog base 2 of a number is the number of times you can divide that number by 2\nuntil you get to 1 or less. For example, log₂16 = 4:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/log-base-2.png\" alt=\"log base 2\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThis process of repeatedly dividing by 2 may remind you of how we described the\nbinary search process — that's where the name came from!\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003eHowever\u003c/strong\u003e\u003c/em\u003e, there is a big caveat here — the O(log n) is \u003cstrong\u003enot\u003c/strong\u003e guaranteed.\nLet's take a look at an example:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/unbalanced-bst.png\" alt=\"Unbalanced bst\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThis is a \u003cstrong\u003evalid\u003c/strong\u003e binary search tree! All of the \u003ccode\u003eright_child\u003c/code\u003e nodes have\nvalues greater than the value of their parent; there is no requirement that\nnodes have both a \u003ccode\u003eright_child\u003c/code\u003e and a \u003ccode\u003eleft_child\u003c/code\u003e. But if you think about\nsearching this binary search tree for the value 101, you should see that it\nwould take n steps, \u003cstrong\u003enot\u003c/strong\u003e log n. (Not surprising given that, for all practical\npurposes, this binary search tree is really a linked list!) In order to get the\nfull benefit of using a binary search tree, it needs to be \u003cstrong\u003ebalanced\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eA tree is considered to be balanced if its right subtree and left subtree have\nthe same \u003cstrong\u003eheight\u003c/strong\u003e (number of levels), or they only differ by 1. The more a\nbinary search tree departs from being balanced (with the example above being the\nmost extreme case), the less efficient it will be. The benefits of using a\nbinary search tree, therefore, need to be balanced against the maintenance\ncosts: regularly checking whether the binary search tree is balanced and\nrebalancing when it isn't.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWhew! We've covered a lot of information in this lesson about what trees are,\nhow they are constructed, and how they can be used. In the next lesson, we'll\nlearn about different methods of tree \u003cstrong\u003etraversal\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Tree_structure\"\u003eTree Structure\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Tree_(data_structure)\"\u003eTree (Data Structure)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Binary_search_tree\"\u003eBinary Search Tree\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"tree-data-structure"},{"id":483390,"title":"Tree Traversal","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-tree-traversal\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-tree-traversal/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-tree-traversal\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-tree-traversal/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand what tree traversal is\u003c/li\u003e\n\u003cli\u003eUnderstand breadth-first vs. depth-first traversal\u003c/li\u003e\n\u003cli\u003eImplement breadth-first and depth-first traversal algorithms\u003c/li\u003e\n\u003cli\u003eDiscuss Big O considerations of tree traversal algorithms\u003c/li\u003e\n\u003cli\u003eUse tree traversal to recreate the \u003ccode\u003egetElementById\u003c/code\u003e method\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn the last lesson, we learned about different types of trees, how they're\nconstructed, and what they're used for. In this lesson, we'll learn two\ndifferent methods for visiting the nodes in a tree.\u003c/p\u003e\n\n\u003ch2\u003eTypes of Tree Traversal\u003c/h2\u003e\n\n\u003cp\u003eTree traversal refers to the process of visiting each of the nodes in a tree in\nsome systematic way. There are several approaches that are commonly used, each\nof which results in the nodes being visited in a particular order. These\napproaches can be divided into two general categories: \u003cstrong\u003ebreadth-first\u003c/strong\u003e and\n\u003cstrong\u003edepth-first\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch3\u003eBreadth First\u003c/h3\u003e\n\n\u003cp\u003eIn breadth-first traversal, we start at the root, then visit the remaining nodes\nlevel by level, left to right:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree-traversal/breadth-first.png\" alt=\"bf-traversal\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn this example, the nodes would be visited in the following order:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e20 -\u0026gt; 50 -\u0026gt; 2 -\u0026gt; 11 -\u0026gt; 45 -\u0026gt; 8 -\u0026gt; 101 -\u0026gt; 39 -\u0026gt; 75 -\u0026gt; 57\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSay we want to build a method on our \u003ccode\u003eTree\u003c/code\u003e class that takes a node as input and\nreturns an array containing the values of the root node and all of its child\nnodes in breadth-first order. How would we go about building this in code? We\nwill need to use a second array to keep track of which nodes we still need to\nvisit. The order in which we add nodes to this second array will control the\norder of the elements in the output array.\u003c/p\u003e\n\n\u003cp\u003eLet's start by writing some pseudocode:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eInitialize an empty output array\nInitialize an array of nodes to visit and add the root node to it\nWhile there are nodes in the nodes to visit array\n  Remove the first node from the nodes to visit array\n  Add its value to the output array\n  Add its children (if any) to the end of the nodes to visit array\nReturn the output array\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTake a couple of minutes to walk through the pseudocode using the example tree\nin the diagram above so you can visualize how it works.\u003c/p\u003e\n\n\u003cp\u003eLet's start by defining our method and creating our \u003ccode\u003enodes_to_visit\u003c/code\u003e and\n\u003ccode\u003eresult\u003c/code\u003e array variables. We also want to set up our method to take a node as an\nargument, and initialize \u003ccode\u003enodes_to_visit\u003c/code\u003e with that variable:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ebreadth_first_traversal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n  \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, we'll create our \u003ccode\u003ewhile\u003c/code\u003e loop:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ebreadth_first_traversal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n  \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# traverse our node\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eInside our \u003ccode\u003ewhile\u003c/code\u003e loop, we want to do three things:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eRemove the first node from the \u003ccode\u003enodes_to_visit\u003c/code\u003e array\u003c/li\u003e\n\u003cli\u003eAdd its value to the result array, and\u003c/li\u003e\n\u003cli\u003eAdd its children (if any) to the \u003ccode\u003enodes_to_visit\u003c/code\u003e array\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ebreadth_first_traversal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n  \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 1. Remove the first node from the `nodes_to_visit` array\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enode\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eshift\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 2. Add its value to the result array\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:value\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 3. Add its children (if any) to the END of the `nodes_to_visit` array\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:children\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet's call our method using the following very simple node as input:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree-traversal/simple-tree.png\" alt=\"simple node\"\u003e\u003c/p\u003e\n\n\u003cp\u003eWe set up our variables, then call the method, passing the root node as an\nargument:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003echild_1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003echild_2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003echild_3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eroot\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003echild_1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echild_2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echild_3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ebreadth_first_traversal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; [1, 2, 3, 4]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eDepth First\u003c/h3\u003e\n\n\u003cp\u003eWith depth-first traversal, rather than visiting nodes level by level, we\ninstead work our way down to the bottom of the tree first. Once we get to the\nbottom, we backtrack until we get to a node that hasn't been fully explored yet,\nwork our way down to the bottom again, and so on until we're done:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree-traversal/depth-first.gif\" alt=\"depth-first-gif\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThis method of depth-first traversal is also known as \u003cstrong\u003epreorder traversal\u003c/strong\u003e.\nOnce we're done, we will have visited the nodes in the following order:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e20 -\u0026gt; 50 -\u0026gt; 45 -\u0026gt; 8 -\u0026gt; 2 -\u0026gt; 101 -\u0026gt; 39 -\u0026gt; 75 -\u0026gt; 11 -\u0026gt; 57\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo how would we go about building this in code? Well the good news is that the\nprocess is almost identical to the breadth-first traversal!\u003c/p\u003e\n\n\u003cp\u003eLet's think about what we did in that case. We started at the root (20), then\nvisited its left-most child (50). We added that node's children to the end of\nthe array of nodes to visit, then continued visiting the remaining children of\nthe root node (2 and 11). In this case, however, we want to visit the children\nof 50 \u003cstrong\u003ebefore\u003c/strong\u003e we visit its siblings. Doing that is just a matter of making\none small change to our earlier code.\u003c/p\u003e\n\n\u003cp\u003eHere's what our pseudocode would look like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eInitialize an empty output array\nInitialize an array of nodes to visit and add the root node to it\nWhile there are nodes in the array of nodes to visit\n  Remove the first node from the array of nodes to visit\n  Add its value to the output array\n  Add its children (if any) to the BEGINNING of the array of nodes to visit\nReturn the output array\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOnce again, spend a couple of minutes working through the process with our\nexample tree to see how it works.\u003c/p\u003e\n\n\u003cp\u003eThe final code looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edepth_first_traversal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n  \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 1. Remove the first node from the `nodes_to_visit` array\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enode\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eshift\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 2. Add its value to the result array\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:value\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 3. Add its children (if any) to the BEGINNING of the `nodes_to_visit` array\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:children\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNote that the only change in our method was to add the child nodes to the\n\u003cstrong\u003ebeginning\u003c/strong\u003e of the \u003ccode\u003enodes_to_visit\u003c/code\u003e array instead of the end.\u003c/p\u003e\n\n\u003cp\u003eDepth-first search also lends itself well to a recursive solution, where we\ntraverse each sub-tree of the node's children recursively before moving to the\nnext sub-tree:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edepth_first_traversal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[])\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# visit each node (add it to the list of results)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:value\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:children\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nf\"\u003eeach\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003echild\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# visit each child node\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edepth_first_traversal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echild\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eWhen to Use Breadth-First vs. Depth-First Traversal Methods\u003c/h2\u003e\n\n\u003cp\u003eUnfortunately, there are no hard and fast rules here — it really depends on the\ncircumstances. However, there are a couple of factors that can provide some\nguidance.\u003c/p\u003e\n\n\u003ch3\u003eThe Type of Output Needed\u003c/h3\u003e\n\n\u003cp\u003eIn some cases, the desired output will determine what method of traversal should\nbe used. Say, for example, we have a company organization chart that lists all\nthe employees hierarchically:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree-traversal/org-chart.png\" alt=\"Org chart\"\u003e\u003c/p\u003e\n\n\u003cp\u003eOn occasion, we may need to print out all the employees. If we want to print\nthem in hierarchical order — the CEO first, followed by Vice Presidents,\nManagers, etc. — we would use a breadth-first traversal. But if we want to print\nout the employees by function or department — the head of the department or\nfunction first, followed by all their direct reports, then all the employees who\nreport to \u003cem\u003ethem\u003c/em\u003e, etc. — we would use a depth-first approach.\u003c/p\u003e\n\n\u003ch3\u003eBig O Considerations\u003c/h3\u003e\n\n\u003cp\u003eSetting aside binary search trees — which, as we discussed in the previous\nlesson, are usually (but not always) more efficient — the time complexity of\ntraversing trees is the same regardless of the approach used. No matter which\nway we proceed through the tree, we need to visit every node, giving a time\ncomplexity of O(n). Therefore, time complexity will not help us pick one\napproach over the other.\u003c/p\u003e\n\n\u003cp\u003eSpace complexity considerations, however, \u003cem\u003ecan\u003c/em\u003e help us choose. Because we use\nan additional data structure to hold elements as we go (as we did in the\nexamples above with the holder array), we want to choose a method that minimizes\nthe storage requirements. To do this, we need to consider the \u003cstrong\u003eheight\u003c/strong\u003e vs. the\n\u003cstrong\u003ewidth\u003c/strong\u003e of our tree.\u003c/p\u003e\n\n\u003cp\u003eWith breadth-first traversal, we work our way across each level, adding the\nchildren of each node to our holder array as we go. With depth-first traversal,\non the other hand, we work our way down from each child node in turn, adding\nchildren of that node at each successive level. As a result, if we have a very\nwide tree, where there are not a lot of levels but there are many nodes on each\nlevel, the storage requirements will be less if we use depth-first search.\nConversely, if we have a long skinny tree, where each node has many children and\ngrandchildren, but there aren't a lot of nodes within each level, breadth-first\ntraversal will be more efficient.\u003c/p\u003e\n\n\u003ch2\u003eExercise: Build \u003ccode\u003egetElementById\u003c/code\u003e\n\u003c/h2\u003e\n\n\u003cp\u003eLet's get some practice using our traversal skills by creating a Ruby version of\nJavaScript's \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById\"\u003e\u003ccode\u003eDocument.getElementById\u003c/code\u003e method\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eIn the \u003ccode\u003elib\u003c/code\u003e folder, we having included an implementation of a \u003ccode\u003eTree\u003c/code\u003e class. The\nnodes in the \u003ccode\u003eTree\u003c/code\u003e will be structured as follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003etag_name: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'h1'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'heading'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003etext_content: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Title'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou do not need to create nodes or a \u003ccode\u003eNode\u003c/code\u003e class yourself — the tests will\nhandle that part.\u003c/p\u003e\n\n\u003cp\u003eTo pass the tests, you will need to add an instance method, \u003ccode\u003eget_element_by_id\u003c/code\u003e,\nto the \u003ccode\u003eTree\u003c/code\u003e class that uses the depth-first approach to traverse the \u003ccode\u003eTree\u003c/code\u003e\nand find the desired node. Like the browser's \u003ccode\u003egetElementById\u003c/code\u003e method, your\nmethod should take a string as an argument and return the node with that value.\nIf a matching node is not found, your method should return \u003ccode\u003enil\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eOnce you have the tests passing, try modifying your method to use breadth-first\ntraversal instead; the tests should still pass.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=eFK3pzJEHKI\"\u003eBaseCS: Tree Traversal\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://eugene-eeo.github.io/blog/tree-traversal-storage.html\"\u003eTree Traversal Space Requirements\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g8ce1b33019c3f2e0f87dbf35eadd13fd"},{"id":483391,"title":"Binary Search Tree Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":"must_submit","completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-binary-search-tree-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-binary-search-tree-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-binary-search-tree-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-binary-search-tree-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eImplement an \u003ccode\u003e#insert\u003c/code\u003e method in the \u003ccode\u003eBinarySearchTree\u003c/code\u003e class\u003c/li\u003e\n\u003cli\u003eImplement a \u003ccode\u003e#search\u003c/code\u003e method in the \u003ccode\u003eBinarySearchTree\u003c/code\u003e class\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn the previous lessons, you learned about different types of \u003ccode\u003eTree\u003c/code\u003e structures\nand different methods for traversing them. In this lab, you'll get some practice\nworking with a \u003ccode\u003eBinarySearchTree\u003c/code\u003e. As a reminder, a \u003cstrong\u003ebinary tree\u003c/strong\u003e is a special\nkind of tree in which each node has at most two child nodes, referred to as the\n\u003cstrong\u003eleft\u003c/strong\u003e child and \u003cstrong\u003eright\u003c/strong\u003e child.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/binary-tree.png\" alt=\"binary tree\"\u003e\u003c/p\u003e\n\n\u003cp\u003eEach node in a binary tree has three attributes: a \u003ccode\u003evalue\u003c/code\u003e, and references to\nits \u003ccode\u003eleft_child\u003c/code\u003e and \u003ccode\u003eright_child\u003c/code\u003e. If a node doesn't have either or both of\nthese child nodes, the attributes will be set to \u003ccode\u003enil\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eA \u003cstrong\u003ebinary search tree (BST)\u003c/strong\u003e is a special kind of a binary tree in which the\nvalue of a node's left child (if it has one) must be less than the value of the\nnode itself, and the value of its right child (if it has one) must be greater\nthan the value of the node itself:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/binary-search-tree.png\" alt=\"binary search tree\"\u003e\u003c/p\u003e\n\n\u003cp\u003eFork and clone this lab, then take a look at the files in the \u003ccode\u003elib\u003c/code\u003e folder. Note\nthat we have provided you with the code for the \u003ccode\u003eBinarySearchTree\u003c/code\u003e and \u003ccode\u003eNode\u003c/code\u003e\nclasses. You will be doing all of your coding in \u003ccode\u003elib/binary_search_tree.rb\u003c/code\u003e.\nYou can run the tests at any point using \u003ccode\u003elearn test\u003c/code\u003e to check your work.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eTo pass the tests, you will need to write the following methods:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eBinarySearchTree#search\u003c/code\u003e: this method should take a target value as input and\nsearch for the \u003ccode\u003eNode\u003c/code\u003e with that value in the \u003ccode\u003eTree\u003c/code\u003e instance. The method\nshould return the \u003ccode\u003eNode\u003c/code\u003e with the target value if one is found and \u003ccode\u003enil\u003c/code\u003e\notherwise.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eBinarySearchTree#insert\u003c/code\u003e: this method should take a value as input, create a\nnew \u003ccode\u003eNode\u003c/code\u003e with that value, and insert it into the \u003ccode\u003eTree\u003c/code\u003e instance. The method\nshould insert nodes regardless of the tree's existing size, and should not\nallow duplicate nodes to be inserted. If the \u003ccode\u003eNode\u003c/code\u003e was inserted successfully,\nthe method should return that \u003ccode\u003eNode\u003c/code\u003e. Otherwise, the method should return\n\u003ccode\u003enil\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e these methods can be coded using either iteration or recursion; you\nare free to use whichever approach you’re comfortable with.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eHint:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eFor both methods, you’ll start at the root and compare the input value to the\nroot’s value. Depending on the result of the comparison, you’ll either be done,\nor you’ll continue to either the left or right child, where you’ll repeat the\nprocess.\u003c/p\u003e\n\n\u003cp\u003eSome tips to get it working:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eYou will need to use a variable to keep track of which node you’re currently\nchecking.\u003c/li\u003e\n\u003cli\u003eFor the \u003ccode\u003e#search\u003c/code\u003e method, you will want to continue looping until you’ve\neither found the target node or you’ve run out of nodes to check. For the\n\u003ccode\u003e#insert\u003c/code\u003e method, you will want to continue looping until you’ve either\ninserted the new node or found that there is already a node in the tree that\nhas the target value.\u003c/li\u003e\n\u003cli\u003eRecall that you can use \u003ccode\u003ewhile true\u003c/code\u003e to continue looping until a \u003ccode\u003ereturn\u003c/code\u003e\nstatement is executed.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Binary_search_tree\"\u003eWikipedia: Binary Search Tree\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gaec20e0e0f7854854a662c98584208e1"},{"id":483392,"title":"Data Structures Conclusion","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-conclusion\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-conclusion\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-conclusion/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eReview what you learned in this section\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eRecap\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you learned many common data structures, including:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eSets\u003c/li\u003e\n\u003cli\u003eStacks\u003c/li\u003e\n\u003cli\u003eLinked Lists\u003c/li\u003e\n\u003cli\u003eTrees\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFor each of these data structures, you learned how to \u003cstrong\u003eimplement common\nmethods\u003c/strong\u003e, \u003cstrong\u003eidentify the runtime using Big O notation\u003c/strong\u003e, and how to \u003cstrong\u003eevaluate\nthe tradeoffs\u003c/strong\u003e of choosing one data structure over another.\u003c/p\u003e\n\n\u003cp\u003eBy gaining experience with these common data structures, you should have an\neasier time learning some other common data structures in the future. The best\nthing to do from here is practice! It's important to see more problems like the\nones you've worked on in this section, so that you can start identifying\npatterns and build up an intuition for determining which data structures will\nhelp with different kinds of problems. Check out the resources section for some\nways to continue building your skills.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://leetcode.com/problemset/all/\"\u003eLeetCode Problems\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eThese problems are organized by difficulty and are searchable. Start with\neasy problems and work your way up —\u0026nbsp;the medium and hard problems are quite\nchallenging! It can be helpful to search using the 'Tags' feature to search\nfor several problems that use the same data structure to get some reps and\nidentify patterns.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://leetcode.com/list/5r99deem/\"\u003eFIS DSA 100+\u003c/a\u003e is a curated list of\nover 100 LeetCode problems chosen by Flatiron School.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://seanprashad.com/leetcode-patterns/\"\u003eLeetCode Patterns\u003c/a\u003e is a site\nthat lets you browse LeetCode problems grouped by patterns, so you can work\non spotting common patterns to problems through repetition.\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.hackerrank.com/interview/interview-preparation-kit\"\u003eHackerRank Interview Prep Kit\u003c/a\u003e\nhas groups of challenges by common patterns and data structures for practice.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://techinterviewhandbook.org/\"\u003eTech Interview Handbook\u003c/a\u003e has curated\ninterview prep materials, including\n\u003ca href=\"https://techinterviewhandbook.org/algorithms/introduction/\"\u003ealgorithm material\u003c/a\u003e\nthat has example questions for different data structures.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://medium.com/basecs/tagged/data-structures\"\u003eBaseCS\u003c/a\u003e is a blog devoted\nto the basics of computer science with great visuals.\u003c/li\u003e\n\u003c/ul\u003e","exportId":"data-structures-conclusion"}]},{"id":49300,"name":"[Optional] Redux: Building Redux from Scratch","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"gc77e2c04f29ad9ae20b21c0977109ad9","items":[{"id":483393,"title":"Why Redux?","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-why-redux\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-why-redux\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-why-redux/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain how Redux encourages a single source of truth\u003c/li\u003e\n\u003cli\u003eExplain how actions fit into the Redux flow\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we will learn about the Redux architecture for building web\napplications.\u003c/p\u003e\n\n\u003ch2\u003eBenefits of Moving to Redux\u003c/h2\u003e\n\n\u003cp\u003eAs our React applications become larger, our state becomes more spread out\nbetween different components. At a certain point, the component tree becomes a\nweb of props and state that can obscure our view of how components are handling\nand sharing data with each other.\u003c/p\u003e\n\n\u003cp\u003eThere are ways to get around this, like storing all of our state in one high\nlevel container component, but this can ultimately \u003cem\u003eincrease\u003c/em\u003e the complexity of\nyour props.\u003c/p\u003e\n\n\u003cp\u003eRedux offers a different solution. It encourages storing all of the shared state\nin our application in a JavaScript object \u003cem\u003eseparate\u003c/em\u003e from our components known\nas the \u003cstrong\u003estore\u003c/strong\u003e. Picture having all your shared application state in one big\nobject, like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebob\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ehometown\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ephilly\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003einterests\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003epokemon\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003egame\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003egame of thrones\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003etv show\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e],\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSimilar to component state, all our data can be held in an object. The\ndifference here is that, since Redux state is separate from the component tree,\nwe can grab \u003cem\u003eany\u003c/em\u003e part of this data for \u003cem\u003eany\u003c/em\u003e component that needs it, just by\nconnecting the component! Using Redux means we have a \u003cstrong\u003esingle source of truth\u003c/strong\u003e\nfor our application's state.\u003c/p\u003e\n\n\u003ch2\u003eAccessing Our State\u003c/h2\u003e\n\n\u003cp\u003eTo make this state available for components to connect to, we provide access by\nwrapping the component tree with a special context provider component, similar\nto the \u003ccode\u003eBrowserRouter\u003c/code\u003e component we used with React Router. This gives us access\nto Redux hooks that allow us to access the Redux store from any component.\u003c/p\u003e\n\n\u003cp\u003eConsequently, complex interaction between components is made easier. Take for\nexample sibling components (rendered side by side in a parent) and cousin\ncomponents (the children of sibling components). Without Redux, if siblings are\nboth displaying or manipulating the same bit of shared data, that data needs to\nbe stored in their parent component's state. If \u003cem\u003ecousins\u003c/em\u003e are sharing data, the\ndata needs to be stored in the \u003cem\u003egrandparent\u003c/em\u003e component, the closest shared\n'ancestor' component.\u003c/p\u003e\n\n\u003cp\u003eWith Redux, all these interactions are structured the same way. Every component\nwe allow can get and update state from the Redux store regardless of the\nposition of components in a tree.\u003c/p\u003e\n\n\u003ch2\u003eUpdating Our State\u003c/h2\u003e\n\n\u003cp\u003eWith Redux, we hold all of our shared state in one place and with some\nconfiguration, we can read it via hooks in regular React components.\u003c/p\u003e\n\n\u003cp\u003eWhen we want to update that shared state, we must send an action, which is a set\nof strict instructions \u003cem\u003ewe create\u003c/em\u003e that tells Redux how to update our state.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003einterests/addInterest\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehockey\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003esport\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere, we can imagine that after a user fills out a form and clicks submit, we\nwill create an action that tells Redux how to incorporate the update into the\nstate. Any time we update state with Redux, we must create an action first. This\naction is just a plain old JavaScript object.\u003c/p\u003e\n\n\u003cp\u003eThese actions are used by our components. Any component will be able to modify\nstate in the Redux store using an action we've defined by \u003cstrong\u003edispatching\u003c/strong\u003e the\naction to the Redux store.\u003c/p\u003e\n\n\u003cp\u003eFollowing a specific design pattern that we'll explore through the upcoming\nlessons, we can use these actions to update our Redux state. These state changes\ntrigger re-renders in our components so that they can display the updated state.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eRedux places all of our data in one place — the store. This store is just a\nplain JavaScript object representing the shared global state for our\napplication. In fact, all the pieces of Redux are plain old JavaScript. It is\nthe pattern, the way the information flows, that makes Redux awesome.\u003c/p\u003e\n\n\u003cp\u003eTo change our application state, we need to create an action that defines how to\nupdate that state. The action, combined with the previous state, produces an\nupdated state.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=xsSnOQynTHs\"\u003eRedux Justification - Dan Abramov\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=uvAXVMwHJXU\"\u003eLooking back at Redux - Dan Abramov\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"why-redux"},{"id":483394,"title":"Using Pure Functions to Update Application State","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-data-flow\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-data-flow\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-data-flow/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDefine what a pure function is\u003c/li\u003e\n\u003cli\u003eExplain the fundamentals of the Redux flow\u003c/li\u003e\n\u003cli\u003eExplain how pure functions update our application state\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSo far we know that all of our state is in a JavaScript object, and that our\nactions are in another JavaScript object called an action. In this lesson, we\nwill learn the specifics of how Redux uses the action to update state.\u003c/p\u003e\n\n\u003ch2\u003eFunctions to the Rescue\u003c/h2\u003e\n\n\u003cp\u003eLet's take a look at an example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSomehow I want to apply this action to the current state so that at the end our\nstate is updated to look like the following: \u003ccode\u003estate -\u0026gt; {count: 1}\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis seems easy enough. We can simply write a function that takes in our\nprevious state and our action, and depending on that action produces a new\nstate. Here's what it could look like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThat's pretty straightforward code. If the action's type property is the String\n\u003ccode\u003e'counter/increment'\u003c/code\u003e then go ahead and increment the value of \u003ccode\u003ecount\u003c/code\u003e and\nreturn the new state.\u003c/p\u003e\n\n\u003cp\u003eThe important piece of information we looked at to determine how to change the\nstate was \u003ccode\u003eaction.type\u003c/code\u003e. Actions always need a \u003ccode\u003etype\u003c/code\u003e property so the function\nknows what to do. If you can imagine a whole bunch of different actions that\nchange the state in different ways — \u003ccode\u003e'counter/decrement'\u003c/code\u003e,\n\u003ccode\u003e'counter/incrementByTen'\u003c/code\u003e and so on — it shouldn't be hard to see how that code\ncould become very messy with a bunch of \u003ccode\u003eif\u003c/code\u003es and \u003ccode\u003eelse if\u003c/code\u003es. Instead, it is\ncustomary to use a \u003ccode\u003eswitch case\u003c/code\u003e statement.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis makes it very explicit that \u003ccode\u003eaction.type\u003c/code\u003e is the information we are\nswitching on to make our decision about how to change the state.\u003c/p\u003e\n\n\u003cp\u003eWe'll talk about this in depth later, but it is important that when we change\nthe state we never return \u003ccode\u003enull\u003c/code\u003e or \u003ccode\u003eundefined\u003c/code\u003e. We'll cover this by adding a\n\u003ccode\u003edefault\u003c/code\u003e case to our function.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis way, no matter what, when accessing the Redux state we'll always get some\nform of the state back.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// =\u0026gt; {count: 1}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOk, so if you copy and paste that code into a JavaScript console, you'll see\nthat the function works just as we'd expect. The state and action are passed to\nour \u003ccode\u003echangeState function\u003c/code\u003e, which hits the \u003ccode\u003e'counter/increment'\u003c/code\u003e case statement.\nThen it takes the state's count of zero, adds one to it, and returns a new\nobject \u003ccode\u003e{ count: 1 }\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eNow let's have this function respond to another action, decrease count. Try\ngiving it a shot yourself before looking at the answer.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/decrement\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// =\u0026gt; {count: 1}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/decrement\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// =\u0026gt; {count: 0}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOk! That my friends, is the crux of Redux. To summarize:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eAction \u0026amp; Current State -\u0026gt; Function -\u0026gt; Updated State\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBecause our function is combining two pieces of information — our current state\nand an action — and reducing this combination into one value, we say that it\n\u003cem\u003ereduces\u003c/em\u003e the two into one updated state. For this reason, we call this function\na reducer:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eAction \u0026amp; Current State -\u0026gt; Reducer -\u0026gt; Updated State\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs you learn more about Redux, things may become more complex. Just remember\nthat this flow is always at the core of Redux. An \u003cstrong\u003eaction\u003c/strong\u003e gets sent to a\n\u003cstrong\u003ereducer\u003c/strong\u003e which then updates the state of the application.\u003c/p\u003e\n\n\u003ch2\u003eReducers are pure functions\u003c/h2\u003e\n\n\u003cp\u003eAn important thing to note about reducers is that they are pure functions. Let's\nremember the characteristics of pure functions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eThe return value of a pure function is determined solely by its input values.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003ePure functions have no side effects. By this we mean pure functions do not\nhave any effect outside of the function itself. They only return a value.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNote: The reason we like pure functions so much is because if a function has\nno side effects and always returns the same value given the same input, it\nbecomes really predictable. In addition, the lack of side effects means that\nthe functions are also contained, and can be used safely without affecting the\nrest of your application.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/decrement\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet's take these two characteristics of pure functions in turn, and ensure that\nwe are adhering to them here.\u003c/p\u003e\n\n\u003cp\u003eThe first characteristic of pure functions means that given the same input to\nthe function, I will always receive the same output from that function. That\nseems to hold; given a specific state object like \u003ccode\u003e{count: 2}\u003c/code\u003e and an action\nobject like \u003ccode\u003e{type: 'counter/decrement'}\u003c/code\u003e, will I always get back the same\nvalue? Yes. Given those two arguments, the output will always be \u003ccode\u003e{count: 1}\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eAs for the 'no side effects' characteristic, there's something pretty subtle\ngoing on in our reducer. The object returned is not the same object that is\npassed as an argument to the function, but rather a new object that is\nconstructed each time our reducer is called. Do you see why? Take a close look\nat the line that says \u003ccode\u003ereturn {count: state.count + 1}\u003c/code\u003e. This line is\nconstructing a new JavaScript object and setting its count attribute equal to\nthe previous state's count plus one. So we adhere to the constraints of a pure\nfunction by not changing any value that is defined outside of the function.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned more about how updates to state are handled in Redux.\nSpecifically, we learned that state is updated by a special type of function\nknown as a reducer, which contains a switch/case statement. The reducer takes as\narguments the current state and an \u003cstrong\u003eaction\u003c/strong\u003e, which is a simple JavaScript\nobject that contains a \u003ccode\u003etype\u003c/code\u003e attribute. Then, based on the action \u003ccode\u003etype\u003c/code\u003e, the\nreducer executes the matching \u003ccode\u003ecase\u003c/code\u003e of the \u003ccode\u003eswitch\u003c/code\u003e statement to update state.\u003c/p\u003e\n\n\u003cp\u003eIn Redux, reducers are pure functions, which means that given the same arguments\nof state and action, they will always produce the same new state. It also means\nthat our reducer never updates the previous state object, but rather creates a\nnew updated object.\u003c/p\u003e","exportId":"using-pure-functions-to-update-application-state"},{"id":483395,"title":"Reducers Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-reducers-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-reducers-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-reducers-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-reducers-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eWrite a reducer function\u003c/li\u003e\n\u003cli\u003eUse a reducer to update create a new state based on an action\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\n\u003cp\u003eEach year, around the holidays especially, we forget who we need to buy presents\nfor. Let's write a function that will help us manage our gift recipient list. We\nshould be able to add a person we need to buy a present for and remove people we\nno longer like (or who give us socks every year!).\u003c/p\u003e\n\n\u003cp\u003eIn this lab, we will focus on writing two reducers to help us handle this task.\nSince we're drilling down into one concept, React is not set up in this lab, nor\nis there an \u003ccode\u003eindex.html\u003c/code\u003e file. Follow the instructions below and implement your\ncode in \u003ccode\u003e/src/manageFriends.js\u003c/code\u003e and \u003ccode\u003e/src/managePresents.js\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eTo get started, run \u003ccode\u003enpm install\u003c/code\u003e to install the test dependencies.\u003c/p\u003e\n\n\u003cp\u003eFor this lab, you won't be able to run any code in the browser. Just run the\ntests to check your code as you go!\u003c/p\u003e\n\n\u003cp\u003eYou'll be writing two reducers for this lesson. Both reducers should be pure\nfunctions. This means that the functions cannot change any object defined\noutside of the functions. It also means that given an input, the reducers will\nalways return the same output.\u003c/p\u003e\n\n\u003ch3\u003e\n\u003ccode\u003emanagePresents\u003c/code\u003e Function\u003c/h3\u003e\n\n\u003cp\u003eIn \u003ccode\u003emanagePresents.js\u003c/code\u003e, write a function called \u003ccode\u003emanagePresents()\u003c/code\u003e that takes in\nthe previous state and an action as its argument. The default value for the\nstate argument is an object with a key, \u003ccode\u003enumberOfPresents\u003c/code\u003e, assigned to \u003ccode\u003e0\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eActions passed into this reducer will only have a \u003cem\u003etype\u003c/em\u003e attribute, so they\nwould look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003epresents/increase\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the reducer receives a \u003ccode\u003etype\u003c/code\u003e set to \u003ccode\u003e\"presents/increase\"\u003c/code\u003e, return a new\nstate where the value of \u003ccode\u003enumberOfPresents\u003c/code\u003e is increased by one. Use the tests\nto guide you as you build out this reducer.\u003c/p\u003e\n\n\u003ch3\u003e\n\u003ccode\u003emanageFriends\u003c/code\u003e Function\u003c/h3\u003e\n\n\u003cp\u003eIn \u003ccode\u003emanageFriends.js\u003c/code\u003e, write a function called \u003ccode\u003emanageFriends\u003c/code\u003e that takes in the\nprevious state and an action as its argument. Here, the initial state should be\nan object with a key, \u003ccode\u003efriends\u003c/code\u003e, set to an empty array.\u003c/p\u003e\n\n\u003cp\u003eThis time, the reducer should be able to handle two actions, \u003ccode\u003e\"friends/add\"\u003c/code\u003e and\n\u003ccode\u003e\"friends/remove\"\u003c/code\u003e. When adding a friend, the action will include a \u003ccode\u003efriend\u003c/code\u003e key\nassigned to an object with \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ehometown\u003c/code\u003e, and \u003ccode\u003eid\u003c/code\u003e keys.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003efriends/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eChrome Boi\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ehomewtown\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eNYC\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen our reducer receives \u003ccode\u003e\"friends/add\"\u003c/code\u003e, it should return a new state with\nthis friend object added to the \u003ccode\u003efriends\u003c/code\u003e array.\u003c/p\u003e\n\n\u003cp\u003eWhen removing a friend, instead of an object, the action will include an \u003ccode\u003eid\u003c/code\u003e\nkey with an integer. Find the friend with the matching \u003ccode\u003eid\u003c/code\u003e and remove them.\nThought of in another way, the reducer is really returning a new state with an\narray of \u003ccode\u003efriends\u003c/code\u003e that includes everyone \u003cem\u003eexcept\u003c/em\u003e the removed friend.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003efriends/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eDon't Mutate State\u003c/h2\u003e\n\n\u003cp\u003eAs the Redux documentation notes:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIn order to update values immutably, your code must make copies of existing\nobjects/arrays, and then modify the copies. We can do this by hand using\nJavaScript's array / object spread operators, as well as array methods that\nreturn new copies of the array instead of mutating the original array.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eHere's an example of creating a copy an object using the spread operator\n(\u003ccode\u003e{...}\u003c/code\u003e):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003edog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003escooby\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003ecolor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebrown\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003eage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003eolderDog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003edog\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003eage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003edog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis would translate to the same English, \"Return a new object that contains all\nthe key-value pairs from \u003ccode\u003edog\u003c/code\u003e copied over with the \u003ccode\u003eage\u003c/code\u003e key overwritten with a\nnew value\".\u003c/p\u003e\n\n\u003cp\u003eAs you're working through these tests, make sure your functions don't mutate\nstate!\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\"\u003eMozilla Object.assign\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://redux.js.org/docs/recipes/UsingObjectSpreadOperator.html\"\u003eRedux Docs: Object Spread Operator\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\"\u003eMozilla findIndex\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://redux.js.org/docs/basics/Reducers.html\"\u003eRedux Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g24b5d2b6c23aceb1b49e1f341c44b11e"},{"id":483396,"title":"Persisting State and Displaying State","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-dispatch\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-dispatch/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-dispatch\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-dispatch/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003ePersist changes to state\u003c/li\u003e\n\u003cli\u003eDisplay changes to the state in the view\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eAn HTML page, \u003ccode\u003eindex.html\u003c/code\u003e, is provided and already linked to \u003ccode\u003esrc/reducer.js\u003c/code\u003e.\nOpen \u003ccode\u003eindex.html\u003c/code\u003e in browser to access the functions in \u003ccode\u003ereducer.js\u003c/code\u003e and follow\nalong.\u003c/p\u003e\n\n\u003ch2\u003eBuilding our Counter Application\u003c/h2\u003e\n\n\u003cp\u003ePreviously, we've had a reducer that updates state. In the example we used, we\ndefined a \u003ccode\u003eswitch\u003c/code\u003e statement with one \u003ccode\u003ecase\u003c/code\u003e and a default:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// =\u0026gt; {count: 1}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003ePersisting State\u003c/h2\u003e\n\n\u003cp\u003eAny time we want to preserve the return value of our reducer function, we need\nto store it in some variable, like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//  =\u0026gt; {count: 1}\u003c/span\u003e\n\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//  =\u0026gt; {count: 2}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere, we're reassigning \u003ccode\u003estate\u003c/code\u003e to the return value of our reducer. This way,\neach time \u003ccode\u003echangeState\u003c/code\u003e is called, it is using the updated state in its\narguments.\u003c/p\u003e\n\n\u003cp\u003eLet's encapsulate this procedure in a function so that we can just call that\nmethod and it will persist our changes. We'll name that function \u003ccode\u003edispatch\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// =\u0026gt; {count: 1}\u003c/span\u003e\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// =\u0026gt; {count: 2}\u003c/span\u003e\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// =\u0026gt; {count: 3}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNice! Now we just call our \u003ccode\u003edispatch\u003c/code\u003e function, and pass through our action, and\nour state is preserved. Let's walk through it.\u003c/p\u003e\n\n\u003cp\u003eWe declare our \u003ccode\u003estate\u003c/code\u003e variable and assign it a value of \u003ccode\u003e{count: 0}\u003c/code\u003e. Then, we\ndefine our reducer and our new function \u003ccode\u003edispatch\u003c/code\u003e. At the bottom, we call the\n\u003ccode\u003edispatch\u003c/code\u003e function and pass through our action, \u003ccode\u003e{type: 'counter/increment'}\u003c/code\u003e.\nWhen we call \u003ccode\u003edispatch\u003c/code\u003e, this calls our \u003ccode\u003echangeState\u003c/code\u003e reducer, and passes the\naction object to the reducer. When called, the \u003ccode\u003echangeState\u003c/code\u003e reducer also takes\nin \u003ccode\u003estate\u003c/code\u003e, which has been declared up above.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003estate\u003c/code\u003e is assigned the return value of \u003ccode\u003echangeState\u003c/code\u003e. Since the\n\u003ccode\u003ecounter/increment\u003c/code\u003e type was used, the returned value of \u003ccode\u003echangeState\u003c/code\u003e contains\na \u003ccode\u003ecount\u003c/code\u003e equal to the previous state's count plus one.\u003c/p\u003e\n\n\u003cp\u003eThus, our state is updated. Each time \u003ccode\u003edispatch\u003c/code\u003e is called, the current version\nof \u003ccode\u003estate\u003c/code\u003e is passed into \u003ccode\u003echangeState\u003c/code\u003e, and then \u003ccode\u003estate\u003c/code\u003e is assigned a new\nvalue based on what \u003ccode\u003echangeState\u003c/code\u003e returns.\u003c/p\u003e\n\n\u003ch2\u003eRendering Our State\u003c/h2\u003e\n\n\u003cp\u003eIgnoring React for a bit, how would we display something like this on a page?\nAnd how would we make sure that our HTML updates every time we change our state?\nWell, to render this on the page we can write a render function that changes our\nHTML:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003equerySelector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e#app\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow if we want to call our render function, we'll see our state on the page:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003equerySelector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e#app\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// call the render function\u003c/span\u003e\n\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd presto! Our number is displayed on the page. However, we want to call\n\u003ccode\u003erender\u003c/code\u003e every time our state changes. And it's safe to say our state will not\nchange unless we call the \u003ccode\u003edispatch\u003c/code\u003e function. So we can ensure that the\n\u003ccode\u003erender\u003c/code\u003e function runs every time that our \u003ccode\u003edispatch\u003c/code\u003e function is called by\nchanging our \u003ccode\u003edispatch\u003c/code\u003e function to the following.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003equerySelector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e#app\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eJust to show everything together finally:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003equerySelector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e#app\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf you copy the code above into \u003ccode\u003esrc/reducer.js\u003c/code\u003e and open \u003ccode\u003eindex.html\u003c/code\u003e in your\nbrowser, in the console, you can confirm everything is working by running\n\u003ccode\u003edispatch({type: 'counter/increment'})\u003c/code\u003e and watch as the displayed count\nincreases!\u003c/p\u003e\n\n\u003cp\u003eWith just this set of functions, we could actually apply our own Redux pattern\nto a regular ol' JavaScript and HTML webpage!\u003c/p\u003e\n\n\u003cp\u003eIn the future, we'll also see how to dispatch actions in response to user\nevents.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we've introduced a new function called the \u003ccode\u003edispatch\u003c/code\u003e function.\nOur \u003ccode\u003edispatch\u003c/code\u003e function solved two problems for us.\u003c/p\u003e\n\n\u003cp\u003eFirst, it persisted changes to our state. This is because we called the\n\u003ccode\u003edispatch\u003c/code\u003e function, the \u003ccode\u003edispatch\u003c/code\u003e function called our reducer, and then we\ntook the return value from the reducer and assigned it to be our new state.\u003c/p\u003e\n\n\u003cp\u003eSecond, it ensured that each time our state updates, our HTML updates to reflect\nthese changes. It does this by simply calling the \u003ccode\u003erender\u003c/code\u003e function. Each time\nwe call \u003ccode\u003edispatch\u003c/code\u003e it's as if we are then calling render. Don't worry about\nre-rendering too much. Remember that when we integrate with React, React will\nonly be virtually re-rendering the DOM, and then updating the DOM with the\nsmallest number of changes to ensure a performant application.\u003c/p\u003e","exportId":"g5103ee67e5dffa3d58f99ed733ef0ac5"},{"id":483397,"title":"Dispatching an Initial Action for Setup","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-initial-dispatch\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-initial-dispatch/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-initial-dispatch\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-initial-dispatch/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDispatch an initial action\u003c/li\u003e\n\u003cli\u003eExplain how dispatching an initial action gives an initial setup of the\nstore's state\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eUse the \u003ccode\u003esrc/reducer.js\u003c/code\u003e file to follow along in this code-along. Open\n\u003ccode\u003eindex.html\u003c/code\u003e and try running \u003ccode\u003edispatch({type: \"counter/increment\"})\u003c/code\u003e in the\nbrowser console. You should see a \u003ccode\u003e1\u003c/code\u003e appear on the otherwise blank page.\u003c/p\u003e\n\n\u003ch2\u003eDispatch an Initial Action to Render the View\u003c/h2\u003e\n\n\u003cp\u003eCurrently, we have built our \u003ccode\u003echangeState()\u003c/code\u003e reducer, and the \u003ccode\u003edispatch()\u003c/code\u003e and\n\u003ccode\u003erender()\u003c/code\u003e functions. Remember that we built the \u003ccode\u003edispatch()\u003c/code\u003e function such that\neach time we execute it, we call the \u003ccode\u003erender()\u003c/code\u003e function:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003equerySelector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e#app\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNotice that by calling \u003ccode\u003edispatch()\u003c/code\u003e with an action as an argument, we do render\nsomething on the page. We dispatch an action of \u003ccode\u003e\"counter/increment\"\u003c/code\u003e and we see\nthe number \u003ccode\u003e1\u003c/code\u003e in our HTML, but \u003cstrong\u003ewe never see the number zero displayed\u003c/strong\u003e. One\neasy way to fix this is to simply call the \u003ccode\u003erender()\u003c/code\u003e function at the bottom of\nour JavaScript code, like the previous lesson. We'll choose a different\napproach, though, and use the \u003ccode\u003edispatch()\u003c/code\u003e function we already have.\u003c/p\u003e\n\n\u003cp\u003eRemember that our \u003ccode\u003edispatch()\u003c/code\u003e function also calls our \u003ccode\u003erender()\u003c/code\u003e function. So,\nif we dispatch a meaningless action, our reducer will simply return the existing\nstate (the \u003ccode\u003edefault\u003c/code\u003e case in our \u003ccode\u003eswitch\u003c/code\u003e), and then our \u003ccode\u003erender()\u003c/code\u003e function\nwill be called. Let's try it by dispatching an action of type \u003ccode\u003e@@INIT\u003c/code\u003e. If you\nalready have \u003ccode\u003eindex.html\u003c/code\u003e open in browser, refresh the page and enter the\nfollowing into the browser console:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow the number displayed in the DOM starts at 0. And each time we call dispatch,\nthe DOM is appropriately updated.\u003c/p\u003e\n\n\u003cp\u003eNote that we can dispatch an action of any type, so long as it doesn't hit our\nswitch statement. We dispatch an action of type \u003ccode\u003e@@INIT\u003c/code\u003e by convention, but you\ncould just as well choose something else and get the same result:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebeef\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe \u003ccode\u003eswitch\u003c/code\u003e will return whatever state was passed into the \u003ccode\u003echangeState()\u003c/code\u003e\nfunction. Then \u003ccode\u003erender()\u003c/code\u003e will be called and that updated state will get applied\nto the DOM.\u003c/p\u003e\n\n\u003cp\u003eNow, if we want our page to display \u003ccode\u003e0\u003c/code\u003e when it first loads, we can just add\n\u003ccode\u003edispatch({ type: '@@INIT' })\u003c/code\u003e at the end of the file.\u003c/p\u003e\n\n\u003ch2\u003eDispatch an Initial Action to Set up our Initial State\u003c/h2\u003e\n\n\u003cp\u003eNow that we've seen a simple fix for setting up the initial render of HTML,\nlet's see if there's a simple fix for setting up our state. Notice that\ncurrently we set the initial value of the state at the very first line of our\nJavaScript with the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe problem here is that we would prefer to look to our reducer to see how to\nmanage the state. After all, our reducer returns the new state every time we\ndispatch a new action. Perhaps our reducer can also return our initial state?\u003c/p\u003e\n\n\u003cp\u003eLet's begin by simply declaring our state, but not assigning it to equal\nanything. So, we accordingly change the first line of our JavaScript:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003equerySelector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e#app\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut, we find that dispatching the action of type \u003ccode\u003e@@INIT\u003c/code\u003e gives us an error:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eUncaught TypeError: Cannot read property 'count' of undefined(…)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSee that? Our \u003ccode\u003erender()\u003c/code\u003e function is breaking because now state starts off as\n\u003ccode\u003eundefined\u003c/code\u003e. When we dispatch our action, it calls the reducer, which passes\nthrough our state whose value is \u003ccode\u003eundefined\u003c/code\u003e, and then returns the default value\nof our switch statement, which is just our \u003ccode\u003eundefined\u003c/code\u003e state.\u003c/p\u003e\n\n\u003cp\u003eWhat would be really nice is if we could say when you pass a state of\n\u003ccode\u003eundefined\u003c/code\u003e to our reducer, assign a value to our initial state. Luckily,\nJavaScript allows us to pass default arguments to functions and we can give our\n\u003ccode\u003echangeState()\u003c/code\u003e reducer a default argument to do just that. Let's change our\nreducer to the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow notice what happens:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//  =\u0026gt; { count: 0 }\u003c/span\u003e\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//  =\u0026gt; { count: 1 }\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHow did that work? Let's take it from the top.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003equerySelector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e#app\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAt the top of the file, we declare but do not assign a value to our state, so it\nstarts off undefined. Then at the bottom the file, we dispatch an action of\n\u003ccode\u003e'@@INIT'\u003c/code\u003e. This calls our \u003ccode\u003edispatch()\u003c/code\u003e function and passes through our initial\naction. \u003ccode\u003edispatch()\u003c/code\u003e calls the \u003ccode\u003echangeState()\u003c/code\u003e reducer. \u003ccode\u003echangeState()\u003c/code\u003e is\nexecuted, passing through two local variables: state and action. \u003ccode\u003eaction\u003c/code\u003e is\ndefined because we passed \u003ccode\u003e{ type: '@@INIT' }\u003c/code\u003e into dispatch. \u003ccode\u003estate\u003c/code\u003e is\ncurrently \u003ccode\u003eundefined\u003c/code\u003e, so, with that initial dispatch we are really calling:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003eundefined\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBecause \u003ccode\u003echangeState()\u003c/code\u003e now has a default argument, the \u003ccode\u003estate\u003c/code\u003e argument is set\nto \u003ccode\u003e{ count: 0 }\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWhen \u003ccode\u003echangeState()\u003c/code\u003e executes, the \u003ccode\u003eswitch\u003c/code\u003e statement executes the \u003ccode\u003edefault\u003c/code\u003e\ncase, returning the value of \u003ccode\u003estate\u003c/code\u003e. The code\n\u003ccode\u003echangeState(undefined, { type: '@@INIT' })\u003c/code\u003e \u003cem\u003ereturns\u003c/em\u003e \u003ccode\u003e{ count: 0 }\u003c/code\u003e,\u003c/p\u003e\n\n\u003cp\u003eIn \u003ccode\u003edispatch()\u003c/code\u003e, when the \u003ccode\u003echangeState()\u003c/code\u003e reducer returns, dispatch assigns the\nreturn value to \u003ccode\u003estate\u003c/code\u003e, thus updating our state to the initial value of\n\u003ccode\u003e{ count: 0 }\u003c/code\u003e. On the next line, \u003ccode\u003erender()\u003c/code\u003e is called, displaying \u003ccode\u003e0\u003c/code\u003e in our\nHTML.\u003c/p\u003e\n\n\u003cp\u003eEssentially, we take advantage of our state starting off as undefined, and never\nbeing undefined again. This means the reducer's default argument can be used to\nset up the initial state and never be used again.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWe learned that by dispatching an initial action of type \u003ccode\u003e'@@INIT'\u003c/code\u003e we get two\nbenefits: an initial rendering of the state, and the ability to set our initial\nstate in our reducer. We set our initial state in our reducer by using a default\nargument for the state parameter. Because state is not initially defined,\ndispatching an action assigns our state to that default value, and then sets\nstate as the default.\u003c/p\u003e","exportId":"g22d757330dca06480db8852c58fc7916"},{"id":483398,"title":"Completing our Counter Application","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-dispatch-with-events\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-dispatch-with-events/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-dispatch-with-events\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-dispatch-with-events/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDispatch an action in response to a user event\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eUse \u003ccode\u003esrc/reducer.js\u003c/code\u003e to follow along. The file is already set up in\n\u003ccode\u003eindex.html\u003c/code\u003e, so if you run \u003ccode\u003eopen index.html\u003c/code\u003e, any code in \u003ccode\u003esrc/reducer.js\u003c/code\u003e will\nexecute.\u003c/p\u003e\n\n\u003ch2\u003eApplication Goal\u003c/h2\u003e\n\n\u003cp\u003eWe have built out most of the Redux pattern. Don't worry, we'll review it.\u003c/p\u003e\n\n\u003cp\u003eFor now, let's talk about what we want as a user experience. Here it is: you\nclick on a button, and you see a number on the page go from zero to one. Click\nagain, and you see the number go from one to two. We can see a couple of steps\ninvolved in this.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eClicking on the button should change the state.\u003c/li\u003e\n\u003cli\u003eThis change in state should be rendered.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eBrief Redux Review\u003c/h2\u003e\n\n\u003cp\u003eBy now, you've learned a lot about Redux, but the basic story about it has not\nchanged:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eAction -\u0026gt; Reducer -\u0026gt; New State\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFor example, to increase our state we call\n\u003ccode\u003edispatch({type: 'counter/increment'})\u003c/code\u003e. Our dispatch function calls our reducer\nwhich updates state, and then we render that view on the page.\u003c/p\u003e\n\n\u003cp\u003eIn the previous section, we learned that by dispatching an initial action and\nhaving a default argument in our reducer, we can set up our initial state.\u003c/p\u003e\n\n\u003ch2\u003eRebuild our Dispatch Function and our Reducer\u003c/h2\u003e\n\n\u003cp\u003eLet's code out this our counter application from scratch.\u003c/p\u003e\n\n\u003ch3\u003e1. Start by remembering our core fact about how Redux works\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eaction -\u0026gt; reducer -\u0026gt; new state\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet's translate that into code. This means if we pass an action and a previous\nstate to our reducer, the reducer should return the new state.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eCopy this into the \u003ccode\u003esrc/reducer.js\u003c/code\u003e file. Now let's get some feedback that we\ndid this correctly by opening up our \u003ccode\u003eindex.html\u003c/code\u003e file in the browser. This file\nhas a link to the \u003ccode\u003ereducer.js\u003c/code\u003e file, so your code will be accessible from the\nbrowser console.\u003c/p\u003e\n\n\u003cp\u003eIn the browser console, test the reducer function:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf you see a return value of \u003ccode\u003e{count: 1}\u003c/code\u003e then give yourself a big smile.\u003c/p\u003e\n\n\u003cp\u003eIf we type in \u003ccode\u003estate\u003c/code\u003e, we see that it's unchanged. We need to assign our state\nto be the return value of our reducer each time that we call the reducer. So how\ndo we do that? Think hard, there's no rush.\u003c/p\u003e\n\n\u003cp\u003eThinking...\u003c/p\u003e\n\n\u003cp\u003eThinking...\u003c/p\u003e\n\n\u003ch3\u003e2. Write a Dispatch Function\u003c/h3\u003e\n\n\u003cp\u003eWe can preserve the value of state by adding a \u003ccode\u003edispatch\u003c/code\u003e function to our\n\u003ccode\u003ereducer.js\u003c/code\u003e file. This \u003ccode\u003edispatch\u003c/code\u003e function should receive an argument of\n\u003ccode\u003eaction\u003c/code\u003e. It can access the state because it is declared earlier in the file in\nglobal scope.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow let's see if this reassigns \u003ccode\u003estate\u003c/code\u003e. Add this \u003ccode\u003edispatch\u003c/code\u003e function in and\nopen or refresh the \u003ccode\u003eindex.html\u003c/code\u003e file in the browser. Call\n\u003ccode\u003edispatch({type: 'counter/increment'})\u003c/code\u003e. It should return \u003ccode\u003eundefined\u003c/code\u003e, since\n\u003ccode\u003edispatch()\u003c/code\u003e doesn't return anything, but our \u003ccode\u003estate\u003c/code\u003e value should have changed!\nType in \u003ccode\u003estate\u003c/code\u003e and see if this is true. State should return \u003ccode\u003e{count: 1}\u003c/code\u003e.\nHurray!\u003c/p\u003e\n\n\u003cp\u003eNext problem. Our state says the count is 1, but do you think that is reflected\nin our HTML? Me neither. Ok, so what function is in charge of that. Give it a\nshot. I'll be waiting with the answer when you're ready.\u003c/p\u003e\n\n\u003ch3\u003e3. Write a Render Function\u003c/h3\u003e\n\n\u003cp\u003eWe need a function called render that will place this count on the page:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003econtainer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen we call \u003ccode\u003erender\u003c/code\u003e from the console, we should see HTML that reflects the\ncurrent count. Entering \u003ccode\u003edispatch({type: 'counter/increment'})\u003c/code\u003e to change state,\nthen \u003ccode\u003erender\u003c/code\u003e again should update the number displayed.\u003c/p\u003e\n\n\u003cp\u003eSince the two functions go together, the next step is to tie rendering with the\ndispatch function. Easy enough. Let's alter our dispatch method so that it looks\nlike this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEach time we dispatch an action, we have to update our HTML because the \u003ccode\u003erender\u003c/code\u003e\nfunction is also called. Now for a little refactoring. Let's have only our\ninitial state set in the reducer. We do that by setting our initial state as a\ndefault argument to our \u003ccode\u003ereducer\u003c/code\u003e reducer. Go ahead and tackle it. We'll show\nthe code below.\u003c/p\u003e\n\n\u003ch3\u003e4. Set the Initial State\u003c/h3\u003e\n\n\u003cp\u003eNow our \u003ccode\u003ereducer()\u003c/code\u003e function should look like the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// let state = {count: 0}\u003c/span\u003e\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe are commenting out/deleting the top line where we assign the state, because\ndispatching an action should take care of it (it doesn't). Call \u003ccode\u003edispatch\u003c/code\u003e with\nan action like \u003ccode\u003edispatch({type: 'counter/increment'})\u003c/code\u003e, and we would hope that\nbecause state is \u003ccode\u003eundefined\u003c/code\u003e, our default argument will be passed through. The\nproblem is that we still need to declare our state. So now our updated (working)\ncode looks like the following.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eCall \u003ccode\u003edispatch({type: 'counter/increment'})\u003c/code\u003e again, and we get no error. Instead\nwe get a beautiful piece of HTML code that says the number 1 on it. Now, if\ninstead we want to show the number zero, our default state, well we can just\nrefresh our page, and then dispatch an action that returns the default state\nlike so: \u003ccode\u003edispatch({type: '@@init'})\u003c/code\u003e. This does not increase our state, but it\ndoes return our default state and then call render.\u003c/p\u003e\n\n\u003cp\u003eThis is what we want to do each time we open our page. So let's add\n\u003ccode\u003edispatch({type: '@@INIT'})\u003c/code\u003e at the end of our javascript file. This is where we\nleft off previously. Our almost completed code should look like the following.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003econtainer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLooks good. But we're going further today. We need to make sure every time the\nuser clicks on a button, we dispatch an action. How do you think we do that.\u003c/p\u003e\n\n\u003ch3\u003e5. Integrating dispatch with a user event\u003c/h3\u003e\n\n\u003cp\u003eSo \u003ccode\u003edispatch\u003c/code\u003e is responsible for updating the state and re-rendering. And we\nwant an action to be dispatched each time a user clicks. So let's attach\n\u003ccode\u003edispatch\u003c/code\u003e execution to a click event.\u003c/p\u003e\n\n\u003cp\u003eWe'll be writing a \"vanilla\" JavaScript event listener.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebutton\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow every time we click, we dispatch an action of type increase. Dispatch first\ncalls our reducer, which updates our state. Then dispatch renders the updated\nview.\u003c/p\u003e\n\n\u003cp\u003ePutting everything together, our code should look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003econtainer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebutton\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eClick the button. Our application is done!\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWe saw that by thinking about redux from the perspective of\n\u003ccode\u003eaction -\u0026gt; reducer -\u0026gt; new state\u003c/code\u003e, we are able to get going. Then it's just a\nmatter of tackling each problem as we built out the functionality of the\napplication by following Redux patterns.\u003c/p\u003e","exportId":"g234a9d038023f3d5968437abf538c941"},{"id":483399,"title":"Refactoring Our Code Into A Library","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-create-store\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-create-store/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-create-store\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-create-store/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand which part of our codebase can be used across applications\u003c/li\u003e\n\u003cli\u003eUnderstand how to encapsulate the functions we built\u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003egetState\u003c/code\u003e method\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we will learn how to turn our code into a library that can be\nused across JavaScript applications. Use \u003ccode\u003esrc/createStore.js\u003c/code\u003e to follow along.\nOpen \u003ccode\u003eindex.html\u003c/code\u003e to try out the code.\u003c/p\u003e\n\n\u003ch2\u003eWrite a \u003ccode\u003ecreateStore\u003c/code\u003e Function\u003c/h2\u003e\n\n\u003cp\u003eLet's look at the code that we wrote in the last section.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003econtainer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebutton\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSee that \u003ccode\u003estate\u003c/code\u003e variable all the way at the top of our code? Remember, that\nvariable holds a representation of all of our data we need to display. So it's\nnot very good if this variable is global, and we can accidentally overwrite\nsimply by writing \u003ccode\u003estate = 'bad news bears'\u003c/code\u003e somewhere else in our codebase.\nGoodbye state.\u003c/p\u003e\n\n\u003cp\u003eWe can solve this by wrapping our state in a function. (We will discuss a bit\nlater why we have named this function \u003ccode\u003ecreateStore\u003c/code\u003e.)\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// ...\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003econtainer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow if you reload the browser, you'll see an error pointing to where we are\ndispatching our initial action; this is because the \u003ccode\u003edispatch\u003c/code\u003e function does not\nhave access to that declared state. Notice that \u003ccode\u003erender\u003c/code\u003e won't have access to\nour state either. At this point, we might be tempted to move everything inside\nof our new function. However, the goal here is to include only the code that\nwould be common to all JavaScript applications inside the function. We'll try to\nfigure out exactly what we should move in the next section.\u003c/p\u003e\n\n\u003ch2\u003eUse Function Scope to Encapsulate State\u003c/h2\u003e\n\n\u003cp\u003eWe ultimately want our new function to become a function that all of our\napplications following the Redux pattern can use. To decide what our new\nfunction should be able to do, let's go back to our Redux fundamentals.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eAction -\u0026gt; Reducer -\u0026gt; New State.\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eThe function that goes through this flow for us is the \u003ccode\u003edispatch\u003c/code\u003e function. We\ncall \u003ccode\u003edispatch\u003c/code\u003e with an action, and it calls our reducer and returns to us a new\nstate. So let's move dispatch inside of our new method.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// state is now accessible to dispatch\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eNote: You may notice that in the above code we made a \u003cem\u003eclosure\u003c/em\u003e. As you surely\nremember a JavaScript function has access to all the variables that were in\nscope at the time of its definition. This feature is called a closure since a\nfunction encloses or draws a protective bubble around the variables in its\nscope and carries those with it when invoked later.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAs you see above, \u003ccode\u003edispatch\u003c/code\u003e is now private to our new function. But we'll need\nto call the function when certain events happen in our application (eg. we might\nwant to call dispatch when a user clicks on a button). So we expose the method\nby having our function return a JavaScript object containing the \u003ccode\u003edispatch\u003c/code\u003e\nmethod. In Redux terms, this returned JavaScript object is called the \u003cstrong\u003estore\u003c/strong\u003e,\nso we've named the method \u003ccode\u003ecreateStore\u003c/code\u003e because that's what it does.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn order to access the \u003ccode\u003edispatch\u003c/code\u003e method, we will create a variable \u003ccode\u003estore\u003c/code\u003e and\nset it equal to the result of calling \u003ccode\u003ecreateStore\u003c/code\u003e. Because \u003ccode\u003ecreateStore\u003c/code\u003e\nreturns an object that contains the \u003ccode\u003edispatch\u003c/code\u003e method, we can now access the\nmethod from \u003ccode\u003estore\u003c/code\u003e. Let's modify the code where we dispatch the initial action\nas follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo now we have this object called a store which contains all of our\napplication's state. Right now we can dispatch actions that modify that state,\nbut we need some way to retrieve data from the store. To do this, our store\nshould respond to one other method, \u003ccode\u003egetState\u003c/code\u003e. This method simply returns the\nstate so we can use it elsewhere in our application. We will also need to add\n\u003ccode\u003egetState\u003c/code\u003e to the object our \u003ccode\u003ecreateStore\u003c/code\u003e function returns.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003egetState\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003egetState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow we can get our code working by changing \u003ccode\u003erender\u003c/code\u003e to the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003econtainer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetState\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e...and then updating our button event listener to use \u003ccode\u003estore.dispatch\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebutton\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAll in all, with these changes, the code should look like the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003egetState\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003egetState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003econtainer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetState\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebutton\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOur code is back to working. And it looks like we have a function called\n\u003ccode\u003ecreateStore\u003c/code\u003e which can work with any JavaScript application... almost.\u003c/p\u003e\n\n\u003ch2\u003eAbstract Away the Reducer\u003c/h2\u003e\n\n\u003cp\u003eWe know that Redux works by having an action dispatched, which calls a reducer,\nand then renders the view. Our \u003ccode\u003ecreateStore\u003c/code\u003e's dispatch method does that.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNotice, however, that we did not move the \u003ccode\u003ereducer\u003c/code\u003e function into the\n\u003ccode\u003ecreateStore\u003c/code\u003e function. Take a look at it. \u003cem\u003eThis code\u003c/em\u003e is particular to our\napplication.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe happen to have an application that increases a count. But we can imagine\napplications that manage people's songs, their GitHub repositories, or their\ncontacts. So we want our \u003ccode\u003edispatch\u003c/code\u003e method to call a reducer every time an\naction is dispatched. However, we don't want the \u003ccode\u003ecreateStore\u003c/code\u003e function to\nspecify what that reducer is, or what it does. We want \u003ccode\u003ecreateStore\u003c/code\u003e to be\ngeneric enough for \u003cem\u003eany\u003c/em\u003e JavaScript application. Instead, we should make the\nreducer an argument to our \u003ccode\u003ecreateStore\u003c/code\u003e function. Then we pass through our\nreducer function when invoking the \u003ccode\u003ecreateStore\u003c/code\u003e method.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003egetState\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003egetState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003econtainer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetState\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// createStore takes the reducer as an argument\u003c/span\u003e\n\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebutton\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs you see above, \u003ccode\u003ecreateStore\u003c/code\u003e takes the reducer as the argument. This sets the\nnew store's reducer as \u003ccode\u003ereducer\u003c/code\u003e. When an action is dispatched, it calls the\nreducer that we passed through when creating the store.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWith this set up, we've got a fully functional \u003ccode\u003estore\u003c/code\u003e that encapsulates our\nstate and provides a controlled way to write (\u003ccode\u003edispatch\u003c/code\u003e) and retrieve\n(\u003ccode\u003egetState\u003c/code\u003e) information.\u003c/p\u003e\n\n\u003cp\u003eEvery piece of code that would be common to any JavaScript application following\nthis pattern is wrapped inside of the \u003ccode\u003ecreateStore\u003c/code\u003e function. Any code that is\nparticular to our application is outside that function.\u003c/p\u003e\n\n\u003cp\u003eWhat's particular to a specific application?\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eHow the DOM is updated in our \u003ccode\u003erender\u003c/code\u003e function\u003c/li\u003e\n\u003cli\u003eWhat events trigger a dispatch method\u003c/li\u003e\n\u003cli\u003eHow our state should change in response to different actions being dispatched.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThese are all implemented outside of our \u003ccode\u003ecreateStore\u003c/code\u003e function. What is generic\nto each application following this pattern?\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThat a call to \u003ccode\u003edispatch\u003c/code\u003e should call a reducer, reassign the state, and\nrender a change.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThis is implemented inside the \u003ccode\u003ecreateStore\u003c/code\u003e function.\u003c/p\u003e","exportId":"g54263ec22a7289d3c2ee818d20448a15"},{"id":483400,"title":"(Candy) Store Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-create-store-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-create-store-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-create-store-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-create-store-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eWrite a method to create a store\u003c/li\u003e\n\u003cli\u003eWork with stores, reducers, and actions\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\n\u003cp\u003eGood news - you're opening a candy store! First, we just need to build an app to\nmanage our inventory.\u003c/p\u003e\n\n\u003cp\u003eFor now, we'll want to create a store to keep track of all of the types of candy\nwe sell. Later on, we'll learn how we can manage multiple pieces of state and\nmore than one reducer, but for this challenge, the state is going to be a basic\narray of strings. By the end of this lab, you should be able to open\n\u003ccode\u003eindex.html\u003c/code\u003e, use your store's \u003ccode\u003edispatch\u003c/code\u003e function to add a name of a type of\ncandy, and see that name appear on the page.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eWrite your code in \u003ccode\u003esrc/index.js\u003c/code\u003e. We've provided the \u003ccode\u003ecandyReducer\u003c/code\u003e function\nfor you, as well as a \u003ccode\u003erender\u003c/code\u003e function, so you can get a sense of how they'll\nwork.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWrite a function called \u003ccode\u003ecreateStore\u003c/code\u003e that takes in a reducer function as an\nargument.\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003ecreateStore\u003c/code\u003e function should return an object with two methods -\n\u003ccode\u003egetState\u003c/code\u003e, \u003ccode\u003edispatch\u003c/code\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003egetState\u003c/code\u003e should return the current state.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003edispatch\u003c/code\u003e should take in an action, update the state using the reducer,\n and call the render function.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eOnce you've written \u003ccode\u003ecreateStore\u003c/code\u003e, to get everything working, you'll need two\nmore things at the end of \u003ccode\u003eindex.js\u003c/code\u003e:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eNotice that in the provided \u003ccode\u003erender\u003c/code\u003e function, a variable named \u003ccode\u003estore\u003c/code\u003e is\ncalled. Define a variable named \u003ccode\u003estore\u003c/code\u003e and assign it to whatever is returned\nby the \u003ccode\u003ecreateStore\u003c/code\u003e function you've written when it is passed the\n\u003ccode\u003ecandyReducer\u003c/code\u003e function.\u003c/li\u003e\n\u003cli\u003eInitialize your state using a \u003ccode\u003edispatch\u003c/code\u003e call to the reducer.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/tutorials/fundamentals/part-4-store\"\u003eRedux Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g142c97fb106267761e431b7f2792911a"}]},{"id":49301,"name":"[Optional] Redux: Using the Redux Library","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"g553c1a74cccc0e9370bd9f8e3a2d1379","items":[{"id":483401,"title":"Scrimba Playlist: Redux Fundamentals","type":"ExternalUrl","indent":0,"locked":false,"requirement":null,"completed":false,"content":"https://scrimba.com/playlist/pJVM6CL"},{"id":483402,"title":"Intro to Redux: Reading Data from State","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-intro-to-redux-codealong\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-intro-to-redux-codealong/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-intro-to-redux-codealong\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-intro-to-redux-codealong/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the \u003ccode\u003ecreateStore()\u003c/code\u003e function provided by the Redux library\u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003euseSelector()\u003c/code\u003e and \u003ccode\u003euseDispatch()\u003c/code\u003e hooks provided by React-Redux to\naccess and update the store\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn the previous section, we have been building using a \u003ccode\u003ecreateStore()\u003c/code\u003e function\nthat we wrote, and passing a reducer to it. We have been using the \u003ccode\u003edispatch()\u003c/code\u003e\nmethod from the store, to dispatch actions and update the state.\u003c/p\u003e\n\n\u003cp\u003eNow let's think about which part of our application would belong in the official\nRedux library — that is, which part of our codebase would be common to all\napplications. Well, probably not the reducer as our reducers seem unique to each\nReact \u0026amp; Redux application. The reducers are unique because sometimes we have\nreducers that would add or remove items, or add or remove users, or edit users,\netc. What these actions are and how the reducer manages the state is customized.\nThus, the reducer would not be part of the redux library that other developers\nwould use to build their application.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003ecreateStore()\u003c/code\u003e function, however, is generic across Redux applications. It\nalways returns a store (given a reducer) that will have a \u003ccode\u003edispatch\u003c/code\u003e method and\na \u003ccode\u003egetState\u003c/code\u003e method.\u003c/p\u003e\n\n\u003cp\u003eSo from now on, we will import our \u003ccode\u003ecreateStore()\u003c/code\u003e function from the official\nRedux library. Normally, to install Redux into a React application, you need to\ninstall two packages, \u003ccode\u003eredux\u003c/code\u003e and \u003ccode\u003ereact-redux\u003c/code\u003e by running\n\u003ccode\u003enpm install redux react-redux\u003c/code\u003e. These are already included in this lesson's\n\u003ccode\u003epackage.json\u003c/code\u003e file, so all you need to do is run \u003ccode\u003enpm install \u0026amp;\u0026amp; npm start\u003c/code\u003e to\nget started.\u003c/p\u003e\n\n\u003ch3\u003eStep 1: Setting Up The Store\u003c/h3\u003e\n\n\u003cp\u003eFirst things first, we'll use Redux to initialize our store and pass it down to\nour top-level container component.\u003c/p\u003e\n\n\u003cp\u003eRedux provides a function, \u003ccode\u003ecreateStore()\u003c/code\u003e, that, when invoked, returns an\ninstance of the Redux store for us. So we can use that function to create a\nstore. We want to import \u003ccode\u003ecreateStore()\u003c/code\u003e in our \u003ccode\u003esrc/index.js\u003c/code\u003e file, where\nReactDOM renders our application.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/index.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-dom\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* code change */\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ecounterReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/counter/counterSlice.js\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./App\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./index.css\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecounterReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* code change */\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eApp\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;,\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eroot\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNotice that we are importing the \u003ccode\u003ecreateStore\u003c/code\u003e function from Redux. Now, with\nthe above set up, we \u003cem\u003ecould\u003c/em\u003e pass \u003ccode\u003estore\u003c/code\u003e down through \u003ccode\u003eApp\u003c/code\u003e and we would be\nable to access the Redux store.\u003c/p\u003e\n\n\u003cp\u003eHowever, reducing the need for passing props is part of why Redux works well\nwith React. To avoid passing \u003ccode\u003estore\u003c/code\u003e as a prop, we use the \u003ccode\u003eProvider\u003c/code\u003e component,\nwhich is imported from \u003ccode\u003ereact-redux\u003c/code\u003e. The \u003ccode\u003eProvider\u003c/code\u003e component wraps the top\nlevel component, \u003ccode\u003eApp\u003c/code\u003e, in this case, and is the only component where \u003ccode\u003estore\u003c/code\u003e is\npassed in:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/index.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-dom\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eProvider\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* code change */\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ecounterReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/counter/counterSlice.js\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./App\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./index.css\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecounterReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// code change - added Provider to wrap around App\u003c/span\u003e\n\u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e \u003cspan class=\"na\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eApp\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* code change */\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eroot\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBy including the \u003ccode\u003eProvider\u003c/code\u003e, we'll be able to access our Redux store and/or\ndispatch actions from any component we want, regardless of where it is on the\ncomponent tree.\u003c/p\u003e\n\n\u003cp\u003eSo, to recap, just like we did previously, we call our \u003ccode\u003ecreateStore()\u003c/code\u003e function\nin \u003ccode\u003esrc/index.js\u003c/code\u003e. We pass our \u003ccode\u003ecreateStore()\u003c/code\u003e method a reducer, and then we\npass our newly created store to our \u003ccode\u003eApp\u003c/code\u003e component as a prop. You can find the\nreducer in \u003ccode\u003e./src/features/counter/counterSlice.js\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/counter/counterSlice.js\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecounterReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecount/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003econcat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003ecounterReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOur reducer is just producing a counter. It adds a new item to the list each\ntime it is called, and that item is one more than the last item.\u003c/p\u003e\n\n\u003cp\u003eInstead of having all of our functions encapsulated in a closure within\n\u003ccode\u003eindex.js\u003c/code\u003e as we did while building our own Redux set up, we've now separated\nout the reducer function, giving it a relevant name, \u003ccode\u003ecounterReducer\u003c/code\u003e, and let\nthe Redux library take care of our \u003ccode\u003ecreateStore\u003c/code\u003e function. These two pieces are\nboth imported into \u003ccode\u003esrc/index.js\u003c/code\u003e and used to create \u003ccode\u003estore\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis \u003ccode\u003estore\u003c/code\u003e value is then passed in as a prop to \u003ccode\u003eProvider\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3\u003eInteracting with the Store: useDispatch and useSelector\u003c/h3\u003e\n\n\u003cp\u003eTo gain access to the \u003ccode\u003estore\u003c/code\u003e somewhere in our app, we use two \u003cstrong\u003ehooks\u003c/strong\u003e\nprovided by \u003ccode\u003ereact-redux\u003c/code\u003e: the \u003ccode\u003euseDispatch\u003c/code\u003e hook (for dispatching actions to\nthe store), and the \u003ccode\u003euseSelector\u003c/code\u003e hook (for \u003cem\u003eselecting\u003c/em\u003e parts of state to access\nwithin our components).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/counter/Counter.js\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eCounter\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// read from the Redux store\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eitems\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e// gives us the dispatch function to send actions to the Redux store\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleOnClick\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// dispatching an action on click\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecount/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003eonClick\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleOnClick\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eClick\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003eCounter\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis code places a button on the page with an \u003ccode\u003eonClick\u003c/code\u003e event listener pointed\nto \u003ccode\u003ehandleOnClick\u003c/code\u003e. When \u003ccode\u003ehandleOnClick\u003c/code\u003e is invoked, it calls the \u003ccode\u003edispatch\u003c/code\u003e\nfunction, provided by \u003ccode\u003euseDispatch\u003c/code\u003e, to send an action to our Redux store.\u003c/p\u003e\n\n\u003cp\u003eRemember from our earlier lessons that our Redux \u003ccode\u003estore\u003c/code\u003e has a special\n\u003ccode\u003edispatch\u003c/code\u003e method that we must call any time we want to create a new state? The\n\u003ca href=\"https://redux.js.org/tutorials/fundamentals/part-5-ui-react#dispatching-actions-with-usedispatch\"\u003e\u003ccode\u003euseDispatch\u003c/code\u003e hook\u003c/a\u003e gives us access to that \u003ccode\u003edispatch\u003c/code\u003e method so\nwe can use it from any of our components!\u003c/p\u003e\n\n\u003cp\u003eSimilarly, in our previous Redux code, any time we wanted to access our store's\ninternal state, we used the store's \u003ccode\u003egetState\u003c/code\u003e method. In the example above, the\nway we can interact with the \u003ccode\u003egetState\u003c/code\u003e method is via the \u003ca href=\"https://redux.js.org/tutorials/fundamentals/part-5-ui-react#reading-state-from-the-store-with-useselector\"\u003e\u003ccode\u003euseSelector\u003c/code\u003e\nhook\u003c/a\u003e. This hook takes a \u003cem\u003ecallback function\u003c/em\u003e that will get called\nwith the \u003ccode\u003estate\u003c/code\u003e object from our Redux store. Whatever the callback function\nreturns will be returned by the hook.\u003c/p\u003e\n\n\u003cp\u003eSo in this example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eitems\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe're calling \u003ccode\u003euseSelector\u003c/code\u003e with a callback function, and returning the \u003ccode\u003eitems\u003c/code\u003e\nkey from our Redux store state.\u003c/p\u003e\n\n\u003cp\u003eAnother effect of using the \u003ccode\u003euseSelector\u003c/code\u003e hook is that it effectively\n'subscribes' our components to changes in the Redux store state. Whenever the\nvalue returned by our \u003ccode\u003euseSelector\u003c/code\u003e hook changes, the \u003ccode\u003euseSelector\u003c/code\u003e hook will\ncause our component to re-render. So as the store's \u003ccode\u003eitems\u003c/code\u003e property increases,\n\u003ccode\u003eCounter\u003c/code\u003e will display a different number!\u003c/p\u003e\n\n\u003cp\u003eIf you boot up the app, you should see a button on the page, followed by a zero.\nEvery button click dispatches an action to our store, causing it to change.\nSince data (\u003ccode\u003eitems\u003c/code\u003e) from that store is being accessed in \u003ccode\u003eCounter\u003c/code\u003e, \u003ccode\u003eCounter\u003c/code\u003e\nwill re-render and display the updated counter.\u003c/p\u003e\n\n\u003ch4\u003eAdd Logging to Our Reducer\u003c/h4\u003e\n\n\u003cp\u003eOk, so getting our application to re-render takes a bit of work, and we're going\nto go into greater depth in the next sections. In the meantime, let's get some\nfeedback. First, let's log our action and the new state. So we'll change the\nreducer to the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/counter/counterSlice.js\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecounterReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecount/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eCurrent state.items length %s\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eUpdating state.items length to %s\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003econcat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eInitial state.items length %s\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003ecounterReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis may look like a lot, but really all were doing is adding some logging\nbehavior. At the top of the function, we are logging the action. After the case\nstatement, we are storing our state as current state first. Then we are logging\nthe updating state value. Then under the default case statement, we just can log\nthe previous state because this state is unchanged.\u003c/p\u003e\n\n\u003cp\u003eNow, refresh your app, and give it a shot. You should see the correct action\nbeing dispatched, as well as an update to the state. While we aren't getting our\nstate directly from the store, we know that we are dispatching actions. We know\nthis because each time we click a button, we call\n\u003ccode\u003estore.dispatch({ type: 'count/increment' })\u003c/code\u003e and somehow this is hitting our\nreducer. So things are happening.\u003c/p\u003e\n\n\u003ch4\u003eRedux DevTools\u003c/h4\u003e\n\n\u003cp\u003eThere is this amazing piece of software that allows us to nicely view the state\nof our store and each action that is dispatched. The software does a lot more\nthan that. I'll let you read about it here:\n\u003ca href=\"https://github.com/reduxjs/redux-devtools\"\u003eredux-devtools-extension\u003c/a\u003e. Ok, so let's get to incorporating this. In\nfact, every time we use the Redux library going forward, we should make sure we\nincorporate devtools. Otherwise, you are flying blind.\u003c/p\u003e\n\n\u003cp\u003eFirst, just Google for Redux Devtools Chrome. There you will find the Chrome\nextension for Redux. Please download it, and refresh Chrome. You will know that\nyou have installed the extension if you go to your developer console in Google\nChrome, and then at the top bar you will see a couple of arrows. Click those\narrows, and if you see Redux as your dropdown, you properly installed the Chrome\nextension. Step one is done.\u003c/p\u003e\n\n\u003cp\u003eSecond, we need to tell our application to communicate with this extension.\nDoing so is pretty easy. Now we change the arguments to our \u003ccode\u003ecreateStore\u003c/code\u003e\nfunction to the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/index.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-dom\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eProvider\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* code change */\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ecounterReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/counter/counterSlice.js\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./App\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./index.css\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003ecounterReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003e__REDUX_DEVTOOLS_EXTENSION__\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003e__REDUX_DEVTOOLS_EXTENSION__\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* code change */\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e \u003cspan class=\"na\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eApp\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;,\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eroot\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNotice that we are still passing through our reducer to the \u003ccode\u003ecreateStore\u003c/code\u003e\nfunction. The second argument is accessing our browser to find a function called\n\u003ccode\u003e__REDUX_DEVTOOLS_EXTENSION__\u003c/code\u003e. If that function is there, the function is\nexecuted. Now if you have your Chrome console opened, make sure the Redux\nDevTools Inspector is open (press \u003ccode\u003ecommand\u003c/code\u003e + \u003ccode\u003eshift\u003c/code\u003e + \u003ccode\u003ec\u003c/code\u003e, click on the arrows\nat the top right, and the dropdown for the extension). Now click on the tab that\nsays state. You should see \u003ccode\u003e{ items: [] }\u003c/code\u003e. If you do, it means that your app is\nnow communicating with the DevTools. Click on the button in your application, to\nsee if the state changes. Now for each time you click on it, you should see an\naction in the devtools that has the name of that action. If you are looking at\nthe last state, you should see the changes in our state.\u003c/p\u003e\n\n\u003cp\u003eWhew!\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we saw how to use the \u003ccode\u003ecreateStore()\u003c/code\u003e function. We saw that we\ncan rely on the Redux library to provide this function, and that we still need\nto write our own reducer to tell the store what the new state will be given a\nparticular action. We saw that when using the \u003ccode\u003ecreateStore()\u003c/code\u003e function, and\npassing through a reducer, we are able to change the state just as we did\npreviously. We were able to see these changes by hooking our application up to a\nChrome extension called Redux Devtools, and then providing the correct\nconfiguration.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store\"\u003eRedux: Creating a Store\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/tutorials/fundamentals/part-5-ui-react#dispatching-actions-with-usedispatch\"\u003eReact-Redux: useDispatch\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/tutorials/fundamentals/part-5-ui-react#reading-state-from-the-store-with-useselector\"\u003eReact-Redux: useSelector\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g509bb1345e868753765ffab0df627dbd"},{"id":483403,"title":"Access State with useSelector","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-use-selector-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-use-selector-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-use-selector-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-use-selector-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the \u003ccode\u003ereact-redux\u003c/code\u003e library to connect the Redux store to the React\napplication\u003c/li\u003e\n\u003cli\u003eUtilize the \u003ccode\u003e\u0026lt;Provider /\u0026gt;\u003c/code\u003e component and the \u003ccode\u003euseSelector\u003c/code\u003e hook to access\nRedux store content\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we want to explore how \u003ccode\u003euseSelector\u003c/code\u003e is used to connect regular\nReact components with the Redux store. This is also a good opportunity to review\nthe steps for using the \u003ccode\u003eredux\u003c/code\u003e and \u003ccode\u003ereact-redux\u003c/code\u003e packages in your app.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eSome files are provided, including \u003ccode\u003eUserInput\u003c/code\u003e and the reducer in the\n\u003ccode\u003eusersSlice.js\u003c/code\u003e file, but the Redux store isn't fully hooked up yet.\u003c/p\u003e\n\n\u003ch3\u003eConnecting to Redux\u003c/h3\u003e\n\n\u003cp\u003eIn \u003ccode\u003esrc/index.js\u003c/code\u003e, use the \u003ccode\u003ecreateStore\u003c/code\u003e method from \u003ccode\u003eredux\u003c/code\u003e, passing in the\nprovided reducer, \u003ccode\u003eusersReducer\u003c/code\u003e, to create a \u003ccode\u003estore\u003c/code\u003e. Use \u003ccode\u003eProvider\u003c/code\u003e from\n\u003ccode\u003ereact-redux\u003c/code\u003e to wrap \u003ccode\u003e\u0026lt;App /\u0026gt;\u003c/code\u003e, passing \u003ccode\u003estore\u003c/code\u003e as a prop to the \u003ccode\u003eProvider\u003c/code\u003e.\nThis will give your components access to the store.\u003c/p\u003e\n\n\u003ch3\u003eTest by Dispatching an Action\u003c/h3\u003e\n\n\u003cp\u003eRun \u003ccode\u003enpm start\u003c/code\u003e and open up your browser's dev console. If everything is\nconnected correctly in \u003ccode\u003eindex.js\u003c/code\u003e, a form should appear in the browser.\nSubmitting something using the form will cause a \u003ccode\u003econsole.log\u003c/code\u003e to fire in our\nreducer, indicating that the values have been added to our store.\u003c/p\u003e\n\n\u003cp\u003eIn \u003ccode\u003eUserInput.js\u003c/code\u003e, we can see the code that fires when we press the submit\nbutton:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ...\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleOnSubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eevent\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eevent\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epreventDefault\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eusers/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eformData\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e \u003cspan class=\"na\"\u003eonSubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleOnSubmit\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"cm\"\u003e/* ... */\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can see that, \u003cem\u003eon submit\u003c/em\u003e, \u003ccode\u003ehandleOnSubmit()\u003c/code\u003e is called.\n\u003ccode\u003eevent.preventDefault()\u003c/code\u003e is called to stop the page from refreshing, then\n\u003ccode\u003edispatch()\u003c/code\u003e is called with a custom action,\n\u003ccode\u003e{type: 'users/add', payload: formData}\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003edispatch\u003c/code\u003e function is provided by calling the \u003ccode\u003euseDispatch\u003c/code\u003e hook from\n\u003ccode\u003ereact-redux\u003c/code\u003e in our component.\u003c/p\u003e\n\n\u003ch3\u003eUsing the \u003ccode\u003euseSelector\u003c/code\u003e Hook\u003c/h3\u003e\n\n\u003cp\u003eNow that we've got a working store, we want to get access to it and display the\ncontents of our store's state.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eImport the \u003ccode\u003euseSelector\u003c/code\u003e hook in \u003ccode\u003eUsers.js\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eCall \u003ccode\u003euseSelector\u003c/code\u003e inside your component, passing in a callback function that\naccepts one argument, \u003ccode\u003estate\u003c/code\u003e, the current version of your store's state. Use\n\u003ccode\u003estate\u003c/code\u003e to access the array of \u003ccode\u003eusers\u003c/code\u003e and return that from the callback\nfunction. Save the return value of calling \u003ccode\u003euseSelector\u003c/code\u003e to a variable so\nthat you can use the \u003ccode\u003eusers\u003c/code\u003e array in your component.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe Users component should display the username of a user submitted to the\nstore. To pass the final test, it should also display a total count of current\nusers. Try to use \u003ccode\u003euseSelector\u003c/code\u003e to solve both. You can call \u003ccode\u003euseSelector\u003c/code\u003e\nmultiple times to return different values: one for \u003ccode\u003eusers\u003c/code\u003e and one for the\n\u003ccode\u003euserCount\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWith all tests passing, you should have a working form that adds and\nsuccessfully displays usernames, as well as a total count of those users. While\nthese are small bits of data, we've got a fully integrated React/Redux\napplication, ready to be expanded upon!\u003c/p\u003e","exportId":"gc31e4c2c5d551910a349b7b14f4af034"},{"id":483404,"title":"Review and Dive into Actions","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-action-creators\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-action-creators\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-action-creators/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDefine the important properties of an action\u003c/li\u003e\n\u003cli\u003eUse action creators to create an action\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, we'll discuss the properties of actions, and how to use\nfunctions to create actions.\u003c/p\u003e\n\n\u003ch2\u003ePurpose of Actions\u003c/h2\u003e\n\n\u003cp\u003eAs you know, we've been dispatching actions to our store to indicate the changes\nwe would make to our state. In Redux, a user may click on a button which\ndispatches an action, and the reducer would take information from that action to\nchange the state. You saw in the last section that simply by placing a\n\u003ccode\u003econsole.log\u003c/code\u003e in our reducer, we could see a history of every action that was\npassed to the reducer, making our debugging job easier.\u003c/p\u003e\n\n\u003ch2\u003eStructuring Actions\u003c/h2\u003e\n\n\u003cp\u003eAn action is simply a JavaScript object that has a property of \u003ccode\u003etype\u003c/code\u003e. The\nreducer uses this \u003ccode\u003etype\u003c/code\u003e property to see what it should do. Here is an example\nof a valid action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eincrementCount\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRemember that the store has a \u003ccode\u003edispatch\u003c/code\u003e method which we can use to dispatch\nthis action for it to be handled by the reducer.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eincrementCount\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe dispatch method passes the action to the reducer, which then runs its switch\nstatement to decide what to do.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eAction Creators\u003c/h2\u003e\n\n\u003cp\u003eWe know that our actions are simply an object with at least one property called\n\u003ccode\u003etype\u003c/code\u003e. An example of using our actions is\n\u003ccode\u003estore.dispatch({ type: 'counter/increment' })\u003c/code\u003e. Well, what if we do the\nfollowing:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eincrementCount\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eincrementCount\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn the above lines of code we define a function called \u003ccode\u003eincrementCount()\u003c/code\u003e whose\njob is to return an action. Then we execute the \u003ccode\u003eincrementCount()\u003c/code\u003e function,\nwhich returns that action, and we dispatch that action to the store. If you\nthink that this is equivalent to\n\u003ccode\u003estore.dispatch({ type: 'counter/increment' })\u003c/code\u003e, you are right.\u003c/p\u003e\n\n\u003cp\u003eWe prefer wrapping our actions in a function, because oftentimes our actions\nhave some parts that will need to change, and a function comes in handy. For\nexample:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eaddTodo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etodo\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003etodos/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003etodo\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis type of function is known as an \u003cstrong\u003eaction creator\u003c/strong\u003e, because its only job is\nto create actions that work with our reducers.\u003c/p\u003e\n\n\u003cp\u003eIn the above function, we can imagine generating actions with different payload\nproperties depending on what we pass to the \u003ccode\u003eaddTodo\u003c/code\u003e function.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003eaddTodo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebuy groceries\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// -\u0026gt; { type: 'todos/add', payload: 'buy groceries' }\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003eaddTodo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ewatch netflix\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// -\u0026gt; { type: 'todos/add', payload: 'watch netflix' }\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBy wrapping our action in a function, we are able to easily keep some of the\naction properties the same, like type, while changing others, like the payload.\nWe would dispatch the action in the following way:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddTodo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebuy groceries\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThat would return the action \u003ccode\u003e{ type: 'todos/add', payload: 'buy groceries' }\u003c/code\u003e,\nwhich we then send to the dispatch function.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn Redux, we update the store state by dispatching actions. An action is simply\na JavaScript object that has a \u003ccode\u003etype\u003c/code\u003e property, and often a \u003ccode\u003epayload\u003c/code\u003e, which are\nused by our reducer to determine the next state.\u003c/p\u003e\n\n\u003cp\u003eTo simplify the process of dispatching actions, we can write \u003cstrong\u003eaction creator\u003c/strong\u003e\nfunctions that return action objects.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/tutorials/fundamentals/part-3-state-actions-reducers#designing-actions\"\u003eRedux: Designing Actions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"review-and-dive-into-actions"},{"id":483405,"title":"Dispatching Actions with useDispatch","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-use-dispatch-readme\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-use-dispatch-readme/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-use-dispatch-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-use-dispatch-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eWrite functions that connect Redux actions to component events\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eIntroduction\u003c/h3\u003e\n\n\u003cp\u003eIn the intro to this section, we saw how to use the \u003ccode\u003euseDispatch\u003c/code\u003e hook to access\nthe \u003ccode\u003edispatch\u003c/code\u003e method from our Redux store inside our components. Here, we'll\nexplore \u003ccode\u003euseDispatch\u003c/code\u003e in more detail, and talk about ways of organizing our\nRedux dispatching logic using action creators, like we saw in the previous\nlesson.\u003c/p\u003e\n\n\u003ch2\u003eIdentifying the Problem\u003c/h2\u003e\n\n\u003cp\u003eTo begin, take a look at the starting code provided in\n\u003ccode\u003esrc/features/counter/Counter.js\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/counter/Counter.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eCounter\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// read from the Redux store\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eitems\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e// gives us the dispatch function to send actions to the Redux store\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleOnClick\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// dispatching an action on click\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecount/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003eonClick\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleOnClick\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eClick\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003eCounter\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo recap what \u003ccode\u003euseDispatch\u003c/code\u003e is doing here: this code places a button on the page\nwith an \u003ccode\u003eonClick\u003c/code\u003e event listener pointed to \u003ccode\u003ehandleOnClick\u003c/code\u003e. When\n\u003ccode\u003ehandleOnClick\u003c/code\u003e is invoked, it calls the \u003ccode\u003edispatch\u003c/code\u003e function, provided by\n\u003ccode\u003euseDispatch\u003c/code\u003e, to send an action to our Redux store.\u003c/p\u003e\n\n\u003cp\u003eRemember from our earlier lessons that our Redux \u003ccode\u003estore\u003c/code\u003e has a special\n\u003ccode\u003edispatch\u003c/code\u003e method that we must call any time we want to create a new state? The\n\u003ca href=\"https://react-redux.js.org/api/hooks#usedispatch\"\u003e\u003ccode\u003euseDispatch\u003c/code\u003e hook\u003c/a\u003e gives us access to that \u003ccode\u003edispatch\u003c/code\u003e method so\nwe can use it from any of our components!\u003c/p\u003e\n\n\u003ch2\u003eUsing Action Creators\u003c/h2\u003e\n\n\u003cp\u003eRight now, we're writing our action objects directly our component file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecount/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHowever, imagine our application grows and we want other components to be able\nto dispatch this same action object. Re-writing these objects in every component\nwe need them is tedious and error prone. Remember, in the previous lesson on\naction creators, we created a function that \u003cem\u003ereturns\u003c/em\u003e an action object instead.\nLet's try that out here as well:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/counter/Counter.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eincrementCount\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecount/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eCounter\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eitems\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleOnClick\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eincrementCount\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003eonClick\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleOnClick\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eClick\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003eCounter\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut what if another component needs to dispatch this function as well? Let's\njust move it to our \u003ccode\u003ecounterSlice.js\u003c/code\u003e file and export it from there, to organize\nit alongside the rest of our Redux logic for this feature:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/features/counter/counterSlice.js\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// Action Creators\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eincrementCount\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecount/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// Reducer\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, we can just import it in any components that need this action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/counter/Counter.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eincrementCount\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./counterSlice.js\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow we have a good separation between our Redux-specific code and our React\ncomponents!\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/tutorials/fundamentals/part-7-standard-patterns#using-action-creators\"\u003eRedux: Using Action Creators\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"g27df128b3c349f186fe8085403b4633f"},{"id":483406,"title":"Using the useDispatch Hook Lab","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-use-dispatch-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-use-dispatch-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-use-dispatch-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-use-dispatch-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDispatch an action using the \u003ccode\u003euseDispatch\u003c/code\u003e hook\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\n\u003cp\u003eIn this application we will be building an application to keep track of our\nfavorite restaurants. We will keep our \u003ccode\u003ereact\u003c/code\u003e application separated from our\n\u003ccode\u003eredux\u003c/code\u003e store by using the \u003ccode\u003eProvider\u003c/code\u003e component.\u003c/p\u003e\n\n\u003cp\u003eUse the \u003ccode\u003ereact-redux\u003c/code\u003e library to connect the store to our \u003ccode\u003ereact\u003c/code\u003e\napplication. Utilize the \u003ccode\u003eProvider\u003c/code\u003e component to give your components access\nto the Redux store. Make sure to also implement \u003ccode\u003euseDispatch()\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eRedux is already set up through \u003ccode\u003eindex.js\u003c/code\u003e and the reducer \u003ccode\u003erestaurantsReducer\u003c/code\u003e.\nIn the \u003ccode\u003eRestaurantInput\u003c/code\u003e component, use the \u003ccode\u003euseDispatch\u003c/code\u003e hook along with the\n\u003ccode\u003eaddRestaurant\u003c/code\u003e action creator to dispatch an action to the store when the form\nis submitted.\u003c/p\u003e\n\n\u003cp\u003eRun this app in the browser to get a sense of how the app should function. Then,\nwrite code to get the tests to pass!\u003c/p\u003e","exportId":"g52a07a325b05f9c023dac72a74eaf69b"},{"id":483407,"title":"Redux Combine Reducers","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-combine-reducers\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-combine-reducers/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-combine-reducers\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-combine-reducers/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eWrite action creators and reducers to modify application state\u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003ecombineReducers()\u003c/code\u003e function to delegate different pieces of state to\neach reducer\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSo far we have been using a single reducer to return a new state when an action\nis dispatched. This works great for a small application where we only need our\nreducer to manage the state of one resource. However, as you will see, when\nworking with multiple resources, placing all of this logic in one reducer\nfunction can quickly become unwieldy.\u003c/p\u003e\n\n\u003cp\u003eEnter \u003ccode\u003ecombineReducers()\u003c/code\u003e to save the day! In this lab, we'll see how Redux's\n\u003ccode\u003ecombineReducers()\u003c/code\u003e function lets us delegate different pieces of state to\nseparate reducer functions.\u003c/p\u003e\n\n\u003cp\u003eWe'll do this in the context of a book application that we'll use to keep track\nof programming books that we've read.\u003c/p\u003e\n\n\u003cp\u003eWe want our app to do two things:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eKeep track of all the books we've read: title, author, description.\u003c/li\u003e\n\u003cli\u003eKeep track of the authors who wrote these books.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eDetermine Application State Structure\u003c/h2\u003e\n\n\u003cp\u003eOur app will need a state object that stores two types of information:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eAll our books, in an array\u003c/li\u003e\n\u003cli\u003eOur authors, also in an array\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eEach of these types of information — all our books, and the authors — should be\nrepresented on our store's state object. We want to think of our store's state\nstructure as a database. We will represent this as a belongs to/has many\nrelationship, in that a book belongs to an author and an author has many books.\nSo this means each author would have its own id, and each book would have an\nauthorId as a foreign key.\u003c/p\u003e\n\n\u003cp\u003eWith that, we can set the application state as:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eauthors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e//array of authors\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e// array of books\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo our state object will have two top-level keys, each pointing to an array. For\nnow, let's write a single reducer to manage both of these resources.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eauthors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e//array of authors\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e// array of books\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003enewBooks\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003enewBooks\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eauthors/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eauthors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthors\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eauthors/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003enewAuthors\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eauthors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003enewAuthors\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is the current set up in \u003ccode\u003esrc/features/books/booksSlice.js\u003c/code\u003e, and it works.\nYou can see, however, by working with just two resources, the size of our\nreducer increased significantly. Moreover, by placing each resource in the same\nreducer, we are coupling these resources together, where we would prefer to\nmaintain their separation. By creating separate reducers for each resource in an\napplication, we can keep our code organized as our applications get more\ncomplicated.\u003c/p\u003e\n\n\u003ch2\u003eRefactor by using combineReducers\u003c/h2\u003e\n\n\u003cp\u003eThe \u003ccode\u003ecombineReducers()\u003c/code\u003e function allows us to write two or more separate\nreducers, then pass each reducer to the \u003ccode\u003ecombineReducers()\u003c/code\u003e function to produce\nthe reducer we wrote above. Then we pass that combined reducer to the store in\n\u003ccode\u003esrc/index.js\u003c/code\u003e. Let's write some code, and then we'll walk through it below.\u003c/p\u003e\n\n\u003cp\u003eFirst, let's reorganize our code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003esrc\n├── features\n│   ├── authors\n│   │   ├── AuthorInput.js\n│   │   ├── Authors.js\n│   │   └── authorSlice.js\n│   └── books\n│       ├── BookInput.js\n│       ├── Books.js\n│       └── booksSlice.js\n└── reducers.js\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eStart by creating separate folders for the code related to each 'domain' of our\napp: authors and books. Move your component code into the appropriate folders,\nand update your imports in \u003ccode\u003eApp.js\u003c/code\u003e. Then, create a new \u003ccode\u003eauthorSlice.js\u003c/code\u003e file.\nUpdate the \u003ccode\u003eauthorSlice.js\u003c/code\u003e file with this code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/authors/authorSlice.js\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// Action Creators\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eaddAuthor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eauthors/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eremoveAuthor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eauthors/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// Reducers\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[];\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthorsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eauthors/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e[...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eauthors/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, update the \u003ccode\u003ebooksSlice.js\u003c/code\u003e file like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/books/booksSlice.js\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// Action Creators\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eaddBook\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eremoveBook\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// Reducers\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[];\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ebooksReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e[...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAlso, fix the imports for the action creators in your components.\u003c/p\u003e\n\n\u003cp\u003eFinally, create a new file for our combined reducers:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/reducers.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecombineReducers\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthorsReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/authors/authorsSlice\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ebooksReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/books/booksSlice\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecombineReducers\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eauthors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthorsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ebooksReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere's a lot of code there, so let's unpack it a bit:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecombineReducers\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthorsReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/authors/authorsSlice\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ebooksReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/books/booksSlice\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecombineReducers\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eauthors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthorsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ebooksReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThrough \u003ccode\u003ecombineReducer\u003c/code\u003e, we're telling Redux to produce a reducer which will\nreturn a state that has both a key of \u003ccode\u003ebooks\u003c/code\u003e with a value equal to the return\nvalue of the \u003ccode\u003ebooksReducer()\u003c/code\u003e \u003cem\u003eand\u003c/em\u003e a key of \u003ccode\u003eauthors\u003c/code\u003e with a value equal to the\nreturn value of the \u003ccode\u003eauthorsReducer()\u003c/code\u003e. Now if you look at the \u003ccode\u003ebooksReducer()\u003c/code\u003e\nand the \u003ccode\u003eauthorsReducer()\u003c/code\u003e you will see that each returns a default state of an\nempty array.\u003c/p\u003e\n\n\u003cp\u003eWe'll also need to import our new root reducer in the \u003ccode\u003esrc/index.js\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./reducer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003e__REDUX_DEVTOOLS_EXTENSION__\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003e__REDUX_DEVTOOLS_EXTENSION__\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBy passing our \u003ccode\u003erootReducer\u003c/code\u003e to the \u003ccode\u003ecreateStore\u003c/code\u003e method, the application\nmaintains its initial state of \u003ccode\u003e{ books: [], authors: [] }\u003c/code\u003e, just as it did when\nwe had one reducer. From the application's perspective nothing has changed.\u003c/p\u003e\n\n\u003ch2\u003eExamining Our New Reducers\u003c/h2\u003e\n\n\u003cp\u003eNow if we examine the \u003ccode\u003eauthorsReducer()\u003c/code\u003e, notice that this reducer only concerns\nitself with its own \u003cem\u003eslice\u003c/em\u003e of the state. This makes sense. Remember that\nultimately the array that the \u003ccode\u003eauthorsReducer()\u003c/code\u003e returns will be the value to\nthe key of authors. Similarly the \u003ccode\u003eauthorsReducer()\u003c/code\u003e only receives as its state\nargument the value of \u003ccode\u003estate.authors\u003c/code\u003e, in other words the authors array.\u003c/p\u003e\n\n\u003cp\u003eIf we examine the \u003ccode\u003eauthorsReducer()\u003c/code\u003e, we see that we no longer retrieve the list\nof authors with a call to \u003ccode\u003estate.authors\u003c/code\u003e, but can access the list of authors\nsimply by calling \u003ccode\u003estate\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[];\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthorsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eauthors/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e[...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eauthors/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eDispatching Actions\u003c/h2\u003e\n\n\u003cp\u003eThe \u003ccode\u003ecombineReducer()\u003c/code\u003e function returns to us one large reducer that looks like\nthe following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eauthors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e//array of authors\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e// array of books\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// ...\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003enewBooks\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// ...\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// ...\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBecause of this, we can dispatch actions the same way we always did:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eSnow Crash\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eNeal Stephenson\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe dispatched action above will hit our switch statement in the reducer and add\na new author.\u003c/p\u003e\n\n\u003cp\u003eOne thing to note: if you want to have more than one reducer respond to the same\naction, you can! For example, in our application, when a user inputs information\nabout a book, the user \u003cem\u003ealso\u003c/em\u003e inputs the author's name. It would be handy if,\nwhen a user submits a book with an author, that author is also added to our\nauthor array.\u003c/p\u003e\n\n\u003cp\u003eThe action dispatched doesn't change:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eSnow Crash\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eNeal Stephenson\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOur \u003ccode\u003ebooksReducer\u003c/code\u003e can stay the same for now:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[];\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ebooksReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e[...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHowever, in \u003ccode\u003eauthorsReducer\u003c/code\u003e, we can \u003cem\u003ealso\u003c/em\u003e include a switch case for\n\u003ccode\u003e\"books/add\"\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ev4\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003euuid\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[];\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthorsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eauthors/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e[...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eauthors/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eexistingAuthor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthorName\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthorName\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eexistingAuthor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n          \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n          \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003eauthorName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthorName\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e];\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn the new \u003ccode\u003e\"books/add\"\u003c/code\u003e case, we're checking to see if an \u003ccode\u003eauthorName\u003c/code\u003e matches\nwith the name dispatched from the \u003ccode\u003eBookInput\u003c/code\u003e component. If the name already\nexists, state is returned unchanged. If the name is not present, it is added to\nthe author array. Use the example above to modify the \u003ccode\u003eauthorReducer\u003c/code\u003e reducer\nand you can see the effect. We have two separate forms, one for adding just\nauthors, and one that adds books \u003cem\u003eand\u003c/em\u003e authors.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e We're using a useful package, \u003ccode\u003euuid\u003c/code\u003e, to handle unique ID generation.\nWith this refactor, since we are creating an author ID from within the reducer\ninstead of in \u003ccode\u003eAuthorInput.js\u003c/code\u003e, we need to import it here as well.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn React/Redux apps where we're using and storing many resources in our store,\nkeeping reducers separated helps us organize code and separate concerns. Actions\ncan cause multiple reducers to modify their own state, but we can still keep all\nmodifications to a \u003cem\u003eparticular\u003c/em\u003e resource within its own separate file.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/tutorials/fundamentals/part-3-state-actions-reducers#combining-reducers\"\u003eCombining Reducers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://egghead.io/lessons/javascript-redux-implementing-combinereducers-from-scratch\"\u003eImplementing Combine Reducers from Scratch\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gf5fd71590fa88d00b7451197de42f8d0"},{"id":483408,"title":"Redux Put It Together","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-quote-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-quote-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-quote-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-quote-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the \u003ccode\u003ereact-redux\u003c/code\u003e library and the \u003ccode\u003eredux\u003c/code\u003e library to build an application\nwith multiple resources\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\n\u003cp\u003eIn this lab we will be building an application for making quotes. This will\ninclude creating a quote and updating the global Redux state.\u003c/p\u003e\n\n\u003cp\u003eIn our \u003ccode\u003eApp\u003c/code\u003e component we will render the components: \u003ccode\u003eQuoteForm\u003c/code\u003e \u0026amp; \u003ccode\u003eQuotes\u003c/code\u003e. We\nwill also need a reducer and actions file for our Quotes.\u003c/p\u003e\n\n\u003ch3\u003eQuotes Reducer\u003c/h3\u003e\n\n\u003cp\u003eThe quotes reducer should have an initial state of:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[];\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut when a quote is added, it should look like this (we will be using the \u003ccode\u003euuid\u003c/code\u003e\nnode package for generating ids):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e23423424242-42342423424242-fafdb\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003econtent\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eOne Awesome Quote\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eLuke Ghenco\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe will also need to extend out the \u003ccode\u003equotesReducer\u003c/code\u003e to handle removing quotes,\nupvoting quotes, and downvoting quotes as well. Check out the test specs for how\nto build these.\u003c/p\u003e\n\n\u003cp\u003eIf you need help updating state in your reducer without mutating state, check\nout the \u003ca href=\"https://redux.js.org/recipes/structuring-reducers/immutable-update-patterns\"\u003eRedux docs\u003c/a\u003e for some helpful patterns.\u003c/p\u003e\n\n\u003ch3\u003eQuotes Actions\u003c/h3\u003e\n\n\u003cp\u003eBuild out several actions as specified in the tests that build Action Creators\nfor add, removing, upvoting and downvoting quotes.\u003c/p\u003e\n\n\u003ch3\u003eQuoteForm Component\u003c/h3\u003e\n\n\u003cp\u003eOur \u003ccode\u003eQuoteForm\u003c/code\u003e component will have a \u003ccode\u003etextarea\u003c/code\u003e for a quotes content and an\ninput for a quotes author. We will be using component state for updating the\ninputs and making a controlled form, so make sure to have state for \u003ccode\u003econtent\u003c/code\u003e\nand \u003ccode\u003eauthor\u003c/code\u003e. You will dispatch an action to Redux using an action you will\ncreate called \u003ccode\u003eaddQuote()\u003c/code\u003e that will take a quote as an argument and start the\nreducer process.\u003c/p\u003e\n\n\u003ch3\u003eQuotes Component\u003c/h3\u003e\n\n\u003cp\u003eThe \u003ccode\u003eQuotes\u003c/code\u003e component will render a list of individual \u003ccode\u003eQuoteCard\u003c/code\u003e components.\nIt needs to be connected to the \u003ccode\u003eRedux\u003c/code\u003e state so that it can render the quotes.\nAlso make sure to attach the remove, upvote, and downvote actions from the\nQuotes Actions file to pass down as callback props to the \u003ccode\u003eQuoteCard\u003c/code\u003e component.\u003c/p\u003e\n\n\u003ch3\u003eQuoteCard Component\u003c/h3\u003e\n\n\u003cp\u003eMake sure to connect the callback action props to the the Upvote, Downvote and\nDelete buttons.\u003c/p\u003e\n\n\u003ch4\u003eExample App\u003c/h4\u003e\n\n\u003cp\u003eHere is an image of the example app, of what you are trying to build.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://s3-us-west-2.amazonaws.com/curriculum-content/web-development/react/quote-app-image.png\" alt=\"quote app example\"\u003e\u003c/p\u003e\n\n\u003ch4\u003eNote\u003c/h4\u003e\n\n\u003cp\u003eWe are using the \u003ccode\u003euuid\u003c/code\u003e package for this to create random unique ids. Here is\nthe documentation for \u003ca href=\"https://github.com/uuidjs/uuid\"\u003e\u003ccode\u003euuid\u003c/code\u003e\u003c/a\u003e. To use it, just\nimport it into your reducer and invoke it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ev4\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003euuid\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// '1fd3234'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/recipes/structuring-reducers/immutable-update-patterns\"\u003eImmutable Update Patterns\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"gddb55f38ef9f756bd1f5a122f1efb1f9"},{"id":483409,"title":"React Component State vs Redux Store State","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-component-state-vs-store-state\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-component-state-vs-store-state\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-component-state-vs-store-state/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain interactions between different parts of a React application\u003c/li\u003e\n\u003cli\u003eDiscuss trade-offs and benefits of one-way data flow\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we're going to revisit some of the concepts we have explored so\nfar. Our focus will be on how components interact with each other and how global\napplication state can be managed in a predictable, scalable way using actions,\nstores and event handlers.\u003c/p\u003e\n\n\u003ch2\u003eComponent State vs Store State\u003c/h2\u003e\n\n\u003cp\u003eWhile our previous lessons extensively focused on moving state \u003cstrong\u003eout\u003c/strong\u003e of\nindividual components, we don't always have to. In fact, sometimes it might even\nintroduce more complexity than needed. Using \u003ccode\u003euseState()\u003c/code\u003e and \"local\"\ncomponent-level state is a perfectly fine choice in most cases.\u003c/p\u003e\n\n\u003cp\u003eIn general, we should not start out by putting all our state into some form of\nglobal store (or multiple stores).\u003c/p\u003e\n\n\u003cp\u003eWhen architecting a user interface, try to use local state and parent props\n\u003cstrong\u003efirst\u003c/strong\u003e. If we end up constantly passing down tons of props, we should\nconsider connecting the component in question with a Redux store.\u003c/p\u003e\n\n\u003cp\u003eE.g. let's say we want to render some form of carousel, something like\n\u003ca href=\"https://getbootstrap.com/docs/4.0/components/carousel/\"\u003eBootstrap's Carousel component\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eA carousel is a perfect example on where using a store to extract out component\nstate doesn't necessarily make things easier (or would simply be a massive\noverkill).\u003c/p\u003e\n\n\u003cp\u003eWriting the essential handler functions for the component in question using\n\"classical\" React-style without \u003cstrong\u003eany\u003c/strong\u003e \"outside\" state is trivial:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eCarousel\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// We start out rendering the first slide. 0 denotes the index of the\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// active item.\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ecurrentSlide\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esetCurrentSlide\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n  \u003cspan class=\"cm\"\u003e/**\n   * Handler function that transitions to the next slide in the carousel.\n   * This is the function that will be run once the user clicks the \"next\"\n   * button.\n   */\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003egoNext\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003esetCurrentSlide\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eprevSlide\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eprevSlide\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"cm\"\u003e/**\n   * Equivalent to `goNext`. Handler function that will be invoked when clicking\n   * the \"back\" button.\n   */\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003egoBack\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003esetCurrentSlide\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eprevSlide\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eprevSlide\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// JSX goes here\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn this case, using the local state of the component has a couple of advantages\nover using an external store:\u003c/p\u003e\n\n\u003ch3\u003e1. State Is Bound to the Component\u003c/h3\u003e\n\n\u003cp\u003eWhen rendering a very long list of carousels, keeping the state stored in the\nstore in sync with the \u003cem\u003eactual\u003c/em\u003e list of rendered components is hard. Let's say\nwe render one carousel for each photo \"collection\" — which could for example be\nrepresented by an array for image sources —\u0026nbsp;keeping the array length in sync\nwith whatever data structure we would use in the store for representing the\nselected slide index is unnecessarily complex. For example, when adding a photo\ncollection, we would need to add the \u003ccode\u003ecurrentSlide\u003c/code\u003e property to the store as\nwell.\u003c/p\u003e\n\n\u003cp\u003eSimply distinguishing between \"component UI\" state and global application state\nradically simplified the architecture in the above case, since component state\ncan by definition not exist without a matching component (and vice versa).\u003c/p\u003e\n\n\u003ch3\u003e2. Simplified Testing\u003c/h3\u003e\n\n\u003cp\u003eTesting React components is extremely easy compared to other frameworks, such as\nAngular. Testing packages like \u003ca href=\"https://airbnb.io/enzyme/\"\u003eEnzyme\u003c/a\u003e from Airbnb allow us to mount\nindividual components in a test, pass them props, cause state changes, check\nwhat JSX is rendered, etc...\u003c/p\u003e\n\n\u003cp\u003eUsing stores doesn't necessarily break this abstraction, but it makes it much\nharder to properly test all the possible states that a component can be in,\nsince a store might contain state that isn't directly consumed by the component\nto be tested.\u003c/p\u003e\n\n\u003cp\u003eBut more importantly, we now need to manage a store during testing. We can use\nthe same packages and functions like \u003ccode\u003ecreateStore()\u003c/code\u003e we use to set up Redux with\nReact, but the tests become more complicated and sometimes less flexible as a\nresult.\u003c/p\u003e\n\n\u003cp\u003eWe can also mock it out — some node packages allow us to create a fake store for\nthe tests. Overall, though, because Redux changes the way data is maintained,\ntests need to change accordingly, becoming more complicated.\u003c/p\u003e\n\n\u003ch3\u003e3. Component Reuse\u003c/h3\u003e\n\n\u003cp\u003eWhile we focused on implementing our own set of stores, some people prefer to\nuse Redux, Rx, MobX or some other library for managing state and implementing\nunidirectional data flow.\u003c/p\u003e\n\n\u003cp\u003eBy storing state in an external store, we implicitly couple the component to\nwhatever architecture we chose for our main application. If we're implementing\nan accordion component using \u003ca href=\"https://facebook.github.io/flux/\"\u003eFlux\u003c/a\u003e (the data flow pattern Redux is based on),\nit means everyone using our component will have to use Flux in order to interact\nwith it (even though it might be hidden through the public API of the\ncomponent).\u003c/p\u003e\n\n\u003cp\u003eHence using component state (and props) instead of stores is the preferred way\nwhen creating reusable components.\u003c/p\u003e\n\n\u003ch2\u003eYou Might Not Need Redux\u003c/h2\u003e\n\n\u003cp\u003eSince the release of React hooks, the React Context API and the \u003ca href=\"https://reactjs.org/docs/hooks-reference.html#usecontext\"\u003e\u003ccode\u003euseContext\u003c/code\u003e\nhook\u003c/a\u003e has emerged as a popular way to manage global state. Some\nlibraries we've worked with already, such as \u003ccode\u003ereact-router\u003c/code\u003e and \u003ccode\u003ereact-redux\u003c/code\u003e,\nactually use the Context API under the hood — that's how we're able to access\nour Redux store state, or information about the browser history, from \u003cem\u003eany\u003c/em\u003e\ncomponent in our component hierarchy without prop drilling.\u003c/p\u003e\n\n\u003cp\u003eBefore adding Redux to an application, make sure to think about whether or not\nyour app would benefit from Redux. Check out \u003ca href=\"https://redux.js.org/faq/general#when-should-i-use-redux\"\u003ethis article from the Redux\ndocs\u003c/a\u003e along with the linked articles and discussion\nfor some help deciding if your app would benefit from Redux!\u003c/p\u003e\n\n\u003cp\u003eThat said, Redux is very much still \u003ca href=\"https://blog.isquaredsoftware.com/2018/03/redux-not-dead-yet/\"\u003ealive and well\u003c/a\u003e and\nyou are definitely encouraged to try it out in a project so you can learn, and\nadd Redux to your toolkit!\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://kentcdodds.com/blog/application-state-management-with-react\"\u003eApplication State Management with React\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/faq/general#when-should-i-use-redux\"\u003eWhen should I use Redux?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://blog.isquaredsoftware.com/2018/03/redux-not-dead-yet/\"\u003eRedux is Not Dead Yet\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://reactjs.org/docs/hooks-reference.html#usecontext\"\u003euseContext\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"react-component-state-vs-redux-store-state"},{"id":483410,"title":"Asynchronous Web Requests Using Thunk and Redux","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-thunk-readme\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-thunk-readme/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-thunk-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-thunk-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse action creator functions to make asynchronous web requests\u003c/li\u003e\n\u003cli\u003eExplain why middleware is necessary for asynchronous actions\u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003eredux-thunk\u003c/code\u003e middleware for asynchronous actions\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003ePart of the value of using Redux is that it provides a centralized way to\ncontrol the data of an application. In a standard React/Redux application, any\nchild component can connect to the store directly from anywhere in the app. This\nallows us to keep many of our React components simple — no need for passing\nprops through many nested components, no need to use component \u003ccode\u003estate\u003c/code\u003e to keep\ntrack of all the data. A lot of code that would normally be stored in React\ncomponents can be removed or replaced.\u003c/p\u003e\n\n\u003cp\u003eWith Redux, we can focus more on presentation in our React components, and use\nactions and reducers to handle the logic of organizing data. In following with\nthis pattern, we'll be discussing a package that works in conjunction with\nRedux: \u003ccode\u003eredux-thunk\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eredux-thunk\u003c/code\u003e handles asynchronous calls when working with Redux. Think for a\nmoment: we have Redux handling all our app's data. So far, it's all been\nhard-coded data, i.e. data that we set ourselves. It would be great if we could\nstart getting data from other sources.\u003c/p\u003e\n\n\u003cp\u003eWell, if we had a server or an API, we could \u003cem\u003efetch\u003c/em\u003e some remote data, but we're\npresented with a familiar problem: we've just removed a lot of logic from our\ncomponents and now we're going to add more logic? Specifically, we're going to\nfetch data we'll likely want to keep in our Redux store — adding code to our\ncomponents seems to be a step backwards.\u003c/p\u003e\n\n\u003cp\u003eWith \u003ccode\u003eredux-thunk\u003c/code\u003e, we can incorporate asynchronous code in with our Redux\nactions. This allows us to continue keeping our components relatively simple and\nmore focused on presentation. In this lesson, we're going to go through what\nThunk is and how it is implemented with Redux.\u003c/p\u003e\n\n\u003ch2\u003eTrying to Send an Asynchronous Request in Redux\u003c/h2\u003e\n\n\u003cp\u003eWe're familiar with the Redux pattern in which the store dispatches an action to\nthe reducer, the reducer uses that action to make changes to the state, and\ncomponents re-render with new data.\u003c/p\u003e\n\n\u003cp\u003eGoing back to hard-coded examples, in previous lessons, we populated our store\nusing data inside an action creator function. Something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eNeil Armstrong\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003ecraft\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eApollo 11\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eBuzz Aldrin\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003ecraft\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eApollo 11\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eMichael Collins\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003ecraft\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eApollo 11\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e];\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhat happens though, when we're ready to pull in real live data from an external\nsource like an API?\u003c/p\u003e\n\n\u003cp\u003eWell, we already know how to make a web request. We can use something like\nJavaScript's native Fetch API to send a web request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://api.open-notify.org/astros.json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo, can we simply make a \u003ccode\u003efetch\u003c/code\u003e request inside our action creator function\ninstead of hard-coding our data? The code below is a good attempt, but it\nultimately ends in failure and disappointment:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/astronauts/Astronauts.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchAstronauts\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./astronautsSlice\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleClick\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// dispatch the action creator (see below!)\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efetchAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronautsList\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eastro\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e \u003cspan class=\"na\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eastro\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eastro\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003eonClick\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleClick\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eGet Astronauts\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eastronautsList\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003eAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/astronauts/astronautsSlice.js\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// Action Creators\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/astronautsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// Reducers\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e//array of astronauts\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/astronautsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo if you look at the code above, you get a sense for what we are trying to do.\nWhen a user clicks on the button, we call the \u003ccode\u003ehandleOnClick()\u003c/code\u003e function. This\ncalls our action creator, the \u003ccode\u003efetchAstronauts()\u003c/code\u003e function. The action creator\nthen hits the API, and returns an action with our data, which then updates the\nstate through the reducer.\u003c/p\u003e\n\n\u003cp\u003eWhile this might seem like it should work, in reality we have a big problem.\u003c/p\u003e\n\n\u003cp\u003eFetch requests in JavaScript are \u003cem\u003easynchronous\u003c/em\u003e. That means if we make a fetch\nrequest at the first line of our \u003ccode\u003efetchAstronauts()\u003c/code\u003e function:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://api.open-notify.org/astros.json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/astronautsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe code on the second line will start running \u003cem\u003ebefore the web request resolves\nand we have a response that we can work with\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003efetch()\u003c/code\u003e request returns something called a \u003cstrong\u003ePromise\u003c/strong\u003e. A Promise object is\nan object that represents some value that will be available later. We can access\nthe data when the promise \"resolves\" and becomes available by chaining a\n\u003ccode\u003ethen()\u003c/code\u003e function onto our \u003ccode\u003efetch()\u003c/code\u003e call.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://api.open-notify.org/astros.json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/astronautsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOur \u003ccode\u003ethen()\u003c/code\u003e function will run when the Promise that \u003ccode\u003efetch()\u003c/code\u003e returns is\n\u003cem\u003eresolved\u003c/em\u003e, allowing us to access the response data and parse it into JSON. This\ndoesn't solve our problem though because the \u003ccode\u003efetchAstronauts()\u003c/code\u003e function will\nstill return before the Promise is resolved.\u003c/p\u003e\n\n\u003cp\u003eThere's another problem. Because retrieving data takes time, and because we\nalways want our Redux store to reflect the current application state, we want to\nrepresent the state of the application in between the user asking for data and\nthe application receiving the data. It's almost like each time a user asks for\ndata we want to dispatch two actions to update our state: one to place our state\nas loading, and another to update the state with the data.\u003c/p\u003e\n\n\u003cp\u003eSo these are the steps we want to happen when the user wishes to call the API:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eInvoke \u003ccode\u003efetchAstronauts()\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eDirectly after invoking \u003ccode\u003efetchAstronauts()\u003c/code\u003e dispatch an action to indicate\nthat we are loading data.\u003c/li\u003e\n\u003cli\u003eCall the \u003ccode\u003efetch()\u003c/code\u003e method, which runs, and returns a Promise that we are\nwaiting to resolve.\u003c/li\u003e\n\u003cli\u003eWhen the Promise resolves, dispatch another action with a payload of the\nfetched data that gets sent to the reducer.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eGreat. So how do we do all of this?\u003c/p\u003e\n\n\u003ch2\u003eWe Need Middleware\u003c/h2\u003e\n\n\u003cp\u003eSo we need a way to dispatch an action saying we are loading data, then to make\na request to the API, and then to wait for the response and then dispatch\nanother action with the response data.\u003c/p\u003e\n\n\u003cp\u003eLucky for us, we can use some \u003cstrong\u003emiddleware\u003c/strong\u003e for exactly that! Middleware, in\nthis case, will allow us to slightly alter the behavior of our actions, allowing\nus to add in asynchronous requests. In this case, for middleware, we'll be using\nThunk.\u003c/p\u003e\n\n\u003cp\u003eTo use \u003ccode\u003eredux-thunk\u003c/code\u003e you would need to install the NPM package:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall \u003c/span\u003eredux-thunk\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, when you initialize the store in your \u003ccode\u003eindex.js\u003c/code\u003e file, you can incorporate\nyour middleware like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/index.js\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-dom\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eProvider\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux-thunk\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./App\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./reducer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e \u003cspan class=\"na\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eApp\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;,\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eroot\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNotice that we imported in a new function \u003ccode\u003eapplyMiddleware()\u003c/code\u003e from \u003ccode\u003eredux\u003c/code\u003e,\nalong with \u003ccode\u003ethunk\u003c/code\u003e from the \u003ccode\u003eredux-thunk\u003c/code\u003e package, and passed in\n\u003ccode\u003eapplyMiddleware(thunk)\u003c/code\u003e as a second argument to \u003ccode\u003ecreateStore\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWe can also set up our app to use the Redux DevTools. We'll use another package,\n\u003ccode\u003eredux-devtools-extension\u003c/code\u003e, to help with the setup:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall \u003c/span\u003eredux-devtools-extension\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen update our \u003ccode\u003eindex.js\u003c/code\u003e file like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-dom\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eProvider\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux-thunk\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposeWithDevTools\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux-devtools-extension\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./App\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./reducer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposedEnhancer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposeWithDevTools\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposedEnhancer\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e \u003cspan class=\"na\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eApp\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;,\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eroot\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eUsing Redux-Thunk Middleware\u003c/h2\u003e\n\n\u003cp\u003eIn the above code, we tell our store to use the \u003ccode\u003eredux-thunk\u003c/code\u003e middleware. This\nmiddleware will do a couple of interesting things:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ccode\u003eredux-thunk\u003c/code\u003e allows us to \u003cstrong\u003ereturn a function inside of our action\ncreator\u003c/strong\u003e. Normally, our action creator returns a plain JavaScript object, so\nreturning a function is a pretty big change.\u003c/li\u003e\n\u003cli\u003eThat function receives the store's dispatch function as its argument. With\nthat, we can dispatch multiple actions from inside that returned function.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eLet's see the code and then we'll walk through it.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/features/astronauts/astronautsSlice.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// dispatch an initial action to set up a \"loading\" state\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/astronautsLoading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// initiate a network request with fetch\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://api.open-notify.org/astros.json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// when we have data from the response, dispatch another action to add the data to our Redux store\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n          \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/astronautsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n          \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epeople\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can see above that we are returning a \u003cem\u003efunction\u003c/em\u003e and not an \u003cem\u003eaction\u003c/em\u003e, and\nthat the power we now get is the \u003cstrong\u003eability to dispatch actions from inside of\nthe returned function\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eWith that power, we first dispatch an action to indicate that we are about to\nmake a request to our API. Then we make the request. We do not hit our \u003ccode\u003ethen()\u003c/code\u003e\nfunction until the response is received, which means that we are not dispatching\nour action of type \u003ccode\u003e'astronauts/astronautsLoaded'\u003c/code\u003e until we receive our data.\nThus, we are able to send along that data.\u003c/p\u003e\n\n\u003ch3\u003eReviewing Everything Together\u003c/h3\u003e\n\n\u003cp\u003eLet's review the whole application now with \u003ccode\u003eredux-thunk\u003c/code\u003e configured. First we\nhave \u003ccode\u003eindex.js\u003c/code\u003e, which now imports \u003ccode\u003ethunkMiddleware\u003c/code\u003e and \u003ccode\u003eapplyMiddleware\u003c/code\u003e and\nuses them when creating the Redux store:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/index.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-dom\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eProvider\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux-thunk\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposeWithDevTools\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux-devtools-extension\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./App\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./reducers\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposedEnhancer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposeWithDevTools\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposedEnhancer\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e \u003cspan class=\"na\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eApp\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;,\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eroot\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe \u003ccode\u003eAstronauts\u003c/code\u003e component we showed earlier can remain the same — note that\nalthough we've called a function \u003ccode\u003efetchAstronauts()\u003c/code\u003e, no actual asynchronous\ncode is in the component. The component's main purpose is to render JSX. It uses\ndata from Redux via \u003ccode\u003euseSelector()\u003c/code\u003e and connects an \u003ccode\u003eonClick\u003c/code\u003e event to an action\nthrough \u003ccode\u003euseDispatch()\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/astronauts/Astronauts.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchAstronauts\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./astronautsSlice\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleClick\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efetchAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronautsList\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eastro\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e \u003cspan class=\"na\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eastro\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eastro\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003eonClick\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleClick\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eGet Astronauts\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eastronautsList\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003eAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhat happens when the \u003ccode\u003eonClick\u003c/code\u003e event is fired? All of that logic is taken care\nof outside of the component, in our \u003ccode\u003efetchAstronauts()\u003c/code\u003e action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/features/astronauts/astronautsSlice.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/astronautsLoading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://api.open-notify.org/astros.json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n          \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/astronautsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n          \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epeople\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith \u003ccode\u003eredux-thunk\u003c/code\u003e configured, our actions can now \u003cem\u003ereturn\u003c/em\u003e a function. We must\nwrite the function, but we know that \u003ccode\u003edispatch()\u003c/code\u003e is passed in as an argument.\nNotice in the code above that there are \u003cem\u003etwo\u003c/em\u003e calls to \u003ccode\u003edispatch()\u003c/code\u003e, first\npassing in \u003ccode\u003e{ type: 'astronauts/astronautsLoading' }\u003c/code\u003e before the \u003ccode\u003efetch()\u003c/code\u003e call,\nthen passing in \u003ccode\u003e{ type: 'astronauts/astronautsLoaded', payload: astronauts }\u003c/code\u003e\n\u003cem\u003einside\u003c/em\u003e \u003ccode\u003e.then()\u003c/code\u003e. By having both \u003ccode\u003edispatch()\u003c/code\u003e calls, it is possible to know\njust before our application sends a remote request, and then immediately after\nthat request is resolved.\u003c/p\u003e\n\n\u003cp\u003eWe can update our reducer to include both \u003ccode\u003etype\u003c/code\u003es and to also change a bit of\nstate to indicate if data is in the process of being fetched. We'll modify the\ninitial state to do this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/astronauts/astronautsSlice.js\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e//array of astronauts\u003c/span\u003e\n  \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e//loading status for fetch\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/astronautsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/astronautsLoading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eloading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, we have a way to indicate in our app when data is being loaded! If \u003ccode\u003estatus\u003c/code\u003e\nis \u003ccode\u003e'loading'\u003c/code\u003e, we could display a loading message in our components.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWe saw that when retrieving data from APIs, we run into a problem where the\naction creator returns an action before the data is retrieved. To resolve this,\nwe use a middleware called \u003ccode\u003eredux-thunk\u003c/code\u003e. \u003ccode\u003eredux-thunk\u003c/code\u003e allows us to return a\nfunction inside of our action creator instead of a plain JavaScript object. That\nreturned function receives the store's dispatch function, and with that we are\nable to dispatch multiple actions: one to place the state in a loading state,\nand another to update our store with the returned data.\u003c/p\u003e","exportId":"g43026124127fee7f0ecab7bab9b2126e"},{"id":483411,"title":"Async Redux Lab: Pictures of Cats","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-thunk-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-thunk-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-thunk-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-thunk-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse \u003ccode\u003eredux-thunk\u003c/code\u003e middleware to make an asynchronous web request in an action\ncreator function\u003c/li\u003e\n\u003cli\u003eDispatch an action from the \u003ccode\u003euseEffect\u003c/code\u003e hook\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWho doesn't want to look at pictures of cats? Well, now you can look at up to 20\npictures of cats with our new React + Redux app. All you have to do is...build\nit yourself! In this lab, you are tasked with building out a React + Redux app\nthat fetches data using Thunk. Since this is a pretty specific task, we'll walk\nthrough it a bit in this Readme. Let's get started!\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eWe'll be working in two components: \u003ccode\u003eCats\u003c/code\u003e and \u003ccode\u003eCatList\u003c/code\u003e. The \u003ccode\u003eCats\u003c/code\u003e component\nwill be responsible for getting data from the state via \u003ccode\u003euseSelector\u003c/code\u003e. \u003ccode\u003eCats\u003c/code\u003e\nwill render a child component, \u003ccode\u003eCatList\u003c/code\u003e, which will receive the list of cat\npics from \u003ccode\u003eCats\u003c/code\u003e and render them in a series of \u003ccode\u003e\u0026lt;img\u0026gt;\u003c/code\u003e tags.\u003c/p\u003e\n\n\u003cp\u003eWe'll be getting our cat pics from a real API! Sort of. We made a very special\nAPI just for you to use with this lab (aren't you so lucky). We've got a GitHub\nrepository set up with GitHub pages to deliver a JSON file. If you point your\nbrowser to\n\u003ca href=\"https://learn-co-curriculum.github.io/cat-api/cats.json\"\u003ehttps://learn-co-curriculum.github.io/cat-api/cats.json\u003c/a\u003e you\nshould see a JSON collection of 20 cat image objects. Now that we have a source\nfor the data, we'll need to set up Redux and Thunk.\u003c/p\u003e\n\n\u003ch2\u003ePart 1: Set Up the Store and Reducer and Action Creator\u003c/h2\u003e\n\n\u003ch3\u003eConfiguring the Store\u003c/h3\u003e\n\n\u003cp\u003eFirst things first, use Redux's \u003ccode\u003ecreateStore()\u003c/code\u003e function to initialize your\nstore in \u003ccode\u003esrc/index.js\u003c/code\u003e. To get Redux configured, we'll need to import\n\u003ccode\u003ecreateStore\u003c/code\u003e from \u003ccode\u003eredux\u003c/code\u003e and \u003ccode\u003eProvider\u003c/code\u003e from \u003ccode\u003ereact-redux\u003c/code\u003e. We'll also need to\nimport a reducer. We haven't written it yet, but let's import from\n\u003ccode\u003esrc/reducers/catsReducer.js\u003c/code\u003e. We pass this reducer into \u003ccode\u003ecreateStore\u003c/code\u003e,\nassigning the return value to \u003ccode\u003estore\u003c/code\u003e. Then, we'll wrap the \u003ccode\u003eApp\u003c/code\u003e\ncomponent in \u003ccode\u003eProvider\u003c/code\u003e and pass \u003ccode\u003estore\u003c/code\u003e to it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/index.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-dom\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eProvider\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebootstrap/dist/css/bootstrap.min.css\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./App\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/cats/catsSlice.js\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e \u003cspan class=\"na\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eApp\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;,\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eroot\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is the Redux configuration we've seen previously. To implement Thunk, we'll\nneed to also import \u003ccode\u003eapplyMiddleware\u003c/code\u003e from \u003ccode\u003eredux\u003c/code\u003e and \u003ccode\u003ethunk\u003c/code\u003e from\n\u003ccode\u003eredux-thunk\u003c/code\u003e (package already included in \u003ccode\u003epackage.json\u003c/code\u003e). We pass \u003ccode\u003ethunk\u003c/code\u003e into\n\u003ccode\u003eapplyMiddleware()\u003c/code\u003e, and pass \u003cem\u003ethat\u003c/em\u003e in as the second argument for\n\u003ccode\u003ecreateStore\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/index.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-dom\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eProvider\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux-thunk\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebootstrap/dist/css/bootstrap.min.css\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./App\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/cats/catsSlice.js\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e \u003cspan class=\"na\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eApp\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;,\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eroot\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can also add the Redux DevTools:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-dom\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eProvider\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux-thunk\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposeWithDevTools\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux-devtools-extension\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebootstrap/dist/css/bootstrap.min.css\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./App\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/cats/catsSlice.js\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposedEnhancer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposeWithDevTools\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposedEnhancer\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e \u003cspan class=\"na\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eApp\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;,\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eroot\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe have the setup for connecting Redux to the React app, and we've configured\n\u003ccode\u003eredux-thunk\u003c/code\u003e. Now, we need to build out the reducer.\u003c/p\u003e\n\n\u003ch3\u003eSetting up the Reducer\u003c/h3\u003e\n\n\u003cp\u003eFor our \u003ccode\u003ecatsReducer()\u003c/code\u003e function in \u003ccode\u003e./src/features/cats/catsSlice.js\u003c/code\u003e, we'll want\nto set up a switch that handles two action types, \u003ccode\u003e'cats/catsLoading'\u003c/code\u003e and\n\u003ccode\u003e'cats/catsLoaded'\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/cats/catsSlice.js\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e// array of cats\u003c/span\u003e\n  \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// loading state\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/catsLoading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eloading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/catsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe also set up the initial state here. We can see that in the \u003ccode\u003e'cats/catsLoading'\u003c/code\u003e\ncase, \u003ccode\u003estate.status\u003c/code\u003e becomes \u003ccode\u003e'loading'\u003c/code\u003e, while the rest of \u003ccode\u003estate\u003c/code\u003e is just copied\nto a new object. In the \u003ccode\u003e'cats/catsLoaded'\u003c/code\u003e case, \u003ccode\u003estate.status\u003c/code\u003e becomes \u003ccode\u003e'idle'\u003c/code\u003e,\nand \u003ccode\u003estate.entities\u003c/code\u003e is set to the \u003ccode\u003eaction.payload\u003c/code\u003e array.\u003c/p\u003e\n\n\u003ch3\u003eSetting up the Action Creator\u003c/h3\u003e\n\n\u003cp\u003eNow, define your action creator function, \u003ccode\u003efetchCats()\u003c/code\u003e in\n\u003ccode\u003e./src/features/cats/catsSlice.js\u003c/code\u003e. Remember, \u003ccode\u003eredux-thunk\u003c/code\u003e alters the behavior of\naction creator functions, allowing us to \u003cem\u003ereturn\u003c/em\u003e a function that takes in\n\u003ccode\u003edispatch\u003c/code\u003e. Inside this function, we can execute asynchronous code, and, once\nresolved, we can use \u003ccode\u003edispatch\u003c/code\u003e to update our store with the remote data.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003efetchCats()\u003c/code\u003e action creator should use \u003ccode\u003efetch()\u003c/code\u003e to make the web request for\nyour cat pic JSON. It should use a \u003ccode\u003e.then()\u003c/code\u003e function to parse the JSON of the\nresponse to this request, and another \u003ccode\u003e.then()\u003c/code\u003e function chained on that to grab\nthe actual collection of cat pic image objects. Something like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttps://learn-co-curriculum.github.io/cat-api/cats.json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// instead of logging here, call dispatch and send the cat JSON data to your store\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eimages\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRemember, we built the \u003ccode\u003ecatsReducer\u003c/code\u003e to look for two action types. The first, \u003ccode\u003e'cats/catsLoading'\u003c/code\u003e, should be dispatched \u003cem\u003ebefore\u003c/em\u003e the \u003ccode\u003efetch()\u003c/code\u003e\nrequest is called. The other type, \u003ccode\u003e'cats/catsLoaded'\u003c/code\u003e, should be dispatched\nalong with a payload of the cats JSON collection. Judging by the case\nfor \u003ccode\u003e'cats/catsLoaded'\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ...\u003c/span\u003e\n\u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003ecats/catsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// ...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can see that the reducer is expecting an action that looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nl\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003ecats/catsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"c1\"\u003e// cat data from the cat API\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ePutting what we know together, we can start by writing the basic function definition:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe first thing we want to do in this function is send a \u003ccode\u003edispatch\u003c/code\u003e to indicate\nwe're loading (fetching) the cats:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/catsLoading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, we call \u003ccode\u003efetch()\u003c/code\u003e, dispatching the returned data:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/catsLoading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttps://learn-co-curriculum.github.io/cat-api/cats.json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/catsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eimages\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn this case, we just need the data inside \u003ccode\u003eimages\u003c/code\u003e, so we can pass that\ndirectly when calling the second \u003ccode\u003edispatch\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003ePart 2: Build the Cats Component\u003c/h2\u003e\n\n\u003cp\u003eNow that our reducer and action creators are set up, it is time to display the\nretrieved data in our app. First, let's set up the \u003ccode\u003eCats\u003c/code\u003e component to read from\nour Redux store. We'll do this by first importing \u003ccode\u003euseSelector\u003c/code\u003e from\n\u003ccode\u003ereact-redux\u003c/code\u003e. Then, we'll call \u003ccode\u003euseSelector\u003c/code\u003e in our component and write a\ncallback function to access our Redux store state.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/features/cats/Cats.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eCats\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatPics\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n  \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecatPics\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclassName\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"App\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eCatBook\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"cm\"\u003e/* missing component */\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003eCats\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUsing the above code, you should see an empty array logged in the console when\nthe app is launched. This is the empty \u003ccode\u003eentities\u003c/code\u003e array in our initial state,\nnow mapped to \u003ccode\u003ecatPics\u003c/code\u003e in \u003ccode\u003eCats\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3\u003eDispatching the \u003ccode\u003efetchCats\u003c/code\u003e Action\u003c/h3\u003e\n\n\u003cp\u003eThis is something new, so read carefully...\u003c/p\u003e\n\n\u003cp\u003eYou might be wondering when/where we will actually dispatch our \u003ccode\u003efetchCats\u003c/code\u003e\naction to get all the cat pics into state. We want our cat pics to be fetched\nwhen the \u003ccode\u003eCats\u003c/code\u003e component is first loaded up. So, we'll enact a common pattern\nin which we use a side effect to fetch the cat pics.\u003c/p\u003e\n\n\u003ch3\u003eThe useEffect function\u003c/h3\u003e\n\n\u003cp\u003eWhen we use \u003ccode\u003euseEffect()\u003c/code\u003e in our component, the callback function we provide\nwill \u003cem\u003ealways be called automatically every time our component is rendered\u003c/em\u003e. We\ncan also provide an empty dependencies array to tell React to only run the\ncallback the first time our component is rendered. This is the perfect place to\ngo and get the cat pics.\u003c/p\u003e\n\n\u003cp\u003eWe need to import \u003ccode\u003euseEffect\u003c/code\u003e, then define our \u003ccode\u003euseEffect()\u003c/code\u003e callback function\nso that it calls our \u003ccode\u003efetchCats()\u003c/code\u003e action creator. We also need to import\n\u003ccode\u003euseDispatch()\u003c/code\u003e function to make \u003ccode\u003edispatch()\u003c/code\u003e available.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/features/cats/Cats.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003euseEffect\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./catsSlice\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eCats\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatPics\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\n  \u003cspan class=\"nx\"\u003euseEffect\u003c/span\u003e\u003cspan class=\"p\"\u003e(()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"p\"\u003e[]);\u003c/span\u003e\n\n  \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecatPics\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclassName\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"App\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eCatBook\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"cm\"\u003e/* missing component */\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003eCats\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAh! If we check the console, we'll see that \u003ccode\u003ecatPics\u003c/code\u003e is set to \u003ccode\u003e[]\u003c/code\u003e on the\nfirst render, but on the second, we see an array of 20 cat objects! Notice that\nwe still can call \u003ccode\u003edispatch\u003c/code\u003e here, even though we're \u003cem\u003ealso\u003c/em\u003e calling \u003ccode\u003edispatch\u003c/code\u003e\nin our action creator.\u003c/p\u003e\n\n\u003cp\u003eOnce you successfully fetch cats, put them in state, grab them from state and\npass them to \u003ccode\u003eCats\u003c/code\u003e using \u003ccode\u003euseSelector\u003c/code\u003e prop, you're ready to build the\n\u003ccode\u003eCatList\u003c/code\u003e component.\u003c/p\u003e\n\n\u003ch3\u003eThe CatList Component\u003c/h3\u003e\n\n\u003cp\u003eWe will leave the final task to you - building the \u003ccode\u003eCatList\u003c/code\u003e component. Your\ncontainer component, \u003ccode\u003eCats\u003c/code\u003e, should render the\u003ccode\u003eCatList\u003c/code\u003e component. \u003ccode\u003eCats\u003c/code\u003e will\npass \u003ccode\u003ecatPics\u003c/code\u003e down to \u003ccode\u003eCatList\u003c/code\u003e as a prop. \u003ccode\u003eCatList\u003c/code\u003e should iterate over the\ncat pics and display each cat pic in an image URL. Remember to use \u003ccode\u003edebugger\u003c/code\u003e to\ntake a look at the \u003ccode\u003ecatPics\u003c/code\u003e collection and determine which property of each\n\u003ccode\u003ecatPic\u003c/code\u003e object you will use to populate your \u003ccode\u003e\u0026lt;img\u0026gt;\u003c/code\u003e tag and render the image.\nIn order to get the tests to pass, you will need to give your \u003ccode\u003e\u0026lt;img\u0026gt;\u003c/code\u003e tags an\nalt prop of \"cat\".\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWith all tests passing, you should have a working example of a React + Redux +\nThunk application. Of the two components, one is purely presentational, just\nlike a regular React app. The other connects to Redux, but beyond that, it's not\nany different than a regular React + Redux app. Thunk lets us augment our action\ncreators and handle our asynchronous requests without requiring any major\nchanges to other parts of the application.\u003c/p\u003e\n\n\u003ch2\u003eBonus\u003c/h2\u003e\n\n\u003cp\u003eWhile we have a working application, there is one more thing we did not fully\nimplement: handling loading. If you've followed the instructions, you should\nhave access to \u003ccode\u003eloading\u003c/code\u003e in your \u003ccode\u003eCats\u003c/code\u003e component by calling \u003ccode\u003euseSelector\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWhile content is being fetched, it would be nice to show the user something -\noften, spinning icons are used, but even just a simple 'Loading...' is enough to\nshow to the user that content is on the way.\u003c/p\u003e\n\n\u003cp\u003eHow might we use the value of \u003ccode\u003eloading\u003c/code\u003e to implement a loading message until the\ncat images arrive?\u003c/p\u003e","exportId":"g5bb769073cfcc3cdaf17d5a4160cca5d"},{"id":483412,"title":"Redux Toolkit","type":"Assignment","indent":1,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-toolkit\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-toolkit/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-toolkit\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-toolkit/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Redux Toolkit to simplify Redux setup and help follow best practices\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eAs we've been writing Redux code, we've added a pretty significant amount of\ncomplexity to our applications for managing state. For the apps we've been\nbuilding in labs, this amount of complexity certainly may feel like overkill -\nwe could just as easily have used \u003ccode\u003euseState\u003c/code\u003e and called it a day! As\napplications grow, having a consistent, predictable pattern for managing state\nwill be beneficial.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eHowever\u003c/strong\u003e, as we've seen, adding more state means adding more \"boilerplate\"\ncode, such as:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreating new reducers\u003c/li\u003e\n\u003cli\u003eHandling state immutably in our reducers\u003c/li\u003e\n\u003cli\u003eAdding new action creators\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWe also need to go through a good amount of setup just to get Redux up and\nrunning:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCombine our reducers\u003c/li\u003e\n\u003cli\u003eConfigure the Redux Dev Tools\u003c/li\u003e\n\u003cli\u003eCreate our store\u003c/li\u003e\n\u003cli\u003eAdd the \u003ccode\u003eredux-thunk\u003c/code\u003e middleware for async actions\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe amount of boilerplate code to get Redux up and running, and add new\nfeatures, has been a consistent pain point for developers. Thankfully, the Redux\nteam now has a tool to simplify the setup and make our job a bit easier: \u003cstrong\u003eRedux\nToolkit\u003c/strong\u003e. We're going to work on refactoring an application that fetches data\nfrom an API to see how using Redux Toolkit can help simplify our code.\u003c/p\u003e\n\n\u003cp\u003eTo get started, install Redux Toolkit:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e @reduxjs/toolkit\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, code along as we refactor.\u003c/p\u003e\n\n\u003ch2\u003eStore Setup\u003c/h2\u003e\n\n\u003cp\u003eCurrently, our store setup looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/store.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux-thunk\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposeWithDevTools\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux-devtools-extension\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./reducer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposedEnhancer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposeWithDevTools\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposedEnhancer\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe're also creating a root reducer in a separate file using \u003ccode\u003ecombineReducers\u003c/code\u003e,\nso that we can add more reducers as our need for state grows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/reducer.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecombineReducers\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/cats/catsSlice\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecombineReducers\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ecats\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs you by now are surely aware, it takes quite a bit of work to get all the\ntools we need (\u003ccode\u003ecombineReducers\u003c/code\u003e, \u003ccode\u003eredux-thunk\u003c/code\u003e, the Redux DevTools, etc.) all\nin place! Let's see how this setup looks with the Redux Toolkit instead:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/store.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003econfigureStore\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@reduxjs/toolkit\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/cats/catsSlice\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003econfigureStore\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ecats\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis one \u003ccode\u003econfigureStore\u003c/code\u003e function does all the work we'd done by hand to set up\nour store and greatly simplifies it. It handles the work of:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCombining the reducers (we can just add other reducers in the \u003ccode\u003econfigureStore\u003c/code\u003e\nfunction!);\u003c/li\u003e\n\u003cli\u003eSetting up \u003ccode\u003eredux-thunk\u003c/code\u003e (which is installed automatically as a dependency of\nRedux Toolkit); and\u003c/li\u003e\n\u003cli\u003eAdding the Redux DevTools!\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIf you run \u003ccode\u003enpm test\u003c/code\u003e now, you should be able to confirm all the functionality\nwe had previously set up by hand still works!\u003c/p\u003e\n\n\u003cp\u003eOne other benefit we get from the Redux toolkit is automatic checks for bugs\naround mutating state in our reducers.\u003c/p\u003e\n\n\u003cp\u003eIn our reducer, let's introduce a bug by mutating state (for demo purposes only,\nof course):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/features/cats/catsSlice.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/fetchCats/pending\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e// mutating state! nonono\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eloading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf you run \u003ccode\u003enpm start\u003c/code\u003e and run our app in the browser, you should now get a\nnice, big error message in the console warning you about not mutating state in\nthe reducer. This is an excellent error to have pop up in our applications -\nbugs related to improperly mutating state are notoriously difficult to spot, and\ncan introduce a lot of strange behavior into our apps. Having this automatic\ncheck in place should give us more confidence that we're writing our reducer\ncode properly!\u003c/p\u003e\n\n\u003cp\u003eNow that we're done with the Redux Toolkit setup for our store, we can also now\nsafely remove some dependencies from our app (since they're included with Redux\nToolkit):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm uninstall redux redux-thunk\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eCreating Slices\u003c/h2\u003e\n\n\u003cp\u003eLet's turn our attention next to our reducer and action creator code. All our\ncode is in the \u003ccode\u003esrc/features/cats/catsSlice.js\u003c/code\u003e file (a few new actions have\nbeen added for demo purposes). Let's start with the reducer:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/features/cats/catsSlice.js\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e// array of cats\u003c/span\u003e\n  \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// loading state\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// sync actions\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/catAdded\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/catRemoved\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/catUpdated\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// async actions\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/fetchCats/pending\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eloading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/fetchCats/fulfilled\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOne of the key requirements of our reducer is that we must always \u003cstrong\u003ereturn a new\nversion of state\u003c/strong\u003e, and \u003cstrong\u003enever\u003c/strong\u003e mutate state. We're using the spread operator\nand a few tricks with different array methods to accomplish this. Let's see how\nwe could simplify this with Redux Toolkit.\u003c/p\u003e\n\n\u003cp\u003eTo start off, we'll need to import the \u003ccode\u003ecreateSlice\u003c/code\u003e function:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateSlice\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@reduxjs/toolkit\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, we can update our reducer code like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e// array of cats\u003c/span\u003e\n  \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// loading state\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsSlice\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ereducers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003ecatAdded\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e// using createSlice lets us mutate state!\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003ecatUpdated\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecat\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// async actions to come...\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRunning \u003ccode\u003enpm test\u003c/code\u003e now after swapping out our reducer should still pass for all\ntests except those related to our \u003cem\u003easync\u003c/em\u003e actions (more on that later).\u003c/p\u003e\n\n\u003cp\u003eOne thing you'll notice is that we're now allowed to mutate state - no more\nspread operator! Under the hood, Redux Toolkit uses a library called \u003ca\u003eImmer\u003c/a\u003e\nto handle immutable state updates. We can safely write code that mutates state,\nas long as we're using \u003ccode\u003ecreateSlice\u003c/code\u003e, and Immer will ensure that we're not\n\u003cem\u003eactually\u003c/em\u003e mutating state.\u003c/p\u003e\n\n\u003cp\u003eUsing \u003ccode\u003ecreateSlice\u003c/code\u003e will \u003cem\u003ealso\u003c/em\u003e generate our action creators automatically!\nLet's delete the \u003ccode\u003ecatAdded\u003c/code\u003e and \u003ccode\u003ecatUpdated\u003c/code\u003e action creators we wrote by hand,\nand replace them with the ones generated by \u003ccode\u003ecreateSlice\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// the `catsSlice` object will have an `actions` property\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// with the auto-generated action creators\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatAdded\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatUpdated\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eactions\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eAsync Action Creators\u003c/h2\u003e\n\n\u003cp\u003eRedux Toolkit also gives us another way to work with \u003cem\u003easync\u003c/em\u003e action creators\nusing \u003ccode\u003eredux-thunk\u003c/code\u003e. We'll have to do a bit more work here to get these working\nthan with our normal, non-thunk action creators creators.\u003c/p\u003e\n\n\u003cp\u003eFirst, we'll need to import another function from Redux Toolkit:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateAsyncThunk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateSlice\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@reduxjs/toolkit\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, we can use this \u003ccode\u003ecreateAsyncThunk\u003c/code\u003e function to create our \u003ccode\u003efetchCats\u003c/code\u003e\nfunction:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateAsyncThunk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/fetchCats\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// return a Promise containing the data we want\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttps://learn-co-curriculum.github.io/cat-api/cats.json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eimages\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, to add this to our reducer:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsSlice\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ereducers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// sync reducers here\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// add this as a new key\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eextraReducers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// handle async action types\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epending\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eloading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efulfilled\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo recap what the code above is doing:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWe created a new async action creator using \u003ccode\u003ecreateAsyncThunk\u003c/code\u003e, called\n\u003ccode\u003efetchCats\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eWe added a new key on the slice object called \u003ccode\u003eextraReducers\u003c/code\u003e, where we can\nadd custom reducer logic\u003c/li\u003e\n\u003cli\u003eWe added a case in \u003ccode\u003eextraReducers\u003c/code\u003e for the \u003ccode\u003efetchCats.pending\u003c/code\u003e state, which\nwill run when our fetch request has not yet come back with a response\u003c/li\u003e\n\u003cli\u003eWe also added a case for \u003ccode\u003efetchCats.fulfilled\u003c/code\u003e, which will run when our\nresponse comes back with the cat data\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThere's a lot to take in there! Working with async actions is still challenging,\nbut using this approach at least gives us a consistent way to structure our\nasync code and reduce the amount of hand-written logic for dealing with various\nfetch statuses ('idle', 'loading', 'error').\u003c/p\u003e\n\n\u003cp\u003eHere's what our completed slice file looks like after all those changes:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/features/cats/catsSlice.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateAsyncThunk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateSlice\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@reduxjs/toolkit\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateAsyncThunk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/fetchCats\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// return a Promise containing the data we want\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttps://learn-co-curriculum.github.io/cat-api/cats.json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eimages\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsSlice\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e// array of cats\u003c/span\u003e\n    \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// loading state\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ereducers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003ecatAdded\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e// using createSlice lets us mutate state!\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003ecatUpdated\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecat\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eextraReducers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// handle async actions: pending, fulfilled, rejected (for errors)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epending\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eloading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efulfilled\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatAdded\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatUpdated\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eactions\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRunning the tests again should still give you a passing result - meaning that\nour refactor was successful.\u003c/p\u003e\n\n\u003cp\u003eYou can see the full, working code in the solution branch.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eUsing Redux Toolkit can help remove a lot of the \"boilerplate\" setup code for\nworking with Redux. It can also help save us from some of the common pitfalls of\nworking with Redux, such as mutating state. Finally, it also gives us a way to\nstructure our async code so that we can handle various loading states\nconsistently and predictably.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://redux-toolkit.js.org/introduction/quick-start\"\u003eRedux Toolkit\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://redux-toolkit.js.org/tutorials/advanced-tutorial\"\u003eRedux Toolkit: Advanced Tutorial\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","exportId":"ge2df59c6e0539f99f37909efa21673e6"}]}],"pages":[{"exportId":"video-sessions-and-cookies-intro","title":"Video: Sessions and Cookies Intro","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-sessions-and-cookies-intro\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-sessions-and-cookies-intro\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-sessions-and-cookies-intro/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/609140443/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/action_controller_overview.html#session\"\u003eRails Guides: Session\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/action_controller_overview.html#cookies\"\u003eRails Guides: Cookies\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.rubyinside.com/what-rubys-double-pipe-or-equals-really-does-5488.html\"\u003eRuby \u003ccode\u003e||=\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-validations","title":"Video: Validations","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-validations\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-validations\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-validations/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/605968995/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/v5.1/active_record_validations.html\"\u003eActive Record Validations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://edgeapi.rubyonrails.org/classes/ActiveSupport/Rescuable/ClassMethods.html#method-i-rescue_from\"\u003e\u003ccode\u003erescue_from\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"password-protection","title":"Password Protection","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-password-protection-readme\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-password-protection-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-password-protection-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain why it's a bad idea to store passwords in plaintext\u003c/li\u003e\n\u003cli\u003eWrite code to store and verify hashed, salted passwords\u003c/li\u003e\n\u003cli\u003eUse Rails' \u003ccode\u003ehas_secure_password\u003c/code\u003e to store and authenticate user login\ncredentials securely\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIt's quite difficult to manage passwords securely. About once a month, there is\nanother big hack in the news, and all the passwords and credit cards from some\npoor site show up on the dark web.\u003c/p\u003e\n\n\u003cp\u003eRails provides us with tools to store passwords securely so that even if our\ndatabase is compromised, no one can gain access to users' actual passwords.\u003c/p\u003e\n\n\u003ch2\u003eThe problem with passwords\u003c/h2\u003e\n\n\u003cp\u003eLet's imagine a \u003ccode\u003eSessionsController#create\u003c/code\u003e method that does very simple\nauthentication. It goes like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eusername: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epassword\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Invalid username or password\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe find the user in the database by their username, check to see if the provided\npassword is equal to the password stored in the database, and, if it is, set\n\u003ccode\u003euser_id\u003c/code\u003e in the \u003ccode\u003esession\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis is tremendously insecure because you then have to store all your users'\npasswords in the database, unencrypted.\u003c/p\u003e\n\n\u003cp\u003eNever do this.\u003c/p\u003e\n\n\u003cp\u003eEven if you don't care about the security of your site, people have a strong\ntendency to reuse passwords. That means that the inevitable security breach of\nyour site will leak passwords which some users also use for Gmail. Your \u003ccode\u003eusers\u003c/code\u003e\ntable probably has an \u003ccode\u003eemail\u003c/code\u003e column. This means that, if I'm a hacker, getting\naccess to your database has given me the Internet equivalent of the house keys\nand home address for some (probably surprisingly large) percentage of your\nusers.\u003c/p\u003e\n\n\u003ch2\u003eHashing Passwords\u003c/h2\u003e\n\n\u003cp\u003eSo how do we store passwords if we can't store passwords?\u003c/p\u003e\n\n\u003cp\u003eInstead of storing users' passwords in plain text, we store a hashed version of\nthem. A \u003cem\u003ehash\u003c/em\u003e is a \u003cem\u003efixed-length\u003c/em\u003e output computed by feeding a string to a\n\u003cem\u003ehash function\u003c/em\u003e. Hash functions have the property that they will always produce\nthe same output given the same input.\u003c/p\u003e\n\n\u003cp\u003eA helpful analogy for a hash function is making a smoothie. If I put the exact\nsame ingredients into the blender, I'll get the exact same smoothie every time.\nBut there's no way to reverse the operation, and get back the original\ningredients from the smoothie.\u003c/p\u003e\n\n\u003cp\u003eHash functions work in a similar way: given the same input, they'll always\nproduce the same output; and there's no way to reverse the output and recreate\nthe original input.\u003c/p\u003e\n\n\u003cp\u003eYou could even write a hash function yourself. Here's a very simple one:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# dumb_hash(input: string) -\u0026gt; number\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edumb_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ebytes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ereduce\u003c/span\u003e\u003cspan class=\"p\"\u003e(:\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis \u003ccode\u003edumb_hash\u003c/code\u003e function just finds the sum of the bytes that comprise the\nstring. It satisfies the criterion that the same string always produces the same\nresult. (It doesn't quite meet the \"fixed-length output\" requirement for hashes,\nbut for demo purposes, it'll do.)\u003c/p\u003e\n\n\u003cp\u003eWe could imagine using this function to avoid storing passwords in the database.\nOur \u003ccode\u003eUser\u003c/code\u003e model and \u003ccode\u003eSessionsController\u003c/code\u003e might look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/models/user.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# takes a plaintext password and stores a hashed version as a password_digest\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enew_password\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epassword_digest\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edumb_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enew_password\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# checks if the hashed plaintext password matches the password_digest\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eauthenticate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003edumb_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003epassword_digest\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# the hashing method\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edumb_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ebytes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ereduce\u003c/span\u003e\u003cspan class=\"p\"\u003e(:\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# app/controllers/sessions_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSessionsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eusername: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthenticate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n      \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Invalid username or password\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e \u003ca href=\"https://mitrev.net/ruby/2015/11/13/the-operator-in-ruby/\"\u003e\u003ccode\u003e\u0026amp;.\u003c/code\u003e\u003c/a\u003e is known in Ruby as the \"safe navigation\noperator\". If \u003ccode\u003euser\u003c/code\u003e is \u003ccode\u003enil\u003c/code\u003e, it will return \u003ccode\u003enil\u003c/code\u003e; if not, it will call the\n\u003ccode\u003e.authenticate\u003c/code\u003e method on \u003ccode\u003euser\u003c/code\u003e. It would be similar to writing\n\u003ccode\u003euser \u0026amp;\u0026amp; user.authenticate(params[:password])\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIn this world, we have saved the password hashes in a \u003ccode\u003epassword_digest\u003c/code\u003e column\nin the database. We are not storing the passwords themselves.\u003c/p\u003e\n\n\u003cp\u003eWith the code above, a user's password is set by calling\n\u003ccode\u003euser.password = *new_password*\u003c/code\u003e. Presumably, our \u003ccode\u003eUsersController\u003c/code\u003e would do\nthis, but we're not worrying about that for the moment.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003edumb_hash\u003c/code\u003e is, as its name suggests, a pretty dumb hash function to use for\nthis purpose. It's a poor choice because similar strings hash to similar values.\nIf my password was \u003ccode\u003eJoshua\u003c/code\u003e, you could log in as me by entering the password\n\u003ccode\u003eJnshub\u003c/code\u003e. Since 'n' is one less than 'o' and 'b' is one more than 'a', the\noutput of \u003ccode\u003edumb_hash\u003c/code\u003e would be the same. This is known as a \u003cem\u003ecollision\u003c/em\u003e. With\n\u003ccode\u003edumb_hash\u003c/code\u003e as our hashing function, there would be many, similar, variants of\nour \u003ccode\u003eJoshua\u003c/code\u003e password (many collisions) that could be used successfully to\naccess the account, making our authentication process much less secure.\u003c/p\u003e\n\n\u003cp\u003eUnfortunately, collisions are inevitable when you're writing a hash function,\nsince hash functions usually produce either a 32-bit or 64-bit number, and the\nspace of all possible strings is much larger than either \u003ccode\u003e2**32\u003c/code\u003e or \u003ccode\u003e2**64\u003c/code\u003e.\nFortunately, however, smart people who have thought about this a lot have\nwritten a lot of different hash functions that are well-suited to different\npurposes. And nearly all hash functions are designed with the quality that\nstrings that are similar, but not the same, will hash to significantly different\nvalues.\u003c/p\u003e\n\n\u003cp\u003eRuby internally uses \u003ca href=\"https://en.wikipedia.org/wiki/MurmurHash\"\u003eMurmurHash\u003c/a\u003e, which produces better results for\nthis:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"s1\"\u003e'Joshua'\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehash\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; 2365460548529352617\u003c/span\u003e\n\n\u003cspan class=\"s1\"\u003e'Jnshub'\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehash\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; -2645381839118209905\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut Murmur still isn't ideal, because while it does not produce collisions so\nreadily, it is still not difficult to produce them if that's what you're trying\nto do.\u003c/p\u003e\n\n\u003cp\u003eInstead, Rails uses a library called BCrypt. BCrypt is designed with these\nproperties in mind:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eBCrypt hashes similar strings to very different values.\u003c/li\u003e\n\u003cli\u003eIt is a \u003cem\u003ecryptographic hash\u003c/em\u003e. That means that, if you have an output in mind,\nfinding a string which produces that output is designed to be \"very\ndifficult.\" \"Very difficult\" means \"even if Google put all their computers on\nit, they couldn't do it.\"\u003c/li\u003e\n\u003cli\u003eBCrypt is designed to be slow. It is intentionally computationally expensive.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe last two features make BCrypt a particularly good choice for passwords. (2)\nmeans that, even if an attacker gets your database of hashed passwords, it is\nnot easy for them to turn a hash back into its original string. (3) means that,\neven if an attacker has a dictionary of common passwords to check against, it\nwill still take them a considerable amount of time to check for your password\nagainst that list.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://github.com/bcrypt-ruby/bcrypt-ruby\"\u003eBCrypt gem\u003c/a\u003e is open source, and their documentation has some\nexcellent examples that demonstrate this functionality. If you're interested in\nexploring more, their docs and source code are a great resource.\u003c/p\u003e\n\n\u003ch2\u003eSalt\u003c/h2\u003e\n\n\u003cp\u003eBut what if our attackers have done their homework?\u003c/p\u003e\n\n\u003cp\u003eSay I'm a hacker. I know I'm going to break into a bunch of sites and get their\npassword databases. I want to make that worth my while.\u003c/p\u003e\n\n\u003cp\u003eBefore I do all this breaking and entering, I'm going to find the ten million\nmost common passwords and hash them with BCrypt. I can do around 1,000 hashes\nper second, so that's about three hours. Maybe I'll do the top five hundred\nmillion just to be sure.\u003c/p\u003e\n\n\u003cp\u003eIt doesn't really matter that this is going to take long time to run — I'm only\ndoing it once. Let's call this mapping of strings to hash outputs a \u003ca href=\"https://en.wikipedia.org/wiki/Rainbow_table\"\u003e\"rainbow\ntable\"\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eNow, when I get your database, I just look and see if any of the passwords in it\nare in my rainbow table. If they are, then I know the password.\u003c/p\u003e\n\n\u003cp\u003eGoing back to our smoothie analogy, this would be the equivalent of someone\ntaking all the possible combinations of smoothie ingredients and running them\nthrough the blender to create a giant collection of smoothies. By tasting all\nthe smoothies, they could figure out which original ingredients were used to\nmake the smoothie they're trying to identify.\u003c/p\u003e\n\n\u003cp\u003eThe solution to the rainbow table problem is \u003cem\u003esalting\u003c/em\u003e our passwords. A salt is\na random string prepended to the password before hashing it. It's stored in\nplain text next to the password, so it's not a secret. But the fact that it's\nthere makes an attacker's life much more difficult: it's very unlikely that I\nconstructed my rainbow table with your particular salt in mind, so I'm back to\nrunning the hash algorithm over and over as I guess passwords. And, remember,\nBCrypt is designed to be expensive to run.\u003c/p\u003e\n\n\u003cp\u003eLet's update our \u003ccode\u003eUser\u003c/code\u003e model to use BCrypt:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Gemfile:\u003c/span\u003e\n\u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s1\"\u003e'bcrypt'\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# app/models/user.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eBase\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# generate a salted + hashed password and save it to password_digest\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enew_password\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esalt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBCrypt\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eEngine\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003egenerate_salt\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# =\u0026gt; $2a$12$UW5etUc/o1YL4sSdeTBPku\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epassword_digest\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBCrypt\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eEngine\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ehash_secret\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enew_password\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esalt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# =\u0026gt; $2a$12$UW5etUc/o1YL4sSdeTBPkueUWwNIPNdQNAwzuSGkS3L5coBKMMZHm\"\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# check the plaintext password against the salted + hashed password\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eauthenticate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# Salts generated by generate_salt are always 29 chars long.\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esalt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epassword_digest\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e28\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# compare the saved password_digest against the plaintext password by running the plaintext password through the same hashing function\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"no\"\u003eBCrypt\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eEngine\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ehash_secret\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esalt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epassword_digest\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOur \u003ccode\u003eusers.password_digest\u003c/code\u003e column really stores two values: the salt and the\nactual return value of BCrypt. We just concatenate them together in the column\nand use our knowledge of the length of salts — \u003ccode\u003egenerate_salt\u003c/code\u003e always produces\n29-character strings — to separate them.\u003c/p\u003e\n\n\u003cp\u003eAfter we've loaded the User, we find the salt which we previously stored in\ntheir \u003ccode\u003epassword_digest\u003c/code\u003e column. We run the password we were given in \u003ccode\u003eparams\u003c/code\u003e\nthrough BCrypt along with the salt we read from the database. If the results\nmatch, you're in. If they don't, no dice.\u003c/p\u003e\n\n\u003ch2\u003eRails Makes It Easier\u003c/h2\u003e\n\n\u003cp\u003eYou don't have to deal with all this yourself. Rails provides a method called\n\u003ccode\u003ehas_secure_password\u003c/code\u003e that you can use on your Active Record models to handle\nall of this. It looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_secure_password\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo use the \u003ccode\u003ehas_secure_password\u003c/code\u003e macro, you'll need to add \u003ccode\u003egem 'bcrypt'\u003c/code\u003e to\nyour Gemfile if it isn't there already.\u003c/p\u003e\n\n\u003cp\u003eWhen using \u003ca href=\"http://api.rubyonrails.org/classes/ActiveModel/SecurePassword/ClassMethods.html\"\u003e\u003ccode\u003ehas_secure_password\u003c/code\u003e\u003c/a\u003e, Rails will use the\n\u003ccode\u003ebcrypt\u003c/code\u003e gem to hash and salt all passwords on the \u003ccode\u003eUser\u003c/code\u003e model.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ca href=\"http://api.rubyonrails.org/classes/ActiveModel/SecurePassword/ClassMethods.html\"\u003e\u003ccode\u003ehas_secure_password\u003c/code\u003e\u003c/a\u003e method also provides two new\ninstance methods on your \u003ccode\u003eUser\u003c/code\u003e model: \u003ccode\u003epassword\u003c/code\u003e and \u003ccode\u003epassword_confirmation\u003c/code\u003e.\nThese methods don't correspond to database columns! Instead, to make these\nmethods work, your \u003ccode\u003eusers\u003c/code\u003e table \u003cstrong\u003emust\u003c/strong\u003e have a \u003ccode\u003epassword_digest\u003c/code\u003e column:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ecreate_table\u003c/span\u003e \u003cspan class=\"ss\"\u003e:users\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estring\u003c/span\u003e \u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estring\u003c/span\u003e \u003cspan class=\"ss\"\u003e:password_digest\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etimestamps\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThese two instance methods enable you to easily include password and password\nconfirmation fields in a signup (or password reset) form. \u003ccode\u003ehas_secure_password\u003c/code\u003e\nhandles these fields by adding a \u003ccode\u003ebefore_save\u003c/code\u003e hook to your model that compares\n\u003ccode\u003epassword\u003c/code\u003e and \u003ccode\u003epassword_confirmation\u003c/code\u003e. If they match (or if\n\u003ccode\u003epassword_confirmation\u003c/code\u003e is \u003ccode\u003enil\u003c/code\u003e), the user is saved and the hashed version of\nthe password is stored in the \u003ccode\u003epassword_digest\u003c/code\u003e column of the database, pretty\nmuch exactly like our example code before did.\u003c/p\u003e\n\n\u003cp\u003eUnder the hood, \u003ccode\u003ehas_secure_password\u003c/code\u003e calls upon an Active Record helper method,\n\u003ca href=\"https://apidock.com/rails/ActiveModel/Validations/HelperMethods/validates_confirmation_of\"\u003e\u003ccode\u003evalidates_confirmation_of\u003c/code\u003e\u003c/a\u003e. As such, as with other\nActive Record validator methods, when the fields don't match and the validation\nfails, an \u003ccode\u003eActiveRecord::RecordInvalid\u003c/code\u003e exception will be raised. You can handle\nthis exception by using \u003ccode\u003erescue\u003c/code\u003e or \u003ccode\u003erescue_from\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eAll together, the code implementing the signup functionality of our very secure\napp might look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eSignUp\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"nx\"\u003eonLogin\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esetUsername\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esetPassword\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003epasswordConfirmation\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esetPasswordConfirmation\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleSubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epreventDefault\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/signup\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n      \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003epassword_confirmation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003epasswordConfirmation\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e}),\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eonLogin\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e \u003cspan class=\"na\"\u003eonSubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleSubmit\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003elabel\u003c/span\u003e \u003cspan class=\"na\"\u003ehtmlFor\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"username\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eUsername:\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003elabel\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\n        \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"text\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"username\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eusername\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eonChange\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003esetUsername\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etarget\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003elabel\u003c/span\u003e \u003cspan class=\"na\"\u003ehtmlFor\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"password\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003ePassword:\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003elabel\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\n        \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"password\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"password\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003epassword\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eonChange\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003esetPassword\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etarget\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003elabel\u003c/span\u003e \u003cspan class=\"na\"\u003ehtmlFor\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"password_confirmation\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eConfirm Password:\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003elabel\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\n        \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"password\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"password_confirmation\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003epasswordConfirmation\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eonChange\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003esetPasswordConfirmation\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etarget\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"submit\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eSubmit\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/users_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUsersController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerrors: \u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efull_messages\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003euser_params\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epermit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:password_confirmation\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/sessions_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSessionsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eusername: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthenticate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n      \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Invalid username or password\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/models/user.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eBase\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_secure_password\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWhen dealing with users' passwords, it's important for security that we never\nstore passwords in our database directly in plain text. Instead, we can use a\ntrusted library like BCrypt to help keep our users' passwords safe.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat setup steps do you need to complete to use BCrypt in your Rails app?\u003c/li\u003e\n\u003cli\u003eWhat two things does BCrypt do to secure passwords?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/MurmurHash\"\u003eWikipedia — Murmur Hash\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Rainbow_table\"\u003eWikipedia — Rainbow Table\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.usenix.org/legacy/event/usenix99/provos/provos.pdf\"\u003eBCrypt USENIX paper\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://api.rubyonrails.org/classes/ActiveModel/SecurePassword/ClassMethods.html\"\u003eRails documentation — \u003ccode\u003ehas_secure_password\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-client-server-get-requests","title":"Video: Client-Server GET Requests","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-client-server-get-requests\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-client-server-get-requests\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-client-server-get-requests/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/606748418/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","frontPage":false},{"exportId":"video-rails-routes","title":"Video: Rails Routes","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-rails-routes\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-routes\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-routes/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/602233812/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html\"\u003eRails Routing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"tree-data-structure","title":"Tree Data Structure","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-tree\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-tree\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-tree/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eBecome familiar with three types of tree data structures: \u003cstrong\u003eTree\u003c/strong\u003e,\n\u003cstrong\u003eBinary Tree\u003c/strong\u003e and \u003cstrong\u003eBinary Search Tree\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eIdentify common use cases for Trees\u003c/li\u003e\n\u003cli\u003eIdentify common methods for Trees\u003c/li\u003e\n\u003cli\u003eConsider some of the efficiency issues of using Trees\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eThe next data structure we'll be learning about is the \u003cstrong\u003etree\u003c/strong\u003e. A tree has some\nsimilarities to a linked list: both consist of nodes, each of which has a value\nand a reference to other nodes. Unlike a linked list, however, which only points\nto a single \"next\" node, nodes in trees can point to multiple child nodes. For\nthis reason, a tree can be used to represent more complex data relationships\nthan can be expressed using a linked list or other linear data structure.\u003c/p\u003e\n\n\u003ch2\u003eTrees, Binary Trees, and Binary Search Trees\u003c/h2\u003e\n\n\u003cp\u003eIn the context of computing and data structures (as in the real world), there\nare lots of different \u003ca href=\"https://en.wikipedia.org/wiki/List_of_data_structures#Trees\"\u003etypes of trees\u003c/a\u003e. In this lesson, we'll\nfirst learn about the most general type of tree, and then look at a couple of\nspecial cases that place certain constraints on how the tree is structured.\u003c/p\u003e\n\n\u003ch3\u003eTree\u003c/h3\u003e\n\n\u003cp\u003eA \u003cstrong\u003etree\u003c/strong\u003e is a data structure that consists of a \u003cstrong\u003enode\u003c/strong\u003e (called the \u003cstrong\u003eroot\u003c/strong\u003e\nnode) that can have zero or more \u003cstrong\u003echild\u003c/strong\u003e nodes. Each child node can, in turn,\nhave zero or more children of its own:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/tree.png\" alt=\"tree\"\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen we represent a tree in code, each of its nodes will have two attributes: a\nvalue or data of some sort and an array containing a list of references to its\nchild nodes. Although the diagrams in this lesson show nodes with values that\nare integers, the value of a node can be of any data type.\u003c/p\u003e\n\n\u003cp\u003eSay we have the following very simple tree that we need to represent in code:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/simple-tree.png\" alt=\"simple tree\"\u003e\u003c/p\u003e\n\n\u003cp\u003eEach node in our tree would be a hash containing key/value pairs for the two\nattributes:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003echild_one\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003echild_two\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e39\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eroot_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\n    \u003cspan class=\"n\"\u003echild_one\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"n\"\u003echild_two\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEach element in a node's \u003ccode\u003echildren\u003c/code\u003e array is itself a node:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eroot_node\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; { value: 20, children: [ { value: 45, children: [] }, ... ] }\u003c/span\u003e\n\u003cspan class=\"n\"\u003eroot_node\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:children\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; { value: 50, children: [] }\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf we were to add a child node to \u003ccode\u003echild_one\u003c/code\u003e, with a value of 45:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/simple-tree-with-child.png\" alt=\"simple tree with new child\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe updated code would look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003echild_three\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e45\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003echild_one\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003echild_three\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003echild_two\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e39\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eroot_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\n    \u003cspan class=\"n\"\u003echild_one\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"n\"\u003echild_two\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eBinary Tree\u003c/h3\u003e\n\n\u003cp\u003eA \u003cstrong\u003ebinary tree\u003c/strong\u003e is a special kind of tree in which each node has at most two\nchild nodes, referred to as the \u003cstrong\u003eleft\u003c/strong\u003e child and \u003cstrong\u003eright\u003c/strong\u003e child.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/binary-tree.png\" alt=\"binary tree\"\u003e\u003c/p\u003e\n\n\u003cp\u003eEach node in a binary tree has three attributes: a \u003ccode\u003evalue\u003c/code\u003e, and references to\nits \u003ccode\u003eleft_child\u003c/code\u003e and \u003ccode\u003eright_child\u003c/code\u003e. If a node doesn't have either or both of\nthese child nodes, the attributes will be set to \u003ccode\u003enil\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWe can revisit the simple example we used above because that tree also meets the\ndefinition of a binary tree:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/binary-tree-simple.png\" alt=\"simple tree with new child\"\u003e\u003c/p\u003e\n\n\u003cp\u003eTo represent that same structure as a binary tree, the code would look like\nthis:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003echild_three\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e45\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eleft_child: \u003c/span\u003e\u003cspan class=\"kp\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eright_child: \u003c/span\u003e\u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003echild_one\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eleft_child: \u003c/span\u003e\u003cspan class=\"n\"\u003echild_three\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eright_child: \u003c/span\u003e\u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003echild_two\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e39\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eleft_child: \u003c/span\u003e\u003cspan class=\"kp\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eright_child: \u003c/span\u003e\u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eroot_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eleft_child: \u003c/span\u003e\u003cspan class=\"n\"\u003echild_one\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eright_child: \u003c/span\u003e\u003cspan class=\"n\"\u003echild_two\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eBinary Search Tree\u003c/h3\u003e\n\n\u003cp\u003eA \u003cstrong\u003ebinary search tree (BST)\u003c/strong\u003e is a special kind of a binary tree in which the\nvalue of a node's left child (if it has one) must be less than the value of the\nnode itself, and the value of its right child (if it has one) must be greater\nthan the value of the node itself:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/binary-search-tree.png\" alt=\"binary search tree\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIf you look at the nodes in the diagram above, you will see that they all meet\nthe constraints: each left child's value is less its parent's value, and each\nright child's value is greater than its parent's value. However, while this is\n\u003cstrong\u003enecessary\u003c/strong\u003e to make the tree a valid binary search tree, it is not\n\u003cstrong\u003esufficient\u003c/strong\u003e. We must also verify that \u003cstrong\u003eall\u003c/strong\u003e the \"left descendants\" of a\nnode are less than the parent node. You can see this in the highlighted portion\nof this diagram:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/bst-left-side-highlighted.png\" alt=\"bst left side highlighted\"\u003e\u003c/p\u003e\n\n\u003cp\u003eNotice that all the values in the left half of the diagram are less than 50, the\nvalue of the root node. And, if you take a look at the right half of the\ndiagram, you'll see that all those values are greater than 50.\u003c/p\u003e\n\n\u003cp\u003eBut we still aren't done — we need to do the same check for \u003cem\u003e\u003cstrong\u003eall\u003c/strong\u003e\u003c/em\u003e the\nsubtrees.\u003c/p\u003e\n\n\u003cp\u003eLet's take a look at another example:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/invalid-bst.png\" alt=\"invalid bst\"\u003e\u003c/p\u003e\n\n\u003cp\u003eFirst, we'll look at each individual node and its children — so far so good.\nEach left child is less than its parent and each right child is greater than its\nparent. So now let's look at the left side overall:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/invalid-bst-left-side-highlighted.png\" alt=\"invalid bst left side highlighted\"\u003e\u003c/p\u003e\n\n\u003cp\u003eStill good: all the values in the left half of the tree are less than the root\nnode's value. But now, what if we repeat the process for the \u003cstrong\u003esubtree\u003c/strong\u003e with\nthe root node that has a value of 77:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/invalid-bst-left-subtree.png\" alt=\"invalid bst left subtree\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe values of both \"left descendants\" are less than 77, but \u003cstrong\u003enot\u003c/strong\u003e all the\n\"right descendants\" are greater than 77. If you take another look at the full\ntree, you'll see a similar issue on the right side:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/invalid-bst-errors-highlighted.png\" alt=\"invalid bst with errors highlighted\"\u003e\u003c/p\u003e\n\n\u003cp\u003eSo what benefit is there to constructing a tree with these rigid constraints? If\nyou think about it from the point of view of searching, it makes sense. Say we\nwere searching the tree for the value 62. We would start at the root and compare\nits value to 62. 62 is less than 110, so we would then proceed to the left child\nand repeat the comparison. 62 is less than 77 so we would continue down the left\nside and compare 62 to 52. 62 is greater than 52, but the 52 node doesn't have a\nright child so we would conclude (incorrectly) that the value we want isn't in\nthe tree.\u003c/p\u003e\n\n\u003cp\u003eThis is, in fact, the whole point of binary search trees. Let's take another\nlook at our earlier, valid, example:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/binary-search-tree.png\" alt=\"binary search tree\"\u003e\u003c/p\u003e\n\n\u003cp\u003eSay we wanted to search this tree for the value 25. The process would take four\nsteps:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e50 -\u0026gt; 12 -\u0026gt; 24 -\u0026gt; 25\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf you think through the process for another value or two, you should be able to\nconvince yourself that, with a tree of this \u003cstrong\u003eheight\u003c/strong\u003e (or number of levels),\nfour is the maximum number of steps it would take to either find the value or\ndetermine that it isn't present.\u003c/p\u003e\n\n\u003cp\u003eIf, on the other hand, we were searching an unordered tree, our only option\nwould be to systematically \u003cstrong\u003etraverse\u003c/strong\u003e every node in the tree in turn until we\neither found the value or finished searching the entire tree (we'll talk about\ntree traversal in the next lesson). For this example, in the worst case, it\nwould take 12 steps (the number of nodes in our example tree).\u003c/p\u003e\n\n\u003ch2\u003eExample Uses of Trees\u003c/h2\u003e\n\n\u003cp\u003eTrees give us a way to represent multidimensional data. Unlike a linear\nstructure like an array or linked list, trees can be used to model more complex\nrelationships among elements. Some examples of real-world uses of trees include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe \u003ca href=\"https://en.wikipedia.org/wiki/Document_Object_Model\"\u003eDOM\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eComputer File Systems, which are organized by folders and subfolders\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Decision_tree\"\u003eDecision trees\u003c/a\u003e, sometimes used in Artificial intelligence\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eImplementing a Tree\u003c/h2\u003e\n\n\u003cp\u003eThe implementation of a \u003ccode\u003eTree\u003c/code\u003e class is very similar to what we did for the\n\u003ccode\u003eLinkedList\u003c/code\u003e. It includes two classes: one for the tree itself and one for the\nnodes. The \u003ccode\u003eTree\u003c/code\u003e class will have a single attribute, \u003ccode\u003eroot\u003c/code\u003e, and, for a\nnon-binary tree, the \u003ccode\u003eNode\u003c/code\u003e class will have two attributes: a \u003ccode\u003evalue\u003c/code\u003e and a\n\u003ccode\u003echildren\u003c/code\u003e array:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTree\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@root\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eNode\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@value\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@children\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe implementation for a \u003ccode\u003eBinaryTree\u003c/code\u003e or \u003ccode\u003eBinarySearchTree\u003c/code\u003e class would be\nalmost the same, except rather than a \u003ccode\u003echildren\u003c/code\u003e array, the \u003ccode\u003eNode\u003c/code\u003e class would\ninclude \u003ccode\u003eleft_child\u003c/code\u003e and \u003ccode\u003eright_child\u003c/code\u003e attributes:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBinaryTree\u003c/span\u003e \u003cspan class=\"c1\"\u003e# or BinarySearchTree\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@root\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eNode\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@value\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@left_child\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@right_child\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eCommon Methods\u003c/h2\u003e\n\n\u003cp\u003eThe methods included in an implementation of a tree structure — and how they\nare implemented — will vary depending on the type of tree being used and what\nit's being used for. However, at a minimum, a typical implementation will likely\ninclude methods for inserting and removing nodes, and for searching or\ntraversing the tree.\u003c/p\u003e\n\n\u003cp\u003eAs an example, let's consider an \u003ccode\u003eadd\u003c/code\u003e method to add a new node. If we are using\na simple tree to represent something like a file structure, our goal would\npresumably be to add a new child to a particular node, so we would need a way to\nreference or find that node and add the new node to its \u003ccode\u003echildren\u003c/code\u003e array. In\nthis case, it may make sense to create the \u003ccode\u003eadd\u003c/code\u003e method in the \u003ccode\u003eNode\u003c/code\u003e class. The\nmethod would be called on the node we want to append the new node to, and the\nnew node would be passed in to the method as an argument. (Alternatively, just\nthe value could be passed in and the new node created inside the method.)\u003c/p\u003e\n\n\u003cp\u003eIf, on the other hand, we're adding a new element to a binary search tree, we\nwould need to define a very specific algorithm to traverse the tree and insert\nthe new node at the correct location. In this case, the \u003ccode\u003eadd\u003c/code\u003e method would need\nto be in the \u003ccode\u003eBinarySearchTree\u003c/code\u003e class.\u003c/p\u003e\n\n\u003ch2\u003eBig O\u003c/h2\u003e\n\n\u003cp\u003eSince the methods in a tree implementation will vary depending on what type of\ntree it is and how it's being used, the Big O of those methods will vary as\nwell.\u003c/p\u003e\n\n\u003cp\u003eUsing the \u003ccode\u003eadd\u003c/code\u003e example from above, the efficiency in the first case — where\nwe're adding a new node to a particular parent node — would be O(1).\u003c/p\u003e\n\n\u003cp\u003eIn the second case where we're adding an element into a binary search tree, we\nwill need to do some traversal. However, as we discussed above, the maximum\nnumber of steps this took was less than the number of nodes contained in the\ntree. As it turns out, for search algorithms where you're able to cut the\nproblem in half at each step, the number of steps is approximately equal to\nlog₂n. In Big O notation, this is expressed as O(log n).\u003c/p\u003e\n\n\u003cp\u003eIf you take a look at how O(log n) looks compared to other common runtimes, we\ncan see that it's great! Not quite as good as constant time, but much better\nthan linear O(n) or quadratic O(n²) time:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/data-structures-and-algorithms/Big-O-graph.png\" alt=\"Big O Graph\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eMathematical aside\u003c/strong\u003e: don't worry too much about the math here. Basically, the\nlog base 2 of a number is the number of times you can divide that number by 2\nuntil you get to 1 or less. For example, log₂16 = 4:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/log-base-2.png\" alt=\"log base 2\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThis process of repeatedly dividing by 2 may remind you of how we described the\nbinary search process — that's where the name came from!\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003eHowever\u003c/strong\u003e\u003c/em\u003e, there is a big caveat here — the O(log n) is \u003cstrong\u003enot\u003c/strong\u003e guaranteed.\nLet's take a look at an example:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/unbalanced-bst.png\" alt=\"Unbalanced bst\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThis is a \u003cstrong\u003evalid\u003c/strong\u003e binary search tree! All of the \u003ccode\u003eright_child\u003c/code\u003e nodes have\nvalues greater than the value of their parent; there is no requirement that\nnodes have both a \u003ccode\u003eright_child\u003c/code\u003e and a \u003ccode\u003eleft_child\u003c/code\u003e. But if you think about\nsearching this binary search tree for the value 101, you should see that it\nwould take n steps, \u003cstrong\u003enot\u003c/strong\u003e log n. (Not surprising given that, for all practical\npurposes, this binary search tree is really a linked list!) In order to get the\nfull benefit of using a binary search tree, it needs to be \u003cstrong\u003ebalanced\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eA tree is considered to be balanced if its right subtree and left subtree have\nthe same \u003cstrong\u003eheight\u003c/strong\u003e (number of levels), or they only differ by 1. The more a\nbinary search tree departs from being balanced (with the example above being the\nmost extreme case), the less efficient it will be. The benefits of using a\nbinary search tree, therefore, need to be balanced against the maintenance\ncosts: regularly checking whether the binary search tree is balanced and\nrebalancing when it isn't.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWhew! We've covered a lot of information in this lesson about what trees are,\nhow they are constructed, and how they can be used. In the next lesson, we'll\nlearn about different methods of tree \u003cstrong\u003etraversal\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Tree_structure\"\u003eTree Structure\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Tree_(data_structure)\"\u003eTree (Data Structure)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Binary_search_tree\"\u003eBinary Search Tree\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-mvc","title":"Video: MVC","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-mvc\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-mvc\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-mvc/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/600386049/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/getting_started.html#mvc-and-you\"\u003eRails MVC\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller\"\u003eModel-View-Controller\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-index","title":"Video: Index","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-index\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-index\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-index/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/604148195/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://www.railsstatuscodes.com/\"\u003eRails Status Codes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://restfulapi.net/http-status-codes/\"\u003eREST Status Code Guide\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/v5.1/layouts_and_rendering.html#using-render\"\u003eRails Guides: Using \u003ccode\u003erender\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-client-server-delete-requests","title":"Video: Client-Server DELETE Requests","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-client-server-delete-requests\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-client-server-delete-requests\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-client-server-delete-requests/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/606934036/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","frontPage":false},{"exportId":"video-custom-rendering","title":"Video: Custom Rendering","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-custom-rendering\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-custom-rendering\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-custom-rendering/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/605875026/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","frontPage":false},{"exportId":"video-rails-relationships","title":"Video: Rails Relationships","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-rails-relationships\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-relationships\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-relationships/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/606853272/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/association_basics.html\"\u003eActive Record Associations\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"react-component-state-vs-redux-store-state","title":"React Component State vs Redux Store State","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-component-state-vs-store-state\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-component-state-vs-store-state\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-component-state-vs-store-state/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain interactions between different parts of a React application\u003c/li\u003e\n\u003cli\u003eDiscuss trade-offs and benefits of one-way data flow\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we're going to revisit some of the concepts we have explored so\nfar. Our focus will be on how components interact with each other and how global\napplication state can be managed in a predictable, scalable way using actions,\nstores and event handlers.\u003c/p\u003e\n\n\u003ch2\u003eComponent State vs Store State\u003c/h2\u003e\n\n\u003cp\u003eWhile our previous lessons extensively focused on moving state \u003cstrong\u003eout\u003c/strong\u003e of\nindividual components, we don't always have to. In fact, sometimes it might even\nintroduce more complexity than needed. Using \u003ccode\u003euseState()\u003c/code\u003e and \"local\"\ncomponent-level state is a perfectly fine choice in most cases.\u003c/p\u003e\n\n\u003cp\u003eIn general, we should not start out by putting all our state into some form of\nglobal store (or multiple stores).\u003c/p\u003e\n\n\u003cp\u003eWhen architecting a user interface, try to use local state and parent props\n\u003cstrong\u003efirst\u003c/strong\u003e. If we end up constantly passing down tons of props, we should\nconsider connecting the component in question with a Redux store.\u003c/p\u003e\n\n\u003cp\u003eE.g. let's say we want to render some form of carousel, something like\n\u003ca href=\"https://getbootstrap.com/docs/4.0/components/carousel/\"\u003eBootstrap's Carousel component\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eA carousel is a perfect example on where using a store to extract out component\nstate doesn't necessarily make things easier (or would simply be a massive\noverkill).\u003c/p\u003e\n\n\u003cp\u003eWriting the essential handler functions for the component in question using\n\"classical\" React-style without \u003cstrong\u003eany\u003c/strong\u003e \"outside\" state is trivial:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eCarousel\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// We start out rendering the first slide. 0 denotes the index of the\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// active item.\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ecurrentSlide\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esetCurrentSlide\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n  \u003cspan class=\"cm\"\u003e/**\n   * Handler function that transitions to the next slide in the carousel.\n   * This is the function that will be run once the user clicks the \"next\"\n   * button.\n   */\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003egoNext\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003esetCurrentSlide\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eprevSlide\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eprevSlide\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"cm\"\u003e/**\n   * Equivalent to `goNext`. Handler function that will be invoked when clicking\n   * the \"back\" button.\n   */\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003egoBack\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003esetCurrentSlide\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eprevSlide\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eprevSlide\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// JSX goes here\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn this case, using the local state of the component has a couple of advantages\nover using an external store:\u003c/p\u003e\n\n\u003ch3\u003e1. State Is Bound to the Component\u003c/h3\u003e\n\n\u003cp\u003eWhen rendering a very long list of carousels, keeping the state stored in the\nstore in sync with the \u003cem\u003eactual\u003c/em\u003e list of rendered components is hard. Let's say\nwe render one carousel for each photo \"collection\" — which could for example be\nrepresented by an array for image sources —\u0026nbsp;keeping the array length in sync\nwith whatever data structure we would use in the store for representing the\nselected slide index is unnecessarily complex. For example, when adding a photo\ncollection, we would need to add the \u003ccode\u003ecurrentSlide\u003c/code\u003e property to the store as\nwell.\u003c/p\u003e\n\n\u003cp\u003eSimply distinguishing between \"component UI\" state and global application state\nradically simplified the architecture in the above case, since component state\ncan by definition not exist without a matching component (and vice versa).\u003c/p\u003e\n\n\u003ch3\u003e2. Simplified Testing\u003c/h3\u003e\n\n\u003cp\u003eTesting React components is extremely easy compared to other frameworks, such as\nAngular. Testing packages like \u003ca href=\"https://airbnb.io/enzyme/\"\u003eEnzyme\u003c/a\u003e from Airbnb allow us to mount\nindividual components in a test, pass them props, cause state changes, check\nwhat JSX is rendered, etc...\u003c/p\u003e\n\n\u003cp\u003eUsing stores doesn't necessarily break this abstraction, but it makes it much\nharder to properly test all the possible states that a component can be in,\nsince a store might contain state that isn't directly consumed by the component\nto be tested.\u003c/p\u003e\n\n\u003cp\u003eBut more importantly, we now need to manage a store during testing. We can use\nthe same packages and functions like \u003ccode\u003ecreateStore()\u003c/code\u003e we use to set up Redux with\nReact, but the tests become more complicated and sometimes less flexible as a\nresult.\u003c/p\u003e\n\n\u003cp\u003eWe can also mock it out — some node packages allow us to create a fake store for\nthe tests. Overall, though, because Redux changes the way data is maintained,\ntests need to change accordingly, becoming more complicated.\u003c/p\u003e\n\n\u003ch3\u003e3. Component Reuse\u003c/h3\u003e\n\n\u003cp\u003eWhile we focused on implementing our own set of stores, some people prefer to\nuse Redux, Rx, MobX or some other library for managing state and implementing\nunidirectional data flow.\u003c/p\u003e\n\n\u003cp\u003eBy storing state in an external store, we implicitly couple the component to\nwhatever architecture we chose for our main application. If we're implementing\nan accordion component using \u003ca href=\"https://facebook.github.io/flux/\"\u003eFlux\u003c/a\u003e (the data flow pattern Redux is based on),\nit means everyone using our component will have to use Flux in order to interact\nwith it (even though it might be hidden through the public API of the\ncomponent).\u003c/p\u003e\n\n\u003cp\u003eHence using component state (and props) instead of stores is the preferred way\nwhen creating reusable components.\u003c/p\u003e\n\n\u003ch2\u003eYou Might Not Need Redux\u003c/h2\u003e\n\n\u003cp\u003eSince the release of React hooks, the React Context API and the \u003ca href=\"https://reactjs.org/docs/hooks-reference.html#usecontext\"\u003e\u003ccode\u003euseContext\u003c/code\u003e\nhook\u003c/a\u003e has emerged as a popular way to manage global state. Some\nlibraries we've worked with already, such as \u003ccode\u003ereact-router\u003c/code\u003e and \u003ccode\u003ereact-redux\u003c/code\u003e,\nactually use the Context API under the hood — that's how we're able to access\nour Redux store state, or information about the browser history, from \u003cem\u003eany\u003c/em\u003e\ncomponent in our component hierarchy without prop drilling.\u003c/p\u003e\n\n\u003cp\u003eBefore adding Redux to an application, make sure to think about whether or not\nyour app would benefit from Redux. Check out \u003ca href=\"https://redux.js.org/faq/general#when-should-i-use-redux\"\u003ethis article from the Redux\ndocs\u003c/a\u003e along with the linked articles and discussion\nfor some help deciding if your app would benefit from Redux!\u003c/p\u003e\n\n\u003cp\u003eThat said, Redux is very much still \u003ca href=\"https://blog.isquaredsoftware.com/2018/03/redux-not-dead-yet/\"\u003ealive and well\u003c/a\u003e and\nyou are definitely encouraged to try it out in a project so you can learn, and\nadd Redux to your toolkit!\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://kentcdodds.com/blog/application-state-management-with-react\"\u003eApplication State Management with React\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/faq/general#when-should-i-use-redux\"\u003eWhen should I use Redux?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://blog.isquaredsoftware.com/2018/03/redux-not-dead-yet/\"\u003eRedux is Not Dead Yet\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://reactjs.org/docs/hooks-reference.html#usecontext\"\u003euseContext\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"introduction-to-data-structures","title":"Introduction to Data Structures","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-intro-to-data-structures\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-intro-to-data-structures\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-intro-to-data-structures/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand what you will learn in this section\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, we'll return to a topic that will help you greatly as you\nprepare for the job hunt and get ready for technical interviews: data\nstructures! Understanding \u003cstrong\u003ewhen to use different data structures\u003c/strong\u003e as well as\n\u003cstrong\u003ehow to implement them\u003c/strong\u003e will equip you with more tools to solve common\nalgorithm problems more efficiently, and will also improve your skills at\nwriting Object Oriented code.\u003c/p\u003e\n\n\u003cp\u003eThe objectives for this section are to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eEvaluate the tradeoffs between choosing one data structure over another\u003c/li\u003e\n\u003cli\u003eImplement common data structures\u003c/li\u003e\n\u003cli\u003eIdentify the Big O of common data structure methods\u003c/li\u003e\n\u003cli\u003eApply common data structures to algorithm problems\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIn the coming lessons, we'll cover these objectives by introducing several\ncommon data structures, showing how to implement them in Ruby, and giving you\npractice with problems that can be solved using these data structures so you can\nrecognize common patterns to identify when a particular data structure is\nappropriate.\u003c/p\u003e\n\n\u003cp\u003eLet's dive in!\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://visualgo.net/en\"\u003eVisuAlgo\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eVisualize algorithms with animations!\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.cs.usfca.edu/%7Egalles/visualization/Algorithms.html\"\u003eData Structure Visualizations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://leetcode.com/explore/learn/\"\u003eLeetCode Learn\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eStudy guides for common data structures\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"model-view-controller-mvc","title":"Model-View-Controller (MVC)","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-model-view-controller-readme\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-model-view-controller-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-model-view-controller-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the benefit of the model-view-controller pattern\u003c/li\u003e\n\u003cli\u003eKnow what each layer of MVC is responsible for\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eModel-View-Controller Overview\u003c/h2\u003e\n\n\u003cp\u003eIn order to ensure that applications have a specific organizational structure,\nthe creators of Rails utilized the model-view-controller architecture. This\nconcept can be a little abstract if you've never used it before, so let's give\nit a real world analogy.\u003c/p\u003e\n\n\u003cp\u003eIn a restaurant kitchen we have three key components:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eA chef who makes the food\u003c/li\u003e\n\u003cli\u003eA waiter who takes the food from the chef and brings it to the table\u003c/li\u003e\n\u003cli\u003eA table where the food is served to the customer\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eUsing this as an analogy, we can assign the following roles to each of our\nrestaurant components:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eModel\u003c/strong\u003e: The model is the \u003cem\u003echef\u003c/em\u003e. It manages the critical aspects of the\napplication, such as communicating with the database via Active Record. One of\nour favorite tasks in a Rails application is working with the model files. This\nis where you can be very expressive with the custom algorithms that you want\nto utilize and you also have direct access to the specific database record.\nThe logic of your application should mainly reside in the model files.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eController\u003c/strong\u003e: The controller is the \u003cem\u003ewaiter\u003c/em\u003e. In the same way that the\nwaiter takes the order from the customer to the chef and then brings the food\nto the table, the controller transmits data requests from the user to the\nmodel, and then delivers data that is rendered in the view to the user.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eView\u003c/strong\u003e: The view is the \u003cem\u003etable\u003c/em\u003e. A table shouldn't do anything besides sit\nthere and hold the food when it is delivered. In like manner the views should\nnot contain any programming logic, they should simply render what the\ncontroller sends them. In a Rails API application, our view layer will consist\nof the JSON data that is returned from our controllers.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eRouting, File Naming Conventions, and Data Flow\u003c/h2\u003e\n\n\u003cp\u003eRails was created with the concept of convention over configuration, and this\nholds true for how the MVC structure was set up. View files correspond directly\nto controller files, which speak directly with models. As an example, imagine\nyou have a blog that has a database table called \u003ccode\u003earticles\u003c/code\u003e. You will have the\nfollowing set of files:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eAn \u003ccode\u003eapp/models/article.rb\u003c/code\u003e model file that will contain: validations, database\nrelationships, callbacks, and any custom logic for articles.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eAn \u003ccode\u003eapp/controllers/articles_controller.rb\u003c/code\u003e file that will have methods to manage\ndata flow for the article behavior, including the full set of CRUD features.\nThe standard methods are: \u003ccode\u003eindex\u003c/code\u003e, \u003ccode\u003ecreate\u003c/code\u003e, \u003ccode\u003eshow\u003c/code\u003e, \u003ccode\u003eupdate\u003c/code\u003e, and \u003ccode\u003edestroy\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eAn \u003ccode\u003eapp/views/articles\u003c/code\u003e directory that will contain a corresponding view for\neach of the pages that the end user will access. \u003cstrong\u003eNote\u003c/strong\u003e: in a Rails API\napplication, we won't have a dedicated folder for our views like we would in a\ntypical Rails MVC application.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIn order to benefit from all the work Rails does for us — and to avoid breaking\nour app — we need to follow the indicated file structure and naming conventions.\u003c/p\u003e\n\n\u003ch2\u003eRequest Flow\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"https://s3.amazonaws.com/flatiron-bucket/readme-lessons/mvc_flow_updated.png\" alt=\"MVC Request Flow\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eRoles and Responsibilities\u003c/h2\u003e\n\n\u003cp\u003eOne reason that MVC architecture is so popular is because it enforces the idea\nof \u003cstrong\u003eseparation of concerns\u003c/strong\u003e in an application. Each layer has a clearly\ndefined role.\u003c/p\u003e\n\n\u003ch3\u003eModels\u003c/h3\u003e\n\n\u003cp\u003eAt the end of the day, the model file is a Ruby class. If it has a corresponding\ndatabase table, it will inherit from the \u003ccode\u003eActiveRecord::Base\u003c/code\u003e class, which means\nthat it can access a number of methods that assist in working with the database.\nHowever, you can treat it like a regular Ruby class, allowing you to create\nmethods, data attributes, and everything else that you would want to do in a\nclass file.\u003c/p\u003e\n\n\u003cp\u003eIn a typical model file you will find your application's domain logic. To extend\nthe restaurant analogy, the chef (your \u003cstrong\u003emodel\u003c/strong\u003e) performs a number of tasks to\ncreate each meal that the waiter (\u003cstrong\u003econtroller\u003c/strong\u003e) and especially the table\n(\u003cstrong\u003eviews\u003c/strong\u003e) don't know anything about. Some of this domain logic would include\nitems such as complex database queries, data relationships, and custom\nalgorithms.\u003c/p\u003e\n\n\u003cp\u003eIt is important to remember to follow the \u003cstrong\u003esingle responsibility principle\u003c/strong\u003e for\nyour model class files. If any of the methods that you place in the model file\nperform tasks outside the scope of that specific model, they should probably be\nmoved to their own class.\u003c/p\u003e\n\n\u003ch3\u003eControllers\u003c/h3\u003e\n\n\u003cp\u003eAs mentioned before, the controller is like the waiter in a restaurant. The\ncontrollers connect the models, views, and routes.\u003c/p\u003e\n\n\u003cp\u003eIn order for the controller to be able to connect everything together, each\nroute defined in the routes file must have a corresponding method in a\ncontroller. When a request comes in, Rails uses the routes file to determine\nwhich controller method to run. The controller method then accesses data using\nthe model, and uses that data to render the correct view (whether that's an\nactual \u003ccode\u003e.erb\u003c/code\u003e file, or some JSON data).\u003c/p\u003e\n\n\u003cp\u003eRemembering our restaurant analogy, the easiest way to think of the controller\nis that it manages data flow between the routes, model, and views, in the same\nway that a waiter takes the order from a patron, relays the order details to the\nchef, and brings the meal out to the table.\u003c/p\u003e\n\n\u003ch3\u003eViews\u003c/h3\u003e\n\n\u003cp\u003eIn a Rails application, the view layer should contain the least amount of logic\nof any layer in the model-view-controller architecture. The role of the view is\nto simply render whatever it is sent from the controller.\u003c/p\u003e\n\n\u003cp\u003eThe kind of data our view layer is responsible for depends on what kind of\nresponse our clients need. In a full-stack Rails app, that could mean generating\nHTML as a view by using a \u003ccode\u003e.erb\u003c/code\u003e template:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight erb\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e\u0026lt;div\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"cp\"\u003e\u0026lt;%=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"vi\"\u003e@post\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etitle\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e: \u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"vi\"\u003e@post\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esummary\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e \u003cspan class=\"cp\"\u003e%\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFor a Rails API, we'll typically be responding with JSON data.\u003c/p\u003e\n\n\u003cp\u003eThe data for our view layer will typically come from our models:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eArticlesController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# access data from the Model\u003c/span\u003e\n    \u003cspan class=\"n\"\u003earticles\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eArticle\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# respond with a View\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003earticles\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLater on, we'll also see how to customize the structure of this JSON data even\nfurther using a \u003cstrong\u003eserializer\u003c/strong\u003e. For now though, just think of the view as the\nresponse that's being returned from the controller.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eIn the MVC architecture, what is the primary responsibility of each of the\nthree layers?\u003c/li\u003e\n\u003cli\u003eIn the MVC architecture, which layer should contain the most logic? Which\nshould contain the least?\u003c/li\u003e\n\u003cli\u003eWhat are some benefits of using Rails and the MVC architecture?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/getting_started.html\"\u003eGetting Started with Rails\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"creating-a-rails-app","title":"Creating a Rails App","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-creating-a-rails-app-readme\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-creating-a-rails-app-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-creating-a-rails-app-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a new Rails application from scratch\u003c/li\u003e\n\u003cli\u003eNavigate the file structure of a Rails app\u003c/li\u003e\n\u003cli\u003eShow how Rails handles requests\u003c/li\u003e\n\u003cli\u003eShow how to send JSON or HTML as a response\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eVideo Walkthrough\u003c/h2\u003e\n\n\u003cp\u003eThis video will cover the same content as in the readme below, so it's recommended\nthat you watch the video and then review the readme for additional clarity on any\nparts of the video that were unclear.\u003c/p\u003e\n\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/gZoxTXnLXLg?rel=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eCreating Your First Rails Project\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eBefore you continue\u003c/strong\u003e, this assumes that you have Ruby, RubyGems, and Bundler\ninstalled on your system.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eTo get started with Rails, we'll need to first make sure the gem is installed on\nyour computer. This command will install Rails globally, so you only have to run\nthis once, and you'll be able to use Rails from the terminal. To install the\nlatest version of Rails, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egem \u003cspan class=\"nb\"\u003einstall \u003c/span\u003erails\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOnce the gem is installed you can create Rails applications!\u003c/p\u003e\n\n\u003ch2\u003eGenerating a New Rails Application\u003c/h2\u003e\n\n\u003cp\u003eOur application is going to be called CheeseShop. To create the application, run\nthe following command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails new cheese-shop \u003cspan class=\"nt\"\u003e--skip-javascript\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen you run this command, a lot of things will start happening:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRails will generate a new directory with all the code required to build your\napplication\u003c/li\u003e\n\u003cli\u003eIt will then run \u003ccode\u003ebundle install\u003c/code\u003e to download all the required gems\u003c/li\u003e\n\u003cli\u003eIt will also initialize \u003ccode\u003egit\u003c/code\u003e in the newly created directory\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe \u003ccode\u003e--skip-javascript\u003c/code\u003e flag tells Rails that we won't be using JavaScript for\nthis project. Since our JavaScript code will be written in a separate project\nfrom our Rails code, we don't need any JavaScript dependencies for this app.\nUsing this flag makes the installation significantly faster.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThere are a number of common naming conventions for Rails app names. Typically\nyou will want to use all lowercase letters, separated by '-', as shown in our\n\u003ccode\u003echeese-shop\u003c/code\u003e naming structure. In the same way that there are rules for naming\nmethods, variables, classes, etc. in Ruby, there are naming rules for\napplication names. Since the application name is used as the app constant\nthroughout the application, the best approach is to keep your naming simple and\nto follow a standard naming practice.\u003c/p\u003e\n\n\u003ch2\u003eRails File Structure Overview\u003c/h2\u003e\n\n\u003cp\u003eBe sure to change into your new Rails app directory, and open the project in your\ntext editor:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003ecd \u003c/span\u003echeese-shop\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ecode \u003cspan class=\"nb\"\u003e.\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSince you will be working with this file structure on a daily basis, it is very\nimportant to understand and become familiar with the file system. Below is a\nbreakdown for each directory:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eapp\u003c/strong\u003e: contains the Models, Views, and Controllers, along with the rest\nof the core functionality of the application. The majority of\nyour time will be spent working in this directory.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ebin\u003c/strong\u003e: some built-in Rails tasks that you most likely will never have to\nwork with.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003econfig\u003c/strong\u003e: the config directory manages a number of settings that control the\ndefault behavior, including: the environment settings, a set of modules that\nare initialized when the application starts, the ability to set language\nvalues, the application settings, the database settings, the application\nroutes, and lastly the secret key base. You will primarily use the config\ndirectory when you are setting up your application's routes in the\n\u003ccode\u003econfig/routes.rb\u003c/code\u003e file (more on this shortly).\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003edb\u003c/strong\u003e: within the db directory you will find the database schema file that\nlists the database tables, their columns, and each column's associated data\ntype. The schema file can be found at \u003ccode\u003edb/schema.rb\u003c/code\u003e. The db directory also\ncontains the \u003ccode\u003eseeds.rb\u003c/code\u003e file, which lets you create some data that can be\nutilized in the application. This is a great way to quickly integrate data in\nthe application without having to manually add records through a web form\nelement. You will primarily use the db directory when you set up the migration\nfiles that will create your database tables; you may also use it to create\nseed data.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003elib\u003c/strong\u003e: while many developers could build full applications without ever\nentering the lib directory, you will discover that it can be incredibly\nhelpful. The lib/tasks directory is where custom rake tasks are created. You\nhave already used a built-in rake task when you ran the database creation and\nmigration tasks; however, creating custom rake tasks can be very helpful and\nsometimes necessary. For example, you could create a custom rake task that\nruns in the background, making calls to an external API and syncing the\nreturned data into the application’s database.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003elog\u003c/strong\u003e: within the log directory you will discover the application logs.\nThis can be helpful for debugging purposes, but for a production application\nit's often better to use an outside service since they can offer more advanced\nservices like querying and alerts.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003epublic\u003c/strong\u003e: this directory contains some of the custom error pages, such as\n404 errors, along with the robots.txt file which allows you to control how\nsearch engines index the application on the web.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003etest\u003c/strong\u003e: by default Rails will install the test suite in this directory.\nThis is where all of your specs, factories, test helpers, and test configuration\nfiles can be found. \u003cem\u003eSide note: Our labs use RSpec, which means this directory\nwill actually be called \u003ccode\u003espec\u003c/code\u003e in future lessons.\u003c/em\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003etmp\u003c/strong\u003e: this is where the temporary items are stored and is rarely accessed\nby developers.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003evendor\u003c/strong\u003e: a folder for third-party code, such as code for JavaScript plugins\nand CSS frameworks.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eGemfile\u003c/strong\u003e: the Gemfile contains all of the gems that are included in the\napplication; this is where you will place outside libraries that are utilized\nin the application. After any change to the Gemfile, you will need to run\n\u003ccode\u003ebundle install\u003c/code\u003e. This will download all of the code dependencies in the\napplication. The Gem process can seem like a mystery to new developers, but it\nis important to realize that the Gems that are brought into an application are\nsimply Ruby files that help extend the functionality of the app.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eGemfile.lock\u003c/strong\u003e – this file should not be edited. It is created when you run\n\u003ccode\u003ebundle install\u003c/code\u003e and it displays all of the dependencies that each of the Gems\ncontain along with their associated versions. Messing around with the lock\nfile can lead to application bugs due to missing or altered Gem dependencies.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eREADME.md\u003c/strong\u003e – the readme file is an important place to document the\ndetails of the application. If the application is an open-source project, this\nis where you can place instructions to other developers, such as how to get the\napp up and running locally.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eStarting Up the Rails Server\u003c/h2\u003e\n\n\u003cp\u003eTo start up the Rails server, make sure that you are in the root of the\napplication in the terminal and run Rails:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003cspan class=\"gp\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003eBooting Puma\n\u003cspan class=\"gp\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003eRails 6.1.3.1 application starting \u003cspan class=\"k\"\u003ein \u003c/span\u003edevelopment\n\u003cspan class=\"gp\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003eRun \u003cspan class=\"sb\"\u003e`\u003c/span\u003ebin/rails server \u003cspan class=\"nt\"\u003e--help\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e \u003cspan class=\"k\"\u003efor \u003c/span\u003emore startup options\n\u003cspan class=\"go\"\u003ePuma starting in single mode...\n* Puma version: 5.2.2 (ruby 2.7.3-p183) (\"Fettisdagsbulle\")\n*  Min threads: 5\n*  Max threads: 5\n*  Environment: development\n*          PID: 74372\n* Listening on http://127.0.0.1:3000\n* Listening on http://[::1]:3000\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow that the server is running, you can verify that it's working properly in the\nbrowser by navigating to \u003ca href=\"http://localhost:3000\"\u003e\u003ccode\u003ehttp://localhost:3000\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eHere you will see the 'Yay! You're on Rails!' page that ships with Rails. It\nshows that we're ready to start building the application!\u003c/p\u003e\n\n\u003cp\u003eIn order to \u003cstrong\u003eshut down\u003c/strong\u003e your server, you will need to hit \u003ccode\u003econtrol + c\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eOur First Request\u003c/h2\u003e\n\n\u003cp\u003eAt its most basic level, the primary responsibility of Rails is to take an \u003cstrong\u003eHTTP\nrequest\u003c/strong\u003e and generate a properly-formatted \u003cstrong\u003eresponse\u003c/strong\u003e. To demonstrate how the\nRails server handles the request-response cycle, let's take an \"error-driven\ndevelopment\" approach, and try making a request to our server that we know won't\nwork yet.\u003c/p\u003e\n\n\u003cp\u003eWith your server running, try to visit\n\u003ca href=\"http://localhost:3000/cheese\"\u003e\u003ccode\u003ehttp://localhost:3000/cheese\u003c/code\u003e\u003c/a\u003e in the browser.\nYou'll see an error message like this:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/creating-a-rails-app-readme/routing-error-1.png\" alt=\"route missing error\"\u003e\u003c/p\u003e\n\n\u003cp\u003eTo fix this error, we need to define a \u003cstrong\u003eroute\u003c/strong\u003e in our Rails app. A \u003cstrong\u003eroute\u003c/strong\u003e\nis some code that tells Rails: \"When a user makes a request with this HTTP verb\nand this path, run the code in this controller\".\u003c/p\u003e\n\n\u003cp\u003eRoutes are defined in the \u003ccode\u003econfig/routes.rb\u003c/code\u003e file. Open that file, and add this\ncode:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edraw\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/cheese\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"cheese#index\"\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere, we're telling Rails, \"When a \u003ccode\u003eGET\u003c/code\u003e request to the \u003ccode\u003e/cheese\u003c/code\u003e path comes in,\nrun the \u003ccode\u003eindex\u003c/code\u003e method in the \u003ccode\u003eCheeseController\u003c/code\u003e.\"\u003c/p\u003e\n\n\u003cp\u003eNow, back in the browser, visit that \u003ca href=\"http://localhost:3000/cheese\"\u003esame URL\u003c/a\u003e\nagain. A new error message! Progress!\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/creating-a-rails-app-readme/routing-error-2.png\" alt=\"controller missing error\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThis error message tells us we're missing a \u003cstrong\u003eController\u003c/strong\u003e to handle this route.\u003c/p\u003e\n\n\u003cp\u003eLet's create a controller. In the \u003ccode\u003eapp/controllers\u003c/code\u003e folder, add a new file called\n\u003ccode\u003echeese_controller.rb\u003c/code\u003e with the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/cheese_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCheeseController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, when we make a \u003ccode\u003eGET\u003c/code\u003e request to \u003ccode\u003e/cheese\u003c/code\u003e, the code in the\n\u003ccode\u003eCheeseController#index\u003c/code\u003e method will run. Try visiting that\n\u003ca href=\"http://localhost:3000/cheese\"\u003esame URL\u003c/a\u003e again...\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/creating-a-rails-app-readme/template-error.png\" alt=\"template missing error\"\u003e\u003c/p\u003e\n\n\u003cp\u003eTake a minute and read through this error message.\u003c/p\u003e\n\n\u003cp\u003eOnce again, Rails is helping out (bless up, Rails!) and telling us we need to\ncreate a \u003cstrong\u003etemplate\u003c/strong\u003e to handle this particular request. \u003cstrong\u003eBy convention\u003c/strong\u003e,\nRails will look for a special \u003cstrong\u003eview\u003c/strong\u003e file in a folder that matches the name of\nour controller. To create that template, make a new \u003ccode\u003echeese\u003c/code\u003e folder in\n\u003ccode\u003eapp/views\u003c/code\u003e and add a \u003ccode\u003eindex.html.erb\u003c/code\u003e file with this code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight erb\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e\u0026lt;!-- app/views/cheese/index.html.erb --\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;h1\u0026gt;\u003c/span\u003eHello Cheese World!\u003cspan class=\"nt\"\u003e\u0026lt;/h1\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTry visiting that \u003ca href=\"http://localhost:3000/cheese\"\u003esame URL\u003c/a\u003e once more...\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/creating-a-rails-app-readme/cheese-page-html.png\" alt=\"cheese html page\"\u003e\u003c/p\u003e\n\n\u003cp\u003eSuccess at last! We've now gone through the entire request-response cycle in Rails!\u003c/p\u003e\n\n\u003cp\u003eLet's take a moment and retrace our steps. From the browser, we made a \u003ccode\u003eGET\u003c/code\u003e\nrequest to \u003ccode\u003e/cheese\u003c/code\u003e. For Rails to handle this request:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWe added a new route (\u003ccode\u003eget \"/cheese\"\u003c/code\u003e) in the \u003ccode\u003econfig/routes.rb\u003c/code\u003e file\u003c/li\u003e\n\u003cli\u003eIn that route, we specified a \u003cstrong\u003econtroller action\u003c/strong\u003e (\u003ccode\u003e\"cheese#index\"\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003eWe created that controller in \u003ccode\u003eapp/controllers/cheese_controller.rb\u003c/code\u003e with an\n\u003ccode\u003eindex\u003c/code\u003e action\u003c/li\u003e\n\u003cli\u003eBy convention, Rails will look for a \u003cstrong\u003eview template\u003c/strong\u003e that matches the name\nof the controller and action\u003c/li\u003e\n\u003cli\u003eIn that view template, we wrote some HTML\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eNow when that \u003ccode\u003eGET /cheese\u003c/code\u003e request comes through, Rails is able to send the HTML\nfrom our view template as a response to the browser.\u003c/p\u003e\n\n\u003ch3\u003eSending JSON Data\u003c/h3\u003e\n\n\u003cp\u003eYou may be wondering at this point: if we're using Rails as an API, how can we\nsend back something other than HTML? Rails actually makes this quite easy for us!\u003c/p\u003e\n\n\u003cp\u003eLet's go back to the controller, and update the \u003ccode\u003eindex\u003c/code\u003e action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/cheese_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCheeseController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003ehello: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cheese World\"\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBy using the \u003ccode\u003erender\u003c/code\u003e method, we're telling Rails: \"instead of rendering an HTML\ntemplate, you should send back JSON data as the response\".\u003c/p\u003e\n\n\u003cp\u003eTry visiting that \u003ca href=\"http://localhost:3000/cheese\"\u003esame URL\u003c/a\u003e one last time:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/creating-a-rails-app-readme/cheese-page-json.png\" alt=\"cheese json page\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThat \u003ccode\u003erender\u003c/code\u003e method is a powerful bit of code. Keep in mind that as a server,\nit's always our job to send back a response to every request. When we're\ndeveloping Rails APIs, using \u003ccode\u003erender\u003c/code\u003e to send back JSON data will be our goal\nfor almost every request!\u003c/p\u003e\n\n\u003cp\u003eThroughout this phase, we'll be focusing on Rails as an API, so don't worry too\nmuch about the \u003ccode\u003e.erb\u003c/code\u003e view files for the time being.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eAt this point, we've learned how to use Rails to send back HTML or JSON data as\na response when our server receives a request. We've also covered the basics of\nthe file structure of a Rails app, and a few important places where we'll be\nwriting the majority of our code as Rails developers. This lesson covered a lot\nof ground at a high level, so don't worry if all the pieces aren't totally clear\nyet. Throughout the rest of the section, we'll dive deeper into each of the\npieces that make up a Rails API.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat three folders in the Rails file structure will you use most as you're\ndeveloping your Rails app, and for what?\u003c/li\u003e\n\u003cli\u003eWhen an HTTP request is made to a Rails app, what is the sequence of events\nthat happens to return the response?\u003c/li\u003e\n\u003cli\u003eWhat are the two methods you learned about in this lesson to provide a\nresponse to an HTTP request? What type of content does each of them return?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/command_line.html\"\u003eThe Rails Command Line\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"authenticating-users","title":"Authenticating Users","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-authenticating-users-readme\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-authenticating-users-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-authenticating-users-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDefine the term \"authentication\"\u003c/li\u003e\n\u003cli\u003eUnderstand how websites use login to authenticate users\u003c/li\u003e\n\u003cli\u003eFollow REST conventions for handling session data\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe've covered how cookies can be used to store data in a user's browser.\u003c/p\u003e\n\n\u003cp\u003eOne of the most common uses of cookies is for login. In this lesson, we'll cover\nhow to use the Rails session to log users in.\u003c/p\u003e\n\n\u003ch2\u003eAuthentication\u003c/h2\u003e\n\n\u003cp\u003eNearly every website in the world uses what we like to call the \"wristband\"\npattern. A lot of nightclubs use this pattern as well.\u003c/p\u003e\n\n\u003cp\u003eYou arrive at the club. The bouncer checks your ID. They put a wristband on your\nwrist (or stamp your hand). They let you into the club.\u003c/p\u003e\n\n\u003cp\u003eIf you leave and come back, the bouncer doesn't look at your ID, they just look\nfor your wristband. If you buy a drink, the bartender doesn't need to see your\nID, since your wristband proves you're old enough to buy alcohol.\u003c/p\u003e\n\n\u003cp\u003eYou arrive at \u003ca href=\"http://mail.google.com\"\u003egmail.com\u003c/a\u003e. You submit your username and\npassword. Google's servers check to see if your credentials are correct. If they\nare, Google's servers issue a cookie to your browser. If you visit another page\non gmail — or anywhere on google.com for that matter — your browser will show\nthe cookie to the server. The server verifies this cookie, and lets you load\nyour inbox.\u003c/p\u003e\n\n\u003cp\u003eThe term we use to describe this process is \u003cstrong\u003eauthentication\u003c/strong\u003e. When we talk\nabout authentication in our applications, we are describing how our application\ncan \u003cstrong\u003econfirm that our users are who they say they are\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch2\u003eHow This Looks in Rails\u003c/h2\u003e\n\n\u003cp\u003eLet's look at what the simplest possible login system might look like in a Rails\nAPI/React application.\u003c/p\u003e\n\n\u003cp\u003eThe flow will look like this:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe user navigates to a login form on the React frontend.\u003c/li\u003e\n\u003cli\u003eThe user enters their username. There is no password (for now).\u003c/li\u003e\n\u003cli\u003eThe user submits the form, POSTing to \u003ccode\u003e/login\u003c/code\u003e on the Rails backend.\u003c/li\u003e\n\u003cli\u003eIn the create action of the \u003ccode\u003eSessionsController\u003c/code\u003e we set a cookie on the user's\nbrowser by writing their user ID into the session hash.\u003c/li\u003e\n\u003cli\u003eThereafter, the user is logged in. \u003ccode\u003esession[:user_id]\u003c/code\u003e will hold their user ID.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eLet's write a \u003ccode\u003eSessionsController\u003c/code\u003e to handle our login route. This controller has\none action, \u003ccode\u003ecreate\u003c/code\u003e, which we'll map in \u003ccode\u003eroutes.rb\u003c/code\u003e for \u003ccode\u003ePOST\u003c/code\u003e requests to\n\u003ccode\u003e/login\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/login\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"sessions#create\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTypically, your \u003ccode\u003ecreate\u003c/code\u003e method would look up a user in the database, verify\ntheir login credentials, and then store the authenticated user's id in the\nsession:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSessionsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eusername: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere's no way for the server to log you out right now. To log yourself out,\nyou'll have to delete the cookie from your browser.\u003c/p\u003e\n\n\u003cp\u003eHere's what the login component might look like on the frontend:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eLogin\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"nx\"\u003eonLogin\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esetUsername\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleSubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epreventDefault\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/login\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n      \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"nx\"\u003eusername\u003c/span\u003e \u003cspan class=\"p\"\u003e}),\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eonLogin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e \u003cspan class=\"na\"\u003eonSubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleSubmit\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\n        \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"text\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eusername\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eonChange\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003esetUsername\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etarget\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"submit\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eLogin\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen the user submits the form, they'll be logged in! Our \u003ccode\u003eonLogin\u003c/code\u003e callback function\nwould handle saving the logged in user's details in state.\u003c/p\u003e\n\n\u003ch2\u003eStaying Logged In\u003c/h2\u003e\n\n\u003cp\u003eUsing the wristband analogy, in the example above, we've shown our ID at the\ndoor (\u003ccode\u003eusername\u003c/code\u003e) and gotten our wristband (\u003ccode\u003esession[:user_id]\u003c/code\u003e) from the\nbackend. So our backend has a means of identifying us with each request using\nthe session hash.\u003c/p\u003e\n\n\u003cp\u003eOur frontend also knows who we are, because our user data was saved in state after\nlogging in.\u003c/p\u003e\n\n\u003cp\u003eWhat happens now if we leave the club and try to come back in, by refreshing the\npage on the frontend? Well, our \u003cstrong\u003efrontend\u003c/strong\u003e doesn't know who we are any more,\nsince we lose our frontend state after refreshing the page. Our \u003cstrong\u003ebackend\u003c/strong\u003e does\nknow who we are though — so we need a way of getting the user data from the\nbackend into state when the page first loads.\u003c/p\u003e\n\n\u003cp\u003eHere's how we might accomplish that. First, we need a route to retrieve the user's\ndata from the database using the session hash:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/me\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"users#show\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd a controller action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUsersController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n    \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Not authorized\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, we can try to log the user in from the frontend as soon as the application\nloads:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esetUser\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n  \u003cspan class=\"nx\"\u003euseEffect\u003c/span\u003e\u003cspan class=\"p\"\u003e(()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/me\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eok\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003esetUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"p\"\u003e[]);\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh2\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eWelcome, \u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eusername\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e!\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh2\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eLogin\u003c/span\u003e \u003cspan class=\"na\"\u003eonLogin\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003esetUser\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is the equivalent of letting someone use their wristband to come back into\nthe club.\u003c/p\u003e\n\n\u003ch2\u003eLogging Out\u003c/h2\u003e\n\n\u003cp\u003eThe log out flow is even simpler. We can add a new route for logging out:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003edelete\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/logout\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"sessions#destroy\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen add a \u003ccode\u003eSessionsController#destroy\u003c/code\u003e method, which will clear the username\nout of the session:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edestroy\u003c/span\u003e\n  \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edelete\u003c/span\u003e \u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehead\u003c/span\u003e \u003cspan class=\"ss\"\u003e:no_content\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere's how that might look in the frontend:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eNavbar\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"nx\"\u003eonLogout\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleLogout\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/logout\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eDELETE\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}).\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e(()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eonLogout\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003eonClick\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleLogout\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eLogout\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe \u003ccode\u003eonLogout\u003c/code\u003e callback function would handle removing the information about the\nuser from state.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eAt its base, login is very simple: the user provides you with credentials by\nfilling out a form, you verify those credentials and set a token in the\n\u003ccode\u003esession\u003c/code\u003e. In this example, our token was their user id. We can also log users\nout by removing their user ID from the session.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eIn the login and authentication flow you learned in this lesson for Rails\nAPI/React applications, in what two places is authentication information\nstored?\u003c/li\u003e\n\u003cli\u003eIn the login and authentication flow you learned in this lesson, what\nsequence of events happens if the user refreshes the page?\u003c/li\u003e\n\u003c/ol\u003e","frontPage":false},{"exportId":"deploying-a-rails-api-to-render","title":"Deploying a Rails API to Render","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-deploying-rails-api-to-render\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-deploying-rails-api-to-render\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-deploying-rails-api-to-render/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eSet up your local environment for deploying with Render\u003c/li\u003e\n\u003cli\u003eDeploy a basic Rails application to Render\u003c/li\u003e\n\u003cli\u003eBack up and re-deploy our apps' databases\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll be deploying a basic, standalone Rails API application to\nRender. We'll give instructions to generate the application from scratch and\ntalk through the steps to get the code running on a Render server.\u003c/p\u003e\n\n\u003cp\u003eIn coming lessons, we'll learn how to add more complexity to the application\nwith a React frontend. Since the setup for a Rails-React application is a bit\ntrickier, it'll be beneficial to see the setup for Rails alone first. Let's get\nstarted!\u003c/p\u003e\n\n\u003ch2\u003eEnvironment Setup\u003c/h2\u003e\n\n\u003cp\u003eTo make sure you're able to deploy your application, you'll need to do the\nfollowing:\u003c/p\u003e\n\n\u003ch3\u003eSign Up for a Render Account\u003c/h3\u003e\n\n\u003cp\u003eYou can sign up for a free account at\n\u003ca href=\"https://dashboard.render.com/register\"\u003ehttps://dashboard.render.com/register\u003c/a\u003e. We recommend that you\nsign up using GitHub as that will make it a little easier for you to connect\nRender to your GitHub account.\u003c/p\u003e\n\n\u003cp\u003eOnce you've completed the signup process, you will be taken to the Render\ndashboard:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/deploying-rails-api/render-dashboard.png\" alt=\"Render dashboard\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn order to connect Render to your GitHub account, you'll need to click the\n\"New Web Service\" button in the \"Web Services\" box. On the next page, you will\nsee a GitHub heading on the right side and below that a link that's labeled\neither \"Connect account\" or \"Configure account\".\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/deploying-rails-api/configure-github.png\" alt=\"Connect GitHub\"\u003e\u003c/p\u003e\n\n\u003cp\u003eClick that link; a modal will appear asking you for permission to install Render\non your GitHub account:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/deploying-rails-api/install-render.png\" alt=\"Install Render\"\u003e\u003c/p\u003e\n\n\u003cp\u003eClick \"Install.\" You should then be taken back to the \"Create a New Web Service\"\npage, which should now show a list of your GitHub repos. We won't actually\ncreate a web service just yet so you are free to navigate away from the page at\nthis point.\u003c/p\u003e\n\n\u003ch3\u003eInstall the Latest Ruby Version\u003c/h3\u003e\n\n\u003cp\u003eVerify which version of Ruby you're running by entering this in the terminal:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003eruby \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe recommend version 2.7.4. If you need to upgrade you can install it using rvm:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ervm \u003cspan class=\"nb\"\u003einstall \u003c/span\u003e2.7.4 \u003cspan class=\"nt\"\u003e--default\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou should also install the latest versions of \u003ccode\u003ebundler\u003c/code\u003e and \u003ccode\u003erails\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egem \u003cspan class=\"nb\"\u003einstall \u003c/span\u003ebundler\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egem \u003cspan class=\"nb\"\u003einstall \u003c/span\u003erails\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eInstall PostgreSQL\u003c/h3\u003e\n\n\u003cp\u003eRender requires that you use PostgreSQL for your database instead of SQLite.\nPostgreSQL (or just Postgres for short) is an advanced database management\nsystem with more features than SQLite. If you don't already have it installed,\nyou'll need to set it up.\u003c/p\u003e\n\n\u003ch4\u003ePostgreSQL Installation for WSL\u003c/h4\u003e\n\n\u003cp\u003eTo install Postgres for WSL, run the following commands from your Ubuntu\nterminal:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eapt update\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eapt \u003cspan class=\"nb\"\u003einstall \u003c/span\u003epostgresql postgresql-contrib libpq-dev\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen confirm that Postgres was installed successfully:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003epsql \u003cspan class=\"nt\"\u003e--version\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRun this command to start the Postgres service:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eservice postgresql start\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFinally, you'll also need to create a database user so that you are able to\nconnect to the database from Rails. First, check what your operating system\nusername is:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003ewhoami\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf your username is \"ian\", for example, you'd need to create a Postgres user\nwith that same name. To do so, run this command to open the Postgres CLI:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo\u003c/span\u003e \u003cspan class=\"nt\"\u003e-u\u003c/span\u003e postgres \u003cspan class=\"nt\"\u003e-i\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFrom the Postgres CLI, run this command (replacing \"ian\" with your username):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ecreateuser \u003cspan class=\"nt\"\u003e-sr\u003c/span\u003e ian\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen enter \u003ccode\u003econtrol + d\u003c/code\u003e or type \u003ccode\u003elogout\u003c/code\u003e to exit.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/wsl/tutorials/wsl-database#install-postgresql\"\u003eThis guide\u003c/a\u003e has more info on setting up Postgres on WSL if you\nget stuck.\u003c/p\u003e\n\n\u003ch4\u003ePostgreSQL Installation for OSX\u003c/h4\u003e\n\n\u003cp\u003eTo install Postgres for OSX, you can use Homebrew:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebrew \u003cspan class=\"nb\"\u003einstall \u003c/span\u003epostgresql\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOnce Postgres has been installed, run this command to start the Postgres\nservice:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebrew services start postgresql\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ePhew! With that out of the way, let's get started on building our Rails\napplication and deploying it to Render.\u003c/p\u003e\n\n\u003ch2\u003eCreating a Rails App to Deploy\u003c/h2\u003e\n\n\u003cp\u003eWe'll be following the steps in the \u003ca href=\"https://render.com/docs/deploy-rails\"\u003eGetting Started with Ruby on Rails on\nRender\u003c/a\u003e guide, so if you get stuck and are looking\nfor more assistance, check that guide first.\u003c/p\u003e\n\n\u003cp\u003eThe first thing we'll need to do is create our new Rails application. Make\nsure you're in a non-lab directory, then run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails new bird-app \u003cspan class=\"nt\"\u003e--api\u003c/span\u003e \u003cspan class=\"nt\"\u003e--minimal\u003c/span\u003e \u003cspan class=\"nt\"\u003e--database\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003epostgresql\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will set up our app to run in API mode, with the minimum dependencies\nneeded, and with PostgreSQL as the database.\u003c/p\u003e\n\n\u003cp\u003eNext, we'll need to configure our \u003ccode\u003eGemfile.lock\u003c/code\u003e file to support the same OS as\nRender, which runs Ubuntu. This way, regardless of what OS you're using in\ndevelopment, \u003ccode\u003ebundler\u003c/code\u003e will be able to install the same gems on Render using any\nUbuntu-specific gem dependencies.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003ecd\u003c/code\u003e into the app's directory, and run this command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle lock \u003cspan class=\"nt\"\u003e--add-platform\u003c/span\u003e x86_64-linux\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will add additional platforms to your \u003ccode\u003eGemfile.lock\u003c/code\u003e file that will allow\nthe necessary dependencies to be installed after you deploy your app.\u003c/p\u003e\n\n\u003ch2\u003eBuilding the Demo App\u003c/h2\u003e\n\n\u003cp\u003eNext, let's set up up a migration, model, route, and controller so we have some\ndata to display in our application:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g resource Bird name species\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAdd this data to the \u003ccode\u003edb/seeds.rb\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Black-Capped Chickadee'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Poecile Atricapillus'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Grackle'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Quiscalus Quiscula'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Common Starling'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Sturnus Vulgaris'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Mourning Dove'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Zenaida Macroura'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen run this command to generate the database and run the migrations and seed\nfile:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:create db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003erails db:create\u003c/code\u003e creates a new PostgreSQL database to be associated with your\napplication based on the configuration in the \u003ccode\u003econfig/database.yml\u003c/code\u003e file.\nUnlike with SQLite, the actual database file isn't created in the \u003ccode\u003edb\u003c/code\u003e folder;\nit lives elsewhere in your file system, depending on your PostgreSQL\nconfiguration. If you have problems with this step, see the\n\u003cstrong\u003eTroubleshooting\u003c/strong\u003e section below.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eNext, edit the \u003ccode\u003eapp/birds_controller.rb\u003c/code\u003e file and add an \u003ccode\u003eindex\u003c/code\u003e action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e  \u003cspan class=\"c1\"\u003e# GET /birds\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebirds\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebirds\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFinally, open \u003ccode\u003econfig/routes.rb\u003c/code\u003e, un-comment out the root path definition and\nupdate it to:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eroot\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"birds#index\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo make sure the app works locally before deploying, run \u003ccode\u003erails s\u003c/code\u003e. If you visit\neither \u003ca href=\"http://localhost:3000\"\u003ehttp://localhost:3000\u003c/a\u003e or\n\u003ca href=\"http://localhost:3000/birds\"\u003ehttp://localhost:3000/birds\u003c/a\u003e, you should see the\nJSON for the list of birds.\u003c/p\u003e\n\n\u003ch2\u003ePreparing your App for Deployment\u003c/h2\u003e\n\n\u003cp\u003eBefore we can deploy our app, we need to make a few modifications.\u003c/p\u003e\n\n\u003cp\u003eFirst, open the \u003ccode\u003econfig/database.yml\u003c/code\u003e file, scroll down to the \u003ccode\u003eproduction\u003c/code\u003e\nsection, and update the code to the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight yaml\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eproduction\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e*default\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eurl\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026lt;%= ENV['DATABASE_URL'] %\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, open \u003ccode\u003econfig/puma.rb\u003c/code\u003e and find the section shown below. Here, you will\nun-comment out two lines of code and make one small edit:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Specifies the number of `workers` to boot in clustered mode.\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Workers are forked web server processes. If using threads and workers together\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# the concurrency of the application would be max `threads` * `workers`.\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Workers do not work on JRuby or Windows (both of which do not support\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# processes).\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003cspan class=\"n\"\u003eworkers\u003c/span\u003e \u003cspan class=\"no\"\u003eENV\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"WEB_CONCURRENCY\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e### CHANGE: Un-comment out this line; update the value to 4\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# Use the `preload_app!` method when specifying a `workers` number.\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# This directive tells Puma to first boot the application and load code\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# before forking the application. This takes advantage of Copy On Write\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# process behavior so workers use less memory.\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003cspan class=\"n\"\u003epreload_app!\u003c/span\u003e \u003cspan class=\"c1\"\u003e### CHANGE: Un-comment out this line\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, open the \u003ccode\u003econfig/environments/production.rb\u003c/code\u003e file and find the following\nline:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epublic_file_server\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eenabled\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eENV\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"RAILS_SERVE_STATIC_FILES\"\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nf\"\u003epresent?\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUpdate it to the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epublic_file_server\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eenabled\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eENV\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'RAILS_SERVE_STATIC_FILES'\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nf\"\u003epresent?\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"no\"\u003eENV\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'RENDER'\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nf\"\u003epresent?\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFinally, inside the \u003ccode\u003ebin\u003c/code\u003e folder create a \u003ccode\u003ebirds-build.sh\u003c/code\u003e script and copy the\nfollowing into it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e#!/usr/bin/env bash\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# exit on error\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e errexit\n\nbundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# bundle exec rake assets:precompile # These lines are commented out because we have an API only app\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# bundle exec rake assets:clean\u003c/span\u003e\nbundle \u003cspan class=\"nb\"\u003eexec \u003c/span\u003erake db:migrate \nbundle \u003cspan class=\"nb\"\u003eexec \u003c/span\u003erake db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOur API-only app doesn't include any assets, so we've commented out the lines to\nprecompile and clean them.\u003c/p\u003e\n\n\u003cp\u003eThen run the following command in the terminal to update the permissions on the\nscript and make sure it's executable:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"go\"\u003echmod a+x bin/birds-build.sh\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere will be no output from this command, but if you run \u003ccode\u003els -l bin\u003c/code\u003e, you\nshould see the three x's in the permissions string, indicating that the file is\nexecutable:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e-rwxr-xr-x\u003c/span\u003e  1 \u0026lt;username\u0026gt;  staff   253 Oct 23 07:44 birds-build.sh\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eDeploying\u003c/h2\u003e\n\n\u003ch3\u003ePush the Code to GitHub\u003c/h3\u003e\n\n\u003cp\u003eIn order to deploy our app to Render, we first need to create a remote repo and\npush our code up. Start by making a commit to save your local changes:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egit add \u003cspan class=\"nb\"\u003e.\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egit commit \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Initial commit'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, on the repository list page of your GitHub account, click the green \"New\"\nbutton in the upper right corner. (Alternatively, you can navigate to\n\u003ca href=\"https://github.com/new\"\u003ehttps://github.com/new\u003c/a\u003e). In the form that opens, enter\na name for your repo (\u003ccode\u003ebird-app\u003c/code\u003e makes sense) and make sure \"Public\" is\nselected. You can leave everything else as is. Click the \"Create repository\"\nbutton at the bottom of the page.\u003c/p\u003e\n\n\u003cp\u003eOn the next page, copy the code in the \"push an existing repository from the\ncommand line\" section and run it in your terminal:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003egit remote add origin git@github.com:\u0026lt;your-github-name\u0026gt;\u003c/span\u003e/bird-app.git\n\u003cspan class=\"go\"\u003egit branch -M main\ngit push -u origin main\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen you refresh the GitHub page, you should see that your code has been pushed\nup.\u003c/p\u003e\n\n\u003ch3\u003eCreate the Database on Render\u003c/h3\u003e\n\n\u003cp\u003eOne limitation of Render is that it only allows one PostgreSQL instance to be\ncreated per user account. With this instance, we can create an app, give it some\nseed data, and deploy it, storing the data in the PostgreSQL instance's\ndatabase. But then what happens if you want to deploy additional apps to Render?\nYou can probably see how using a single database for multiple apps could get\ncomplicated very quickly and potentially cause problems. Fortunately, Render\nallows users to create \u003ca href=\"https://render.com/docs/databases#multiple-databases-in-a-single-postgresql-instance\"\u003emultiple databases within a single PostgreSQL\ninstance\u003c/a\u003e so you can have a separate database for each app you\ndeploy.\u003c/p\u003e\n\n\u003cp\u003eLet's start by creating the PostgreSQL instance.\u003c/p\u003e\n\n\u003cp\u003eGo to the \u003ca href=\"https://dashboard.render.com/\"\u003eRender dashboard\u003c/a\u003e, click the \"New +\" button and select\n\"PostgreSQL\". Enter a name for your database. This can be whatever you like —\nwe're using \u003ccode\u003emy_database\u003c/code\u003e. The remaining fields can be left as is.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/deploying-rails-api/create-database.png\" alt=\"Creating a new database\"\u003e\u003c/p\u003e\n\n\u003cp\u003eScroll to the bottom of the page and click \"Create Database\". Leave the database\npage open — you'll need to copy information from it as we proceed.\u003c/p\u003e\n\n\u003cp\u003eNext, let's create a database specifically for our bird app. We'll do this using\nthe PostgreSQL interactive terminal, \u003ca href=\"https://www.postgresql.org/docs/current/app-psql.html\"\u003e\u003ccode\u003epsql\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe command to launch the interactive terminal is provided in the Render\ndatabase page. Scroll down to the \"Connections\" section and copy the PSQL\ncommand. Paste it into your terminal and press enter. This command connects you\nto the remote database. You should now see the \u003ccode\u003epsql\u003c/code\u003e command prompt,\n\u003ccode\u003emy_database=\u0026gt;\u003c/code\u003e, and if you run the \u003ccode\u003e\\l\u003c/code\u003e command to list the databases, you'll\nsee a table that includes \u003ccode\u003emy_database\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eTo create the database for our bird app, we'll run the \u003ccode\u003eCREATE DATABASE\u003c/code\u003e SQL\ncommand. Again, you can name your database whatever you like; we're using\n\u003ccode\u003ebird_app_db\u003c/code\u003e. Be sure to include the semi-colon at the end of the command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight sql\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eCREATE\u003c/span\u003e \u003cspan class=\"k\"\u003eDATABASE\u003c/span\u003e \u003cspan class=\"n\"\u003ebird_app_db\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow if you run the \u003ccode\u003e\\l\u003c/code\u003e command again, you should see that \u003ccode\u003ebird_app_db\u003c/code\u003e has\nbeen added to the list of databases.\u003c/p\u003e\n\n\u003cp\u003eYou can now exit \u003ccode\u003epsql\u003c/code\u003e using the \u003ccode\u003e\\q\u003c/code\u003e command.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: The Render database page will not show the information about the\n\u003ccode\u003ebird_app_db\u003c/code\u003e database; it will only show the name you assigned when you\ncreated the PostgreSQL instance on Render (\u003ccode\u003emy_database\u003c/code\u003e). To see any other\ndatabases you have on your PostgreSQL instance, you'll need to use \u003ccode\u003epsql\u003c/code\u003e.\nFor now, be sure to make a note of your new database's name as we'll need to\nuse it in the next step.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3\u003eCreate the Web Service on Render\u003c/h3\u003e\n\n\u003cp\u003eOpen a new browser tab and navigate back to the Render dashboard. Click the \"New\n+\" button and select \"Web Service\". You'll see a list of all the repositories in\nyour GitHub account. Find the repo you just created for the bird app and click\nthe \"Select\" button.\u003c/p\u003e\n\n\u003cp\u003eIn the page that opens, enter a name for your app and make sure the Environment\nis set to Ruby:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/deploying-rails-api/create-web-service.png\" alt=\"Creating a new web service\"\u003e\u003c/p\u003e\n\n\u003cp\u003eScroll down and set the Build Command to \u003ccode\u003e./bin/birds-build.sh\u003c/code\u003e and the Start\nCommand to \u003ccode\u003ebundle exec puma -C config/puma.rb\u003c/code\u003e:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/deploying-rails-api/update-commands.png\" alt=\"Update Build and Start commands\"\u003e\u003c/p\u003e\n\n\u003cp\u003eNext, scroll down and click the \"Advanced\" button, then click \"Add Environment\nVariable.\" Enter \u003ccode\u003eDATABASE_URL\u003c/code\u003e as the key, then navigate back to the tab you\nleft open with your database information. Click the \"Connect\" button in the\nupper right corner, copy the Internal Database URL, and paste it into the value\nbox. You will see a long URL that ends with \u003ccode\u003emy_database\u003c/code\u003e. You'll need to remove\nthe \u003ccode\u003emy_database\u003c/code\u003e and replace it with \u003ccode\u003ebird_app_db\u003c/code\u003e (or whatever you named it).\nIt should look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003epostgres://my_database_user:#################################################/bird_app_db\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eClick \"Add Environment Variable\" again. Add \u003ccode\u003eRAILS_MASTER_KEY\u003c/code\u003e as the key. The\nvalue is in the \u003ccode\u003econfig/master.key\u003c/code\u003e file in your app's files. Copy the value and\npaste it in.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/deploying-rails-api/add-env-variables.png\" alt=\"Add environment variables\"\u003e\u003c/p\u003e\n\n\u003cp\u003eScroll down to the bottom of the page and click \"Create Web Service\". The deploy\nprocess will begin automatically. Warning: this process can take a while! You\nmight want to go for a walk or get a snack.\u003c/p\u003e\n\n\u003cp\u003eWhen the deploy process is complete, you should see something like this in the\nlog:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/deploying-rails-api/successful-deploy-log.png\" alt=\"Log showing successful build and deploy\"\u003e\u003c/p\u003e\n\n\u003cp\u003eClick on your app's URL in the upper left corner of the screen (just below the\nname of the app). Once the page has loaded (which may take a few moments), you\nshould see the JSON for the list of birds. If you get a \"Page not found\" error,\nwait a few minutes and refresh the page.\u003c/p\u003e\n\n\u003ch2\u003eAdding New Features\u003c/h2\u003e\n\n\u003cp\u003eSince Render integrates the deploying process with GitHub, it's straightforward\nto add new features to your code and deploy them. Let's start by adding a new\ncontroller action in the \u003ccode\u003eBirdsController\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordNotFound\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bird not found\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTest your code locally by running \u003ccode\u003erails s\u003c/code\u003e and visiting\n\u003ca href=\"http://localhost:3000/birds/1\"\u003ehttp://localhost:3000/birds/1\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eNext, we'll commit and push our changes and deploy the app. Before we do that,\nhowever, we need to modify the build script, \u003ccode\u003ebin/birds-build.sh\u003c/code\u003e. The reason\nfor this is the script currently contains the \u003ccode\u003edb:seed\u003c/code\u003e command. If we keep that\ncommand in the script, it will re-seed the data every time we push up a change,\nresulting in duplicate records. Go ahead and open the script and delete (or\ncomment out) the last line.\u003c/p\u003e\n\n\u003cp\u003eNow we can go ahead and make a commit and push it to GitHub:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egit add \u003cspan class=\"nb\"\u003e.\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egit commit \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Add show action'\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egit push\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter pushing the new code, start the deploy process by returning to the app's\npage on Render, clicking the \"Manual Deploy\" button in the upper right corner\nand selecting \"Deploy latest commit.\" You will now see the deploy based on the\nnew commit in progress:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/deploying-rails-api/deploying-new-content.png\" alt=\"Deploying new action\"\u003e\u003c/p\u003e\n\n\u003cp\u003eOnce the deploy is complete, refresh the page and verify that the show action is\nworking. Remember that it may take a few minutes for the new content to become\navailable.\u003c/p\u003e\n\n\u003ch2\u003eTroubleshooting\u003c/h2\u003e\n\n\u003cp\u003eIf you ran into any errors along the way, here are some things you can try to\ntroubleshoot:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eIf you're on a Mac and got a server connection error when you tried to run\n\u003ccode\u003erails db:create\u003c/code\u003e, one option for solving this problem for Mac users is to\ninstall the Postgres app. To do this, first uninstall \u003ccode\u003epostgresql\u003c/code\u003e by running\n\u003ccode\u003ebrew remove postgresql\u003c/code\u003e. Next, download the app from the\n\u003ca href=\"https://postgresapp.com/downloads.html\"\u003ePostgres downloads page\u003c/a\u003e and install it. Launch the app and click\n\"Initialize\" to create a new server. You should now be able to run\n\u003ccode\u003erails db:create\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eIf you're using WSL and got the following error running \u003ccode\u003erails db:create\u003c/code\u003e:\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e  PG::ConnectionBad: FATAL:  role \"yourusername\" does not exist\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe issue is that you did not create a role in Postgres for the default user\n  account. Check \u003ca href=\"https://www.youtube.com/watch?v=bQC5izDzOgE\"\u003ethis video\u003c/a\u003e for\n  one possible fix.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eIf your app failed to deploy at the build stage, make sure your local\nenvironment is set up correctly by following the steps at the beginning of\nthis lesson. Check that you have the latest versions of Ruby and Bundler, and\nensure that PostgreSQL was installed successfully.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eIf you deployed successfully, but you ran into issues when you visited the\nsite, make sure you migrated and seeded the database. Also, make sure that\nyour application works locally and try to debug any issues on your local\nmachine before re-deploying. You can also check the deployment log on the\napp's page in the Render dashboard.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eNotes on Render's Free Tier\u003c/h2\u003e\n\n\u003ch3\u003eFree Web Services\u003c/h3\u003e\n\n\u003cp\u003eAccording to Render's documentation on its \u003ca href=\"https://render.com/docs/free#free-web-services\"\u003eFree Web\nServices\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWeb Services on the free plan are automatically spun down after 15 minutes of\ninactivity. When a new request for a free service comes in, Render spins it up\nagain so it can process the request.\u003c/p\u003e\n\n\u003cp\u003eThis can cause a response delay of up to 30 seconds for the first request that\ncomes in after a period of inactivity.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThis means that, when you try to navigate to your app in the browser, it might\ntake a while to load — in our testing, it was often longer than 30 seconds, and\nsometimes quite a bit longer!\u003c/p\u003e\n\n\u003ch3\u003eFree PostgreSQL Databases\u003c/h3\u003e\n\n\u003cp\u003eWith Render's free tier, databases expire after 90 days. This means that, before\nthe end of the 90 days, you will need to back up your databases, delete the\nPostgreSQL instance from Render, create a new PostgreSQL instance, and populate\nit from the database backups. Render should send an email warning you that your\ndatabase will be expiring soon.\u003c/p\u003e\n\n\u003ch2\u003eBacking Up and Recreating Your Databases on Render\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e You do not need to complete the steps in this section until you get\nclose to the end of the 90 days. Feel free to skip this section until then if\nyou prefer.\u003c/p\u003e\n\n\u003cp\u003eBefore we launch into the instructions for backing up and recreating your Render\nPostgreSQL instance, let's take a closer look at the PSQL connection string. To\nget the connection string, navigate to your database in the Render dashboard,\nclick the connect button then the \"External Connection\" tab, then copy/paste the\n\"PSQL Command\" into your text editor. It will look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePGPASSWORD=############# psql -h ################-postgres.render.com -U my_database_user my_database\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe first element is the password for your database, which will be a\n32-character string. Next is the command you're running, in this case, \u003ccode\u003epsql\u003c/code\u003e.\nThe next component is the host (indicated by the \u003ccode\u003e-h\u003c/code\u003e flag), which will end with\n\"-postgres.render.com\". Next is the name of the database user (indicated by the\n\u003ccode\u003e-U\u003c/code\u003e flag), followed by the name of the database itself.\u003c/p\u003e\n\n\u003cp\u003eIf you paste the connection string into your terminal and run it, then run the\n\u003ccode\u003e\\l\u003c/code\u003e command to list your databases, you'll see that the username and database\nname match the entry for your PostgreSQL instance in the table that's printed.\nYou should also see the \u003ccode\u003ebird_app_db\u003c/code\u003e in the list. Note that the username is the\nsame as for the PostgreSQL instance.\u003c/p\u003e\n\n\u003ch3\u003eBacking Up Our Databases\u003c/h3\u003e\n\n\u003cp\u003eTo back up our databases, we're going to modify the connection string. We'll do\nthat once for each of the two databases we need to back up. We recommending\nmaking the edits to the string in your text editor then copy/pasting it into the\nterminal when you're done.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e Technically, we don't need to back up \u003ccode\u003emy_database\u003c/code\u003e because we don't\nhave any data stored in it. We'll do it here to demonstrate the process of\nbacking up and restoring multiple databases.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe first part of the string, the password, will remain the same. The \u003ccode\u003epsql\u003c/code\u003e\ncommand should be updated to \u003ccode\u003epg_dump\u003c/code\u003e instead. The host and username should\nalso stay the same. After that, we'll add the following options:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e--format\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ecustom \u003cspan class=\"nt\"\u003e--no-acl\u003c/span\u003e \u003cspan class=\"nt\"\u003e--no-owner\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe final component of the original connection string is the name of the\ndatabase. Leave the name and, after it, add a \u003ccode\u003e\u0026gt;\u003c/code\u003e to indicate that we want the\nresults of the command to be written to a file, followed by the name we want to\nuse for the backup file, with the \u003ccode\u003e.sql\u003c/code\u003e extension:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003emy_database \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e my_database.sql\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe updated string will look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003ePGPASSWORD\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c\"\u003e############# pg_dump -h ################-postgres.render.com -U my_database_user --format=custom --no-acl --no-owner my_database \u0026gt; my_database.sql\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ccode\u003ecd\u003c/code\u003e out of the app's directory, then run the command. It will not print any\noutput, but if you run \u003ccode\u003els\u003c/code\u003e, you should see the newly-created \u003ccode\u003e.sql\u003c/code\u003e file in the\ncurrent directory.\u003c/p\u003e\n\n\u003cp\u003eRepeat the process above for the \u003ccode\u003ebird_app_db\u003c/code\u003e database. The string will be\nexactly the same except for the last two elements: the name of the database and\nthe name of the backup file.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: Take care not to store any of the PSQL commands inside a project\nrepo. Those commands contain secure information so you don't want them to be\ndeployed to GitHub accidentally!\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3\u003eReplacing the Expiring PostgreSQL Instance\u003c/h3\u003e\n\n\u003cp\u003eReturn to the database page in the Render dashboard. Scroll to the bottom of the\npage, click \"Delete Database\" and follow the instructions. Next, create a new\nPostgreSQL instance by clicking the \"New +\" button and selecting PostgreSQL.\nGive your new instance a name (we'll use \u003ccode\u003emy_new_db\u003c/code\u003e), then scroll down to the\nbottom of the page, and click \"Create Database.\"\u003c/p\u003e\n\n\u003ch3\u003eRestoring the Databases to the New Instance\u003c/h3\u003e\n\n\u003cp\u003eOnce the new instance has been created (which might take a few minutes), copy\nthe new PSQL connection string and paste it into your code editor. Once again,\nwe'll be editing this string, this time to create the command to restore the\ndatabases from the backup files.\u003c/p\u003e\n\n\u003cp\u003eThe restore string will consist of the following:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ethe database password,\u003c/li\u003e\n\u003cli\u003ethe \u003ccode\u003epg_restore\u003c/code\u003e command,\u003c/li\u003e\n\u003cli\u003ethe host,\u003c/li\u003e\n\u003cli\u003ethe user,\u003c/li\u003e\n\u003cli\u003ethe options: \u003ccode\u003e--verbose --clean --no-acl --no-owner\u003c/code\u003e,\u003c/li\u003e\n\u003cli\u003ethe \u003ccode\u003e-d\u003c/code\u003e flag (for \u003ccode\u003edbname\u003c/code\u003e) followed by the name of the new database you're\nrestoring the data to (\u003ccode\u003emy_new_db\u003c/code\u003e),\u003c/li\u003e\n\u003cli\u003ethe name of the \u003ccode\u003e.sql\u003c/code\u003e file you're restoring from\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe final string will look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePGPASSWORD=################ pg_restore -h #################-postgres.render.com -U my_new_db_user --verbose --clean --no-acl --no-owner -d my_new_db my_database.sql\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRun the command in the terminal. You should see a flurry of activity as it\ncreates the database tables.\u003c/p\u003e\n\n\u003cp\u003eWe've restored the main database for our PostgreSQL instance, so the next step\nis to restore the database we created for our bird app. Before you can do that,\nyou'll first need to create the new database in PSQL. Execute the PSQL\nconnection string for the new PostgreSQL instance to launch the interactive\nterminal, then run the CREATE DATABASE command (you can use the same database\nname or a different one, as you prefer):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight sql\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eCREATE\u003c/span\u003e \u003cspan class=\"k\"\u003eDATABASE\u003c/span\u003e \u003cspan class=\"n\"\u003ebird_app_db\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOnce you've done that, you can restore the bird app data to the new database.\nUpdate the restore command, changing the database name and backup file name, and\nrun it in the terminal.\u003c/p\u003e\n\n\u003ch3\u003eConnecting the New Databases to Your Web Services\u003c/h3\u003e\n\n\u003cp\u003eThe final step in the process is to update the bird app's Web Service so that it\npoints to the new database. From the Render dashboard, select the bird app, then\nclick \"Environment\" in the nav on the left. Delete the value associated with the\nDATABASE_URL key and replace it with the Internal URL for the new \u003ccode\u003ebird_app_db\u003c/code\u003e\ndatabase. Now, if you click the app's URL, you should see the JSON for the list\nof birds.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eCongrats on deploying your first Rails app to the world wide web! Understanding\nthe deployment process and what it takes to run your application on another\ncomputer is an important step toward becoming a full-stack developer. Like\nanything new, this process can be daunting the first time you try it, but with\npractice and exposure, you'll build confidence over time.\u003c/p\u003e\n\n\u003cp\u003eIn the next lesson, we'll work on deploying a more complex application with a\nRails API backend and a React frontend, and talk through some of the challenges\nof running these two applications together.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhen creating a new Rails app from the terminal, what additional flag do you\nneed to use to be able to deploy it on Render?\u003c/li\u003e\n\u003cli\u003eWhat familiar process is used for deploying code to Render?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://render.com/docs/deploy-rails\"\u003eGetting Started with Ruby on Rails on Render\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://render.com/docs/databases\"\u003eRender Databases Guide\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-bcrypt","title":"Video: BCrypt","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-bcrypt\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-bcrypt\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-bcrypt/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/607607242/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/bcrypt-ruby/bcrypt-ruby\"\u003e\u003ccode\u003ebcrypt\u003c/code\u003e gem\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/bcrypt-ruby/bcrypt-ruby/blob/master/lib/bcrypt/password.rb#L64-L78\"\u003eThe \u003ccode\u003e==\u003c/code\u003e method in BCrypt\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-delete","title":"Video: Delete","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-delete\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-delete\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-delete/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/605796901/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","frontPage":false},{"exportId":"using-pure-functions-to-update-application-state","title":"Using Pure Functions to Update Application State","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-data-flow\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-data-flow\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-data-flow/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDefine what a pure function is\u003c/li\u003e\n\u003cli\u003eExplain the fundamentals of the Redux flow\u003c/li\u003e\n\u003cli\u003eExplain how pure functions update our application state\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSo far we know that all of our state is in a JavaScript object, and that our\nactions are in another JavaScript object called an action. In this lesson, we\nwill learn the specifics of how Redux uses the action to update state.\u003c/p\u003e\n\n\u003ch2\u003eFunctions to the Rescue\u003c/h2\u003e\n\n\u003cp\u003eLet's take a look at an example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSomehow I want to apply this action to the current state so that at the end our\nstate is updated to look like the following: \u003ccode\u003estate -\u0026gt; {count: 1}\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis seems easy enough. We can simply write a function that takes in our\nprevious state and our action, and depending on that action produces a new\nstate. Here's what it could look like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThat's pretty straightforward code. If the action's type property is the String\n\u003ccode\u003e'counter/increment'\u003c/code\u003e then go ahead and increment the value of \u003ccode\u003ecount\u003c/code\u003e and\nreturn the new state.\u003c/p\u003e\n\n\u003cp\u003eThe important piece of information we looked at to determine how to change the\nstate was \u003ccode\u003eaction.type\u003c/code\u003e. Actions always need a \u003ccode\u003etype\u003c/code\u003e property so the function\nknows what to do. If you can imagine a whole bunch of different actions that\nchange the state in different ways — \u003ccode\u003e'counter/decrement'\u003c/code\u003e,\n\u003ccode\u003e'counter/incrementByTen'\u003c/code\u003e and so on — it shouldn't be hard to see how that code\ncould become very messy with a bunch of \u003ccode\u003eif\u003c/code\u003es and \u003ccode\u003eelse if\u003c/code\u003es. Instead, it is\ncustomary to use a \u003ccode\u003eswitch case\u003c/code\u003e statement.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis makes it very explicit that \u003ccode\u003eaction.type\u003c/code\u003e is the information we are\nswitching on to make our decision about how to change the state.\u003c/p\u003e\n\n\u003cp\u003eWe'll talk about this in depth later, but it is important that when we change\nthe state we never return \u003ccode\u003enull\u003c/code\u003e or \u003ccode\u003eundefined\u003c/code\u003e. We'll cover this by adding a\n\u003ccode\u003edefault\u003c/code\u003e case to our function.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis way, no matter what, when accessing the Redux state we'll always get some\nform of the state back.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// =\u0026gt; {count: 1}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOk, so if you copy and paste that code into a JavaScript console, you'll see\nthat the function works just as we'd expect. The state and action are passed to\nour \u003ccode\u003echangeState function\u003c/code\u003e, which hits the \u003ccode\u003e'counter/increment'\u003c/code\u003e case statement.\nThen it takes the state's count of zero, adds one to it, and returns a new\nobject \u003ccode\u003e{ count: 1 }\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eNow let's have this function respond to another action, decrease count. Try\ngiving it a shot yourself before looking at the answer.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/decrement\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// =\u0026gt; {count: 1}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/decrement\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// =\u0026gt; {count: 0}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOk! That my friends, is the crux of Redux. To summarize:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eAction \u0026amp; Current State -\u0026gt; Function -\u0026gt; Updated State\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBecause our function is combining two pieces of information — our current state\nand an action — and reducing this combination into one value, we say that it\n\u003cem\u003ereduces\u003c/em\u003e the two into one updated state. For this reason, we call this function\na reducer:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eAction \u0026amp; Current State -\u0026gt; Reducer -\u0026gt; Updated State\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs you learn more about Redux, things may become more complex. Just remember\nthat this flow is always at the core of Redux. An \u003cstrong\u003eaction\u003c/strong\u003e gets sent to a\n\u003cstrong\u003ereducer\u003c/strong\u003e which then updates the state of the application.\u003c/p\u003e\n\n\u003ch2\u003eReducers are pure functions\u003c/h2\u003e\n\n\u003cp\u003eAn important thing to note about reducers is that they are pure functions. Let's\nremember the characteristics of pure functions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eThe return value of a pure function is determined solely by its input values.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003ePure functions have no side effects. By this we mean pure functions do not\nhave any effect outside of the function itself. They only return a value.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNote: The reason we like pure functions so much is because if a function has\nno side effects and always returns the same value given the same input, it\nbecomes really predictable. In addition, the lack of side effects means that\nthe functions are also contained, and can be used safely without affecting the\nrest of your application.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/decrement\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet's take these two characteristics of pure functions in turn, and ensure that\nwe are adhering to them here.\u003c/p\u003e\n\n\u003cp\u003eThe first characteristic of pure functions means that given the same input to\nthe function, I will always receive the same output from that function. That\nseems to hold; given a specific state object like \u003ccode\u003e{count: 2}\u003c/code\u003e and an action\nobject like \u003ccode\u003e{type: 'counter/decrement'}\u003c/code\u003e, will I always get back the same\nvalue? Yes. Given those two arguments, the output will always be \u003ccode\u003e{count: 1}\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eAs for the 'no side effects' characteristic, there's something pretty subtle\ngoing on in our reducer. The object returned is not the same object that is\npassed as an argument to the function, but rather a new object that is\nconstructed each time our reducer is called. Do you see why? Take a close look\nat the line that says \u003ccode\u003ereturn {count: state.count + 1}\u003c/code\u003e. This line is\nconstructing a new JavaScript object and setting its count attribute equal to\nthe previous state's count plus one. So we adhere to the constraints of a pure\nfunction by not changing any value that is defined outside of the function.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned more about how updates to state are handled in Redux.\nSpecifically, we learned that state is updated by a special type of function\nknown as a reducer, which contains a switch/case statement. The reducer takes as\narguments the current state and an \u003cstrong\u003eaction\u003c/strong\u003e, which is a simple JavaScript\nobject that contains a \u003ccode\u003etype\u003c/code\u003e attribute. Then, based on the action \u003ccode\u003etype\u003c/code\u003e, the\nreducer executes the matching \u003ccode\u003ecase\u003c/code\u003e of the \u003ccode\u003eswitch\u003c/code\u003e statement to update state.\u003c/p\u003e\n\n\u003cp\u003eIn Redux, reducers are pure functions, which means that given the same arguments\nof state and action, they will always produce the same new state. It also means\nthat our reducer never updates the previous state object, but rather creates a\nnew updated object.\u003c/p\u003e","frontPage":false},{"exportId":"video-sessions-and-cookies-configuration","title":"Video: Sessions and Cookies: Configuration","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-sessions-and-cookies--configuration\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-sessions-and-cookies--configuration\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-sessions-and-cookies--configuration/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/609112816/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/action_controller_overview.html#session\"\u003eRails Guides: Session\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/action_controller_overview.html#cookies\"\u003eRails Guides: Cookies\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-crud-app-introduction","title":"Video: CRUD App Introduction","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-intro-to-crud\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-intro-to-crud\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-intro-to-crud/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/597329332/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","frontPage":false},{"exportId":"video-rails-file-structure","title":"Video: Rails File Structure","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-rails-file-structure\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-file-structure\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-file-structure/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/600359212/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/getting_started.html\"\u003eGetting Started with Rails\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"intro-to-rails","title":"Intro to Rails","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-intro-to-rails-readme\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-intro-to-rails-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-intro-to-rails-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand the purpose of Rails\u003c/li\u003e\n\u003cli\u003eLearn where to get help with Rails\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWelcome to Rails\u003c/h2\u003e\n\n\u003cp\u003eRuby on Rails was created by David Heinemeier Hansson in 2004. The idea arose\nbecause he noticed that, as he was making web applications with Ruby, he was\ncopy pasting common parts from previous apps into his new work. As a developer,\nhe (and all of us) loved solving hard problems. The only way to get to solving\nthe hard problems that are unique to the domain you are working in is to go up a\n\u003cstrong\u003elayer of abstraction\u003c/strong\u003e. The nitty-gritty of basic web apps should be removed\nfrom your head. That was the idea behind Rails: it handles the repetitive code\nthat is common across apps and enables you to focus on the hard bits.\u003c/p\u003e\n\n\u003cp\u003eHave a ton of fun. Rails changed the way web apps are developed; enjoy the\nspoils of many open source contributors' hard work. With over a decade of open\nsource contributions, Rails has evolved into one of the most powerful web\napplication frameworks available. Before we can start building applications, it\nis important to first understand what the Ruby on Rails framework is... and what\nit's not.\u003c/p\u003e\n\n\u003ch2\u003eWhy Use a Framework?\u003c/h2\u003e\n\n\u003cp\u003eIf you wanted to put surround sound in your house, would you go and spend years\nresearching how to best fabricate speakers, learn how to transfer sound through\nwires, weld your own sound board, and create from scratch every other component\nthat would be required to have a surround sound system in your home? Most likely\nnot. Instead it would be much smarter and more efficient to purchase a surround\nsound system from an organization that already put in all of the research and\ndevelopment work to create a professional system.\u003c/p\u003e\n\n\u003cp\u003eIn the same way, when it comes to building a web application it would\ntechnically be possible to build out all of the functionality yourself, but it's\ntypically a better idea to leverage a system that has already spent over a\ndecade developing the tools necessary for getting applications built.\u003c/p\u003e\n\n\u003ch2\u003eWhat is Ruby on Rails?\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eA web framework\u003c/strong\u003e: A web framework provides developers the tools they need\nin order to build applications. While every application is unique there are\ncertain components that can be found in almost every application, such as:\nrouting, asset management, database connections, and the list goes on. A good\nweb framework gives developers these baseline tools so that they don't have to\ncreate the base application functionality for each new project.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eA Ruby Gem\u003c/strong\u003e: At its core, Ruby on Rails is simply a set of Ruby code\nlibraries, and since the entire codebase is open source you have the ability to\nreview the framework to better understand how it works.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAn MVC framework\u003c/strong\u003e: MVC stands for Model-View-Controller. MVC is a popular\napplication architecture that helps developers naturally separate concerns and\norganize their applications properly. This setup encourages a specific set of\nconventions, such as placing the logic for the application in the model files,\nmanaging the code flow in the controllers, and displaying content to the user\nin the views.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAn opinionated framework\u003c/strong\u003e: one way Rails speeds up developer productivity\nis by enforcing strong opinions about how your code should be organized, from\nfolder structure to file and variable naming. This has a few benefits: it\nfrees developers up from having to make decisions about these things, and it\nalso allows for some powerful abstractions to help with our code. By following\n\u003cstrong\u003econvention over configuration\u003c/strong\u003e, we get the benefits of this abstraction\nwithout having to write nearly as much code as in some other frameworks.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cem\u003eOn a side, but very important, note: don't worry if some or all of what we just\nreviewed seems foreign. We'll be covering everything in detail in future\nlessons, so don't worry if it all feels a little overwhelming.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003eHow We Will Be Using Rails\u003c/h2\u003e\n\n\u003cp\u003eWhen Rails was first developed, it was meant to build \u003cstrong\u003efull-stack MVC\u003c/strong\u003e\napplications, where developers could write code for both the frontend and the\nbackend in one place. Rails can \u003cstrong\u003ealso\u003c/strong\u003e be used to create APIs, so we can serve\ndata to a separate frontend web application, such as a Single Page Application\nbuilt with React.\u003c/p\u003e\n\n\u003cp\u003eIn this phase, we'll be focusing primarily on \u003cstrong\u003eRails as an API\u003c/strong\u003e to serve JSON\ndata. By the end of the phase, you'll be able to build out a full-stack\napplication with Rails as a backend, and React as a frontend.\u003c/p\u003e\n\n\u003ch2\u003eHow to Get Help with Rails\u003c/h2\u003e\n\n\u003cp\u003eAs you're learning about Rails, make sure to bookmark the\n\u003ca href=\"https://guides.rubyonrails.org/\"\u003eRuby on Rails Guides\u003c/a\u003e and refer back to it often! Rails is a very\nmature framework with a lot of great features. While we'll be covering a good\namount of those features in this phase, there's a whole lot more to explore.\u003c/p\u003e\n\n\u003cp\u003eThe Rails guides are full of great examples and are always kept up to date with\nthe latest version of Rails, so they should be your go-to source any time\nyou're curious about what Rails can do.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat do we mean when we say that Rails is a \u003cem\u003eframework\u003c/em\u003e?\u003c/li\u003e\n\u003cli\u003eWhat do we mean when we say that Rails is \u003cem\u003eopinionated\u003c/em\u003e? What are the\nadvantages and disadvantages of this characteristic of Rails?\u003c/li\u003e\n\u003c/ol\u003e","frontPage":false},{"exportId":"video-serializers-introduction","title":"Video: Serializers Introduction","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-serializers-introduction\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-serializers-introduction\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-serializers-introduction/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/606907833/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/rails-api/active_model_serializers/tree/v0.10.6/docs\"\u003e\u003ccode\u003eactive_model_serializers\u003c/code\u003e gem\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-client-server-post-requests","title":"Video: Client-Server POST Requests","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-client-server-post-requests\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-client-server-post-requests\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-client-server-post-requests/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/606767916/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","frontPage":false},{"exportId":"video-rest","title":"Video: REST","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-rest\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rest\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rest/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/604353418/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html#resource-routing-the-rails-default\"\u003eRails Guides: Resource Routing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-serializing-relationships","title":"Video: Serializing Relationships","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-serializing-relationships\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-serializing-relationships\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-serializing-relationships/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/606919896/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/rails-api/active_model_serializers/blob/v0.10.6/docs/general/serializers.md#associations\"\u003eActive Model Serializers: Associations\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"review-and-dive-into-actions","title":"Review and Dive into Actions","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-action-creators\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-action-creators\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-action-creators/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDefine the important properties of an action\u003c/li\u003e\n\u003cli\u003eUse action creators to create an action\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, we'll discuss the properties of actions, and how to use\nfunctions to create actions.\u003c/p\u003e\n\n\u003ch2\u003ePurpose of Actions\u003c/h2\u003e\n\n\u003cp\u003eAs you know, we've been dispatching actions to our store to indicate the changes\nwe would make to our state. In Redux, a user may click on a button which\ndispatches an action, and the reducer would take information from that action to\nchange the state. You saw in the last section that simply by placing a\n\u003ccode\u003econsole.log\u003c/code\u003e in our reducer, we could see a history of every action that was\npassed to the reducer, making our debugging job easier.\u003c/p\u003e\n\n\u003ch2\u003eStructuring Actions\u003c/h2\u003e\n\n\u003cp\u003eAn action is simply a JavaScript object that has a property of \u003ccode\u003etype\u003c/code\u003e. The\nreducer uses this \u003ccode\u003etype\u003c/code\u003e property to see what it should do. Here is an example\nof a valid action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eincrementCount\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRemember that the store has a \u003ccode\u003edispatch\u003c/code\u003e method which we can use to dispatch\nthis action for it to be handled by the reducer.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eincrementCount\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe dispatch method passes the action to the reducer, which then runs its switch\nstatement to decide what to do.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eAction Creators\u003c/h2\u003e\n\n\u003cp\u003eWe know that our actions are simply an object with at least one property called\n\u003ccode\u003etype\u003c/code\u003e. An example of using our actions is\n\u003ccode\u003estore.dispatch({ type: 'counter/increment' })\u003c/code\u003e. Well, what if we do the\nfollowing:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eincrementCount\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eincrementCount\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn the above lines of code we define a function called \u003ccode\u003eincrementCount()\u003c/code\u003e whose\njob is to return an action. Then we execute the \u003ccode\u003eincrementCount()\u003c/code\u003e function,\nwhich returns that action, and we dispatch that action to the store. If you\nthink that this is equivalent to\n\u003ccode\u003estore.dispatch({ type: 'counter/increment' })\u003c/code\u003e, you are right.\u003c/p\u003e\n\n\u003cp\u003eWe prefer wrapping our actions in a function, because oftentimes our actions\nhave some parts that will need to change, and a function comes in handy. For\nexample:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eaddTodo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etodo\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003etodos/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003etodo\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis type of function is known as an \u003cstrong\u003eaction creator\u003c/strong\u003e, because its only job is\nto create actions that work with our reducers.\u003c/p\u003e\n\n\u003cp\u003eIn the above function, we can imagine generating actions with different payload\nproperties depending on what we pass to the \u003ccode\u003eaddTodo\u003c/code\u003e function.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003eaddTodo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebuy groceries\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// -\u0026gt; { type: 'todos/add', payload: 'buy groceries' }\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003eaddTodo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ewatch netflix\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// -\u0026gt; { type: 'todos/add', payload: 'watch netflix' }\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBy wrapping our action in a function, we are able to easily keep some of the\naction properties the same, like type, while changing others, like the payload.\nWe would dispatch the action in the following way:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddTodo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebuy groceries\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThat would return the action \u003ccode\u003e{ type: 'todos/add', payload: 'buy groceries' }\u003c/code\u003e,\nwhich we then send to the dispatch function.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn Redux, we update the store state by dispatching actions. An action is simply\na JavaScript object that has a \u003ccode\u003etype\u003c/code\u003e property, and often a \u003ccode\u003epayload\u003c/code\u003e, which are\nused by our reducer to determine the next state.\u003c/p\u003e\n\n\u003cp\u003eTo simplify the process of dispatching actions, we can write \u003cstrong\u003eaction creator\u003c/strong\u003e\nfunctions that return action objects.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/tutorials/fundamentals/part-3-state-actions-reducers#designing-actions\"\u003eRedux: Designing Actions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-deployment","title":"Video: Deployment","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-deployment\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-deployment\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-deployment/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/609341164/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://devcenter.heroku.com/articles/getting-started-with-rails6\"\u003eHeroku: Getting Started with Rails 6\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"using-data-structures","title":"Using Data Structures","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-using-data-structures\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-using-data-structures\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-using-data-structures/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDefine \"Data Structure\"\u003c/li\u003e\n\u003cli\u003eEvaluate the properties of common data structures (arrays and hashes)\u003c/li\u003e\n\u003cli\u003eEstablish a general process to build data structures\u003c/li\u003e\n\u003cli\u003eIdentify when to use different data structures\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWhat is a data structure? In essence, a data structure is a tool for organizing\na collection data so that we can interact with it efficiently. All data\nstructures share the following characteristics:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThey store \u003cstrong\u003ecollections of values\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eThey also store the \u003cstrong\u003erelationship between those values\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eThey provide \u003cstrong\u003emethods for interacting with those values\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eConsider a data structure you've been using for quite some time: an \u003cstrong\u003earray\u003c/strong\u003e.\nArrays are a common data structure that are built in to most programming\nlanguages. In Ruby and JavaScript, arrays have the following characteristics:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThey stores a collection of values of any data type\u003c/li\u003e\n\u003cli\u003eThey stores those values in an indexed list\u003c/li\u003e\n\u003cli\u003eThey provide many methods for interacting with those values, like:\n\n\u003cul\u003e\n\u003cli\u003eaccessing elements at a particular index position\u003c/li\u003e\n\u003cli\u003eadding elements\u003c/li\u003e\n\u003cli\u003eremoving elements\u003c/li\u003e\n\u003cli\u003eand iterating through every element\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhy Do We Need Different Data Structures?\u003c/h2\u003e\n\n\u003cp\u003eWhile built-in data structures like arrays and hashes are useful in many\nscenarios, it's also beneficial to be able to create custom data structures that\ncan be used to help solve specific problems \u003cstrong\u003emore efficiently\u003c/strong\u003e than using\nbuilt-in data structures. Different data structures excel in different\nsituations.\u003c/p\u003e\n\n\u003cp\u003eFor example, imagine a problem where you needed to add and remove elements from\nthe beginning of a list. If we tried solving this problem using an array, our\nsolution wouldn't be particularly efficient, since adding/removing elements from\nthe beginning of an array has a Big O runtime of O(n), because adding/removing\nelements from the beginning of an array causes every other element in the array\nto be re-indexed. We can solve these kinds of problems using another data\nstructure that you'll learn about later in this section, a \u003cstrong\u003elinked list\u003c/strong\u003e,\nwhich has a O(1) runtime for adding/removing elements from the beginning of the\nlist.\u003c/p\u003e\n\n\u003cp\u003eIn fact, you've already interacted a lot of different data structures besides\njust arrays and hashes!\u003c/p\u003e\n\n\u003cp\u003eFor example, any time you've interacted with the DOM in JavaScript, you've been\ninteracting with a special data structure known as a \u003cstrong\u003etree\u003c/strong\u003e; and\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\"\u003e\u003ccode\u003equerySelector\u003c/code\u003e\u003c/a\u003e is a \u003cstrong\u003etree traversal method\u003c/strong\u003e for efficiently finding a\nchild element within the DOM tree.\u003c/p\u003e\n\n\u003cp\u003eReact also uses its own custom data structure, the \u003ca href=\"https://github.com/acdlite/React-fiber-architecture#what-is-a-fiber\"\u003eReact fiber tree\u003c/a\u003e,\nwhich allows it to efficiently perform updates to the DOM based on changes to\nstate (and also is the reason you need to provide a special \u003ccode\u003ekey\u003c/code\u003e prop for lists\nof elements).\u003c/p\u003e\n\n\u003cp\u003eAnother place you've seen a common data structure in action is the\n\u003ca href=\"https://en.wikipedia.org/wiki/Call_stack\"\u003ecall stack\u003c/a\u003e, which uses a \u003cstrong\u003estack\u003c/strong\u003e data structure to keep track of all the\ncurrently running functions in a program and make sure they're executed in the\ncorrect order.\u003c/p\u003e\n\n\u003cp\u003eIn the rest of lessons in this section, we'll show you how to build some of\nthese common data structures, including linked lists, stacks, and binary search\ntrees, and identify when to use them to solve specific problems.\u003c/p\u003e\n\n\u003ch2\u003eBuilding Custom Data Structures\u003c/h2\u003e\n\n\u003cp\u003eTo get a sense of what the general process of building data structures is like,\nlet's build out our very own version of the \u003ccode\u003eArray\u003c/code\u003e data structure in Ruby. As a\nreminder, every data structure we make needs a way to do the following things:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eStore \u003cstrong\u003ecollections of values\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eStore the \u003cstrong\u003erelationship between those values\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eProvide \u003cstrong\u003emethods for interacting with those values\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eTo start off, every data structure we'll build will be defined as a class. For\nour array implementation, we'll call our class \u003ccode\u003eMyArray\u003c/code\u003e to differentiate it\nfrom the built-in \u003ccode\u003eArray\u003c/code\u003e class:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyArray\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEach data structure will also use \u003cstrong\u003eanother data structure\u003c/strong\u003e in order to store\nthe collection of values and help establish the relationships between them. To\nbuild our custom \u003ccode\u003eMyArray\u003c/code\u003e class, let's use a \u003ccode\u003eHash\u003c/code\u003e as the underlying data\nstructure, along with a \u003ccode\u003elength\u003c/code\u003e attribute to keep track of how many elements\nare in the array:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyArray\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_reader\u003c/span\u003e \u003cspan class=\"ss\"\u003e:hash\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@hash\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@length\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOur data structures also need to provide \u003cstrong\u003emethods\u003c/strong\u003e for interacting with the\ndata. Here's how we could implement \u003ccode\u003epush\u003c/code\u003e and \u003ccode\u003epop\u003c/code\u003e for this class:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyArray\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_reader\u003c/span\u003e \u003cspan class=\"ss\"\u003e:hash\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@hash\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@length\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehash\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003epop\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehash\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003earr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMyArray\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\n\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eputs\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epop\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; 2\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe've now defined our very own custom data structure! While it's highly unlikely\nthat you'll need to build your own \u003cem\u003earray\u003c/em\u003e class in the future, understanding\nthis general approach to building data structures will help when you need to\ncreate other data structures that aren't provided by your programming language,\nsuch as a linked list.\u003c/p\u003e\n\n\u003cp\u003eAnother advantage of building custom data structures like this for solving\nalgorithm problems is that it makes it easier to understand the Big O runtime.\u003c/p\u003e\n\n\u003cp\u003eFor example, in the code above, we can safely say that the \u003ccode\u003epush\u003c/code\u003e and \u003ccode\u003epop\u003c/code\u003e\noperations have a O(1) runtime, since accessing and deleting elements from a\nhash has a O(1) runtime. You can refer to this \u003ca href=\"https://www.bigocheatsheet.com/\"\u003eBig O Cheat Sheet\u003c/a\u003e\nfor more details on common runtimes.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIf you'd like to explore this further, try adding a \u003ccode\u003eshift\u003c/code\u003e and \u003ccode\u003eunshift\u003c/code\u003e\nmethod to the array class. How does adding/removing elements from the\nbeginning instead of the end of the list affect the runtime of those methods?\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we defined a \"data structure\" as a tool that stores a\n\u003cstrong\u003ecollection of values\u003c/strong\u003e along with the \u003cstrong\u003erelationship between those values\u003c/strong\u003e\nand provides \u003cstrong\u003emethods for interacting with those values\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eDifferent data structures are more efficient at solving different problems, so\nthe more data structures you familiarize yourself with, the more tools you'll\nhave at your disposal to tackle different kinds of problems as efficiently as\npossible.\u003c/p\u003e\n\n\u003cp\u003eIn general, building a data structure involves creating a class definition;\nusing an auxiliary data structure to store values; and writing different methods\nfor interacting with those values.\u003c/p\u003e\n\n\u003cp\u003eIn the coming lessons, we'll explore several common data structures by providing\ninstructions on how to build them, and then giving problems to practice using\nthose data structures in different scenarios.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.bigocheatsheet.com/\"\u003eBig O Cheat Sheet\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-auth-login","title":"Video: Auth: Login","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-auth--login\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-auth--login\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-auth--login/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/609282660/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","frontPage":false},{"exportId":"doubly-linked-list-data-structure","title":"Doubly Linked List Data Structure","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-doubly-linked-list\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-doubly-linked-list\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-doubly-linked-list/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eIdentify the use cases for a \u003cstrong\u003edoubly linked list\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eDemonstrate common methods for a doubly linked list\u003c/li\u003e\n\u003cli\u003eDifferentiate between a doubly linked list and a singly linked list\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe learned in the last lesson about singly linked lists, their use cases, and\nthe general concept behind linked lists. In this lesson, we're going to dive\ninto what a doubly linked list is, and what the difference is between singly and\ndoubly linked lists.\u003c/p\u003e\n\n\u003ch2\u003eDefining a Doubly Linked List\u003c/h2\u003e\n\n\u003cp\u003eIn the previous lessons we learned how unlike arrays, linked lists are not\nindexed, and in order to search from node to node, we need use pointers to go\nfrom one node onto the next node. But what if we wanted to go back a node? In a\nsingly linked list, a node doesn't know which node came before it, because it\ndoesn't have a pointer pointing to the previous node. Doubly linked lists have\npointers to the next node \u003cem\u003eas well as\u003c/em\u003e the previous node. Let's take a look at\nhow we would build this out in our \u003ccode\u003eNode\u003c/code\u003e class:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eNode\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:data\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:next_node\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:prev_node\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enext_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eprev_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@next_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enext_node\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@prev_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprev_node\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAll we really had to do was a \u003ccode\u003eprev_node\u003c/code\u003e attribute, and now we have two\npointers on our \u003ccode\u003eNode\u003c/code\u003e class, so that each node points in two directions: to the\nnext node in the list, and to the previous node. While this is a really small\nand easy change to make to the structure of our node, by doing this change we\nare able to make our linked list much more useful, efficient, and dynamic!\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-doubly-linked-list/pup_doubly_linked_list.png\" alt=\"Pup Linked List\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eSingly vs Doubly Linked Lists\u003c/h2\u003e\n\n\u003cp\u003eOne way we can improve the time complexity of our singly linked list\nimplementation is by adding additional references to nodes in the list. For\nexample, consider the following \u003ccode\u003eSinglyLinkedList\u003c/code\u003e class:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSinglyLinkedList\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:head\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@head\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enil?\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehead\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# traverse the entire list to find the last node\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# add a new node at the end\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# 1 -\u0026gt; 2 -\u0026gt; 3\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# 1 -\u0026gt; 2 -\u0026gt; 3 -\u0026gt; 4\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe time complexity of its \u003ccode\u003eappend\u003c/code\u003e method is O(n), since we need to traverse\neach element of the linked list in order to find the last node and remove it. We\ncan make the \u003ccode\u003eappend\u003c/code\u003e method efficient by keeping track of the list's \u003cstrong\u003etail\u003c/strong\u003e\nnode in addition to the head:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSinglyLinkedList\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:head\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:tail\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@head\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@tail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enil?\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehead\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# no need to traverse! we can access the last node directly (self.tail)\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# 1 -\u0026gt; 2 -\u0026gt; 3\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etail\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# 1 -\u0026gt; 2 -\u0026gt; 3 -\u0026gt; 4\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# we also need to make sure to keep track of the new tail\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter this refactor, the time complexity of our \u003ccode\u003eappend\u003c/code\u003e method is O(1), since\nwe no longer need to traverse the list in order to find the tail before\nappending a new node. The tradeoff to keeping references to additional nodes in\nour list, like the tail, is it takes more space to keep track of these\nadditional references. Adding additional reference can also increase the written\ncomplexity of our code for certain methods, since we need to maintain those\nreferences correctly.\u003c/p\u003e\n\n\u003cp\u003eA \u003cstrong\u003edoubly linked list\u003c/strong\u003e makes insertion and removal more efficient in certain\ncases by keeping references to the \u003cstrong\u003eprevious\u003c/strong\u003e node in addition to the next\nnode.\u003c/p\u003e\n\n\u003cp\u003eLet's say we have a singly linked list, and we wanted to remove the last item.\nWe would have to traverse the \u003cem\u003eentire\u003c/em\u003e list in order to find the \u003cem\u003esecond to last\nnode\u003c/em\u003e in the list and assign it as the new tail, since we can't go directly to\nthe tail and work backwards:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSinglyLinkedList\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:head\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:tail\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@head\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@tail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edelete_tail\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enil?\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e# traverse the entire list to find the second-to-last node (prev)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprev\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eprev\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e# remove the last node by removing the link between the second-to-last node and the tail\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 1 -\u0026gt; 2 -\u0026gt; 3\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 1 -\u0026gt; 2\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn this case, the time complexity for removing a node from the end of the list\nis O(n) since we need to traverse the list to find the second-to-last node.\u003c/p\u003e\n\n\u003cp\u003eWith a \u003cstrong\u003edoubly linked list\u003c/strong\u003e, we already have a pointer on each node pointing\nto the previous node, so we can just take one step backwards from the \u003ccode\u003etail\u003c/code\u003e by\nusing \u003ccode\u003e.prev_node\u003c/code\u003e without needing to iterate:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDoublyLinkedList\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:head\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:tail\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@head\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@tail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edelete_tail\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enil?\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003etail\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehead\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# access the second-to-last node (self.tail.prev_node)\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eprev\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etail\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eprev_node\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# update the tail and next_node pointers\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# 1 \u0026lt;-\u0026gt; 2 \u0026lt;-\u0026gt; 3\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eprev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprev\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# 1 \u0026lt;-\u0026gt; 2\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter this refactor, our time complexity for removing a node from the end of the\nlist is O(1), since we don't need to traverse the entire list to find the new\ntail.\u003c/p\u003e\n\n\u003cp\u003eThe tradeoff is that we now need to maintain these references between nodes\ncorrectly for \u003cem\u003eall\u003c/em\u003e our linked list methods. For example, the \u003ccode\u003eappend\u003c/code\u003e method\nfor a doubly linked list is more complicated than for a singly linked list,\nsince we have to keep track of the \u003ccode\u003enext_node\u003c/code\u003e and \u003ccode\u003eprev_node\u003c/code\u003e correctly any\ntime a node is added:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDoublyLinkedList\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:head\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:tail\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@head\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@tail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enil?\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehead\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eprev_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etail\u003c/span\u003e\n      \u003cspan class=\"n\"\u003etail\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eSingly linked lists and doubly linked lists are very similar. Unlike arrays,\nthey are not indexed, and they use pointers to reference their nodes. Singly\nlinked lists are one-directional, while doubly linked lists go both ways. Having\nthe extra \u003ccode\u003eprev_node\u003c/code\u003e pointer in a doubly linked list can be useful in the\nfollowing scenarios:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRemoving an item form the end of a list\u003c/li\u003e\n\u003cli\u003eReversing the list (traversal from tail to head)\u003c/li\u003e\n\u003cli\u003eImplementing \"previous/next\" operations or \"undo/redo\" operations (like\nbuilding a playlist or a text editor)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe trade-offs are that a doubly linked list takes up more memory than to a\nsingly linked list, since we have to keep track of multiple pointers on each\nnode; and the code for a doubly linked list is also more complicated to write\nand maintain because of the added complexity of keeping both the \u003ccode\u003enext_node\u003c/code\u003e and\n\u003ccode\u003eprev_node\u003c/code\u003e references.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Linked_list\"\u003eLinked List\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.rubyguides.com/2017/08/ruby-linked-list/\"\u003ePractical Linked List in Ruby\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-authorization","title":"Video: Authorization","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-authorization\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-authorization\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-authorization/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/609304574/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/action_controller_overview.html#filters\"\u003eRails Guides: Filters - \u003ccode\u003ebefore_action\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-show","title":"Video: Show","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-show\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-show\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-show/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/604161988/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","frontPage":false},{"exportId":"video-auth-signup","title":"Video: Auth: Signup","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-auth--signup\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-auth--signup\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-auth--signup/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/609222184/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://api.rubyonrails.org/classes/ActiveModel/SecurePassword/ClassMethods.html#method-i-has_secure_password\"\u003e\u003ccode\u003ehas_secure_password\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-create","title":"Video: Create","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-create\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-create\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-create/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/604375953/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","frontPage":false},{"exportId":"cookies-and-sessions","title":"Cookies and Sessions","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-cookies-and-sessions-readme\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-cookies-and-sessions-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-cookies-and-sessions-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain what a cookie is and what cookies can be used for\u003c/li\u003e\n\u003cli\u003eIdentify how cookies are part of the request/response cycle\u003c/li\u003e\n\u003cli\u003eExplain what a session is in Rails\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eCookies are small pieces of information that are sent from the server to the\nclient. They are then stored on the client (in the browser) and sent back to the\nserver with each subsequent request.\u003c/p\u003e\n\n\u003cp\u003eHTTP is a \u003cstrong\u003estateless\u003c/strong\u003e protocol, since the server doesn't maintain information\nabout each client for all requests. Cookies help make \u003cstrong\u003estateful\u003c/strong\u003e HTTP requests\nby providing a mechanism for sending additional information to the server with\neach request.\u003c/p\u003e\n\n\u003cp\u003eCookies are \u003cem\u003edomain-specific\u003c/em\u003e. The browser stores cookies for each domain (e.g.\n\u003ccode\u003enytimes.com\u003c/code\u003e) separately, and only cookies for that domain are sent back to\nthe server with subsequent requests.\u003c/p\u003e\n\n\u003cp\u003eCookies are typically used to store session information (user login, shopping\ncart, etc.), personalization (user preferences, themes, etc.) and tracking\ninformation (analyzing user behavior). They provide a way for us to verify who\na user is once, and then remember it for their entire session. Without cookies,\nyou would have to provide your username and password on every single request to\nthe server.\u003c/p\u003e\n\n\u003cp\u003eIn this document, we'll cover what cookies are, how they fit into the HTTP\nrequest/response cycle, and how you can access them within your Rails\napplication.\u003c/p\u003e\n\n\u003ch2\u003ePage View Tracking\u003c/h2\u003e\n\n\u003cp\u003eLet's say we want to build a paid blog site, like Medium. Users can view up to\n5 articles per month for free, but after that, they need to subscribe to see\nmore content.\u003c/p\u003e\n\n\u003cp\u003eHow can we keep track of a user's page views?\u003c/p\u003e\n\n\u003cp\u003eWe could make a \u003ccode\u003eUser\u003c/code\u003e model, and create a \u003ccode\u003epageviews_remaining\u003c/code\u003e attribute to\nkeep track of how many articles the user can read; but ideally, we'd like to let\nusers browse the site without needing to log in, and still have some way of\ntracking their page views.\u003c/p\u003e\n\n\u003cp\u003eWhen a user views an article, their browser will make a request to\n\u003ccode\u003e/articles/:id\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eRemember what's included in an HTTP request:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAn \u003ca href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html\" title=\"HTTP RFC 9 — Method Definitions\"\u003eHTTP verb\u003c/a\u003e, like \u003ccode\u003eGET\u003c/code\u003e, \u003ccode\u003ePUT\u003c/code\u003e, or \u003ccode\u003ePOST\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eA path (\u003ccode\u003e/articles/:id\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003eVarious headers containing additional metadata (like the \u003ccode\u003eContent-Type\u003c/code\u003e of the\nrequest)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHTTP servers are typically stateless. They receive requests, process them,\nreturn data, then forget about them. This means that all required information\nmust be passed with the request, either in the path or in the headers.\u003c/p\u003e\n\n\u003cp\u003eFor example, \u003ccode\u003eGET\u003c/code\u003e requests usually encode the necessary information in the\npath. When you write a route matching \u003ccode\u003e/articles/:id\u003c/code\u003e, you are telling Rails to\npull the value \u003ccode\u003eid\u003c/code\u003e from the request path and save it in \u003ccode\u003eparams[:id]\u003c/code\u003e. In your\n\u003ccode\u003earticles_controller\u003c/code\u003e, you'll probably have a method that looks something like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003earticle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eArticle\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003earticle\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis code loads the row for that article from the database and returns it as an\nActive Record model object, which is then serialized as JSON. All the\ninformation needed for the \u003ccode\u003eGET\u003c/code\u003e request — in this case, the \u003ccode\u003eid\u003c/code\u003e of the article\nto render — is included in the path.\u003c/p\u003e\n\n\u003cp\u003eSimilarly, if we want to be able to keep track of page views, we need to figure\nout how to include that information in the request, either in the path or the\nheaders.\u003c/p\u003e\n\n\u003cp\u003eIt would be possible, though quite convoluted, to store this information in the\npath. Our JavaScript application could keep track of the articles the user has\nviewed, and include the remaining page views as an additional query parameter in\nthe request: \u003ccode\u003e/articles/3?pageviews_remaining=5\u003c/code\u003e. However, there are a few flaws\nto this approach: most obviously, it would be incredibly simple for the user to\nchange this number in the request and circumvent our paywall:\n\u003ccode\u003e/articles/3?pageviews_remaining=999\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eLuckily, cookies allow us to store this information in the only other place\navailable to us: HTTP headers.\u003c/p\u003e\n\n\u003ch2\u003eWhat's a Cookie, Anyway?\u003c/h2\u003e\n\n\u003cp\u003eLet's see what \u003ca href=\"http://tools.ietf.org/html/rfc6265\" title=\"HTTP State Management Mechanism\"\u003ethe spec\u003c/a\u003e has to say:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eThis section outlines a way for an origin server to send state\ninformation to a user agent and for the user agent to return the\nstate information to the origin server.\n\nTo store state, the origin server includes a Set-Cookie header in an\nHTTP response.  In subsequent requests, the user agent returns a\nCookie request header to the origin server.  The Cookie header\ncontains cookies the user agent received in previous Set-Cookie\nheaders.  The origin server is free to ignore the Cookie header or\nuse its contents for an application-defined purpose.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe description is quite technical, so let's look at their example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e== Server -\u0026gt; User Agent ==\nSet-Cookie: SID=31d4d96e407aad42\n\n== User Agent -\u0026gt; Server ==\nCookie: SID=31d4d96e407aad42\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn this example, the server is an HTTP server, and the User Agent is a browser.\nThe server responds to a request with the \u003ccode\u003eSet-Cookie\u003c/code\u003e header. This header sets\nthe value of the \u003ccode\u003eSID\u003c/code\u003e cookie to \u003ccode\u003e31d4d96e407aad42\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eNext, when the user visits another page on the same server, the browser sends\nthe cookie back to the server, including the \u003ccode\u003eCookie: SID=31d4d96e407aad42\u003c/code\u003e\nheader in its request.\u003c/p\u003e\n\n\u003cp\u003eCookies are stored in the browser. The browser doesn't care about what's in the\ncookies you set. It just stores the data and sends it along on future requests\nto your server. You can think of them as a hash — and indeed, as we'll see\nlater, Rails exposes cookies with a method that behaves much like a hash.\u003c/p\u003e\n\n\u003ch2\u003eUsing Cookies\u003c/h2\u003e\n\n\u003cp\u003eSo how would we use a cookie to store a reference to the user's page views?\nLet's say that we create a page view counter the first time a user views an\narticle. Then, in the \u003cstrong\u003eresponse\u003c/strong\u003e, we might include the header:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e== Server -\u0026gt; User Agent ==\nSet-Cookie: pageviews_remaining=5\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen the user views another article, we can instruct the browser to include\nthe cookie in the \u003cstrong\u003erequest\u003c/strong\u003e headers:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e== User Agent -\u0026gt; Server ==\nCookie: pageviews_remaining=5\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can look at this HTTP header, get the \u003ccode\u003epageviews_remaining\u003c/code\u003e from it, and\nwrite some conditional logic to customize the response based on the\n\u003ccode\u003epageviews_remaining\u003c/code\u003e to either return the article, or return a message\nindicating that our frontend should show the paywall.\u003c/p\u003e\n\n\u003ch2\u003eSecurity Concerns\u003c/h2\u003e\n\n\u003cp\u003eCookies are stored as plain text in a user's browser. Therefore, the user can\nsee what's in them, and they can set them to anything they want.\u003c/p\u003e\n\n\u003cp\u003eIf you open the developer console in your browser, you can see the cookies set\nby the current site. In Chrome's console, you can find this under\n\u003ccode\u003eApplication \u0026gt; Cookies\u003c/code\u003e. You can delete any cookie you like. For example, if you\ndelete your \u003ccode\u003euser_session\u003c/code\u003e cookie on \u003ccode\u003egithub.com\u003c/code\u003e and refresh the page, you will\nfind that you've been logged out.\u003c/p\u003e\n\n\u003cp\u003eYou can also edit cookies, for example with \u003ca href=\"https://chrome.google.com/webstore/detail/editthiscookie/fngmhnnpilhplaeedifhccceomclgfbg?hl=en\"\u003ethis extension\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis presents a problem for us. If users can edit their \u003ccode\u003epageviews_remaining\u003c/code\u003e\ncookie, then they can easily give themselves an unlimited amount of page views.\u003c/p\u003e\n\n\u003ch2\u003eRails to the Rescue\u003c/h2\u003e\n\n\u003cp\u003eFortunately, Rails has a solution to this. Instead of sending our cookies in\nplain text, we can use Rails to \u003cstrong\u003eencrypt\u003c/strong\u003e and \u003cstrong\u003esign\u003c/strong\u003e a special cookie known\nas a session using the \u003ccode\u003esession\u003c/code\u003e method. The \u003ccode\u003esession\u003c/code\u003e method is available\nin your controller, and it behaves like a hash:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e  \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:pageviews_remaining\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can store any simple Ruby object in the session.\u003c/p\u003e\n\n\u003cp\u003eBy default, Rails manages all session data in a single cookie. It \u003cem\u003eserializes\u003c/em\u003e\nall the key/value pairs you set with \u003ccode\u003esession\u003c/code\u003e, converting them from a Ruby\nobject into a big string. Whenever you set a \u003ccode\u003ekey\u003c/code\u003e with the \u003ccode\u003esession\u003c/code\u003e method,\nRails updates the value of its session cookie to this big string.\u003c/p\u003e\n\n\u003cp\u003eWhen you set cookies this way, Rails \u003cstrong\u003esigns\u003c/strong\u003e them to prevent users from\ntampering with them. Your Rails server has a key, configured in\n\u003ccode\u003econfig/credentials.yml.enc\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003edevelopment:\n  secret_key_base: kaleisgreat  # probably not the most secure key ever\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSomewhere else, Rails has a method, let's call it \u003ccode\u003esign\u003c/code\u003e, which takes a\n\u003ccode\u003emessage\u003c/code\u003e and a \u003ccode\u003ekey\u003c/code\u003e and returns a \u003ccode\u003esignature\u003c/code\u003e, which is just a string:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# sign(message: string, key: string) -\u0026gt; signature: string\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esign\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# cryptographic magic here\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003esignature\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt's guaranteed that given the same message and key, \u003ccode\u003esign\u003c/code\u003e will produce the\nsame output. Also, without the key, it is practically impossible to know what\n\u003ccode\u003esign\u003c/code\u003e would return for a given message. That is, signatures can't be forged.\u003c/p\u003e\n\n\u003cp\u003eRails creates a signature for every session cookie it sets, and appends the\nsignature to the cookie.\u003c/p\u003e\n\n\u003cp\u003eWhen it receives a cookie, Rails verifies that the signature matches the content\n(that is, that \u003ccode\u003esign(cookie_body, secret_key_base) == cookie_signature\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eThis prevents cookie tampering. If a user tries to edit their cookie and change\nthe \u003ccode\u003epageviews_remaining\u003c/code\u003e, the signature won't match, and Rails will silently\nignore the cookie and set a new one.\u003c/p\u003e\n\n\u003cp\u003eCryptography is a deep rabbit hole. At this point, you don't need to understand\nthe specifics of how cryptography works, just that Rails and other frameworks\nuse it to ensure that session data which is set on the server can't be edited by\nusers.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eCookies are foundational for the modern web.\u003c/p\u003e\n\n\u003cp\u003eMost sites use cookies, to let their users log in, keep track of their shopping\ncarts, or record other ephemeral session data. Almost nobody thinks these are\nbad uses of cookies: nobody really believes that you should have to type in your\nusername and password on every page, or that your shopping cart should clear if\nyou reload the page.\u003c/p\u003e\n\n\u003cp\u003eBut cookies let you store data in a user's browser, so by nature, they can be\nused for more controversial endeavors.\u003c/p\u003e\n\n\u003cp\u003eFor example, Google AdWords sets a cookie and uses that cookie to track what ads\nyou've seen and which ones you've clicked on. The tracking information helps\nAdWords decide what ads to show you.\u003c/p\u003e\n\n\u003cp\u003eThis is why, if you click on an ad, you may find that the ad follows you around\nthe internet. It turns out that this behavior is as effective as it is annoying:\npeople are far more likely to buy things from ads that they've clicked on once.\u003c/p\u003e\n\n\u003cp\u003eThis use of cookies worries people and the EU\n\u003ca href=\"https://en.wikipedia.org/wiki/General_Data_Protection_Regulation\"\u003ehas created legislation around the use of cookies\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eCookies, like any technology, are a tool. In the rest of this module, we're going\nto be using them to let users log in. Whether you later want to use them in such\na way that the EU passes another law is up to you.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat do we mean when we say that HTTP is stateless?\u003c/li\u003e\n\u003cli\u003eWhat Rails method can you use to protect cookies from being tampered with by\nusers? What two things does Rails do to secure the cookie?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html\" title=\"HTTP RFC 9 — Method Definitions\"\u003eHTTP RFC Section 9 — Methods\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://tools.ietf.org/html/rfc6265\" title=\"HTTP State Management Mechanism\"\u003eRFC 6265 — HTTP State Management Mechanism (the cookie spec)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/action_controller_overview.html#session\"\u003eRails Sessions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/General_Data_Protection_Regulation\"\u003eGeneral Data Protection Regulation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://termly.io/resources/templates/cookie-policy-template/#are-you-legally-required-to-have-a-cookie-policy\"\u003eLegal Cookie Requirements\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-client-configuration","title":"Video: Client Configuration","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-client-configuration\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-client-configuration\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-client-configuration/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/606739492/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://create-react-app.dev/docs/proxying-api-requests-in-development/\"\u003eCreate React App: Proxying Requests\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"restful-routing-conventions","title":"RESTful Routing Conventions","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-restful-routing-conventions\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-restful-routing-conventions\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-restful-routing-conventions/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the benefits of the REST design pattern\u003c/li\u003e\n\u003cli\u003eUnderstand the uses for different HTTP verbs\u003c/li\u003e\n\u003cli\u003eList the 5 RESTful routes and their corresponding Rails actions\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhat is REST?\u003c/h2\u003e\n\n\u003cp\u003eIn 2000, Roy Thomas Fielding was frustrated by the haphazard ways in which web\napplications were using the HTTP standard. Specifically, he was frustrated with\nhow URLs and their corresponding HTTP verbs were used differently for every\nsingle application. So, in his PhD dissertation, he came up with \u003cstrong\u003eREST\u003c/strong\u003e\n(\u003cstrong\u003eRE\u003c/strong\u003epresentational \u003cstrong\u003eS\u003c/strong\u003etate \u003cstrong\u003eT\u003c/strong\u003eransfer) as a standard way web apps should\nstructure their URLs.\u003c/p\u003e\n\n\u003cp\u003eFielding also noticed the rise in web applications communicating with each\nother. He hoped that inter-application communication would get much easier if\nthere was a standard way of forming URLs to access resources.\u003c/p\u003e\n\n\u003cp\u003eIf you have been building applications for a while, there is a good chance that\nyou have already worked with RESTful APIs. \u003ccode\u003ejson-server\u003c/code\u003e follows REST\nconventions very strongly. If your application posts to Twitter, pulls in a feed\nof images from Instagram, or calls a list of locations from Google Maps, you are\nusing a RESTful API to communicate between applications.\u003c/p\u003e\n\n\u003ch2\u003eExample REST Workflow\u003c/h2\u003e\n\n\u003cp\u003eFor a real world case study, let us pretend that you have a newsletter\napplication. The following is a high-level view of how such an app might work:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eYou fill out the form on the 'New Newsletter' page and click submit.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eData concerning you as the author, your newsletter content, and any\nadditional information such as media items is sent to the application server.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe server interprets the information, recognizes that the request is for a\nnew newsletter, generates the new record in the database, and performs\nbackground tasks (updating the newsletter counter, possibly sending\nnotification emails, etc).\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eNext, the server sends a response back to the client. This does not\nnecessarily mean that the newsletter was posted. The response could be that\nthere was an error posting or something like that. However, in this case we\nwill say that the newsletter post went through properly, so the server sends\na success message and tells the browser which page to go to and render.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eLastly, the browser receives the server information and shows you a message\nsaying that your newsletter was successfully posted.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eRESTful Conventions in Rails\u003c/h2\u003e\n\n\u003cp\u003eRails has RESTful principles built into its core, so, whether you are utilizing\nthe built-in view rendering system or using the application purely as an API,\nyou will have the tools necessary to follow standardized routing procedures.\u003c/p\u003e\n\n\u003cp\u003eLet's take a look at how this would work for our newsletter application. RESTful\nroutes fall into four general categories: Create, Read, Update, and Delete,\ncommonly known as 'CRUD' actions. The CRUD acronym gives us a convenient way to\nrefer to the set of five actions that RESTful APIs potentially include:\u003c/p\u003e\n\n\u003ctable\u003e\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eCRUD category\u003c/th\u003e\n\u003cth\u003eAction(s)\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eREAD\u003c/td\u003e\n\u003ctd\u003eDisplay a list of all newsletters\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eDisplay an individual newsletter\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eCREATE\u003c/td\u003e\n\u003ctd\u003eCreate the new newsletter instance\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eUPDATE\u003c/td\u003e\n\u003ctd\u003eUpdate the newsletter instance\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDESTROY\u003c/td\u003e\n\u003ctd\u003eDelete an existing newsletter instance\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\n\u003cp\u003eTo implement each of the above actions, we combine an \u003cem\u003eHTTP verb\u003c/em\u003e (\u003ccode\u003eGET\u003c/code\u003e,\n\u003ccode\u003ePOST\u003c/code\u003e, etc.) with a route (e.g., \u003ccode\u003e/newsletters\u003c/code\u003e). Rails then maps each HTTP\nverb/route combination to the appropriate \u003cem\u003eaction\u003c/em\u003e (\u003ccode\u003eshow\u003c/code\u003e, \u003ccode\u003eedit\u003c/code\u003e, etc.) in the\n\u003ccode\u003eNewslettersController\u003c/code\u003e. The table below shows the HTTP verb, route, and\ncontroller action names we would use for our RESTful newsletter app:\u003c/p\u003e\n\n\u003ctable\u003e\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eHTTP Verb\u003c/th\u003e\n\u003cth\u003eRoute\u003c/th\u003e\n\u003cth\u003eController#Action\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e/newsletters\u003c/td\u003e\n\u003ctd\u003enewsletters#index\u003c/td\u003e\n\u003ctd\u003eShow all newsletters\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePOST\u003c/td\u003e\n\u003ctd\u003e/newsletters\u003c/td\u003e\n\u003ctd\u003enewsletters#create\u003c/td\u003e\n\u003ctd\u003eCreate a new newsletter\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e/newsletters/:id\u003c/td\u003e\n\u003ctd\u003enewsletters#show\u003c/td\u003e\n\u003ctd\u003eShow a specific newsletter\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePATCH or PUT\u003c/td\u003e\n\u003ctd\u003e/newsletters/:id\u003c/td\u003e\n\u003ctd\u003enewsletters#update\u003c/td\u003e\n\u003ctd\u003eUpdate a specific newsletter\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDELETE\u003c/td\u003e\n\u003ctd\u003e/newsletters/:id\u003c/td\u003e\n\u003ctd\u003enewsletters#destroy\u003c/td\u003e\n\u003ctd\u003eDelete a specific newsletter\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\n\u003cp\u003eNote that even though we have five separate actions, there are only two routes\nin the table above: \u003ccode\u003e/newsletters\u003c/code\u003e and \u003ccode\u003e/newsletters/:id\u003c/code\u003e. It is the\n\u003cstrong\u003ecombination\u003c/strong\u003e of the \u003cem\u003eroute\u003c/em\u003e and the \u003cem\u003eHTTP verb\u003c/em\u003e that tells Rails which\ncontroller action to use.\u003c/p\u003e\n\n\u003cp\u003eRails does a great job of integrating RESTful routes into its system. If you can\nunderstand routes in Rails, you can understand REST in general. Rails even gives\nus some built-in functionality to encourage using RESTful routing conventions,\nthrough the concept of \u003ca href=\"https://guides.rubyonrails.org/routing.html#resource-routing-the-rails-default\"\u003eResource Routing\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eHere is a diagram that shows how the routes, HTTP verbs, and controller actions\nare all mapped together:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-restful-routing-conventions/rest-diagram.png\" alt=\"REST Diagram\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn analyzing the diagram, you can see the flow of data as follows:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eThe HTTP request contains an HTTP verb and hits a specific URL path.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe router in the application processes the request and 'routes' the request\ndata to the proper controller action.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe controller action either performs a task — creating, updating, or\ndeleting a record in the database — or it runs a database query and returns\nthe requested information to the client.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eDefinition of HTTP Verbs\u003c/h2\u003e\n\n\u003cp\u003eSo what do \u003ccode\u003eGET\u003c/code\u003e, \u003ccode\u003ePOST\u003c/code\u003e, et al. represent? Those are HTTP verbs that give\neach HTTP request unique behavior. Below is an explanation of each verb:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eGET\u003c/strong\u003e: The GET method retrieves whatever information is identified by the\nRequest URI. This means if you go to \u003ccode\u003e/posts\u003c/code\u003e, you will get all of the posts\nthat the application has.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePOST\u003c/strong\u003e: The POST method is used to send data enclosed in the request to the\nserver. The server is expected to use this data to create some new resource.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePATCH/PUT\u003c/strong\u003e: The PATCH and PUT methods are both used to update existing\nresources. Sending either a \u003ccode\u003ePATCH\u003c/code\u003e or \u003ccode\u003ePUT\u003c/code\u003e request to \u003ccode\u003e/posts/1\u003c/code\u003e will update\nthe post with an \u003ccode\u003eid\u003c/code\u003e of 1. \u003ccode\u003ePUT\u003c/code\u003e is used when we want to replace an entire\nresource. \u003ccode\u003ePATCH\u003c/code\u003e is used when we want to update a specific part of a\nresource. Check out this explanation of the \u003ca href=\"https://rapidapi.com/blog/put-vs-patch/\"\u003edifference between the\ntwo\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eDELETE\u003c/strong\u003e: The DELETE method requests that the server delete the resource\nidentified by the Request URI. This means… that it deletes the record. It's\nnice and explicit.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eBelow are a few keys to remember when thinking about REST:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eREST is an architectural design pattern, not a framework or code in itself.\nMany other web frameworks utilize RESTful design principles in some form or\nanother. By using RESTful principles, Rails apps are able to have a clear and\nstandardized naming structure for routes and actions.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eRESTful routes have a clear mapping between the URL resource and the\ncorresponding controller actions.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThere are five RESTful route options we will commonly use as API developers.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat are the CRUD actions?\u003c/li\u003e\n\u003cli\u003eWhat HTTP verb(s) are associated with each CRUD action?\u003c/li\u003e\n\u003cli\u003eWhat Rails controller action(s) are associated with each CRUD action?\u003c/li\u003e\n\u003cli\u003eWhat two pieces of information need to be combined to create an HTTP request?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://codewords.recurse.com/issues/five/what-restful-actually-means\"\u003eWhat RESTful Actually Means\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html#resource-routing-the-rails-default\"\u003eResource Routing in Rails\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://restacular.netlify.app/\"\u003eRESTacular Routing Resource\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"phase-4-project-guidelines","title":"Phase 4 Project Guidelines","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-project-guidelines\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-project-guidelines\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-project-guidelines/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eBuild a full-stack project with a React frontend and a Rails backend\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eYou've made it! You're ready to build a full-stack application with a \u003cem\u003epowerful\u003c/em\u003e\nbackend framework! The goals of this project are to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eput together all the skills you've learned throughout the program\u003c/li\u003e\n\u003cli\u003eprepare you for building a capstone project in Phase 5\u003c/li\u003e\n\u003cli\u003ebuild a quality project to include in your portfolio\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe instructions below will walk you through the process of ideating and\nplanning your app: deciding on your models and relationships, planning how the\ninformation will be laid out on the page, etc. You should work through all the\nplanning steps before you start doing any coding.\u003c/p\u003e\n\n\u003ch2\u003eRequirements\u003c/h2\u003e\n\n\u003cp\u003eFor this project, you must:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse a Rails API backend with a React frontend.\u003c/li\u003e\n\u003cli\u003eHave \u003cstrong\u003eat least\u003c/strong\u003e three models on the backend, that include the following:\n\n\u003cul\u003e\n\u003cli\u003eAt least two one-to-many relationships.\u003c/li\u003e\n\u003cli\u003eAt least one reciprocal many-to-many relationship (implemented by using 2\nhas-many-through relationships). \u003cstrong\u003eNote:\u003c/strong\u003e in order to accomplish this, your\nproject must include a joins table. This joins table must include a user\nsubmittable attribute.\u003c/li\u003e\n\u003cli\u003eFull CRUD actions for at least one resource.\u003c/li\u003e\n\u003cli\u003eMinimum of create and read actions for EACH resource.\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003cli\u003eHave at least three different client-side routes using React Router. Be sure\nto include a nav bar or other UI element that allows users to navigate\nbetween routes.\u003c/li\u003e\n\u003cli\u003eImplement authentication/authorization, including password protection. A user\nmust be able to:\n\n\u003cul\u003e\n\u003cli\u003esign up with a new user account,\u003c/li\u003e\n\u003cli\u003elog in to the site with a secure password and stay logged in via user ID in\nthe session hash, and\u003c/li\u003e\n\u003cli\u003elog out of the site.\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: a user should only be able to edit and delete resources if they are\nlogged in and the creator of that resource. For example, if we consider the\nexample described below with models of User, DogHouse, and Review, I would only\nbe able to edit or delete the reviews that I created.\u003c/p\u003e\n\n\u003ch2\u003eProject Setup\u003c/h2\u003e\n\n\u003cp\u003eOnce you've got a solid plan in place for your app and you're ready to start\ncoding, it's recommended that you use this project template:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/learn-co-curriculum/project-template-react-rails-api\"\u003ehttps://github.com/learn-co-curriculum/project-template-react-rails-api\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe project template is set up the same way as all of the labs from this phase.\nIt has also been configured to enable you to deploy the app to Render using a\nsimilar process to the one described in the Deploying module.\u003c/p\u003e\n\n\u003cp\u003eMake sure to follow the setup instructions in the template's readme to get\nstarted.\u003c/p\u003e\n\n\u003cp\u003eAlternately, if you'd like to set everything up from scratch, you can use this\nproject setup guide:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/learn-co-curriculum/react-rails-project-setup-guide\"\u003ehttps://github.com/learn-co-curriculum/react-rails-project-setup-guide\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eProject Guidance\u003c/h2\u003e\n\n\u003ch3\u003ePlanning\u003c/h3\u003e\n\n\u003ch4\u003eUser Stories\u003c/h4\u003e\n\n\u003cp\u003eStart by deciding on a domain for your app (such as \"AirBNB for dogs\"). Then,\ndecide what \u003cstrong\u003euser stories\u003c/strong\u003e your app will need. It is helpful to break up your\nuser stories between what is required for the \u003ca href=\"https://blog.crisp.se/2016/01/25/henrikkniberg/making-sense-of-mvp\"\u003e\u003cstrong\u003eMinimum Viable Product\u003c/strong\u003e (MVP)\u003c/a\u003e\nversion of your app, and what you'd like to save for stretch features after\nyou've met your MVP goals.\u003c/p\u003e\n\n\u003cp\u003eFor example:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eMVP: As a user, I can:\n\n\u003cul\u003e\n\u003cli\u003eSign up for an account,\u003c/li\u003e\n\u003cli\u003eLog in to the site \u0026amp; remain logged in,\u003c/li\u003e\n\u003cli\u003eLog out,\u003c/li\u003e\n\u003cli\u003eView a list of all available dog houses in my area and their respective\nreviews,\u003c/li\u003e\n\u003cli\u003eCreate a review for one specific dog house,\u003c/li\u003e\n\u003cli\u003eModify or delete a review that I left,\u003c/li\u003e\n\u003cli\u003eCreate a new dog house listing.\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003cli\u003eStretch: As a user, I can:\n\n\u003cul\u003e\n\u003cli\u003eView dog houses on a map,\u003c/li\u003e\n\u003cli\u003eSearch dog houses based on their distance from my location,\u003c/li\u003e\n\u003cli\u003eFilter dog houses based on their average rating.\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4\u003eModels and Relationships\u003c/h4\u003e\n\n\u003cp\u003eAfter deciding on your app's user stories, you can design the \u003cstrong\u003emodels\u003c/strong\u003e that\nyour application will need in order to represent these user stories.\u003c/p\u003e\n\n\u003cp\u003eLook at the list of your user stories, and pick out the different nouns/objects\nthat you need to represent these user stories. These objects inform what models\nyou need. For example, from the list above, we have:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUser\u003c/li\u003e\n\u003cli\u003eDog House\u003c/li\u003e\n\u003cli\u003eReview\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eYou can also get a sense of the relationships between the models and use that as\nthe basis of your \u003cstrong\u003eEntity Relationship Diagram\u003c/strong\u003e (ERD). For example, we can\ntell based on the user stories above that a \u003cstrong\u003ereview\u003c/strong\u003e belongs to a specific\n\u003cstrong\u003euser\u003c/strong\u003e — since a user is able to create a review — and a \u003cstrong\u003ereview\u003c/strong\u003e belongs to\na specific \u003cstrong\u003edog house\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eYou can use a website like \u003ca href=\"https://dbdiagram.io/\"\u003edbdiagram.io\u003c/a\u003e to help make an ERD and represent\nthese relationships, or draw out something simple:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eUser -\u0026lt; Review \u0026gt;- DogHouse\n\nDogHouse \u0026gt;- User\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is also a good time to think about what attributes your models will need.\nWhat foreign keys are needed to establish relationships? What other attributes\nmight you need to display data in your frontend, or make other aspects of your\nuser stories work?\u003c/p\u003e\n\n\u003ch4\u003eWireframes\u003c/h4\u003e\n\n\u003cp\u003eFor your frontend, it's a good idea to follow the ideas from\n\u003ca href=\"https://reactjs.org/docs/thinking-in-react.html\"\u003eThinking in React\u003c/a\u003e as you're designing your React application. That means\nstarting with a visual representation of what your application should look like,\nin the form of a wireframe. The wireframe should give you a basic visual\nrepresentation of what each page of your application should look like, and it\nshould capture all of your user stories.\u003c/p\u003e\n\n\u003cp\u003eHere are some tools for wireframing (pen and paper is also a fine choice!):\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://excalidraw.com/\"\u003eExcalidraw - basic hand-drawn wireframes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.figma.com/\"\u003eFigma - professional design tool\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://balsamiq.com/\"\u003eBalsamiq - professional wireframe tool\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eUse your wireframe to plan out what components you'll need and design your\ncomponent hierarchy, following the ideas from \u003ca href=\"https://reactjs.org/docs/thinking-in-react.html\"\u003eThinking in React\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003eExecution\u003c/h3\u003e\n\n\u003cp\u003eOnce you have your plan in place, and have a sense of your:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUser stories\u003c/li\u003e\n\u003cli\u003eModels (including relationships and attributes)\u003c/li\u003e\n\u003cli\u003eWireframes\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIt's time to start building! As you're building, work on each feature in\n\u003ca href=\"https://agileforall.com/vertical-slices-and-scale/\"\u003evertical slices\u003c/a\u003e rather\nthan horizontal. For example, rather than building out \u003cstrong\u003eall\u003c/strong\u003e the models,\nroutes and controller actions in the backend, then working on the components in\nthe frontend and finally styling everything, work on one \u003cstrong\u003efeature\u003c/strong\u003e at a time,\nsuch as working on login, then displaying a list of dog houses, then leaving a\nreview.\u003c/p\u003e\n\n\u003cp\u003eYou can visualize all the parts of an app you need to build as a grid, with the\ndesired features in columns and the different layers of the stack in rows:\u003c/p\u003e\n\n\u003ctable\u003e\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003cth\u003eSign in flow\u003c/th\u003e\n\u003cth\u003eView dog houses\u003c/th\u003e\n\u003cth\u003eLeave a review\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eMigrations\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eModels\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eSeed Data\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eController actions\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eView Logic\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eData Fetching\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eStyling\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\n\u003cp\u003eYou may be tempted to order your project timeline row-by-row. Do not do this! If\nyou try to build all your migrations, then all your models, then all your\ncontrollers, then all your fetch calls, then all your view logic you will have\na bad time. Inevitably, your view logic ends up requiring changes to the\nunderlying layers, and you end up building models that you never use. If you\ninstead build \u003cstrong\u003eeach feature\u003c/strong\u003e (each \u003cstrong\u003evertical slice\u003c/strong\u003e) in its entirety before\nmoving on to the next feature, you'll minimize rewriting, and end up with\nworking features without waste.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAdd feature by feature, not model by model or layer by layer.\u003c/li\u003e\n\u003cli\u003eTest each feature, add styles, and create seed data as you go (not all at once\nat the end)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAlso, remember to prioritize your MVP features. It can be tempting to try and\nbuild everything at once, but that is a sure-fire way to end up with many broken\nfeatures instead of a solid core of working features.\u003c/p\u003e\n\n\u003ch2\u003eDeploying\u003c/h2\u003e\n\n\u003cp\u003eThe template project has all the starter code needed to help you deploy your\napplication to Render. It's recommended to deploy your project early and push up\nchanges often to ensure that your code works equally well in production and\ndevelopment environments.\u003c/p\u003e\n\n\u003cp\u003eFollow the instructions in the template to deploy your app!\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/learn-co-curriculum/project-template-react-rails-api\"\u003eProject Template: React/Rails API\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dbdiagram.io/\"\u003eERD Visualizations: dbdiagram.io\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://excalidraw.com/\"\u003eExcalidraw - basic hand-drawn wireframes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.figma.com/\"\u003eFigma - professional design tool\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://balsamiq.com/\"\u003eBalsamiq - professional wireframe tool\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"deploying-a-rails-api-to-heroku","title":"Deploying a Rails API to Heroku","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-deploying-rails-api-to-heroku\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-deploying-rails-api-to-heroku\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-deploying-rails-api-to-heroku/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eSet up your local environment for deploying with Heroku\u003c/li\u003e\n\u003cli\u003eDeploy a basic Rails application to Heroku\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll be deploying a basic, standalone Rails API application to\nHeroku. We'll give instructions to generate the application from scratch and\ntalk through the steps to get the code running on a Heroku server.\u003c/p\u003e\n\n\u003cp\u003eIn coming lessons, we'll learn how to add more complexity to the application\nwith a React frontend. Since the setup for a Rails-React application is a bit\ntrickier, it'll be beneficial to see the setup for Rails alone first. Let's get\nstarted!\u003c/p\u003e\n\n\u003ch2\u003eEnvironment Setup\u003c/h2\u003e\n\n\u003cp\u003eTo make sure you're able to deploy your application, you'll need to do the\nfollowing:\u003c/p\u003e\n\n\u003ch3\u003eSign Up for a Heroku Account\u003c/h3\u003e\n\n\u003cp\u003eYou can sign up at for a free account at\n\u003ca href=\"https://signup.heroku.com/devcenter\"\u003ehttps://signup.heroku.com/devcenter\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003eDownload the Heroku CLI Application\u003c/h3\u003e\n\n\u003cp\u003eDownload the \u003ca href=\"https://devcenter.heroku.com/articles/heroku-cli#download-and-install\"\u003eHeroku CLI\u003c/a\u003e. This will let you run commands from your\nterminal to deploy and interact with your application on Heroku.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eFor OSX users\u003c/strong\u003e, you can use Homebrew to install the CLI:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebrew tap heroku/brew \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e brew \u003cspan class=\"nb\"\u003einstall \u003c/span\u003eheroku\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eFor WSL users\u003c/strong\u003e, run this command in the Ubuntu terminal:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ecurl https://cli-assets.heroku.com/install.sh | sh\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf you run into issues installing, check out the \u003ca href=\"https://devcenter.heroku.com/articles/heroku-cli#download-and-install\"\u003eHeroku CLI\u003c/a\u003e\ndownloads page for more options.\u003c/p\u003e\n\n\u003cp\u003eAfter downloading, \u003cstrong\u003elog in to Heroku\u003c/strong\u003e via the CLI in the terminal:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003eheroku login\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will open a browser window to log you into your Heroku account. After\nlogging in, close the browser window and return to the terminal. You can run\n\u003ccode\u003eheroku whoami\u003c/code\u003e in the terminal to verify that you have logged in successfully.\u003c/p\u003e\n\n\u003ch3\u003eInstall the Latest Ruby Version\u003c/h3\u003e\n\n\u003cp\u003eVerify which version of Ruby you're running by entering this in the terminal:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003eruby \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eMake sure that the Ruby version you're running is listed in the \u003ca href=\"https://devcenter.heroku.com/articles/ruby-support#supported-runtimes\"\u003esupported\nruntimes\u003c/a\u003e by Heroku. At the time of writing, supported versions are 2.6.8,\n2.7.4, or 3.0.2. Our recommendation is 2.7.4, but make sure to check the site\nfor the latest supported versions.\u003c/p\u003e\n\n\u003cp\u003eIf it's not, you can use \u003ccode\u003ervm\u003c/code\u003e to install a newer version of Ruby:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ervm \u003cspan class=\"nb\"\u003einstall \u003c/span\u003e2.7.4 \u003cspan class=\"nt\"\u003e--default\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou should also install the latest versions of \u003ccode\u003ebundler\u003c/code\u003e and \u003ccode\u003erails\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egem \u003cspan class=\"nb\"\u003einstall \u003c/span\u003ebundler\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egem \u003cspan class=\"nb\"\u003einstall \u003c/span\u003erails\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eInstall Postgresql\u003c/h3\u003e\n\n\u003cp\u003eHeroku requires that you use PostgreSQL for your database instead of SQLite.\nPostgreSQL (or just Postgres for short) is an advanced database management\nsystem with more features than SQLite. If you don't already have it installed,\nyou'll need to set it up.\u003c/p\u003e\n\n\u003ch4\u003ePostgreSQL Installation for WSL\u003c/h4\u003e\n\n\u003cp\u003eTo install Postgres for WSL, run the following commands from your Ubuntu\nterminal:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eapt update\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eapt \u003cspan class=\"nb\"\u003einstall \u003c/span\u003epostgresql postgresql-contrib libpq-dev\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen confirm that Postgres was installed successfully:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003epsql \u003cspan class=\"nt\"\u003e--version\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRun this command to start the Postgres service:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eservice postgresql start\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFinally, you'll also need to create a database user so that you are able to\nconnect to the database from Rails. First, check what your operating system\nusername is:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003ewhoami\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf your username is \"ian\", for example, you'd need to create a Postgres user\nwith that same name. To do so, run this command to open the Postgres CLI:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo\u003c/span\u003e \u003cspan class=\"nt\"\u003e-u\u003c/span\u003e postgres \u003cspan class=\"nt\"\u003e-i\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFrom the Postgres CLI, run this command (replacing \"ian\" with your username):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ecreateuser \u003cspan class=\"nt\"\u003e-sr\u003c/span\u003e ian\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen enter \u003ccode\u003econtrol + d\u003c/code\u003e or type \u003ccode\u003elogout\u003c/code\u003e to exit.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/wsl/tutorials/wsl-database#install-postgresql\"\u003eThis guide\u003c/a\u003e has more info on setting up Postgres on WSL if you\nget stuck.\u003c/p\u003e\n\n\u003ch4\u003ePostgresql Installation for OSX\u003c/h4\u003e\n\n\u003cp\u003eTo install Postgres for OSX, you can use Homebrew:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebrew \u003cspan class=\"nb\"\u003einstall \u003c/span\u003epostgresql\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOnce Postgres has been installed, run this command to start the Postgres\nservice:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebrew services start postgresql\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ePhew! With that out of the way, let's get started on building our Rails\napplication and deploying it to Heroku.\u003c/p\u003e\n\n\u003ch2\u003eCreating a Rails App to Deploy\u003c/h2\u003e\n\n\u003cp\u003eWe'll be following the steps in the\n\u003ca href=\"https://devcenter.heroku.com/articles/getting-started-with-rails6\"\u003eHeroku Rails Deploying Guide\u003c/a\u003e, so if you get\nstuck and are looking for more assistance, check that guide first.\u003c/p\u003e\n\n\u003cp\u003eThe first thing we'll need to do is create our new Rails application. Make\nsure you're in a non-lab directory, then run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails new bird-app \u003cspan class=\"nt\"\u003e--api\u003c/span\u003e \u003cspan class=\"nt\"\u003e--minimal\u003c/span\u003e \u003cspan class=\"nt\"\u003e--database\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003epostgresql\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will set up our app to run in API mode, with the minimum dependencies\nneeded, and with Postgresql as the database.\u003c/p\u003e\n\n\u003cp\u003eNext, we'll need to configure our \u003ccode\u003eGemfile.lock\u003c/code\u003e file to support the same OS as\nHeroku, which runs Ubuntu. This way, regardless of what OS you're using in\ndevelopment, \u003ccode\u003ebundler\u003c/code\u003e will be able to install the same gems on Heroku using any\nUbuntu-specific gem dependencies.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003ecd\u003c/code\u003e into the app, and run this command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle lock \u003cspan class=\"nt\"\u003e--add-platform\u003c/span\u003e x86_64-linux \u003cspan class=\"nt\"\u003e--add-platform\u003c/span\u003e ruby\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will add additional platforms to your \u003ccode\u003eGemfile.lock\u003c/code\u003e file that will allow\nthe necessary dependencies to be installed after you deploy your app.\u003c/p\u003e\n\n\u003ch2\u003eBuilding the Demo App\u003c/h2\u003e\n\n\u003cp\u003eNext, let's set up up a migration, model, route, and controller so that\nwe have some data to display in our application:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g resource Bird name species\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAdd this data to the \u003ccode\u003edb/seeds.rb\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Black-Capped Chickadee'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Poecile Atricapillus'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Grackle'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Quiscalus Quiscula'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Common Starling'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Sturnus Vulgaris'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Mourning Dove'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Zenaida Macroura'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen run this command to generate the database and run the migrations and seed\nfile:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:create db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003erails db:create\u003c/code\u003e creates a new Postgresql database to be associated with your\napplication based on the configuration in the \u003ccode\u003econfig/database.yml\u003c/code\u003e file.\nUnlike with SQLite, the actual database file isn't created in the \u003ccode\u003edb\u003c/code\u003e folder;\nit lives elsewhere in your file system, depending on your Postgresql\nconfiguration. If you have problems with this step, see the\n\u003cstrong\u003eTroubleshooting\u003c/strong\u003e section below.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eFinally, edit the \u003ccode\u003eapp/birds_controller.rb\u003c/code\u003e file and add an \u003ccode\u003eindex\u003c/code\u003e action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e  \u003cspan class=\"c1\"\u003e# GET /birds\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebirds\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebirds\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo make sure the app works locally before deploying, run \u003ccode\u003erails s\u003c/code\u003e and visit\n\u003ca href=\"http://localhost:3000/birds\"\u003ehttp://localhost:3000/birds\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eDeploying\u003c/h2\u003e\n\n\u003cp\u003eNow that we've got some working code, it's time to get that code to run on a\nHeroku server! The process of uploading our code to Heroku is managed by Git.\nThis makes it easy to deploy new versions using a tool most developers,\nincluding yourself, are already familiar with.\u003c/p\u003e\n\n\u003cp\u003eMake a commit to save your changes:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egit add \u003cspan class=\"nb\"\u003e.\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egit commit \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Initial commit'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, you'll need to create an application on Heroku:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003eheroku create\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis command will generate a new application in your Heroku account, and\nconfigure a new remote repository where you can push up your code. You can\nconfirm the remote repository was created successfully by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egit config \u003cspan class=\"nt\"\u003e--list\u003c/span\u003e \u003cspan class=\"nt\"\u003e--local\u003c/span\u003e | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003eheroku\n\u003cspan class=\"go\"\u003eremote.heroku.url=https://git.heroku.com/aqueous-sierra-44713.git\nremote.heroku.fetch=+refs/heads/*:refs/remotes/heroku/*\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, deploying your code is as simple as using \u003ccode\u003egit push\u003c/code\u003e to upload the changes\nfrom your repository to Heroku:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egit push heroku main\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eNote: depending on your Git configuration, your default branch might be named\n\u003ccode\u003emaster\u003c/code\u003e or \u003ccode\u003emain\u003c/code\u003e. You can verify which by running\n\u003ccode\u003egit branch --show-current\u003c/code\u003e. If it's \u003ccode\u003emaster\u003c/code\u003e, you'll need to run\n\u003ccode\u003egit push heroku master\u003c/code\u003e instead.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eYou've successfully pushed up your code!\u003c/p\u003e\n\n\u003ch2\u003eBuilding and Migrating\u003c/h2\u003e\n\n\u003cp\u003eAfter pushing up your code, you'll notice a flurry of activity in the terminal.\nThis indicates that Heroku is in the process of building your application, by:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eSetting up a Ruby environment to run your code in\u003c/li\u003e\n\u003cli\u003eInstalling the gems for your project with \u003ccode\u003ebundle install\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eRunning \u003ccode\u003erails server\u003c/code\u003e to start up your server\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIf the build process succeeds, your app is live and online!\u003c/p\u003e\n\n\u003cp\u003eBefore visiting the site, let's also set up the database. Remember, the database\nis a separate application from your Rails application. Thankfully, we can get\nit set up easily by running a few Rake commands on the server.\u003c/p\u003e\n\n\u003cp\u003eTo migrate and seed the database on the server, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003eheroku run rails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen you prefix any command with \u003ccode\u003eheroku run\u003c/code\u003e, it will run that command on the\nserver where your application was deployed. This command is very useful for\ntroubleshooting: you can even run \u003ccode\u003eheroku run rails c\u003c/code\u003e to open a Rails console\non the server!\u003c/p\u003e\n\n\u003cp\u003eYou can now visit the site in the browser by running \u003ccode\u003eheroku open\u003c/code\u003e. Note that,\nbecause there is no root path (\u003ccode\u003e'/'\u003c/code\u003e) defined in our routes, you will see a\nPage Not Found error when the app opens.\u003c/p\u003e\n\n\u003cp\u003eNavigate to the \u003ccode\u003e/birds\u003c/code\u003e endpoint and verify that you are able to see an array\nof JSON data for all the birds in the database. If you aren't able to, check out\nthe troubleshooting section below, or the\n\u003ca href=\"https://devcenter.heroku.com/articles/getting-started-with-rails6#troubleshooting\"\u003etroubleshooting guide on Heroku\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eAdding New Features\u003c/h2\u003e\n\n\u003cp\u003eSince Heroku integrates the deploying process with Git, it's straightforward\nto add new features to your code and deploy them. Let's start by adding a new\ncontroller action in the \u003ccode\u003eBirdsController\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordNotFound\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bird not found\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTest your code locally by running \u003ccode\u003erails s\u003c/code\u003e and visiting\n\u003ca href=\"http://localhost:3000/birds/1\"\u003ehttp://localhost:3000/birds/1\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eAfter adding this code, make a commit:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egit add app/controllers/birds_controller.rb\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egit commit \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Added show action'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, to deploy the changes, push the new code up to Heroku:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egit push heroku main\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter pushing new code, Heroku will run through the build process again and\ndeploy your changes. You don't have to run your migrations again since the\ndatabase already exists on the server. You would have to run the migrations if\nyou created a new migration file.\u003c/p\u003e\n\n\u003ch2\u003eTroubleshooting\u003c/h2\u003e\n\n\u003cp\u003eIf you ran into any errors along the way, here are some things you can try to\ntroubleshoot:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eIf you're on a Mac and got a server connection error when you tried to run\n\u003ccode\u003erails db:create\u003c/code\u003e, one option for solving this problem for Mac users is to\ninstall the Postgres app. To do this, first uninstall \u003ccode\u003epostgresql\u003c/code\u003e by running\n\u003ccode\u003ebrew remove postgresql\u003c/code\u003e. Next, download the app from the\n\u003ca href=\"https://postgresapp.com/downloads.html\"\u003ePostgres downloads page\u003c/a\u003e and install it. Launch the app and click\n\"Initialize\" to create a new server. You should now be able to run\n\u003ccode\u003erails db:create\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eIf you're using WSL and got the following error running \u003ccode\u003erails db:create\u003c/code\u003e:\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e  PG::ConnectionBad: FATAL:  role \"yourusername\" does not exist\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe issue is that you did not create a role in Postgres for the default user\n  account. Check \u003ca href=\"https://www.youtube.com/watch?v=bQC5izDzOgE\"\u003ethis video\u003c/a\u003e for\n  one possible fix.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eIf your app failed to deploy at the build stage, make sure your local\nenvironment is set up correctly by following the steps at the beginning of\nthis lesson. Check that you have the latest versions of Ruby and Bundler, and\nensure that Postgresql was installed successfully.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eIf you deployed successfully, but you ran into issues when you visited the\nsite, make sure you migrated and seeded the database. Also, make sure that\nyour application works locally and try to debug any issues on your local\nmachine before re-deploying. You can also check the logs on the server by\nrunning \u003ccode\u003eheroku logs\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFor additional support, check out these guides on Heroku:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://devcenter.heroku.com/articles/getting-started-with-rails6\"\u003eDeploying a Rails 6 App to Heroku\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://devcenter.heroku.com/articles/getting-started-with-rails6#troubleshooting\"\u003eRails Troubleshooting on Heroku\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eCongrats on deploying your first Rails app to the world wide web! Understanding\nthe deployment process and what it takes to run your application on another\ncomputer is an important step toward becoming a full-stack developer. Like\nanything new, this process can be daunting the first time you try it, but with\npractice and exposure, you'll build confidence over time.\u003c/p\u003e\n\n\u003cp\u003eIn the next lesson, we'll work on deploying a more complex application with a\nRails API backend and a React frontend, and talk through some of the challenges\nof running these two applications together.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhen creating a new Rails app from the terminal, what additional flag do you\nneed to use to be able to deploy it on Heroku?\u003c/li\u003e\n\u003cli\u003eWhat familiar process is used for deploying code to Heroku? How does the\nprocess differ when you're deploying to Heroku vs. developing code locally?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://devcenter.heroku.com/articles/getting-started-with-rails6\"\u003eDeploying a Rails 6 App to Heroku\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://devcenter.heroku.com/articles/getting-started-with-rails6#troubleshooting\"\u003eRails Troubleshooting on Heroku\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"data-structures-conclusion","title":"Data Structures Conclusion","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-conclusion\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-conclusion\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-conclusion/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eReview what you learned in this section\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eRecap\u003c/h2\u003e\n\n\u003cp\u003eIn this section, you learned many common data structures, including:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eSets\u003c/li\u003e\n\u003cli\u003eStacks\u003c/li\u003e\n\u003cli\u003eLinked Lists\u003c/li\u003e\n\u003cli\u003eTrees\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFor each of these data structures, you learned how to \u003cstrong\u003eimplement common\nmethods\u003c/strong\u003e, \u003cstrong\u003eidentify the runtime using Big O notation\u003c/strong\u003e, and how to \u003cstrong\u003eevaluate\nthe tradeoffs\u003c/strong\u003e of choosing one data structure over another.\u003c/p\u003e\n\n\u003cp\u003eBy gaining experience with these common data structures, you should have an\neasier time learning some other common data structures in the future. The best\nthing to do from here is practice! It's important to see more problems like the\nones you've worked on in this section, so that you can start identifying\npatterns and build up an intuition for determining which data structures will\nhelp with different kinds of problems. Check out the resources section for some\nways to continue building your skills.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://leetcode.com/problemset/all/\"\u003eLeetCode Problems\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eThese problems are organized by difficulty and are searchable. Start with\neasy problems and work your way up —\u0026nbsp;the medium and hard problems are quite\nchallenging! It can be helpful to search using the 'Tags' feature to search\nfor several problems that use the same data structure to get some reps and\nidentify patterns.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://leetcode.com/list/5r99deem/\"\u003eFIS DSA 100+\u003c/a\u003e is a curated list of\nover 100 LeetCode problems chosen by Flatiron School.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://seanprashad.com/leetcode-patterns/\"\u003eLeetCode Patterns\u003c/a\u003e is a site\nthat lets you browse LeetCode problems grouped by patterns, so you can work\non spotting common patterns to problems through repetition.\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.hackerrank.com/interview/interview-preparation-kit\"\u003eHackerRank Interview Prep Kit\u003c/a\u003e\nhas groups of challenges by common patterns and data structures for practice.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://techinterviewhandbook.org/\"\u003eTech Interview Handbook\u003c/a\u003e has curated\ninterview prep materials, including\n\u003ca href=\"https://techinterviewhandbook.org/algorithms/introduction/\"\u003ealgorithm material\u003c/a\u003e\nthat has example questions for different data structures.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://medium.com/basecs/tagged/data-structures\"\u003eBaseCS\u003c/a\u003e is a blog devoted\nto the basics of computer science with great visuals.\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-rails-migrations","title":"Video: Rails Migrations","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-rails-migrations\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-migrations\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-migrations/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/600574753/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/active_record_migrations.html\"\u003eActive Record Migrations\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"active-record-validations","title":"Active Record Validations","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-active-record-validations-readme\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-validations-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-validations-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cp\u003eAfter this lesson, you should be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the purpose of validation\u003c/li\u003e\n\u003cli\u003eIdentify when validation occurs in the lifespan of an object\u003c/li\u003e\n\u003cli\u003eUse built-in validation methods\u003c/li\u003e\n\u003cli\u003eAdd custom validation errors\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eContext: Databases and Data Validity\u003c/h2\u003e\n\n\u003cp\u003eWhat is a \"validation\"?\u003c/p\u003e\n\n\u003cp\u003eIn the context of Rails, \u003cstrong\u003evalidations\u003c/strong\u003e are special method calls that go at the top\nof model class definitions and prevent them from being saved to the database if\ntheir data doesn't look right.\u003c/p\u003e\n\n\u003cp\u003eIn general, \u003cstrong\u003evalidations\u003c/strong\u003e consist of code that performs the job of protecting\nthe database from invalid data.\u003c/p\u003e\n\n\u003cp\u003eActive Record can validate our models for us before they even touch the database.\nThis means it's harder to end up with bad data, which can cause problems later\neven if our code is technically bug-free.\u003c/p\u003e\n\n\u003cp\u003eWe can use \u003ccode\u003eActiveRecord::Base\u003c/code\u003e helper methods like \u003ccode\u003e#validates\u003c/code\u003e to set things\nup.\u003c/p\u003e\n\n\u003ch3\u003eActive Record Validations vs Database Constraints\u003c/h3\u003e\n\n\u003cp\u003eMany relational databases, such as SQLite and PostgreSQL, have data validation\nfeatures that check things like length and data type. While Active Record\nvalidations are added in the model files, these validations are typically added\nvia migrations; depending on the specific validation, they may or may not be\nreflected in the \u003ccode\u003eschema.rb\u003c/code\u003e file.\u003c/p\u003e\n\n\u003cp\u003eDatabase constraints and model validations are also functionally different.\nDatabase constraints will ALWAYS be checked when adding or updating data in the\ndatabase, while Active Record validations will only be checked when adding or\nupdating data through Ruby/Rails (e.g. if we use SQL code in the command line to\nmodify the database, Active Record validations are not run).\u003c/p\u003e\n\n\u003cp\u003eSome developers use both database constraints and Active Record validations,\nwhile others rely on Active Record validations alone. Ultimately, it depends on\nhow the developer plans to add and update data in the database. In this lesson,\nwe'll be focusing on Active Record validations.\u003c/p\u003e\n\n\u003ch3\u003eWhat is \"invalid data\"?\u003c/h3\u003e\n\n\u003cp\u003eSuppose you get a new phone and you ask all of your friends for their phone\nnumber again. One of them tells you, \"555-868-902\". If you're paying attention,\nyou'll probably wrinkle your nose and think, \"Wait a minute. That doesn't sound\nlike a real phone number.\"\u003c/p\u003e\n\n\u003cp\u003e\"555-868-902\" is an example of \u003cstrong\u003einvalid data\u003c/strong\u003e... for a phone number. It's\nprobably a valid account number for some internet service provider in Alaska,\nbut there's no way to figure out what your friend's phone number is from those\nnine numbers. It's a showstopper, and even worse, it kind of looks like valid\ndata if you're not looking closely.\u003c/p\u003e\n\n\u003ch3\u003eValidations Protect the Database\u003c/h3\u003e\n\n\u003cp\u003eInvalid data is the bogeyman of web applications: it hides in your database\nuntil the worst possible moment, then jumps out and ruins everything by causing\nconfusing errors.\u003c/p\u003e\n\n\u003cp\u003eImagine the phone number above being saved to the database in an application\nthat makes automatic calls using the Twilio API. When your system tries to call\nthis number, there will be an error because no such phone number exists, which\nmeans you need to have an entire branch of code dedicated to handling \u003cem\u003ejust\u003c/em\u003e\nthat edge case.\u003c/p\u003e\n\n\u003cp\u003eIt would be much easier if you never have bad data in the first place, so you\ncan focus on handling edge cases that are truly unpredictable.\u003c/p\u003e\n\n\u003cp\u003eThat's where validations come in.\u003c/p\u003e\n\n\u003ch2\u003eBasic Usage\u003c/h2\u003e\n\n\u003cp\u003eFor more examples of basic validation usage, see the Rails Guide for\n\u003ca href=\"http://guides.rubyonrails.org/active_record_validations.html\"\u003eActive Record Validations\u003c/a\u003e. Take a few minutes to\nbrowse the helpers listed in Section 2.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePerson\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActive\u003c/span\u003e \u003cspan class=\"no\"\u003eRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eBase\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003epresence: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"no\"\u003ePerson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"John Doe\"\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; true\u003c/span\u003e\n\u003cspan class=\"no\"\u003ePerson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"kp\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; false\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ccode\u003e#validates\u003c/code\u003e is our Swiss Army knife for validations. It takes two arguments:\nthe first is the \u003cstrong\u003ename of the attribute\u003c/strong\u003e we want to validate, and the second\nis a \u003cstrong\u003ehash of options\u003c/strong\u003e that will include the details of how to validate it.\u003c/p\u003e\n\n\u003cp\u003eIn this example, the options hash is \u003ccode\u003e{ presence: true }\u003c/code\u003e, which implements the\nmost basic form of validation, preventing the object from being saved if its\n\u003ccode\u003ename\u003c/code\u003e attribute is empty.\u003c/p\u003e\n\n\u003ch2\u003eLifecycle Timing\u003c/h2\u003e\n\n\u003cp\u003eBefore proceeding, keep the answer to this question in mind:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eWhat is the difference between \u003ccode\u003e#new\u003c/code\u003e and \u003ccode\u003e#create\u003c/code\u003e?\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eIf you've forgotten, \u003ccode\u003e#new\u003c/code\u003e instantiates a new Active Record model \u003cem\u003ewithout\u003c/em\u003e\nsaving it to the database, whereas \u003ccode\u003e#create\u003c/code\u003e immediately attempts to save it, as\nif you had called \u003ccode\u003e#new\u003c/code\u003e and then \u003ccode\u003e#save\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eDatabase activity triggers validation\u003c/strong\u003e. An Active Record model instantiated\nwith \u003ccode\u003e#new\u003c/code\u003e will not be validated, because no attempt to write to the database\nwas made. Validations won't run unless you call a method that actually hits the\nDB, like \u003ccode\u003e#save\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe only way to trigger validation without touching the database is to call the\n\u003ccode\u003e#valid?\u003c/code\u003e method.\u003c/p\u003e\n\n\u003cp\u003eFor a full list of methods that trigger validation, see \u003ca href=\"https://guides.rubyonrails.org/active_record_validations.html#when-does-validation-happen-questionmark\"\u003eSection\n1.2\u003c/a\u003e of the Rails Guide for Active Record\nValidations.\u003c/p\u003e\n\n\u003ch2\u003eValidation Failure\u003c/h2\u003e\n\n\u003cp\u003eHere it is, the moment of truth. What can we do when a record fails validation?\u003c/p\u003e\n\n\u003ch3\u003eHow can you tell when a record fails validation?\u003c/h3\u003e\n\n\u003cp\u003e\u003cstrong\u003ePay attention to return values!\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eBy default, Active Record does not raise an exception when validation fails. DB\noperation methods (such as \u003ccode\u003e#save\u003c/code\u003e) will simply return \u003ccode\u003efalse\u003c/code\u003e and decline to\nupdate the database.\u003c/p\u003e\n\n\u003cp\u003eEvery database method has a sister method with a \u003ccode\u003e!\u003c/code\u003e at the end which will raise\nan exception (\u003ccode\u003e#create!\u003c/code\u003e instead of \u003ccode\u003e#create\u003c/code\u003e and so on).\u003c/p\u003e\n\n\u003cp\u003eAnd of course, you can always check manually with \u003ccode\u003e#valid?\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePerson\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActive\u003c/span\u003e \u003cspan class=\"no\"\u003eRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eBase\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003epresence: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eperson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePerson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\n\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e \u003cspan class=\"c1\"\u003e#=\u0026gt; false\u003c/span\u003e\n\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esave\u003c/span\u003e \u003cspan class=\"c1\"\u003e#=\u0026gt; false\u003c/span\u003e\n\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esave!\u003c/span\u003e \u003cspan class=\"c1\"\u003e#=\u0026gt; EXCEPTION\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eFinding out why validations failed\u003c/h3\u003e\n\n\u003cp\u003eTo find out what went wrong, you can look at the model's \u003ccode\u003e#errors\u003c/code\u003e object.\u003c/p\u003e\n\n\u003cp\u003eYou can check all errors at once by examining \u003ccode\u003eerrors.messages\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eperson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePerson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\n\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emessages\u003c/span\u003e \u003cspan class=\"c1\"\u003e#=\u0026gt; empty\u003c/span\u003e\n\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esave\u003c/span\u003e \u003cspan class=\"c1\"\u003e#=\u0026gt; false\u003c/span\u003e\n\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e \u003cspan class=\"c1\"\u003e#=\u0026gt; false\u003c/span\u003e\n\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emessages\u003c/span\u003e \u003cspan class=\"c1\"\u003e#=\u0026gt; name: can't be blank\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can check one attribute at a time by passing the name to \u003ccode\u003eerrors\u003c/code\u003e as a key,\nlike so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eRendering Validation Errors As JSON\u003c/h2\u003e\n\n\u003cp\u003eWhen a validation error occurs on the server, we can give our users more details\nabout what went wrong by returning the validation errors from our controllers:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eperson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePerson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eperson_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSince we're sending these errors in the response, we can then use the errors\nobject on the frontend to display these errors to our users.\u003c/p\u003e\n\n\u003cp\u003eWe can also get an array of nicely-formatted errors with the \u003ccode\u003e.full_messages\u003c/code\u003e\nmethod:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eperson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePerson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eperson_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerrors: \u003c/span\u003e\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efull_messages\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAlso, if you're a fan of using \u003ccode\u003erescue\u003c/code\u003e for control flow instead of \u003ccode\u003eif/else\u003c/code\u003e,\nyou can use the \u003ccode\u003eActiveRecord::RecordInvalid\u003c/code\u003e exception class along with\n\u003ccode\u003ecreate!\u003c/code\u003e or \u003ccode\u003eupdate!\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eperson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePerson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eperson_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordInvalid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003einvalid\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerrors: \u003c/span\u003e\u003cspan class=\"n\"\u003einvalid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erecord\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efull_messages\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe'll cover error handling in controllers in more detail in the next lesson.\u003c/p\u003e\n\n\u003ch2\u003eOther Built-in Validators\u003c/h2\u003e\n\n\u003cp\u003eRails has a host of built-in helpers.\u003c/p\u003e\n\n\u003ch3\u003eLength\u003c/h3\u003e\n\n\u003cp\u003e\u003ccode\u003elength\u003c/code\u003e is one of the most versatile:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePerson\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActive\u003c/span\u003e \u003cspan class=\"no\"\u003eRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eBase\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003elength: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eminimum: \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:bio\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003elength: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003emaximum: \u003c/span\u003e\u003cspan class=\"mi\"\u003e500\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003elength: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003ein: \u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:registration_number\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003elength: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eis: \u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe \u003ccode\u003ein\u003c/code\u003e argument makes use of a \u003ca href=\"http://ruby-doc.org/core/Range.html\"\u003eRange\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eRemember that there's no syntactical magic happening with any of these method\ncalls. If we weren't using Ruby's \"poetry mode\" (which is considered standard\nfor Rails), the above code would look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePerson\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActive\u003c/span\u003e \u003cspan class=\"no\"\u003eRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eBase\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003e:minimum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:bio\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003e:maximum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e500\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003e:in\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:registration_number\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003e:is\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ePhew!\u003c/p\u003e\n\n\u003ch3\u003eUniqueness\u003c/h3\u003e\n\n\u003cp\u003eAnother common built-in validator is \u003ccode\u003euniqueness\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eAccount\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActive\u003c/span\u003e \u003cspan class=\"no\"\u003eRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eBase\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:email\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003euniqueness: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will prevent any account from being created with the same email as another already-existing account.\u003c/p\u003e\n\n\u003ch3\u003eCustom Messages\u003c/h3\u003e\n\n\u003cp\u003eThis isn't a validator in its own right, but a handy convenience option for specifying your own error messages:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePerson\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActive\u003c/span\u003e \u003cspan class=\"no\"\u003eRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eBase\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:not_a_robot\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eacceptance: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003emessage: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Humans only!\"\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eCustom Validations\u003c/h3\u003e\n\n\u003cp\u003eThere are two ways to implement custom validations, with examples in \u003ca href=\"http://guides.rubyonrails.org/active_record_validations.html#performing-custom-validations\"\u003eSection\n6\u003c/a\u003e of the Rails Guide.\u003c/p\u003e\n\n\u003cp\u003eOf the two, adding custom methods is the simplest. Here's an example of creating\na custom validation method to check the validity of an email address:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePerson\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidate\u003c/span\u003e \u003cspan class=\"ss\"\u003e:must_have_flatiron_email\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emust_have_flatiron_email\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ematch?\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/flatironschool.com/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:email\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"We're only allowed to have people who work for the company in the database!\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNote that here, we are calling the \u003ccode\u003e#validate\u003c/code\u003e method, rather than \u003ccode\u003e#validates\u003c/code\u003e,\nand passing it a method we write ourselves to perform our custom validation.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned the importance of validating data to ensure that no\nbad data ends up in our database. We also discussed the difference between model\nvalidations and database constraints. Finally, we saw some common methods for\nimplementing validations on our models using Active Record.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhen would you use the \u003ccode\u003evalidates\u003c/code\u003e method vs. the \u003ccode\u003evalidate\u003c/code\u003e method? What\nargument(s) get passed to each of them?\u003c/li\u003e\n\u003cli\u003eWhat are two ways to trigger validation?\u003c/li\u003e\n\u003cli\u003eHow can you get Active Record to return an Exception when validation fails?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://guides.rubyonrails.org/active_record_validations.html\"\u003eActive Record Validations\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-client-server-post-request-error-handling","title":"Video: Client-Server POST Request Error Handling","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-client-server-post-request-error-handling\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-client-server-post-request-error-handling\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-client-server-post-request-error-handling/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/607690385/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","frontPage":false},{"exportId":"video-rails-generators","title":"Video: Rails Generators","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-rails-generators\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-generators\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-generators/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/600488344/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/command_line.html#bin-rails-generate\"\u003eRails Command Line: \u003ccode\u003erails generate\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"intro-to-deploying","title":"Intro to Deploying","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-intro-to-deploying\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-intro-to-deploying\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-intro-to-deploying/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand what \"deploying\" means\u003c/li\u003e\n\u003cli\u003eUnderstand the responsibilities of a web server\u003c/li\u003e\n\u003cli\u003eEvaluate platforms for deploying Rails applications\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSo far during this phase, we've been working on developing applications and\nrunning them locally on our own computers. If we want other folks to be able to\ninteract with our applications, that means we need to deploy them to another\ncomputer that's configured to allow requests over the internet, from anywhere in\nthe world!\u003c/p\u003e\n\n\u003cp\u003eThis process essentially involves:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003etaking our application's code\u003c/li\u003e\n\u003cli\u003euploading it to a server that's configured to run our code and allow HTTP\nrequests\u003c/li\u003e\n\u003cli\u003erunning our code on that server\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAs a web developer, it's essential to familiarize yourself with the deployment\nprocess for a few reasons:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIt's increasingly expected that developers participate in the deployment\nprocess. While many companies employ specialized DevOps (Developer Operations)\nengineers, it is not uncommon for engineers on other teams to have a hand in\ndeploying and troubleshooting issues in production.\u003c/li\u003e\n\u003cli\u003eDeploying your site early in the development process can be helpful for\ncatching bugs that you may not encounter running your code locally,\nparticularly when it comes to project dependencies and working with\nthird-party services.\u003c/li\u003e\n\u003cli\u003eUnderstanding how your app will perform in different environments (development\nand production) can help you optimize your code's performance.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIn this lesson, we'll explore the deploying process and identify the things a\nweb server needs in order to host a Rails application.\u003c/p\u003e\n\n\u003ch2\u003eDefining a Web Server\u003c/h2\u003e\n\n\u003cp\u003eAll web servers share the same common goal: they must be able to handle HTTP\nrequests, and send back a response. The simplest kind of websites are known as\n\u003ca href=\"https://en.wikipedia.org/wiki/Static_web_page\"\u003e\u003cstrong\u003estatic\u003c/strong\u003e websites\u003c/a\u003e, which typically means sites that store\nall their content in pre-built HTML, JavaScript and CSS files that are saved to\nthe file system and sent back when a client makes a request for that specific file:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-intro-to-deploying/static-server.png\" alt=\"static server diagram\"\u003e\u003c/p\u003e\n\n\u003cp\u003eStatic websites are still quite common on the web; but there's also a large portion\nof the web that is \u003ca href=\"https://en.wikipedia.org/wiki/Dynamic_web_page\"\u003e\u003cstrong\u003edynamic\u003c/strong\u003e\u003c/a\u003e. With dynamic pages, the content\nreturned from an HTTP request isn't derived from just an HTML file, but instead is\nprocessed by some code running on the server before it's sent back to the client.\nAll Rails applications are \u003cstrong\u003edynamic\u003c/strong\u003e, since every request needs to be processed\nby Rails in order to determine the correct response.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-intro-to-deploying/dynamic-server.png\" alt=\"dynamic server diagram\"\u003e\u003c/p\u003e\n\n\u003cp\u003eSince hosting a server for dynamic websites is a bit more complicated, let's\ndiscuss some things a dynamic server needs in order to do its job.\u003c/p\u003e\n\n\u003ch2\u003eApplication Environment\u003c/h2\u003e\n\n\u003cp\u003eOne big consideration for developing any application is: what \u003cem\u003eenvironments\u003c/em\u003e\ndoes the application need to run in?\u003c/p\u003e\n\n\u003cp\u003eBroadly speaking, application environments are split into three categories:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eDevelopment\u003c/strong\u003e: When you're working on your application locally, running the\ncode on your personal computer, it's running in the \u003cstrong\u003edevelopment\u003c/strong\u003e\nenvironment. In a development environment, you should be able to easily use\ndebugging tools (like \u003ccode\u003ebyebug\u003c/code\u003e), and code analysis tools (like ESLint, which\nwarns you when you're using React incorrectly). You should be able to quickly\nsee the result of adding new code and how that affects your application.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTesting\u003c/strong\u003e: When your test runner (like RSpec or Jest) is running, it runs in\na \u003cstrong\u003etesting\u003c/strong\u003e environment. In this environment, your code should run as\nquickly as possible so that you can get rapid feedback on your application by\nrunning your test suite. It should also be as close as possible to your\nproduction environment (though this comes with tradeoffs related to how\nquickly your tests can run).\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eProduction\u003c/strong\u003e: When your application is deployed to a server, it will be\nrunning in a \u003cstrong\u003eproduction\u003c/strong\u003e environment. Some features you have available in\nthe development environment, like debugging tools and hot-reloading when code\nchanges, aren't available in this environment. Instead, the focuses of a\nproduction environment are to run your application quickly; be resilient to\nerrors (and to keep a log of what goes wrong); to handle lots of traffic; and\ngenerally to make your application as great as it can be for your users.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eOther environments you may use when building an application are a QA (quality\nassurance, for manual testing of features) environment and a staging\nenvironment (a preview of the production environment, usually used as the last\nstage before deploying a new feature).\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eTake a moment to think about all the things that are required to run a Rails\napplication in your local development environment. When you're working on a lab,\nwhat setup is needed so that you can type \u003ccode\u003erails s\u003c/code\u003e in the terminal, and view\nyour website in the browser?\u003c/p\u003e\n\n\u003cp\u003eFor starters, there's your \u003cem\u003eenvironment setup\u003c/em\u003e: you could be running on OSX, or\nWSL, or Linux; you'll need to have a recent version of Ruby installed; you'll\nneed Git for version control; and a few other system dependencies.\u003c/p\u003e\n\n\u003cp\u003eThere are also all of your \u003cem\u003eapplication dependencies\u003c/em\u003e: the code specific to\nyour Rails app that needs to run. That includes the Rails gem itself as well\nas all the other gems in your Gemfile.\u003c/p\u003e\n\n\u003cp\u003eYou'll also need some kind of \u003cem\u003edatabase\u003c/em\u003e to persist all your data. It's helpful\nto think of the database in isolation from the rest of your application, as a\nkind of resource that's available to your Rails app; ideally, even if your Rails\napp goes down for some reason, your database shouldn't go down with it!\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eA note on databases: for the labs in this phase, we've been using SQLite as a\nlightweight database. It's great for quick development, but it doesn't scale\nwell to larger applications. We'll be using Postgresql for our database moving\nforward. More on that later!\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSince all of these elements are required in order to run our application,\nwhatever system we choose to deploy our code on will need to be able to handle a\nsimilar environment setup. Let's explore some options.\u003c/p\u003e\n\n\u003ch2\u003eDeploying Options\u003c/h2\u003e\n\n\u003cp\u003eWhen it comes to deciding which platform to use to host our deployed\napplications, there are a number of options, each of which comes with some\ntradeoffs. For Rails in particular, a few popular choices are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://render.com/\"\u003eRender\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/\"\u003eAmazon Web Services (AWS)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.digitalocean.com/\"\u003eDigital Ocean\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eOne thing these services all have in common: they all have the ability to easily\nconfigure an environment to run our Rails applications in. These services own\nthe hardware (the physical servers and networking infrastructure) that your code\nwill run on, but they also have configurable \u003ca href=\"https://en.wikipedia.org/wiki/OS-level_virtualization\"\u003e\u003cstrong\u003econtainers\u003c/strong\u003e\u003c/a\u003e with\nresources dedicated to run your code.\u003c/p\u003e\n\n\u003cp\u003eThese containers are what makes it possible to quickly and easily set up a new\nproduction environment that has all the functionality needed to run your site:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eOS\u003c/strong\u003e: Typically Linux. Applications like Rails work well across platforms,\nso even if you're using a different OS in development, deploying to a server\nthat runs Linux works just fine!\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRuby\u003c/strong\u003e: You should use the exact same version of Ruby in development and in\nproduction. Since new Ruby versions have new features, as well as fixing\nsecurity issues in older versions, it's critical to use the same version in\nboth environments.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eNodeJS\u003c/strong\u003e: It's important to use the same NodeJS version in both environments\nfor the same reasons listed for Ruby.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDatabase\u003c/strong\u003e: While it's possible to use different databases in a development\nand production environment, it's generally not a good idea to do so: there are\nsome differences in how (for example) SQLite and Postgresql interpret\ndifferent SQL commands and what features are available in both, so it's\nconsidered a best practice to use the same database in development and in\nproduction.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThere are a lot of considerations when it comes to choosing a platform for\ndeploying your application, such as:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eCost\u003c/strong\u003e: How much will this platform charge me? How much do I get for free?\nFlat rate per month? Calculated based on usage?\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eEase of use\u003c/strong\u003e: How much work does it take to deploy my application the first\ntime? How easy is it to deploy new versions?\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eScalability\u003c/strong\u003e: As my application gets more users, how easy is it to handle\nincreased traffic?\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePerformance\u003c/strong\u003e: Does my application need to handle a lot of traffic? Be optimized\nfor video processing? Store a lot of files? Handle large database tables?\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFor now, since we're deploying our very first Rails projects, we're going to\nprioritize \u003cstrong\u003ecost\u003c/strong\u003e and \u003cstrong\u003eease of use\u003c/strong\u003e to decide on a platform, and use Render\nfor deploying in the coming lessons.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://render.com/\"\u003eRender\u003c/a\u003e is first and foremost a Platform as a Service (PaaS), which\nmeans they manage the hardware your code runs on as well as the software\nenvironment, with an aim of making it as simple as possible to take the code\nfrom your machine and run it on theirs. Render also has a free tier for\ndevelopers to try out the service at no cost.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/ruby-rails-tutorial.html\"\u003eAWS's Elastic Beanstalk\u003c/a\u003e and\n\u003ca href=\"https://docs.digitalocean.com/products/app-platform/languages-frameworks/ruby-on-rails/\"\u003eDigital Ocean's App Platform\u003c/a\u003e are both Platform as a Service\noptions as well, so you're welcome to try them out for future projects if you're\ninterested in exploring other options.\u003c/p\u003e\n\n\u003cp\u003eThe downside to PaaS options is that they tend to cost more in the long run as\nyour application scales up, since you're not only paying for the hardware your\ncode runs on, you're also paying for the platform maintenance and security. They\nalso tend to make it more challenging to fine-tune the environment in a way that\nis optimal for \u003cem\u003eyour\u003c/em\u003e specific application, rather than \u003cem\u003eall\u003c/em\u003e applications\nrunning on their service.\u003c/p\u003e\n\n\u003cp\u003eThe upside is that compared to handling that configuration ourselves, using Render\nwill make it much easier to get our app up and running in a production environment\non a server.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eThe end goal of developing web applications is to share them with the world, and\ndeploying is the crucial last step in this process! As a developer, it's\nimportant to equip yourself with the knowledge of what it takes to deploy a\nwebsite so you can evaluate the available options and choose the right one for\nyour project.\u003c/p\u003e\n\n\u003cp\u003eIn the coming lessons, we'll go through that deployment process with a couple of\napplications of varying complexity so you can build the confidence to deploy your\nown projects independently.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eHow does having an understanding of the deployment process help you as a\ndeveloper?\u003c/li\u003e\n\u003cli\u003eWhat are the advantages and disadvantages of using a Platform as a Service\n(PAAS) to deploy a Rails app?\u003c/li\u003e\n\u003c/ol\u003e","frontPage":false},{"exportId":"rest-discussion-questions","title":"REST Discussion Questions","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-dq-rest\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-dq-rest\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-dq-rest/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDefine REST conventions\u003c/li\u003e\n\u003cli\u003ePractice domain modeling\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e1.\u003c/strong\u003e Take 30 minutes with your table; choose a \u003cem\u003eresource\u003c/em\u003e that your server\ncontains data about. A resource will be something like 'books', 'users',\n'episodes', or 'characters', something that your users will be performing\nCRUD actions on.\u003c/p\u003e\n\n\u003cp\u003eWrite out the 5 RESTful routes from the curriculum that correspond to the 4 CRUD\nactions. Be sure to include the HTTP verb, the name of the route, the path (URL)\nand the corresponding CRUD action (Although there are actually 7 RESTful routes,\nthis phase will only use 5 of them).\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWhat SQL (if applicable) would be fired in the controller actions for each of\nthe routes?\u003c/li\u003e\n\u003cli\u003eWhy might it be important that routes and resources have a conventional structure?\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003e2.\u003c/strong\u003e Let's say you have built an app that is a blogging platform. You have a Post\nand an Author model and you have controllers and routes for the CRUD actions\nof each model. You sit down at your computer and visit\n\u003ccode\u003ewww.youramazingrailsblog.com/posts\u003c/code\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWhat kind of web request is this making? (i.e. is it a \u003ccode\u003eGET\u003c/code\u003e, \u003ccode\u003ePOST\u003c/code\u003e, etc request?)\u003c/li\u003e\n\u003cli\u003eWhat controller action (i.e. which method in which controller will the\nrequest get routed to) will receive that web request?\u003c/li\u003e\n\u003cli\u003eWhat is the response that your Rails app will send back to the client, i.e.\nthe browser?\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003e3.\u003c/strong\u003e Spend a few minutes mapping out a domain model for a parking lot. How would\nyou model the relationship between cars and spaces? How would you keep track\nof how long a car had been parked in a space? How would you keep track of how\nmuch money someone would need to pay for having parked a certain amount of\ntime?\u003c/p\u003e","frontPage":false},{"exportId":"phase-4-code-challenge-instructions","title":"Phase 4 Code Challenge Instructions","type":"WikiPage","content":"\u003ch4\u003e\u003cstrong\u003eBefore you can start working on the code challenge\u003c/strong\u003e\u003c/h4\u003e\n\u003col\u003e\n    \u003cli\u003eFind your code challenge in the Code Challenges module\u003c/li\u003e\n    \u003cli\u003eOpen the code challenge assignment and download the linked ZIP file\u003c/li\u003e\n    \u003cli\u003eUnzip the file on your computer into a directory where you normally work on labs\n        \u003cul style=\"list-style-type: circle;\"\u003e\n            \u003cli\u003eFor WSL users \u003cstrong\u003eonly\u003c/strong\u003e, make sure to move the folder to your Linux file system after unzipping.\n                \u003cul style=\"list-style-type: circle;\"\u003e\n                    \u003cli data-stringify-indent=\"0\"\u003eOpen Ubuntu\u003c/li\u003e\n                    \u003cli data-stringify-indent=\"0\"\u003eType\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003ccode class=\"c-mrkdwn__code\" data-stringify-type=\"code\"\u003eexplorer.exe .\u003c/code\u003e\n                        \u003cspan\u003e (type that exactly - including the period after explorer.exe) \u003c/span\u003eto open the current WSL directory in the file explorer\n                    \u003c/li\u003e\n                    \u003cli data-stringify-indent=\"0\"\u003eCopy the code challenge directory into the WSL directory in the file explorer\u003c/li\u003e\n                    \u003cli data-stringify-indent=\"0\"\u003eIf you have trouble with any of these steps, watch the \u003cstrong\u003eWSL Troubleshooting \u003c/strong\u003evideo below\u003c/li\u003e\n                \u003c/ul\u003e\n            \u003c/li\u003e\n        \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n        \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;cd\u0026nbsp;\u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e into the directory in your terminal (after, run \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;ls \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;; you should see a \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;bin/ \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;directory and a \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;code-challenge.bundle \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;file)\n    \u003c/li\u003e\n    \u003cli\u003eRun \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;ruby bin/start \u0026lt;your-name\u0026gt;\u0026nbsp;\u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e from the directory; this will create a new directory called \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;code-challenge/\u0026nbsp;\u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n        \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;cd\u0026nbsp;\u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e to and open the new \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;code-challenge/ \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;directory in your code editor\n    \u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4\u003e\u003cstrong\u003eTo work on your code challenge\u003c/strong\u003e\u003c/h4\u003e\n\u003col\u003e\n    \u003cli\u003eEnsure that you're in the\u0026nbsp;\u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;code-challenge/ \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;directory\u003c/li\u003e\n    \u003cli\u003eFollow the instructions in the \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;README.md \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;file\u003c/li\u003e\n    \u003cli\u003e\n        \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;git add . \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;and \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;git commit \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;inside of the\u0026nbsp;\u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;code-challenge/ \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;directory often as you're working\n    \u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4\u003e\u003cstrong\u003eTo submit the code challenge\u003c/strong\u003e\u003c/h4\u003e\n\u003col\u003e\n    \u003cli\u003eNavigate to the parent directory of \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;code-challenge/ \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;in your terminal.\u003c/li\u003e\n    \u003cli\u003eRun \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;ruby bin/end \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e, which will create a new file, \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;\u0026lt;your-name\u0026gt;.bundle \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;in that directory (for example, \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;alicia.bundle \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e).\u003c/li\u003e\n    \u003cli\u003eNavigate back to the code challenge assignment in the Phase 4 Milestones module in Canvas\u003c/li\u003e\n    \u003cli\u003eUpload \u003cspan style=\"background-color: #fbeeb8;\"\u003e\u003cstrong\u003e\n                \u003cspan style=\"font-family: 'courier new', courier;\"\u003e\u0026nbsp;\u0026lt;your-name\u0026gt;.bundle \u003c/span\u003e\n            \u003c/strong\u003e\u003c/span\u003e\u0026nbsp;to the assignment and submit\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eReach out to your instructors\u0026nbsp;\u003cstrong\u003eimmediately\u0026nbsp;\u003c/strong\u003eif you run into issues downloading, working on, or uploading your code challenge.\u003c/p\u003e\n\u003cp\u003eUse this video to guide you through these instructions:\u003c/p\u003e\n\u003cp\u003e\n    \u003ciframe src=\"https://www.youtube-nocookie.com/embed/3AM3qXUtnQY\" width=\"560\" height=\"315\" allowfullscreen=\"allowfullscreen\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\u003e\u003c/iframe\u003e\n\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ch4\u003e\u003cstrong\u003eWSL Troubleshooting\u003c/strong\u003e\u003c/h4\u003e\n\u003cp\u003eIf you are having trouble working on your code challenge in WSL, make sure to follow the steps in this video to ensure your code is running in the WSL file system.\u003c/p\u003e\n\u003cp\u003e\n    \u003ciframe title=\"embedded content\" src=\"https://www.loom.com/embed/eca62789008d4c879c206c57ef999824\" width=\"640\" height=\"480\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\"\u003e\u003c/iframe\u003e\n\u003c/p\u003e","frontPage":false},{"exportId":"video-update","title":"Video: Update","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-update\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-update\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-update/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/605187405/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","frontPage":false},{"exportId":"authorizing-requests","title":"Authorizing Requests","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-authorizing-requests-readme\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-authorizing-requests-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-authorizing-requests-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand the difference between \u003cem\u003eauthentication\u003c/em\u003e and \u003cem\u003eauthorization\u003c/em\u003e\u003c/li\u003e\n\u003cli\u003eRestrict access to routes to authorized users only\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSo far, we've been talking about how to \u003cstrong\u003eauthenticate\u003c/strong\u003e users, i.e., how to\nconfirm that a user is who they say they are. We've been using their username as\nour means of authentication; in the future, we'll also add a password to our\nauthentication process.\u003c/p\u003e\n\n\u003cp\u003eIn addition to \u003cstrong\u003eauthentication\u003c/strong\u003e, most applications also need to implement\n\u003cstrong\u003eauthorization\u003c/strong\u003e: giving certain users permission to access specific resources.\nFor example, we might want \u003cstrong\u003eall\u003c/strong\u003e users to be able to browse blog posts, but\nonly \u003cstrong\u003eauthenticated\u003c/strong\u003e users to have access to premium features, like creating\ntheir own blog posts. In this lesson, we'll learn how we can use the session\nhash to authenticate users' requests, and give them explicit permission to\naccess certain routes in our application.\u003c/p\u003e\n\n\u003ch2\u003eFirst Pass: Manual Checks\u003c/h2\u003e\n\n\u003cp\u003eLet's say we have a \u003ccode\u003eDocumentsController\u003c/code\u003e. Its \u003ccode\u003eshow\u003c/code\u003e method looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003edocument\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edocument\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow let's add a new requirement: documents should only be shown to users when\nthey're logged in. From a technical perspective, what does it actually mean for\na user to \u003cem\u003elog in\u003c/em\u003e? When a user logs in, all we are doing is using cookies to\nadd their \u003ccode\u003e:user_id\u003c/code\u003e to the \u003ccode\u003esession\u003c/code\u003e hash.\u003c/p\u003e\n\n\u003cp\u003eThe first thing you might do is to add a \u003cstrong\u003eguard clause\u003c/strong\u003e as the first line of\n\u003ccode\u003eDocumentsController#show\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Not authorized\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einclude?\u003c/span\u003e \u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\n  \u003cspan class=\"n\"\u003edocument\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edocument\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUnless the session includes \u003ccode\u003e:user_id\u003c/code\u003e, we return an error. \u003ccode\u003estatus:\n:unauthorized\u003c/code\u003e will return the specified HTTP status code. In this case, if a\nuser isn't logged in, we return \u003ccode\u003e401 Unauthorized\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eRefactor\u003c/h2\u003e\n\n\u003cp\u003eThis code works fine, so you use it in a few places. Now your\n\u003ccode\u003eDocumentsController\u003c/code\u003e looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDocumentsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Not authorized\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einclude?\u003c/span\u003e \u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edocument\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edocument\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Not authorized\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einclude?\u003c/span\u003e \u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edocuments\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edocuments\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Not authorized\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einclude?\u003c/span\u003e \u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edocument\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eauthor_id: \u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Not authorized\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einclude?\u003c/span\u003e \u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edocument\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# code to update a document\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThat doesn't look so DRY. Wouldn't it be great if there were a way to ask Rails\nto run some code \u003cstrong\u003ebefore\u003c/strong\u003e any controller \u003cstrong\u003eaction\u003c/strong\u003e?\u003c/p\u003e\n\n\u003cp\u003eFortunately, Rails gives us a solution: \u003ca href=\"http://guides.rubyonrails.org/action_controller_overview.html#filters\"\u003e\u003ccode\u003ebefore_action\u003c/code\u003e\u003c/a\u003e. We can\nrefactor our code like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDocumentsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebefore_action\u003c/span\u003e \u003cspan class=\"ss\"\u003e:authorize\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edocument\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edocument\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edocuments\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edocuments\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edocument\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eauthor_id: \u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eauthorize\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Not authorized\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einclude?\u003c/span\u003e \u003cspan class=\"ss\"\u003e:user_id\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe've moved our guard clause into its own method and added the following code at\nthe top of our \u003ccode\u003eDocumentsController\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ebefore_action\u003c/span\u003e \u003cspan class=\"ss\"\u003e:authorize\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is a call to the \u003ccode\u003eActionController\u003c/code\u003e class method \u003ccode\u003ebefore_action\u003c/code\u003e.\n\u003ccode\u003ebefore_action\u003c/code\u003e registers a filter. A filter is a method which runs \u003cstrong\u003ebefore\u003c/strong\u003e,\n\u003cstrong\u003eafter\u003c/strong\u003e, or \u003cstrong\u003earound\u003c/strong\u003e a controller's action. In this case, the filter runs\nbefore all \u003ccode\u003eDocumentsController\u003c/code\u003e's actions, and kicks requests out with\n\u003ccode\u003e401 Unauthorized\u003c/code\u003e unless they're logged in.\u003c/p\u003e\n\n\u003ch2\u003eSkipping Filters for Certain Actions\u003c/h2\u003e\n\n\u003cp\u003eWhat if we wanted to let anyone see a list of documents, but keep the\n\u003ccode\u003ebefore_action\u003c/code\u003e filter for other \u003ccode\u003eDocumentsController\u003c/code\u003e methods? We could do\nthis:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDocumentsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebefore_action\u003c/span\u003e \u003cspan class=\"ss\"\u003e:authorize\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eskip_before_action\u003c/span\u003e \u003cspan class=\"ss\"\u003e:authorize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis class method tells Rails to skip the \u003ccode\u003eauthorize\u003c/code\u003e filter only on the \u003ccode\u003eindex\u003c/code\u003e\naction:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eskip_before_action\u003c/span\u003e \u003cspan class=\"ss\"\u003e:authorize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eTo \u003cstrong\u003eauthorize\u003c/strong\u003e a user for specific actions, we can take advantage of the fact\nthat all logged in users in our application will have a \u003ccode\u003e:user_id\u003c/code\u003e saved in the\nsession hash. We can use a \u003ccode\u003ebefore_action\u003c/code\u003e filter to run some code that will\ncheck the \u003ccode\u003e:user_id\u003c/code\u003e in the session and only authorize users to run those\nactions if they are logged in.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat is the difference between authentication and authorization?\u003c/li\u003e\n\u003cli\u003eWhat Rails method can we use to add an authorization step before each of the\nactions in our controller? What Rails method can we use to exclude one or\nmore of the actions from the authorization step?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://guides.rubyonrails.org/action_controller_overview.html#filters\"\u003eAction Controller Overview: Filters\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"singly-linked-list-data-structure","title":"Singly Linked List Data Structure","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-singly-linked-list\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-singly-linked-list\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-singly-linked-list/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eIdentify the use cases for a Singly Linked List\u003c/li\u003e\n\u003cli\u003eDemonstrate common methods for a Singly Linked List\u003c/li\u003e\n\u003cli\u003eDifferentiate between a Singly Linked List and an array\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn what a \u003cstrong\u003eSingly Linked List\u003c/strong\u003e is, along with how to\nbuild a \u003ccode\u003eLinkedList\u003c/code\u003e class. We'll also learn some of its common methods to get\nan understanding of what the differences between a Singly Linked List and an\narray are.\u003c/p\u003e\n\n\u003ch2\u003eWhat Is a Linked List?\u003c/h2\u003e\n\n\u003cp\u003eA linked list is a linear (ordered) collection of data that consists of several\nelements, called \u003cstrong\u003enodes\u003c/strong\u003e, with each node pointing to the next node in the\nlist. Unlike arrays, linked lists aren't indexed.\u003c/p\u003e\n\n\u003cp\u003eThink of it like a train: each car is connected to the next car, which is\nconnected to the next car, and so forth. In an array, we can say \"Give me the\nsixth element,\" but in a linked list, we have to start at the beginning of the\ntrain, and go from the first car, to the second car, and so forth:\u003c/p\u003e\n\n\u003cp\u003eThe nodes in a linked list each have a value, and a pointer to another node,\notherwise pointing to nil if it is at the end of the list.\u003c/p\u003e\n\n\u003ch2\u003eWhy Linked Lists?\u003c/h2\u003e\n\n\u003cp\u003eLinked lists and arrays are both data structures that can hold ordered lists of\ndata. Depending on what kind of operations you need to perform with that list,\nthere are some scenarios where a linked list can be more efficient than an\narray, such as efficiently adding and removing elements from any arbitrary\nposition within the list.\u003c/p\u003e\n\n\u003cp\u003eThink about if we have a sorted dog array of 5 elements representing\ndog breeds:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bulldog\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Chihuahua\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"German Shepard\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Retriever\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Shiba Inu\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n   \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e          \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e            \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e             \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e          \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter creating our array, we realize we forgot to add one dog in our array, a\nChow Chow! To fix our array, we would need to \u003cem\u003einsert\u003c/em\u003e the \"Chow Chow\" element\ninto the array in the correct index, which would be 2. Because there is already\nan element in the 2th index, and more elements in the sequential indexes, all of\nthose elements would have to be shifted down a spot, and given a new index.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-singly-linked-list/pup_array.png\" alt=\"Pup Array\"\u003e\u003c/p\u003e\n\n\u003cp\u003eSince this is a smaller array, it doesn't seem like the biggest deal to move\nthe last 3 elements down a place, but as you can imagine, if we had an array of\nhundreds or thousands or even millions of elements, reindexing \u003cem\u003eall\u003c/em\u003e of those\nelements would take a really long time! This is where linked lists come in\nhandy.\u003c/p\u003e\n\n\u003ch2\u003eDefining a Singly Linked List\u003c/h2\u003e\n\n\u003cp\u003eTime to build our custom data structure! Since our \u003ccode\u003eLinkedList\u003c/code\u003e class is going\nto contain a series of nodes linked together, we'll start by creating \u003ccode\u003eNode\u003c/code\u003e\nclass:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eNode\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:data\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:next_node\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enext_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@next_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enext_node\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEach node needs to keep track of some data, as well as a reference to the next\nnode in the list.\u003c/p\u003e\n\n\u003cp\u003eNext, we can build out a \u003ccode\u003eLinkedList\u003c/code\u003e class, with an \u003ccode\u003einitialize\u003c/code\u003e method where\nwe declare an instance variable for the \u003ccode\u003ehead\u003c/code\u003e of the linked list:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eLinkedList\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:head\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@head\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe \u003ccode\u003ehead\u003c/code\u003e node is going to be the very first node in our linked list, and will\npoint to the next node once we start adding more elements.\u003c/p\u003e\n\n\u003ch3\u003eAdding Nodes\u003c/h3\u003e\n\n\u003cp\u003eLet's say we want to recreate the data structure of dogs we had before\n(\u003ccode\u003e[\"Bulldog\", \"Chihuahua\", \"German Shepard\", \"Retriever\", \"Shiba Inu\"]\u003c/code\u003e). This\ntime we'll use a linked list instead of an array. The simplest way to do this is\nto create a series of nodes and link them together using the \u003ccode\u003enext_node\u003c/code\u003e\nattribute:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ebulldog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eNode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bulldog\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Bulldog\u003c/span\u003e\n\u003cspan class=\"n\"\u003echihuahua\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eNode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Chihuahua\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003ebulldog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003echihuahua\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Bulldog -\u0026gt; Chihuahua\u003c/span\u003e\n\u003cspan class=\"n\"\u003egerman_shepard\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eNode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"German Shepard\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003echihuahua\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egerman_shepard\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Bulldog -\u0026gt; Chihuahua -\u0026gt; German Shepard\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhile this technically qualifies as a linked list, it's not the most pleasant to\nwork with! We can make our data structure a bit more developer-friendly by using\nthe \u003ccode\u003eLinkedList\u003c/code\u003e class to build a list by creating an \u003ccode\u003eappend\u003c/code\u003e method in our\n\u003ccode\u003eLinkedList\u003c/code\u003e class.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eappend\u003c/code\u003e method should add a node to the \u003ccode\u003ehead\u003c/code\u003e of the list if the list is\nempty, and add it to the end of the list if not:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eLinkedList\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:head\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@head\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# Add element to the beginning of the list if the list is empty\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enil?\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehead\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e# Otherwise, traverse the list to find the last node\u003c/span\u003e\n    \u003cspan class=\"n\"\u003elast_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003elast_node\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e\n      \u003cspan class=\"n\"\u003elast_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elast_node\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e# and add the node to the end\u003c/span\u003e\n    \u003cspan class=\"n\"\u003elast_node\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enext_node\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow we can build our linked list like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003elist\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eLinkedList\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\n\u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eNode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bulldog\"\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Bulldog\u003c/span\u003e\n\u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eNode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Chihuahua\"\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Bulldog -\u0026gt; Chihuahua\u003c/span\u003e\n\u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eNode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"German Shepard\"\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Bulldog -\u0026gt; Chihuahua -\u0026gt; German Shepard\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eWhen to use a Singly Linked List\u003c/h2\u003e\n\n\u003cp\u003eLinked Lists are ideal for situations when you need quick insertion and\ndeletion, but are more expensive than arrays when it comes to searching, since\narrays are indexed. The Big O for both insertion as well as deletion at a known\nnode in a linked list is \u003ccode\u003e0(1)\u003c/code\u003e because we don't need to update indexes for the\nother elements in the list when a new element is added: we just need to adjust\nwhich node the \u003ccode\u003enext_node\u003c/code\u003e points to. With an array, insertion and deletion from\nanywhere other than the end are \u003ccode\u003eO(n)\u003c/code\u003e, because other elements need to be\nreindexed.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-singly-linked-list/pup_linked_list.png\" alt=\"Pup Linked List\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWe use linked lists because they can be less expensive than arrays when it comes\nto insertion and deletion within lists. Linked Lists are a very common interview\ndata structure, so make sure you get to know them! In the next lesson, we'll\nbuild more methods in our \u003ccode\u003eLinkedList\u003c/code\u003e class.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Linked_list\"\u003eLinked list\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.rubyguides.com/2017/08/ruby-linked-list/\"\u003ePractical Linked List in Ruby\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-custom-validations","title":"Video: Custom Validations","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-custom-validations\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-custom-validations\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-custom-validations/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/606010437/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/active_record_validations.html#custom-methods\"\u003eRails Guides: Custom Validation Methods\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-rails-react-deployment","title":"Video: Rails-React Deployment","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-rails-react-deployment\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-react-deployment\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-rails-react-deployment/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/609374456/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","frontPage":false},{"exportId":"video-creating-a-rails-app","title":"Video: Creating a Rails App","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-creating-a-rails-app\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-creating-a-rails-app\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-creating-a-rails-app/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/725021476/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/getting_started.html\"\u003eGetting Started with Rails\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-seeds","title":"Video: Seeds","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-seeds\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-seeds\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-seeds/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/606691616/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/v5.1/active_record_migrations.html#migrations-and-seed-data\"\u003eRails Guides: Migrations and Seed Data\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"testing-apis-with-postman","title":"Testing APIs with Postman","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-testing-apis-with-postman\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-testing-apis-with-postman\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-testing-apis-with-postman/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse different kinds of clients to make requests\u003c/li\u003e\n\u003cli\u003eCompose a request with a URL, HTTP verb, headers, and body\u003c/li\u003e\n\u003cli\u003eTest non-GET requests using Postman\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eVideo Walkthrough\u003c/h2\u003e\n\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/2Uga5Dmj-dA?rel=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eHTTP Clients\u003c/h2\u003e\n\n\u003cp\u003eWhen developing a web application on Rails, our primary goal is to take \u003cstrong\u003eHTTP\nrequests\u003c/strong\u003e and return an appropriate \u003cstrong\u003eresponse\u003c/strong\u003e, following the idea of\n\u003cstrong\u003eclient-server\u003c/strong\u003e communication. So far, we've been using one particular client\nto interact with our server: the browser!\u003c/p\u003e\n\n\u003cp\u003eIt's straightforward to use the browser to make a GET request — all we\nhave to do is enter an address in the browser's URL bar, such as\n\u003ccode\u003ehttp://localhost:3000/birds\u003c/code\u003e, and hit enter.\u003c/p\u003e\n\n\u003cp\u003eFollowing REST conventions, we'll need to make requests using \u003cstrong\u003edifferent HTTP\nverbs\u003c/strong\u003e, beyond just GET requests: for example, to \u003cstrong\u003ecreate\u003c/strong\u003e a new resource,\nwe'll need to make a POST request. So we'll need a new tool to make these\nnon-GET requests to our server.\u003c/p\u003e\n\n\u003cp\u003eWe've seen how to make a POST request in JavaScript using fetch:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://localhost:4000/birds\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enewBird\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHowever, running a JavaScript application and writing \u003ccode\u003efetch\u003c/code\u003e requests to test\nout our API in development would be quite a chore.\u003c/p\u003e\n\n\u003cp\u003eLuckily for us, there are some excellent tools out there to make interacting\nwith APIs, and customizing all different parts of the request (the headers, HTTP\nverb, URL, and body) easier for us!\u003c/p\u003e\n\n\u003ch2\u003eUsing Postman as an API Client\u003c/h2\u003e\n\n\u003cp\u003eThe tool we'll be demonstrating in this lesson is \u003ca href=\"https://postman.com\"\u003ePostman\u003c/a\u003e. Postman is an API\nClient tool that will help with testing and development of our API.\u003c/p\u003e\n\n\u003cp\u003eFirst, head to this page and download Postman:\n\u003ca href=\"https://www.postman.com/downloads/\"\u003ehttps://www.postman.com/downloads/\u003c/a\u003e. Make sure to download\nthe app rather than use the web version. If you have any issues downloading, make sure to check out the \u003ca href=\"https://learning.postman.com/docs/getting-started/installation-and-updates/\"\u003ePostman docs\u003c/a\u003e for help.\u003c/p\u003e\n\n\u003cp\u003eOnce you've downloaded Postman and signed in, you should see a screen like this:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/testing-apis-with-postman/postman-welcome-screen.png\" alt=\"postman welcome screen\"\u003e\u003c/p\u003e\n\n\u003cp\u003eTo show what we can do with Postman, we're going to be using the\n\u003ca href=\"https://jsonplaceholder.typicode.com/guide/\"\u003eJSON Placeholder API\u003c/a\u003e, a free resource where we can try out\ndifferent requests. For our first request, we'll make a simple GET request to\n\u003ccode\u003ehttps://jsonplaceholder.typicode.com/posts/1\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eClick on the plus sign to open a new tab. You should see a field where you can\nenter your request:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/testing-apis-with-postman/postman-request-field.png\" alt=\"postman request field\"\u003e\u003c/p\u003e\n\n\u003cp\u003eEnter the URL in the field and click send:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/testing-apis-with-postman/postman-get-request.png\" alt=\"postman get request\"\u003e\u003c/p\u003e\n\n\u003cp\u003eYou'll see we receive a JSON object as a response!\u003c/p\u003e\n\n\u003cp\u003eThis API also lets us make non-GET requests, so let's see how we can use Postman\nfor making a POST request. We'll try recreating this \u003ccode\u003efetch\u003c/code\u003e request in Postman:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttps://jsonplaceholder.typicode.com/posts\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003efoo\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebar\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003euserId\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}),\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFirst, update the \u003cstrong\u003eURL\u003c/strong\u003e to be \u003ccode\u003ehttps://jsonplaceholder.typicode.com/posts\u003c/code\u003e.\nThen, click the dropdown next to the URL bar, and change the \u003cstrong\u003eHTTP verb\u003c/strong\u003e from\na GET request to a POST request.\u003c/p\u003e\n\n\u003cp\u003eWe can also use Postman to customize what \u003cstrong\u003eheaders\u003c/strong\u003e are being sent. Headers\nare additional metadata that we can send with requests. In the \u003ccode\u003efetch\u003c/code\u003e example\nabove, the \u003ccode\u003eContent-Type\u003c/code\u003e header tells the server that we expect to receive\n\u003ccode\u003eapplication/json\u003c/code\u003e in the response. To add a header, click the 'Headers' tab,\nand add a new key of \u003ccode\u003eContent-Type\u003c/code\u003e with a value of \u003ccode\u003eapplication/json\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eFinally, we'll need some way of sending a JSON formatted string in the \u003cstrong\u003ebody\u003c/strong\u003e\nof the request. Click the 'Body' tab in Postman, then click the dropdown and\nselect 'raw' to specify that we are sending a raw string of data. Then, select\nJSON from the next dropdown to specify that the string will be formatted as\nJSON. Now we can add a JSON formatted string to the text area below the dropdown:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"title\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"foo\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"body\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"bar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"userId\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: for the string to be considered valid JSON, all the keys on the\nobject must be in \u003cstrong\u003edouble-quotes\u003c/strong\u003e. There also can't be any trailing commas\nafter the last key-value pair. You can use \u003ca href=\"https://jsonlint.com/\"\u003ethis JSON tool\u003c/a\u003e to\nvalidate your JSON if you need to troubleshoot.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eWith all that in place, click send:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/testing-apis-with-postman/postman-post-request.png\" alt=\"postman post request\"\u003e\u003c/p\u003e\n\n\u003cp\u003eSuccess! The API has received our request and sent back a response representing\na newly created \u003ccode\u003epost\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"title\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"foo\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"body\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"bar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"userId\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e101\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou'll also notice some additional info comes back in the response, such as a\nstatus code of \u003ccode\u003e201 Created\u003c/code\u003e that indicates the successful creation of a\nresource.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eAPI clients like Postman are extremely valuable to have in your API developer\ntoolkit. They make it simple to interact with servers by giving you full control\nover how the response is being sent, with a nice interface for customizing the\nHTTP verb, URL, headers, and body.\u003c/p\u003e\n\n\u003cp\u003eIn future lessons, we'll be expanding our API to handle non-GET requests, so\nbeing able to use a tool like Postman will make our API development much easier!\nIt's also a great tool to use if you're exploring a third-party API for use in\nyour projects.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, solidify your understanding of how to use Postman by making\nrequests to other endpoints for the \u003ca href=\"https://jsonplaceholder.typicode.com/guide/\"\u003eJSON Placeholder API\u003c/a\u003e.\nTry making a PATCH request and a DELETE request. What changes between these\ndifferent requests? What does this API send as a response if you make a bad\nrequest?\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://learning.postman.com/docs/getting-started/installation-and-updates/\"\u003ePostman Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"deploying-a-rails-react-app-to-render","title":"Deploying a Rails-React App to Render","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-deploying-rails-react-to-render\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-deploying-rails-react-to-render\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-deploying-rails-react-to-render/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand the React build process and how to serve a React app from Rails\u003c/li\u003e\n\u003cli\u003eUnderstand challenges of client-side routing in a deployed application\u003c/li\u003e\n\u003cli\u003eDeploy a Rails API with a React frontend to Render\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn the previous lesson, we deployed a small Rails API application to Render to\nlearn how the deployment process works in general, and what steps are required\nto take the code from our machine and get it to run on a server.\u003c/p\u003e\n\n\u003cp\u003eIn this lesson, we'll be tackling a more complex app with a modern React-Rails\nstack, and explore some of the challenges of getting these two apps to run\ntogether on a single server.\u003c/p\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eTo follow along with this lesson, we have a pre-built React-Rails application\nthat you'll be deploying to Render. To start, head to this link, and \u003cstrong\u003efork\u003c/strong\u003e\nand \u003cstrong\u003eclone\u003c/strong\u003e the repository there:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/learn-co-curriculum/phase-4-deploying-demo-app-render\"\u003ehttps://github.com/learn-co-curriculum/phase-4-deploying-demo-app-render\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAfter downloading the code, set up the repository locally:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:create db:migrate\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis application has a Rails API with session-based authentication, a React\nfrontend using React Router for client-side routing, and PostgreSQL for the\ndatabase.\u003c/p\u003e\n\n\u003cp\u003eSpend some time familiarizing yourself with the code for the demo app before\nproceeding. We'll be walking through its setup and why certain choices were\nmade through the course of this lesson.\u003c/p\u003e\n\n\u003ch2\u003eReact Production Build\u003c/h2\u003e\n\n\u003cp\u003eOne of the great features that Create React App provides to developers is the\nability to build different versions of a React application for different\nenvironments.\u003c/p\u003e\n\n\u003cp\u003eWhen working in the \u003cstrong\u003edevelopment\u003c/strong\u003e environment, a typical workflow for adding\nnew features to a React application is something like this:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRun \u003ccode\u003enpm start\u003c/code\u003e to run a development server\u003c/li\u003e\n\u003cli\u003eMake changes to the app by editing the files\u003c/li\u003e\n\u003cli\u003eView those changes in the browser\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eTo enable this \u003cem\u003eexcellent\u003c/em\u003e developer experience, Create React App uses\n\u003ca href=\"https://webpack.js.org/\"\u003ewebpack\u003c/a\u003e under the hood to create a development server\nwith hot module reloading, so any changes to the files in our application will\nbe instantly visible to us in the browser. It also has a lot of other nice\nfeatures in development mode, like showing us good error and warning messages\nvia the console.\u003c/p\u003e\n\n\u003cp\u003eCreate React App is \u003cem\u003ealso\u003c/em\u003e capable of building an entirely different version of\nour application for \u003cstrong\u003eproduction\u003c/strong\u003e, also thanks to webpack. The end goal of our\napplication is to get it into the hands of our users via our website. For our\napp to run in production, we have a different set of needs:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eBuild\u003c/strong\u003e the static HTML, JavaScript and CSS files needed to run our app in\nthe browser, keeping them as small as possible\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eServe\u003c/strong\u003e the application's files from a server hosted online, rather than a\nlocal webpack development server\u003c/li\u003e\n\u003cli\u003eDon't show any error messages/warnings that are meant for developers rather\nthan our website's users\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eBuilding a Static React App\u003c/h3\u003e\n\n\u003cp\u003eWhen developing the frontend of a site using Create React App, our ultimate goal\nis to create a \u003cstrong\u003estatic site\u003c/strong\u003e consisting of pre-built HTML, JavaScript, and CSS\nfiles, which can be served by Rails when a user makes a request to the server to\nview our frontend. To demonstrate this process of \u003cstrong\u003ebuilding\u003c/strong\u003e the production\nversion of our React app and \u003cstrong\u003eserving\u003c/strong\u003e it from the Rails app, follow these\nsteps.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e1.\u003c/strong\u003e Build the production version of our React app:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm run build \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis command will generate a bundled and minified version of our React app in\nthe \u003ccode\u003eclient/build\u003c/code\u003e folder.\u003c/p\u003e\n\n\u003cp\u003eCheck out the files in that directory, and in particular the JavaScript files.\nYou'll notice they have very little resemblance to the files in your \u003ccode\u003esrc\u003c/code\u003e\ndirectory! This is because of that \u003cstrong\u003ebundling\u003c/strong\u003e and \u003cstrong\u003eminification\u003c/strong\u003e process:\ntaking the source code you wrote, along with any external JavaScript libraries\nyour code depends on, and squishing it as small as possible.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e2.\u003c/strong\u003e Move our static frontend files to the \u003ccode\u003e/public directory\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003emv \u003c/span\u003eclient/build/\u003cspan class=\"k\"\u003e*\u003c/span\u003e public\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis command will move all of the files and folders that are inside the\n\u003ccode\u003eclient/build\u003c/code\u003e directory into to the \u003ccode\u003epublic\u003c/code\u003e directory. The \u003ccode\u003epublic\u003c/code\u003e directory\nis used by Rails to serve \u003cstrong\u003estatic\u003c/strong\u003e assets, so when we run the Rails server, it\nwill be able to display the files from our production version of the React\napplication. When a user visits \u003ccode\u003ehttp://localhost:3000\u003c/code\u003e, Rails will return the\n\u003ccode\u003eindex.html\u003c/code\u003e file from this directory.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e3.\u003c/strong\u003e Run the Rails server:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eVisit \u003ca href=\"http://localhost:3000\"\u003ehttp://localhost:3000\u003c/a\u003e in the browser. You should\nsee the production version of the React application!\u003c/p\u003e\n\n\u003cp\u003eExplore the React app in the browser using the React dev tools. What differences\ndo you see between this version of the app and what you're used to when running\nin development mode?\u003c/p\u003e\n\n\u003cp\u003eNow you've seen how to build a production version of the React application\nlocally, and some of the differences between this version and the development\nversion you're more familiar with.\u003c/p\u003e\n\n\u003cp\u003eThere is one other issue with our React application to dive into before we deploy\nit: how can we deal with client-side routing?\u003c/p\u003e\n\n\u003ch3\u003eConfiguring Rails for Client-Side Routing\u003c/h3\u003e\n\n\u003cp\u003eIn our React application, we're using React Router to handle client-side\nrouting. Client-side routing means that a user should be able to navigate to the\nReact application, load all the HTML/CSS/JavaScript code just \u003cstrong\u003eonce\u003c/strong\u003e, and then\nclick through links in our site to navigate to different pages without making\nanother request to the server for a new HTML document.\u003c/p\u003e\n\n\u003cp\u003eWe have two client-side routes defined:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// client/src/components/App.js\u003c/span\u003e\n\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eSwitch\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eRoute\u003c/span\u003e \u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/new\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eNewRecipe\u003c/span\u003e \u003cspan class=\"na\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eRoute\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eRoute\u003c/span\u003e \u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eRecipeList\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eRoute\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eSwitch\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen we run the app using \u003ccode\u003enpm start\u003c/code\u003e and webpack is handling the React server,\nit can handle these client-side routing requests just fine! \u003cstrong\u003eHowever\u003c/strong\u003e, when\nwe're running React within the Rails application, we also have routes defined\nfor our Rails API, and Rails will be responsible for all the routing logic in\nour application. So let's think about what will happen from the point of view of\n\u003cstrong\u003eRails\u003c/strong\u003e when a user makes a request to these routes.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eGET /\u003c/code\u003e: Rails will respond with the \u003ccode\u003epublic/index.html\u003c/code\u003e file\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eGET /new\u003c/code\u003e: Rails will look for a \u003ccode\u003eGET /new\u003c/code\u003e route in the \u003ccode\u003econfig/routes.rb\u003c/code\u003e\nfile. If we don't have this route defined, it will return a 404 error.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAny other client-side routes we define in React will have the same issue as\n\u003ccode\u003e/new\u003c/code\u003e: since Rails is handling the routing logic, it will look for routes\ndefined in the \u003ccode\u003econfig/routes.rb\u003c/code\u003e file to determine how to handle all requests.\u003c/p\u003e\n\n\u003cp\u003eWe can solve this problem by setting up a \u003cstrong\u003ecustom route\u003c/strong\u003e in our Rails\napplication, and handle any requests that come through that \u003cstrong\u003earen't\u003c/strong\u003e requests\nfor our API routes by returning the \u003ccode\u003epublic/index.html\u003c/code\u003e file instead.\u003c/p\u003e\n\n\u003cp\u003eHere's how it works:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edraw\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003enamespace\u003c/span\u003e \u003cspan class=\"ss\"\u003e:api\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:recipes\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/signup\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"users#create\"\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/me\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"users#show\"\u003c/span\u003e\n    \u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/login\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"sessions#create\"\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edelete\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/logout\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"sessions#destroy\"\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"*path\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"fallback#index\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003econstraints: \u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003exhr?\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehtml?\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAll the routes for our API are defined \u003cstrong\u003efirst\u003c/strong\u003e in the \u003ccode\u003eroutes.rb\u003c/code\u003e file. We use\nthe \u003ca href=\"https://guides.rubyonrails.org/routing.html#controller-namespaces-and-routing\"\u003enamespacing\u003c/a\u003e to differentiate the API requests from other requests.\u003c/p\u003e\n\n\u003cp\u003eThe last method in the \u003ccode\u003eroutes.rb\u003c/code\u003e file handles all other \u003ccode\u003eGET\u003c/code\u003e requests by\nsending them to a special \u003ccode\u003eFallbackController\u003c/code\u003e with an \u003ccode\u003eindex\u003c/code\u003e action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/fallback_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFallbackController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActionController\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eBase\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003efile: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'public/index.html'\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis action has just one job: to render the HTML file for our React application!\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: It's important that this \u003ccode\u003eFallbackController\u003c/code\u003e inherits from\n\u003ccode\u003eActionController::Base\u003c/code\u003e instead of \u003ccode\u003eApplicationController\u003c/code\u003e, which is what\nyour API controllers inherit from. Why? The \u003ccode\u003eApplicationController\u003c/code\u003e class in a\nRails API inherits from the\n\u003ca href=\"https://api.rubyonrails.org/classes/ActionController/API.html\"\u003e\u003ccode\u003eActionController::API\u003c/code\u003e class\u003c/a\u003e, which doesn't include\nthe methods for rendering HTML. For our other controllers, this isn't a\nproblem, since they only need to render JSON responses. But for the\n\u003ccode\u003eFallbackController\u003c/code\u003e, we need the ability to render an HTML file for our React\napplication.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eExperiment with the code above. Run \u003ccode\u003erails s\u003c/code\u003e to run the application. Try\ncommenting out the last line of the \u003ccode\u003eroutes.rb\u003c/code\u003e file, and visit\n\u003ca href=\"http://localhost:3000/new\"\u003ehttp://localhost:3000/new\u003c/a\u003e. You should see a 404\npage. Comment that line back in, and make the same request. Success!\u003c/p\u003e\n\n\u003cp\u003eNow that you've seen how to create a production version of our React app\nlocally, and tackled some thorny client-side routing issues, let's talk about\nhow to deploy the application to Render.\u003c/p\u003e\n\n\u003ch2\u003eRender Build Process\u003c/h2\u003e\n\n\u003cp\u003eThink about the steps to build our React application locally. What did we have\nto do to build the React application in such a way that it could be served by\nour Rails application? Well, we had to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRun \u003ccode\u003enpm install --prefix client\u003c/code\u003e to install any dependencies\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003enpm run build --prefix client\u003c/code\u003e to create the production app\u003c/li\u003e\n\u003cli\u003eMove the code from the \u003ccode\u003eclient/build\u003c/code\u003e folder to the \u003ccode\u003epublic\u003c/code\u003e folder\u003c/li\u003e\n\u003cli\u003eRun \u003ccode\u003erails s\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWe would also need to repeat these steps any time we made any changes to the\nReact code, i.e., to anything in the \u003ccode\u003eclient\u003c/code\u003e folder. Ideally, we'd like to be\nable to \u003cstrong\u003eautomate\u003c/strong\u003e those steps when we deploy this app to Render, so we can\njust push up new versions of our code to GitHub and deploy them like we were\nable to do in the previous lesson.\u003c/p\u003e\n\n\u003cp\u003eLuckily, we already have something that will help us do that! Recall from the\nlast lesson that one of the deployment steps was to create a build script in the\n\u003ccode\u003ebin\u003c/code\u003e directory. If you look in the \u003ccode\u003ebin\u003c/code\u003e directory of our demo app, you'll see\na \u003ccode\u003erecipes-build.sh\u003c/code\u003e file that contains the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e#!/usr/bin/env bash\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# exit on error\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e errexit\n\nbundle \u003cspan class=\"nb\"\u003einstall\n\u003c/span\u003ebundle \u003cspan class=\"nb\"\u003eexec \u003c/span\u003erake db:migrate \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis file runs the commands to build the Rails API portion of our app when\nchanges are pushed to GitHub. All we need to do is add the corresponding\ncommands for the front end:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e#!/usr/bin/env bash\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# exit on error\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e errexit\n\n\u003cspan class=\"c\"\u003e# Add build commands for front end\u003c/span\u003e\n\u003cspan class=\"nb\"\u003erm\u003c/span\u003e \u003cspan class=\"nt\"\u003e-rf\u003c/span\u003e public\nnpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e npm run build \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003cspan class=\"nb\"\u003ecp\u003c/span\u003e \u003cspan class=\"nt\"\u003e-a\u003c/span\u003e client/build/. public/\n\nbundle \u003cspan class=\"nb\"\u003einstall\n\u003c/span\u003ebundle \u003cspan class=\"nb\"\u003eexec \u003c/span\u003erake db:migrate \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe code we added does the following whenever a build is launched:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRemoves the \u003ccode\u003epublic\u003c/code\u003e folder that contains the current front end production\nbuild.\u003c/li\u003e\n\u003cli\u003eInstalls the dependencies for the app.\u003c/li\u003e\n\u003cli\u003eRuns the production build.\u003c/li\u003e\n\u003cli\u003eRecreates the \u003ccode\u003epublic\u003c/code\u003e directory and copies the new production build files\ninto it.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFinally, we need to run the following command in the terminal to make sure the\nscript is executable:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003echmod \u003c/span\u003ea+x bin/recipes-build.sh\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith this build script, any time we make a change to our app — in either the\nfront end or the back end — all we need to do is push the changes to GitHub and\nrelaunch the build from the Render dashboard!\u003c/p\u003e\n\n\u003ch2\u003eCreating the Master Key File\u003c/h2\u003e\n\n\u003cp\u003eYou may recall that, in the last lesson, we made edits to several files to\nconfigure the app for Render. Those edits have all been made to the demo app's\nfiles. However, there is one thing missing.\u003c/p\u003e\n\n\u003cp\u003eRecall that when we created the Web Service on Render, we added an environment\nvariable called \u003ccode\u003eRAILS_MASTER_KEY\u003c/code\u003e and pasted in the value that's in the\n\u003ccode\u003econfig/master.key\u003c/code\u003e file. If you look in the \u003ccode\u003econfig\u003c/code\u003e folder for the demo app,\nhowever, you'll see that file isn't there.\u003c/p\u003e\n\n\u003cp\u003eWhen you create a Rails app from scratch, the \u003ccode\u003emaster.key\u003c/code\u003e file is automatically\ncreated. However, this file contains secure information so it should not be\npushed to GitHub. If you look in the \u003ccode\u003e.gitignore\u003c/code\u003e file, you'll see it listed\nthere. As a result, when you fork and clone a repo from GitHub (as you did with\nthe demo app), the \u003ccode\u003emaster.key\u003c/code\u003e file will not be present. So we need to create\nit.\u003c/p\u003e\n\n\u003cp\u003eTo do that, first delete the \u003ccode\u003econfig/credentials.yml.enc\u003c/code\u003e file, which holds the\nencrypted version of the key. Then run the following command in the terminal:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ EDITOR\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"code --wait\"\u003c/span\u003e bin/rails credentials:edit\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: if you use a different text editor than VS Code, you will need to replace\n\u003ccode\u003ecode\u003c/code\u003e with the appropriate command.\u003c/p\u003e\n\n\u003cp\u003eThe command above will open a file in VS Code and \"wait\" for you to close it\nbefore completing the process of creating the credential files. You can edit the\nsecret key base in the file if you choose, but we'll leave it as is, so go ahead\nand close the file. The command in the terminal will now complete, and you\nshould see both the \u003ccode\u003ecredentials.yml.enc\u003c/code\u003e and \u003ccode\u003emaster.key\u003c/code\u003e files in the \u003ccode\u003econfig\u003c/code\u003e\nfolder.\u003c/p\u003e\n\n\u003cp\u003eSee the Rails Guide on \u003ca href=\"https://guides.rubyonrails.org/security.html#environmental-security\"\u003eEnvironmental Security\u003c/a\u003e if you'd like\nmore information about these files.\u003c/p\u003e\n\n\u003ch2\u003eDeploy to Render\u003c/h2\u003e\n\n\u003cp\u003eWe're now ready to create a new database and Web Service and deploy the app to\nRender. If you need a refresher on any of the steps below, look back at the\nprevious lesson.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eCommit and push your latest changes.\u003c/li\u003e\n\u003cli\u003eGo to the Render dashboard, click on your PostgreSQL instance, and copy the\nPSQL connection command.\u003c/li\u003e\n\u003cli\u003eRun the command in the terminal to open the PSQL terminal, then use the SQL\n\"CREATE DATABASE\" command to create a new database for the app (e.g.,\n\u003ccode\u003erecipe_app_db\u003c/code\u003e). Exit PSQL with the \u003ccode\u003e\\q\u003c/code\u003e command.\u003c/li\u003e\n\u003cli\u003eReturn to the Render dashboard and create a new Web Service.\u003c/li\u003e\n\u003cli\u003eGive the app a name and set the Environment to Ruby.\u003c/li\u003e\n\u003cli\u003eEnter the build command (\u003ccode\u003e./bin/recipes-build.sh\u003c/code\u003e) and start command (\u003ccode\u003ebundle\nexec puma -C config/puma.rb\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003eAdd the \u003ccode\u003eDATABASE_URL\u003c/code\u003e environment variable; be sure to change the database\nname in the URL to \u003ccode\u003erecipe_app_db\u003c/code\u003e (or whatever you named it).\u003c/li\u003e\n\u003cli\u003eAdd the \u003ccode\u003eRAILS_MASTER_KEY\u003c/code\u003e environment variable; enter the key contained in\nthe \u003ccode\u003emaster.key\u003c/code\u003e file we created above as the value.\u003c/li\u003e\n\u003cli\u003eClick the \"Create Web Service\" button at the bottom of the page.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eMaking an Update\u003c/h2\u003e\n\n\u003cp\u003eTry making a minor change in the app's front end. Commit and push the changes,\nthen launch a new build from the Render dashboard. Once the deploy is complete,\nrefresh the page and verify that our updated build script has deployed the\nchange.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eCreating a website out of multiple applications working together adds a\nsignificant amount of complexity when it comes time to deploy our application.\nThe upside to this approach is we get to leverage the strengths of each of the\ntools we're using: React for a speedy, responsive user interface, and Rails for\na robust, well-designed backend to communicate with the database.\u003c/p\u003e\n\n\u003cp\u003eBy spending some time up front to understand and automate parts of the\ndeployment process, we can make future deployments simpler.\u003c/p\u003e\n\n\u003cp\u003eFor your future projects using a React frontend and Rails API backend, we'll\nprovide a template project to use so you don't have to worry about configuring\nthe tricky parts of the deployment process yourself. However, it's helpful to\nhave an understanding of this configuration should you wish to customize it\nor troubleshoot issues related to deployments in the future.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhy does deploying the production version of our Rails/React app lead to\nrouting problems? What are the two ways we can fix the issue?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://blog.Render.com/a-rock-solid-modern-web-stack\"\u003eRender Rails-React Setup\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/learn-co-curriculum/phase-4-deploying-demo-app-render\"\u003eDemo App\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-authorization-client","title":"Video: Authorization: Client","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-authorization--client\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-authorization--client\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-authorization--client/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/609305905/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e","frontPage":false},{"exportId":"welcome-to-phase-4","title":"Welcome to Phase 4","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-welcome-to-phase\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-welcome-to-phase\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-welcome-to-phase/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand how this phase is structured\u003c/li\u003e\n\u003cli\u003eLearn the outcomes of this phase\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntro to Phase 4\u003c/h2\u003e\n\n\u003cp\u003eWelcome to Phase 4! At this point in the program, you've tackled two programming\nlanguages, JavaScript and Ruby, as well as mastering a frontend framework,\nReact. Throughout our journey, we've focused on a specific kind of application\narchitecture: creating a \u003cstrong\u003esingle-page application\u003c/strong\u003e that consumes JSON data\nfrom a \u003cstrong\u003eWeb API\u003c/strong\u003e. Finally, you were introduced to the process of creating your\nown API using Sinatra, a lightweight web framework used to create simple web\napplications.\u003c/p\u003e\n\n\u003cp\u003eIn this phase, we're going to learn how to create an API server using a much\nmore powerful tool, \u003cstrong\u003eRuby on Rails\u003c/strong\u003e (or, as the cool kids say, just\n\u003cstrong\u003eRails\u003c/strong\u003e). By building an API to serve JSON data in Rails, you'll have full\ncontrol over the backend logic: from how \u003cstrong\u003erequests\u003c/strong\u003e are handled and how the\n\u003cstrong\u003eresponse\u003c/strong\u003e is generated, to how your \u003cstrong\u003emodels\u003c/strong\u003e interact with the database\nusing Active Record. By the end of this phase, you can truly claim your mantle\nas a full-stack developer!\u003c/p\u003e\n\n\u003ch2\u003ePhase 4 Structure\u003c/h2\u003e\n\n\u003cp\u003eThis phase is structured to start small, and gradually build in complexity. Each\nmodule of content (a section of labs and readmes) ends with a quiz or \"putting\nit all together\" lab where you can check your understanding of the material. Here's\nwhat each module covers:\u003c/p\u003e\n\n\u003ch3\u003eRails Fundamentals\u003c/h3\u003e\n\n\u003cp\u003eLearn how to use Rails as a backend framework to create a server, and how\nfollowing conventions helps keep our code organized and efficient. You'll also\nsee the full request-response cycle and how data flows through a Rails\napplication.\u003c/p\u003e\n\n\u003ch3\u003eCRUD with Rails\u003c/h3\u003e\n\n\u003cp\u003eUse Rails to build a RESTful API that can perform common CRUD operations with a\ndatabase, and how to access all the data being sent to our Rails app as well as\nhow to properly format a response with a JSON body and HTTP status codes.\u003c/p\u003e\n\n\u003ch3\u003eValidations\u003c/h3\u003e\n\n\u003cp\u003eValidations help keep our database clean, and prevent unwanted data from\nsneaking in. Learn how to use Active Model to add simple validations to your\nmodel, and how to respond to invalid data from users.\u003c/p\u003e\n\n\u003ch3\u003eClient-Server Communication\u003c/h3\u003e\n\n\u003cp\u003eAs full stack developers, it's always important to consider the frontend and\nthe backend as you're building applications. Get a better understanding of\nhow client-server communication happens via the request-response cycle, and\nhow to debug common errors.\u003c/p\u003e\n\n\u003ch3\u003eActive Record Associations\u003c/h3\u003e\n\n\u003cp\u003eBuilding more complex applications requires a larger domain made up of several\nrelated models. Learn how to use Active Record in Rails to create associations\nbetween models, and how to follow RESTful conventions with multiple related\nmodels.\u003c/p\u003e\n\n\u003ch3\u003eSerialization\u003c/h3\u003e\n\n\u003cp\u003eWhen designing web APIs, one important consideration is how our data is sent\nback to our users. Learn how to use a serializer to shape how your JSON data is\nstructured in the response.\u003c/p\u003e\n\n\u003ch3\u003eAuth\u003c/h3\u003e\n\n\u003cp\u003eAuthentication and authorization are two important topics in designing web\napplications. Learn how to use cookies to help identify users across multiple\nrequests, and authorize users for access to specific actions on the server once\nthey've logged in.\u003c/p\u003e\n\n\u003ch3\u003eDeploying\u003c/h3\u003e\n\n\u003cp\u003eSo far, we've been building applications locally — but the end goal\nis to be able to deploy our projects to the web, so that anyone can view\nthem! In this section, we'll discuss what the deployment process looks like\nand how to deploy a React/Rails API application to a server.\u003c/p\u003e\n\n\u003ch2\u003ePhase 4 Objectives\u003c/h2\u003e\n\n\u003cp\u003eBy the end of this phase, you should be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate RESTful APIs\u003c/li\u003e\n\u003cli\u003eValidate data\u003c/li\u003e\n\u003cli\u003eShare data between a frontend JavaScript application and a backend API\napplication\u003c/li\u003e\n\u003cli\u003eBuild authentication into APIs\u003c/li\u003e\n\u003cli\u003eDeploy backend applications\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWe've got an exciting time ahead, so let's get started!\u003c/p\u003e","frontPage":false},{"exportId":"why-redux","title":"Why Redux?","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-why-redux\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-why-redux\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-why-redux/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain how Redux encourages a single source of truth\u003c/li\u003e\n\u003cli\u003eExplain how actions fit into the Redux flow\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we will learn about the Redux architecture for building web\napplications.\u003c/p\u003e\n\n\u003ch2\u003eBenefits of Moving to Redux\u003c/h2\u003e\n\n\u003cp\u003eAs our React applications become larger, our state becomes more spread out\nbetween different components. At a certain point, the component tree becomes a\nweb of props and state that can obscure our view of how components are handling\nand sharing data with each other.\u003c/p\u003e\n\n\u003cp\u003eThere are ways to get around this, like storing all of our state in one high\nlevel container component, but this can ultimately \u003cem\u003eincrease\u003c/em\u003e the complexity of\nyour props.\u003c/p\u003e\n\n\u003cp\u003eRedux offers a different solution. It encourages storing all of the shared state\nin our application in a JavaScript object \u003cem\u003eseparate\u003c/em\u003e from our components known\nas the \u003cstrong\u003estore\u003c/strong\u003e. Picture having all your shared application state in one big\nobject, like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebob\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ehometown\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ephilly\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003einterests\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003epokemon\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003egame\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003egame of thrones\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003etv show\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e],\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSimilar to component state, all our data can be held in an object. The\ndifference here is that, since Redux state is separate from the component tree,\nwe can grab \u003cem\u003eany\u003c/em\u003e part of this data for \u003cem\u003eany\u003c/em\u003e component that needs it, just by\nconnecting the component! Using Redux means we have a \u003cstrong\u003esingle source of truth\u003c/strong\u003e\nfor our application's state.\u003c/p\u003e\n\n\u003ch2\u003eAccessing Our State\u003c/h2\u003e\n\n\u003cp\u003eTo make this state available for components to connect to, we provide access by\nwrapping the component tree with a special context provider component, similar\nto the \u003ccode\u003eBrowserRouter\u003c/code\u003e component we used with React Router. This gives us access\nto Redux hooks that allow us to access the Redux store from any component.\u003c/p\u003e\n\n\u003cp\u003eConsequently, complex interaction between components is made easier. Take for\nexample sibling components (rendered side by side in a parent) and cousin\ncomponents (the children of sibling components). Without Redux, if siblings are\nboth displaying or manipulating the same bit of shared data, that data needs to\nbe stored in their parent component's state. If \u003cem\u003ecousins\u003c/em\u003e are sharing data, the\ndata needs to be stored in the \u003cem\u003egrandparent\u003c/em\u003e component, the closest shared\n'ancestor' component.\u003c/p\u003e\n\n\u003cp\u003eWith Redux, all these interactions are structured the same way. Every component\nwe allow can get and update state from the Redux store regardless of the\nposition of components in a tree.\u003c/p\u003e\n\n\u003ch2\u003eUpdating Our State\u003c/h2\u003e\n\n\u003cp\u003eWith Redux, we hold all of our shared state in one place and with some\nconfiguration, we can read it via hooks in regular React components.\u003c/p\u003e\n\n\u003cp\u003eWhen we want to update that shared state, we must send an action, which is a set\nof strict instructions \u003cem\u003ewe create\u003c/em\u003e that tells Redux how to update our state.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003einterests/addInterest\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehockey\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003esport\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere, we can imagine that after a user fills out a form and clicks submit, we\nwill create an action that tells Redux how to incorporate the update into the\nstate. Any time we update state with Redux, we must create an action first. This\naction is just a plain old JavaScript object.\u003c/p\u003e\n\n\u003cp\u003eThese actions are used by our components. Any component will be able to modify\nstate in the Redux store using an action we've defined by \u003cstrong\u003edispatching\u003c/strong\u003e the\naction to the Redux store.\u003c/p\u003e\n\n\u003cp\u003eFollowing a specific design pattern that we'll explore through the upcoming\nlessons, we can use these actions to update our Redux state. These state changes\ntrigger re-renders in our components so that they can display the updated state.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eRedux places all of our data in one place — the store. This store is just a\nplain JavaScript object representing the shared global state for our\napplication. In fact, all the pieces of Redux are plain old JavaScript. It is\nthe pattern, the way the information flows, that makes Redux awesome.\u003c/p\u003e\n\n\u003cp\u003eTo change our application state, we need to create an action that defines how to\nupdate that state. The action, combined with the previous state, produces an\nupdated state.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=xsSnOQynTHs\"\u003eRedux Justification - Dan Abramov\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=uvAXVMwHJXU\"\u003eLooking back at Redux - Dan Abramov\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"stack-data-structure","title":"Stack Data Structure","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-stack\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-stack\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-stack/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eLearn what a \u003ccode\u003eStack\u003c/code\u003e is\u003c/li\u003e\n\u003cli\u003eIdentify common methods for a \u003ccode\u003eStack\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eIdentify common use cases for a \u003ccode\u003eStack\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll learn what \u003ccode\u003eStack\u003c/code\u003es are and what methods they commonly\ninclude. We'll discuss time complexity considerations when using \u003ccode\u003eStack\u003c/code\u003es and\nprovide some common real-world examples of when \u003ccode\u003eStack\u003c/code\u003es are used. We'll also\nwalk through an example algorithm, first coding it without using a \u003ccode\u003eStack\u003c/code\u003e, and\nthen with one.\u003c/p\u003e\n\n\u003ch2\u003eDefining a Stack\u003c/h2\u003e\n\n\u003cp\u003eA \u003ccode\u003eStack\u003c/code\u003e is a linear data structure that allows you to store a list of data of\nsome sort, and to add and remove values. Values in the stack are processed in\n\u003cstrong\u003eFirst In, Last Out\u003c/strong\u003e (FILO) order. In other words, the value that was added to\nthe \u003ccode\u003eStack\u003c/code\u003e most recently will be the first one removed. This can be contrasted\nwith another similar data structure, a \u003ccode\u003eQueue\u003c/code\u003e, which is processed in \u003cstrong\u003eFirst In,\nFirst Out\u003c/strong\u003e (FIFO) order.\u003c/p\u003e\n\n\u003cp\u003eIf we consider an airport security checkpoint as a real world example, the stack\nof bins is our \u003ccode\u003eStack\u003c/code\u003e: when a passenger grabs a bin from the stack, it's the\nlast bin that was added; in other words, \u003cstrong\u003eFirst In, Last Out\u003c/strong\u003e. (You can also\nthink of it as \u003cstrong\u003eLast In, First Out\u003c/strong\u003e; the two terms are equivalent.) The line\nof passengers waiting to pass through security would be our \u003ccode\u003eQueue\u003c/code\u003e: the first\nperson to join the line will be the first one through the checkpoint\n(\u003cstrong\u003eFirst In, First Out\u003c/strong\u003e).\u003c/p\u003e\n\n\u003cp\u003eIt can be useful to think of a \u003ccode\u003eStack\u003c/code\u003e as a vertical structure, like a stack of\nplates: we generally refer to adding items to, and removing them from, the \u003cem\u003etop\u003c/em\u003e\nof the \u003ccode\u003eStack\u003c/code\u003e:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-stack/stack.png\" alt=\"Stack\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eStack vs. Array\u003c/h3\u003e\n\n\u003cp\u003eYou may be wondering why we wouldn't just use an array instead of implementing a\n\u003ccode\u003eStack\u003c/code\u003e. After all, arrays are also used to store a list of data, and also allow\nyou to add and remove values. In fact, one way to implement a \u003ccode\u003eStack\u003c/code\u003e (although\nnot generally the best way) is by using an array as the underlying data\nstructure — you'll be doing that in the next lesson.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eStack\u003c/code\u003es have several benefits for certain problems when compared to arrays.\n\u003ccode\u003eStack\u003c/code\u003es have a more limited set of methods for interacting with data compared\nto arrays: with a \u003ccode\u003eStack\u003c/code\u003e, you can only interact with the element at the \u003cem\u003etop\u003c/em\u003e,\nwhereas arrays allow you to access and interact with elements at \u003cem\u003eany\u003c/em\u003e position.\nThis restriction is actually a good thing when it comes to solving certain kinds\nof problems, since it can guide you to a more elegant and easy-to-understand\nsolution.\u003c/p\u003e\n\n\u003ch2\u003eStack Methods\u003c/h2\u003e\n\n\u003cp\u003eThe implementation of a \u003ccode\u003eStack\u003c/code\u003e will vary depending on what's needed, but, at a\nminimum, generally includes the following methods:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003epush\u003c/code\u003e: add an element to the top of the stack\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003epop\u003c/code\u003e: remove the element at the top of the stack\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003epeek\u003c/code\u003e (or \u003ccode\u003etop\u003c/code\u003e): return the value of the element at the top of the stack\nwithout removing it\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIn some implementations, you might also want to include a \u003ccode\u003elimit\u003c/code\u003e attribute,\nto indicate the maximum size of the \u003ccode\u003eStack\u003c/code\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eFun Fact: the phrase \u003cstrong\u003estack overflow\u003c/strong\u003e was originally coined to describe the\nsituation of trying to push an item to a full \u003ccode\u003eStack\u003c/code\u003e — it isn't just a place\nto find answers to coding questions! The reverse situation — trying to pop\nan item off of an empty \u003ccode\u003eStack\u003c/code\u003e — is referred to as \u003cstrong\u003estack underflow\u003c/strong\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSome other common methods you might see implemented include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eempty?\u003c/code\u003e/\u003ccode\u003efull?\u003c/code\u003e: return true if the \u003ccode\u003eStack\u003c/code\u003e is empty/full; false\notherwise\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003esearch(target)\u003c/code\u003e: return the distance between the top of the stack and the\ntarget element if it's present; -1 otherwise\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003esize\u003c/code\u003e: return the number of elements contained in the \u003ccode\u003eStack\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eOther methods are possible as well, of course: the methods the developer chooses\nto define in a given implementation of a \u003ccode\u003eStack\u003c/code\u003e will depend on their particular\nneeds.\u003c/p\u003e\n\n\u003cp\u003eNote also that there is nothing magical about the names of the methods. The\nnames listed above are typically used by convention — and, as always, sticking\nto convention generally makes your code easier to read for other developers. But\nif you have a good reason for breaking convention in a particular circumstance,\nthere's no reason you can't!\u003c/p\u003e\n\n\u003ch3\u003eTime Complexity of Stack Methods\u003c/h3\u003e\n\n\u003cp\u003eWith the exception of \u003ccode\u003esearch\u003c/code\u003e, all of the \u003ccode\u003eStack\u003c/code\u003e methods listed above (for\nexample, pushing an element onto the \u003ccode\u003eStack\u003c/code\u003e) have time complexity of O(1). The\ntime complexity for \u003ccode\u003esearch\u003c/code\u003e is O(n).\u003c/p\u003e\n\n\u003cp\u003eLet's look at an example use of a \u003ccode\u003eStack\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ereverse_string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estack\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeach\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ereversed\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\"\u003c/span\u003e\n  \u003cspan class=\"k\"\u003euntil\u003c/span\u003e \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eempty?\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ereversed\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epop\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ereversed\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ereverse_string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"hello\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; \"olleh\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere we are iterating through the string and adding each character to the\n\u003ccode\u003eStack\u003c/code\u003e, which has a time complexity of O(n). Then, we loop through the \u003ccode\u003eStack\u003c/code\u003e,\npop each character off and add it to the reversed string, again yielding a time\ncomplexity of O(n). This gives O(2n), which simplifies to O(n).\u003c/p\u003e\n\n\u003ch2\u003eWhen To Use a Stack\u003c/h2\u003e\n\n\u003cp\u003eThere are a number of practical use cases for a \u003ccode\u003eStack\u003c/code\u003e. Some common ones include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe \u003ca href=\"https://en.wikipedia.org/wiki/Call_stack\"\u003ecall stack\u003c/a\u003e in computing\u003c/li\u003e\n\u003cli\u003eCode compilers checking if brackets are balanced when a program is run\u003c/li\u003e\n\u003cli\u003eBrowser history and back/forward buttons\u003c/li\u003e\n\u003cli\u003eUndo/redo in software programs\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eA \u003ccode\u003eStack\u003c/code\u003e can also be used to help traverse a more complex data structure known\nas a \u003ccode\u003eTree\u003c/code\u003e. (We'll learn about \u003ccode\u003eTree\u003c/code\u003es a bit later in this section.) For\nexample, one common use of \u003ccode\u003eStack\u003c/code\u003es is in implementing a depth-first search\nthrough a \u003ccode\u003eTree\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3\u003eExample\u003c/h3\u003e\n\n\u003cp\u003eLet's take a look at an example to see how we might use a \u003ccode\u003eStack\u003c/code\u003e in solving a\nproblem.\u003c/p\u003e\n\n\u003cp\u003eWe want to write an \u003ccode\u003eevaluate_keystrokes\u003c/code\u003e method that will take as input a\nstring that represents a series of keystrokes. The string may contain some\nnumber of occurrences of the \u003ccode\u003e\u0026lt;\u003c/code\u003e character, which indicates a backspace. We want\nour method to return the \"interpreted\" version of the string.\u003c/p\u003e\n\n\u003cp\u003eFor example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eevaluate_keystrokes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'abcde\u0026lt;fg\u0026lt;h'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; 'abcdfh'\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eevaluate_keystrokes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'abcd\u0026lt;\u0026lt;\u0026lt;fg\u0026lt;h'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; 'afh'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eA solution that doesn't use a \u003ccode\u003eStack\u003c/code\u003e might look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eevaluate_keystrokes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\"\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eskip\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\u0026lt;\"\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eskip\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eskip\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"n\"\u003eskip\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eskip\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere, we're iterating through our string from back to front and using a\nplaceholder variable (\u003ccode\u003eskip\u003c/code\u003e) to keep track of how many times we need to\nbackspace by skipping over characters. If we don't need to backspace, we simply\nadd the current character to our \u003ccode\u003eresult\u003c/code\u003e variable.\u003c/p\u003e\n\n\u003cp\u003eNow let's take a look at how we might approach this problem using a \u003ccode\u003eStack\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eevaluate_keystrokes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estack\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeach\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\u0026lt;\"\u003c/span\u003e\n      \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epop\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\"\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003euntil\u003c/span\u003e \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eempty?\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epop\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith this code, every time we encounter the \u003ccode\u003e\u0026lt;\u003c/code\u003e, we \"erase\" the previous\ncharacter by \u003ccode\u003epop\u003c/code\u003eping it off the stack. By the end, all the characters that\ndon't get \"erased\" remain in the \u003ccode\u003estack\u003c/code\u003e, so we simply \u003ccode\u003epop\u003c/code\u003e them off and add them\nto the \u003ccode\u003eresult\u003c/code\u003e string.\u003c/p\u003e\n\n\u003cp\u003eWe can streamline our method even further by using a ternary expression:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eevaluate_keystrokes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estack\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeach\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\n    \u003cspan class=\"n\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\u0026lt;\"\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epop\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\"\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003euntil\u003c/span\u003e \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eempty?\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epop\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis problem is one that lends itself pretty naturally to using a \u003ccode\u003eStack\u003c/code\u003e,\nresulting in code that is simpler and easier to read.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned about the \u003ccode\u003eStack\u003c/code\u003e data structure and the methods that\nan implementation of a \u003ccode\u003eStack\u003c/code\u003e usually includes. We also talked about some\nreal-world use cases for a \u003ccode\u003eStack\u003c/code\u003e and went through an example algorithm. In the\nnext lesson, you'll tackle implementing a \u003ccode\u003eStack\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Stack_(abstract_data_type)\"\u003eWikipedia: Stack (abstract data type)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false},{"exportId":"video-faker","title":"Video: Faker","type":"WikiPage","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-lecture-videos-faker\"\u003e\u003c/div\u003e\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-faker\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-lecture-videos-faker/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ciframe src=\"https://player.vimeo.com/video/606724911/?title=0\u0026amp;byline=0\u0026amp;portrait=0\" width=\"640\" height=\"360\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/faker-ruby/faker\"\u003eFaker gem\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","frontPage":false}],"assignments":[{"exportId":"gc31e4c2c5d551910a349b7b14f4af034","title":"Access State with useSelector","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-use-selector-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-use-selector-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-use-selector-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-use-selector-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the \u003ccode\u003ereact-redux\u003c/code\u003e library to connect the Redux store to the React\napplication\u003c/li\u003e\n\u003cli\u003eUtilize the \u003ccode\u003e\u0026lt;Provider /\u0026gt;\u003c/code\u003e component and the \u003ccode\u003euseSelector\u003c/code\u003e hook to access\nRedux store content\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we want to explore how \u003ccode\u003euseSelector\u003c/code\u003e is used to connect regular\nReact components with the Redux store. This is also a good opportunity to review\nthe steps for using the \u003ccode\u003eredux\u003c/code\u003e and \u003ccode\u003ereact-redux\u003c/code\u003e packages in your app.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eSome files are provided, including \u003ccode\u003eUserInput\u003c/code\u003e and the reducer in the\n\u003ccode\u003eusersSlice.js\u003c/code\u003e file, but the Redux store isn't fully hooked up yet.\u003c/p\u003e\n\n\u003ch3\u003eConnecting to Redux\u003c/h3\u003e\n\n\u003cp\u003eIn \u003ccode\u003esrc/index.js\u003c/code\u003e, use the \u003ccode\u003ecreateStore\u003c/code\u003e method from \u003ccode\u003eredux\u003c/code\u003e, passing in the\nprovided reducer, \u003ccode\u003eusersReducer\u003c/code\u003e, to create a \u003ccode\u003estore\u003c/code\u003e. Use \u003ccode\u003eProvider\u003c/code\u003e from\n\u003ccode\u003ereact-redux\u003c/code\u003e to wrap \u003ccode\u003e\u0026lt;App /\u0026gt;\u003c/code\u003e, passing \u003ccode\u003estore\u003c/code\u003e as a prop to the \u003ccode\u003eProvider\u003c/code\u003e.\nThis will give your components access to the store.\u003c/p\u003e\n\n\u003ch3\u003eTest by Dispatching an Action\u003c/h3\u003e\n\n\u003cp\u003eRun \u003ccode\u003enpm start\u003c/code\u003e and open up your browser's dev console. If everything is\nconnected correctly in \u003ccode\u003eindex.js\u003c/code\u003e, a form should appear in the browser.\nSubmitting something using the form will cause a \u003ccode\u003econsole.log\u003c/code\u003e to fire in our\nreducer, indicating that the values have been added to our store.\u003c/p\u003e\n\n\u003cp\u003eIn \u003ccode\u003eUserInput.js\u003c/code\u003e, we can see the code that fires when we press the submit\nbutton:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ...\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleOnSubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eevent\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eevent\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epreventDefault\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eusers/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eformData\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e \u003cspan class=\"na\"\u003eonSubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleOnSubmit\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"cm\"\u003e/* ... */\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can see that, \u003cem\u003eon submit\u003c/em\u003e, \u003ccode\u003ehandleOnSubmit()\u003c/code\u003e is called.\n\u003ccode\u003eevent.preventDefault()\u003c/code\u003e is called to stop the page from refreshing, then\n\u003ccode\u003edispatch()\u003c/code\u003e is called with a custom action,\n\u003ccode\u003e{type: 'users/add', payload: formData}\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003edispatch\u003c/code\u003e function is provided by calling the \u003ccode\u003euseDispatch\u003c/code\u003e hook from\n\u003ccode\u003ereact-redux\u003c/code\u003e in our component.\u003c/p\u003e\n\n\u003ch3\u003eUsing the \u003ccode\u003euseSelector\u003c/code\u003e Hook\u003c/h3\u003e\n\n\u003cp\u003eNow that we've got a working store, we want to get access to it and display the\ncontents of our store's state.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eImport the \u003ccode\u003euseSelector\u003c/code\u003e hook in \u003ccode\u003eUsers.js\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eCall \u003ccode\u003euseSelector\u003c/code\u003e inside your component, passing in a callback function that\naccepts one argument, \u003ccode\u003estate\u003c/code\u003e, the current version of your store's state. Use\n\u003ccode\u003estate\u003c/code\u003e to access the array of \u003ccode\u003eusers\u003c/code\u003e and return that from the callback\nfunction. Save the return value of calling \u003ccode\u003euseSelector\u003c/code\u003e to a variable so\nthat you can use the \u003ccode\u003eusers\u003c/code\u003e array in your component.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe Users component should display the username of a user submitted to the\nstore. To pass the final test, it should also display a total count of current\nusers. Try to use \u003ccode\u003euseSelector\u003c/code\u003e to solve both. You can call \u003ccode\u003euseSelector\u003c/code\u003e\nmultiple times to return different values: one for \u003ccode\u003eusers\u003c/code\u003e and one for the\n\u003ccode\u003euserCount\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWith all tests passing, you should have a working form that adds and\nsuccessfully displays usernames, as well as a total count of those users. While\nthese are small bits of data, we've got a fully integrated React/Redux\napplication, ready to be expanded upon!\u003c/p\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gdb93f4e54cf1093ac546b23862178041","title":"Active Model Serializer","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-using-active-model-serializer\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-using-active-model-serializer/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-using-active-model-serializer\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-using-active-model-serializer/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand the purpose of a serializer in a JSON API application\u003c/li\u003e\n\u003cli\u003eConfigure \u003ccode\u003eActiveModel::Serializer\u003c/code\u003e with a single model\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSo far, we've learned how to create a Rails API and to set up our routes and\ncontroller actions to handle various requests and return the requested JSON. In\nthis section, we'll learn how to customize the JSON that we return.\u003c/p\u003e\n\n\u003cp\u003eLet's start by taking a look at our movie app. To set up the app, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe have two actions set up: index and show. If you navigate to\n\u003ccode\u003elocalhost:3000/movies/1\u003c/code\u003e, you should see:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"title\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"The Color Purple\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"year\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1985\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"length\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e154\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"director\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Steven Spielberg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"description\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Whoopi Goldberg brings Alice Walker's Pulitzer Prize-winning feminist novel to life as Celie, a Southern woman who suffered abuse over decades. A project brought to a hesitant Steven Spielberg by producer Quincy Jones, the film marks Spielberg's first female lead.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"poster_url\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://pisces.bbystatic.com/image2/BestBuy_US/images/products/3071/3071213_so.jpg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"category\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Drama\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"discount\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"female_director\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"created_at\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"2021-05-21T17:11:35.682Z\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"updated_at\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"2021-05-21T17:11:35.682Z\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRails makes it very easy to provide this JSON: all we needed to do was set up a\n\u003ccode\u003eshow\u003c/code\u003e route in \u003ccode\u003eroutes.rb\u003c/code\u003e, and a \u003ccode\u003eshow\u003c/code\u003e action in our controller. But so far,\nwe have no control over specifically what information is returned. For example,\nwe might decide that we don't need to include the \u003ccode\u003ecreated_at\u003c/code\u003e or \u003ccode\u003eupdated_at\u003c/code\u003e\nattributes in our list. One way we could do this is by using Active Record's\nbuilt-in \u003ccode\u003eto_json\u003c/code\u003e method in our controller. It might look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/movies_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eto_json\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:year\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:director\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:description\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:poster_url\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:category\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:discount\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:female_director\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can simplify matters with the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eto_json\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eexcept: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:created_at\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:updated_at\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is fairly straightforward so far. But what if we also had a nested resource\nwe wanted to include? For example, if we had a blogging app in which posts\nbelong to authors, we might want to do something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eto_json\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:description\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"ss\"\u003einclude: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003eauthor: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e]}])\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEven in this very simple case, you can see how building out JSON strings by hand\nwould get to be very cumbersome — and very error-prone — very quickly.\u003c/p\u003e\n\n\u003cp\u003eBut there's an additional problem with this approach: it does not exhibit good\nseparation of concerns. Recall that, in a full-stack Rails app, the controller's\njob is to interact with the model to access whatever data is requested and then\npass that data along to the View layer. The views are responsible for\ndetermining exactly how the information is presented to the user. The same\nshould be true here: rather than depending on the controller to determine how\nthe data is returned, that task should be handled elsewhere. Enter\n\u003ccode\u003eActiveModel::Serializer\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eActiveModel::Serializer\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003eActiveModel::Serializer\u003c/code\u003e (or AMS) provides an easy way to customize how the\nJSON rendered by our controllers is structured. It is a very \"Rails-y\" tool, in\nthat it uses a \"convention over configuration\" approach, and is consistent with\nseparation of concerns. Let's take a look at how we can use it to render the\nJSON for our movie app.\u003c/p\u003e\n\n\u003ch3\u003eUsing AMS\u003c/h3\u003e\n\n\u003cp\u003eFirst we need to add the gem:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Gemfile\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#...\u003c/span\u003e\n\u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s1\"\u003e'active_model_serializers'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRun \u003ccode\u003ebundle install\u003c/code\u003e to activate the gem. Now we need to generate an\n\u003ccode\u003eActiveModel::Serializer\u003c/code\u003e for our \u003ccode\u003eMovie\u003c/code\u003e model. Thankfully, the gem provides a\ngenerator for that. Drop into your console and run:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003erails g serializer movie\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eTake a look at the generated \u003ccode\u003emovie_serializer.rb\u003c/code\u003e in the \u003ccode\u003eapp/serializers\u003c/code\u003e\ndirectory. It should look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/serializers/movie_serializer.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovieSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo customize our JSON, we simply provide the list of \u003ccode\u003eattributes\u003c/code\u003e that we want\nto be included:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovieSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:year\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:director\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:description\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:poster_url\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:category\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:discount\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:female_director\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith this in place, we can return our \u003ccode\u003emovies_controller\u003c/code\u003e to its original state:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/movies_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eMuch better!\u003c/p\u003e\n\n\u003cp\u003eAMS provides a convention-based approach to serializing our resources, which\nmeans that if we have a \u003ccode\u003eMovie\u003c/code\u003e model, we can also have a \u003ccode\u003eMovieSerializer\u003c/code\u003e\nserializer, and by default, Rails will use our serializer if we simply call\n\u003ccode\u003erender json: movie\u003c/code\u003e in our controller.\u003c/p\u003e\n\n\u003cp\u003eNow, if you return to the browser and navigate to \u003ccode\u003elocalhost:3000/movies\u003c/code\u003e or\n\u003ccode\u003elocalhost:3000/movies/:id\u003c/code\u003e, you'll see that we're rendering just the JSON we\nwant.\u003c/p\u003e\n\n\u003ch3\u003eCustom Methods\u003c/h3\u003e\n\n\u003cp\u003eSo far, we've used AMS to return the values of the attributes for our \u003ccode\u003eMovie\u003c/code\u003e\ninstances. But AMS also allows us to customize the information returned using an\ninstance method on the \u003ccode\u003eMovieSerializer\u003c/code\u003e class. For example, say we wanted to\ncreate a movie summary that consisted of the movie's title and the first 50\ncharacters of its description.\u003c/p\u003e\n\n\u003cp\u003eLet's start by adding \u003ccode\u003esummary\u003c/code\u003e to the list of attributes. Next, we'll define\nour method. For now, Let's put a \u003ccode\u003ebyebug\u003c/code\u003e in the method's body:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovieSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:year\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:director\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:description\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:poster_url\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:category\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:discount\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:female_director\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:summary\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esummary\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebyebug\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRefresh the page in the browser so you drop into \u003ccode\u003ebyebug\u003c/code\u003e and enter \u003ccode\u003eself\u003c/code\u003e at\nthe \u003ccode\u003ebyebug\u003c/code\u003e prompt. The \u003ccode\u003eMovieSerializer\u003c/code\u003e instance that's returned includes an\n\u003ccode\u003eobject\u003c/code\u003e attribute which, in turn, contains the first movie instance. This means\nyou can enter \u003ccode\u003eself.object\u003c/code\u003e in \u003ccode\u003ebyebug\u003c/code\u003e to access the movie instance, and\n\u003ccode\u003eself.object.\u0026lt;attribute_name\u0026gt;\u003c/code\u003e to access a specific attribute.\u003c/p\u003e\n\n\u003cp\u003eWith this information, let's enter \u003ccode\u003eq\u003c/code\u003e to break out of the \u003ccode\u003ebyebug\u003c/code\u003e, and create\nour \u003ccode\u003esummary\u003c/code\u003e method:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esummary\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eobject\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etitle\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e - \u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eobject\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edescription\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e49\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e...\"\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRestart the server and navigate back to \u003ccode\u003elocalhost:3000/movies\u003c/code\u003e and you should\nsee our new summary added at the end of the JSON.\u003c/p\u003e\n\n\u003ch2\u003eExplicitly Specifying a Serializer\u003c/h2\u003e\n\n\u003cp\u003eSo far, we have depended on Rails naming conventions for our serializers. When\nwe ran \u003ccode\u003erails g serializer movie\u003c/code\u003e, the AMS gem automatically created a\n\u003ccode\u003eMovieSerializer\u003c/code\u003e class for us. Whenever we use \u003ccode\u003erender json:\u003c/code\u003e with a \u003ccode\u003eMovie\u003c/code\u003e\ninstance or a collection of \u003ccode\u003eMovie\u003c/code\u003e instances, Rails will follow naming\nconventions and \u003cstrong\u003eimplicitly\u003c/strong\u003e look for a serializer that matches the name of\nthe model.\u003c/p\u003e\n\n\u003cp\u003eSometimes, however, we might want to create a custom serializer that doesn't\nfollow Rails naming conventions; for example, we might have multiple different\nserializers for our \u003ccode\u003eMovie\u003c/code\u003e class depending on what information our frontend\napplication needs. In that case, we'll need to \u003cstrong\u003eexplicitly\u003c/strong\u003e specify the\nserializer to be used.\u003c/p\u003e\n\n\u003cp\u003eLet's say, for example, that we decided we wanted to create a custom serializer\nsolely for displaying our movie summary. First, let's create a new file,\n\u003ccode\u003emovie_summary_serializer.rb\u003c/code\u003e, and move our custom method into it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovieSummarySerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:summary\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esummary\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eobject\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etitle\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e - \u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eobject\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edescription\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e49\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e...\"\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo use our summary, we'll add a new route to \u003ccode\u003eroutes.rb\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/movies/:id/summary'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'movies#summary'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd, finally, add a \u003ccode\u003esummary\u003c/code\u003e action to our controller. In it, we specify that\nwe want to use our new serializer to render the requested information:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/movies_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esummary\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eserializer: \u003c/span\u003e\u003cspan class=\"no\"\u003eMovieSummarySerializer\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow if you navigate to \u003ccode\u003elocalhost:3000/movies/1/summary\u003c/code\u003e in the browser, you\nshould see:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"summary\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"The Color Purple - Whoopi Goldberg brings Alice Walker's Pulitzer Pri...\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe code above allows us to easily display just our movie summary for a single\nmovie. If we wanted to use our new custom serializer to render the full\ncollection of movies, we would need to create another route and action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/movie_summaries'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'movies#summaries'\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# app/controllers/movies_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esummaries\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emovies\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003emovies\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eeach_serializer: \u003c/span\u003e\u003cspan class=\"no\"\u003eMovieSummarySerializer\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe use of \u003ccode\u003eeach_serializer: MovieSummarySerializer\u003c/code\u003e in our action tells the app\nto use our custom movie summary serializer to render each of the movies in the\ncollection.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eA note on breaking convention: by creating these custom routes, we are\nbreaking REST conventions. One alternate way to structure this kind of feature\nand keep our routes and controllers RESTful would be to create a new\ncontroller, such as Movies::SummaryController. The creator of Rails, DHH,\nadvocates for \u003ca href=\"http://jeromedalbert.com/how-dhh-organizes-his-rails-controllers/\"\u003ethis approach for managing sub-resources\u003c/a\u003e.\nUltimately, it is up to you as the developer to decide which approach works\nbest for a particular circumstance.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned that the \u003ccode\u003eActiveModel::Serializer\u003c/code\u003e gem enables us to\ncustomize how we want our JSON to be rendered without sacrificing the Rails\nprinciples of \"convention over configuration\" and separation of concerns. We\nalso learned how to implement AMS with a single model. In the next lesson, we'll\nlook at using AMS to serialize associations.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat do we mean when we say Active Model Serializer uses a convention-based\napproach?\u003c/li\u003e\n\u003cli\u003eWhat are some ways to break convention when using \u003ccode\u003eActiveModel::Serializer\u003c/code\u003e?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/rails-api/active_model_serializers/tree/v0.10.6/docs\"\u003eActiveModel::Serializer Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ge9a13f96cbd8ad6ab15669dd7bff6f4a","title":"Active Model Serializer Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-active-model-serializer-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-model-serializer-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-model-serializer-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-model-serializer-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Active Model Serializer to render JSON\u003c/li\u003e\n\u003cli\u003eUse Active Model Serializer to render JSON for associations\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eFor this lab, we're going to return to our Blog application and update it to use\n\u003ccode\u003eActiveModel::Serializer\u003c/code\u003e for JSON serialization.\u003c/p\u003e\n\n\u003cp\u003eTo set up the app, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOur app includes four resources: \u003ccode\u003eAuthor\u003c/code\u003e, \u003ccode\u003eProfile\u003c/code\u003e, \u003ccode\u003ePost\u003c/code\u003e, and \u003ccode\u003eTag\u003c/code\u003e, as well\nas a \u003ccode\u003epost_tag\u003c/code\u003e join table. All the associations have been set up, as well as\n\u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003eshow\u003c/code\u003e routes and actions for each of the four resources.\u003c/p\u003e\n\n\u003cp\u003eStart by building the serializers based on the instructions below. Check your\nwork in the browser as you go. Then, run \u003ccode\u003elearn test\u003c/code\u003e to make sure your code\npasses the tests.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003ch3\u003eAuthor\u003c/h3\u003e\n\n\u003cp\u003eSet up a serializer for \u003ccode\u003eAuthor\u003c/code\u003e that returns the following JSON:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eThe author's \u003ccode\u003ename\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eThe author's \u003ccode\u003eprofile\u003c/code\u003e, including only the \u003ccode\u003eusername\u003c/code\u003e, \u003ccode\u003eemail\u003c/code\u003e, \u003ccode\u003ebio\u003c/code\u003e and\n\u003ccode\u003eavatar_url\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eA list of the author's posts, including:\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cul\u003e\n\u003cli\u003ethe \u003ccode\u003etitle\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003ethe first 40 characters of the post's content as \u003ccode\u003eshort_content\u003c/code\u003e, with a\ntrailing ellipsis (\u003ccode\u003e...\u003c/code\u003e) at the end\u003c/li\u003e\n\u003cli\u003ea list of the associated \u003ccode\u003etags\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: You will need to make serializers for the \u003ccode\u003eProfile\u003c/code\u003e and \u003ccode\u003ePost\u003c/code\u003e models\nto get this working.\u003c/p\u003e\n\n\u003ch3\u003ePosts\u003c/h3\u003e\n\n\u003cp\u003eSet up a serializer for the \u003ccode\u003ePost\u003c/code\u003e model that displays the following:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eThe post's \u003ccode\u003etitle\u003c/code\u003e and \u003ccode\u003econtent\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eThe name of the author\u003c/li\u003e\n\u003cli\u003eThe tags associated with the post\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003eTags\u003c/h3\u003e\n\n\u003cp\u003eSet up a serializer for \u003ccode\u003eTag\u003c/code\u003e that displays the following:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eThe name of the tag\u003c/li\u003e\n\u003cli\u003eA list of the posts the tag is associated with\u003c/li\u003e\n\u003c/ol\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb562c8f700013a0fcf6165b190df756d","title":"Active Record Associations Review","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-active-record-associations-review-readme\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-associations-review-readme/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-associations-review-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-associations-review-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand how the foreign key is used to connect between two tables\u003c/li\u003e\n\u003cli\u003eCreate one-to-many relationships using the \u003ccode\u003ehas_many\u003c/code\u003e and \u003ccode\u003ebelongs_to\u003c/code\u003e Active\nRecord macros\u003c/li\u003e\n\u003cli\u003eCreate one-to-one relationships using the \u003ccode\u003ehas_one\u003c/code\u003e and \u003ccode\u003ebelongs_to\u003c/code\u003e macros\u003c/li\u003e\n\u003cli\u003eCreate many-to-many relationships using a join table and \u003ccode\u003ehas_many :through\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eUse convenience builders to write less verbose code\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eActive Record associations are an iconic Rails feature. They allow developers to\nwork with complex networks of related models without having to write a single\nline of SQL — as long as all of the names line up!\u003c/p\u003e\n\n\u003cp\u003eTo code along, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can use \u003ccode\u003erails console\u003c/code\u003e to follow along with the examples. Remember you'll\nneed to relaunch the console each time you make changes to the files.\u003c/p\u003e\n\n\u003ch2\u003eForeign Keys\u003c/h2\u003e\n\n\u003cp\u003eIt all starts in the database. \u003cstrong\u003eForeign keys\u003c/strong\u003e are columns that refer to the\nprimary key of another table. Conventionally, we label foreign keys in Active\nRecord using the name of the model you're referencing, and \u003ccode\u003e_id\u003c/code\u003e. So for example\nif the foreign key was for an \u003ccode\u003eauthors\u003c/code\u003e table it would be \u003ccode\u003eauthor_id\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWe can visualize the relationship between two tables using foreign keys in an\nEntity Relationship Diagram (ERD):\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/active-record-associations-review/posts-authors.png\" alt=\"one-to-many\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe schema for this ERD would be:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ecreate_table\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"authors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eforce: :cascade\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estring\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"name\"\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ecreate_table\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"posts\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eforce: :cascade\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estring\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"title\"\u003c/span\u003e\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etext\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"content\"\u003c/span\u003e\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einteger\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"author_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003enull: \u003c/span\u003e\u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLike any other column, foreign keys are accessible through instance methods of\nthe same name. This means you could find a given \u003ccode\u003epost\u003c/code\u003e's author with the following\nActive Record query:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eAuthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthor_id\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhich is equivalent to the SQL:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight sql\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"k\"\u003eFROM\u003c/span\u003e \u003cspan class=\"n\"\u003eauthors\u003c/span\u003e \u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e \u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e#\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eauthor_id\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd you could look up a given \u003ccode\u003eauthor\u003c/code\u003e's posts like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003ePost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ewhere\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"author_id = ?\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhich is equivalent to the SQL:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight sql\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"k\"\u003eFROM\u003c/span\u003e \u003cspan class=\"n\"\u003eposts\u003c/span\u003e \u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e \u003cspan class=\"n\"\u003eauthor_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e#\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is all great, but Rails is always looking for ways to save us keystrokes.\u003c/p\u003e\n\n\u003ch2\u003eOne-To-Many Relationships\u003c/h2\u003e\n\n\u003cp\u003eBy using Active Record's macro-style association class methods, we can add some\nconvenient instance methods to our models.\u003c/p\u003e\n\n\u003cp\u003eThe most common relationship is \u003cstrong\u003eone-to-many\u003c/strong\u003e. Active Record gives us the\n\u003ccode\u003ehas_many\u003c/code\u003e and \u003ccode\u003ebelongs_to\u003c/code\u003e macros for creating instance methods to access data\nacross models in a \u003cstrong\u003eone-to-many\u003c/strong\u003e relationship.\u003c/p\u003e\n\n\u003ch3\u003ebelongs_to\u003c/h3\u003e\n\n\u003cp\u003eEach \u003ccode\u003ePost\u003c/code\u003e is associated with \u003cstrong\u003eone\u003c/strong\u003e \u003ccode\u003eAuthor\u003c/code\u003e. Update your model to include\nthis association macro:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePost\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:author\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis gives us access to an \u003ccode\u003eauthor\u003c/code\u003e method in our \u003ccode\u003ePost\u003c/code\u003e class. We can now\nretrieve the actual \u003ccode\u003eAuthor\u003c/code\u003e object that is attached to a \u003ccode\u003epost\u003c/code\u003e as follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\n\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthor\u003c/span\u003e \u003cspan class=\"c1\"\u003e#=\u0026gt; #\u0026lt;Author @id=1\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003ehas_many\u003c/h3\u003e\n\n\u003cp\u003eIn the opposite direction, each \u003ccode\u003eAuthor\u003c/code\u003e might be associated with zero, one, or\nmany \u003ccode\u003ePost\u003c/code\u003e objects. We haven't changed the schema of the \u003ccode\u003eauthors\u003c/code\u003e table at\nall; Active Record is just going to use \u003ccode\u003eposts.author_id\u003c/code\u003e to do all of the\nlookups. Update your model to include this association macro:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eAuthor\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:posts\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow we can look up an author's posts just as easily:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eAuthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast\u003c/span\u003e\n\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eposts\u003c/span\u003e \u003cspan class=\"c1\"\u003e#=\u0026gt; [#\u0026lt;Post @id=3\u0026gt;, #\u0026lt;Post @id=4\u0026gt;]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRemember, Active Record uses its \u003ca href=\"http://api.rubyonrails.org/classes/ActiveSupport/Inflector.html\"\u003eInflector\u003c/a\u003e to switch between\nthe singular and plural forms of your models.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eName\u003c/th\u003e\n\u003cth\u003eData\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eModel\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eAuthor\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eForeign Key\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eauthor_id\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ebelongs_to\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e:author\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ehas_many\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e:posts\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eLike many other Active Record class methods, the symbol you pass determines the\nname of the instance method that will be defined. So \u003ccode\u003ebelongs_to :author\u003c/code\u003e will\ngive you a \u003ccode\u003epost.author\u003c/code\u003e instance method, and \u003ccode\u003ehas_many :posts\u003c/code\u003e will give you\n\u003ccode\u003eauthor.posts\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eConvenience Builders\u003c/h2\u003e\n\n\u003ch3\u003eBuilding a new item in a collection\u003c/h3\u003e\n\n\u003cp\u003eIf you want to add a new post for an author, you might start this way:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003enew_post\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eauthor_id: \u003c/span\u003e\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003etitle: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Web Development for Cats\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut the association macros save the day again, allowing this instead:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eAuthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\n\u003cspan class=\"n\"\u003enew_post\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eposts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003etitle: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Web Development for Cats\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eposts\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#=\u0026gt; [#\u0026lt;Post @id=1\u0026gt;, #\u0026lt;Post @id=5\u0026gt;]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will create a new \u003ccode\u003ePost\u003c/code\u003e object with the \u003ccode\u003eauthor_id\u003c/code\u003e already set for you!\nWe use this one as much as possible because it's just easier.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eauthor.posts.create\u003c/code\u003e will create a new instance and persist it to the database.\nYou can also use \u003ccode\u003eauthor.posts.build\u003c/code\u003e to generate a new instance without\npersisting.\u003c/p\u003e\n\n\u003ch3\u003eSetting a singular association\u003c/h3\u003e\n\n\u003cp\u003eThe setup process is a little bit less intuitive for singular associations.\nRemember, a given post \u003ccode\u003ebelongs_to\u003c/code\u003e an author. The verbose way of creating this\nassociation would be like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eAuthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Lasandra Gulgowski\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn the previous section, once the \u003ccode\u003ehas_many\u003c/code\u003e relationship is defined in the\n\u003ccode\u003eAuthor\u003c/code\u003e model, \u003ccode\u003eauthor.posts\u003c/code\u003e always exists, even if it's an empty array. Here,\n\u003ccode\u003epost.author\u003c/code\u003e is \u003ccode\u003enil\u003c/code\u003e until the author is defined, so using\n\u003ccode\u003epost.author.create\u003c/code\u003e would throw an error. Instead, Active Record allows us to\nprepend the attribute with \u003ccode\u003ebuild_\u003c/code\u003e or \u003ccode\u003ecreate_\u003c/code\u003e. The \u003ccode\u003ecreate_\u003c/code\u003e option will\npersist to the database for you.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003etitle: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Web Development for Dogs\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003enew_author\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate_author\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Lasandra Gulgowski\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esave\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthor\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#=\u0026gt; #\u0026lt;Author @name=\"Lasandra Gulgowski\"\u0026gt;\u003c/span\u003e\n\u003cspan class=\"n\"\u003enew_author\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eposts\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#=\u0026gt; [#\u0026lt;Post @title=\"Web Development for Dogs\"\u0026gt;]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRemember, if you use the \u003ccode\u003ebuild_\u003c/code\u003e option, you'll need to persist your new\n\u003ccode\u003eauthor\u003c/code\u003e with \u003ccode\u003e#save\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThese methods are also documented in the \u003ca href=\"http://guides.rubyonrails.org/association_basics.html\"\u003eRails Associations\nGuide\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003eCollection Convenience\u003c/h3\u003e\n\n\u003cp\u003eIf you add an existing object to a collection association, Active Record will\nconveniently take care of setting the foreign key for you:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eAuthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Lasandra Gulgowski\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eposts\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#=\u0026gt; [#\u0026lt;Post @title=\"Web Development for Dogs\"\u0026gt;]\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003etitle: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Web Development for Cats\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthor\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#=\u0026gt; nil\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eposts\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003epost\u003c/span\u003e\n\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthor\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#=\u0026gt; #\u0026lt;Author @name=\"Lasandra Gulgowski\"\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eOne-to-One Relationships\u003c/h2\u003e\n\n\u003cp\u003eA \u003cstrong\u003eone-to-one\u003c/strong\u003e relationship is probably the least common type of relationship\nyou'll find.\u003c/p\u003e\n\n\u003cp\u003eOne case where you might reach for a \u003cstrong\u003eone-to-one\u003c/strong\u003e relationship is for creating\na separate \u003ccode\u003eProfile\u003c/code\u003e model with data related to an \u003ccode\u003eAuthor\u003c/code\u003e. Profiles can get\npretty complex, so in large applications it can be a good idea to give them\ntheir own model. In this case:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eEvery author would have one, and only one, profile.\u003c/li\u003e\n\u003cli\u003eEvery profile would have one, and only one, author.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHere's an example of what that ERD would look like:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/active-record-associations-review/profiles-authors.png\" alt=\"one-to-one diagram\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003ebelongs_to\u003c/code\u003e makes another appearance in this relationship, but instead of\n\u003ccode\u003ehas_many\u003c/code\u003e the other model is declared with \u003ccode\u003ehas_one\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eAuthor\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:posts\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# add this:\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_one\u003c/span\u003e \u003cspan class=\"ss\"\u003e:profile\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eProfile\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# add this:\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:author\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf you're not sure which model should be declared with which macro, it's usually\na safe bet to put \u003ccode\u003ebelongs_to\u003c/code\u003e on whichever model has the foreign key column in\nits database table.\u003c/p\u003e\n\n\u003cp\u003eWith this in place, we can now do the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eAuthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\n\u003cspan class=\"n\"\u003eprofile\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eProfile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eprofile\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#=\u0026gt; #\u0026lt;Profile @username=\"ljenk\"\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eprofile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthor\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#=\u0026gt; #\u0026lt;Author @name=\"Leeroy Jenkins\"\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eMany-to-Many Relationships and Join Tables\u003c/h2\u003e\n\n\u003cp\u003eEach author has many posts, each post has one author.\u003c/p\u003e\n\n\u003cp\u003eThe universe is in balance. We're programmers, so this really disturbs us. Let's\nshake things up and think about tags.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eOne-to-one\u003c/strong\u003e doesn't work because a post can have multiple tags.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eOne-to-many\u003c/strong\u003e doesn't work because a tag can appear on multiple posts.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eBecause there is no \"owner\" model in this relationship, there's also no right\nplace to put the foreign key column.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003ccode\u003epost_id\u003c/code\u003e\u003c/th\u003e\n\u003cth\u003e\u003ccode\u003etag_id\u003c/code\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e1\u003c/td\u003e\n\u003ctd\u003e1\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e1\u003c/td\u003e\n\u003ctd\u003e2\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2\u003c/td\u003e\n\u003ctd\u003e1\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2\u003c/td\u003e\n\u003ctd\u003e3\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e3\u003c/td\u003e\n\u003ctd\u003e2\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e4\u003c/td\u003e\n\u003ctd\u003e2\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e4\u003c/td\u003e\n\u003ctd\u003e3\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eThis join table depicts the relationship between posts and tags in the seed\ndata. Post 1 has tags 1 and 2, Post 2 has tags 1 and 3, etc.\u003c/p\u003e\n\n\u003cp\u003eWe need a new table that sits between \u003ccode\u003eposts\u003c/code\u003e and \u003ccode\u003etags\u003c/code\u003e:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/active-record-associations-review/posts-post_tags-tags.png\" alt=\"many-to-many diagram\"\u003e\u003c/p\u003e\n\n\u003ch3\u003ehas_many :through\u003c/h3\u003e\n\n\u003cp\u003eTo work with the join table, both our \u003ccode\u003ePost\u003c/code\u003e and \u003ccode\u003eTag\u003c/code\u003e models will have a\n\u003ccode\u003ehas_many\u003c/code\u003e association with the \u003ccode\u003epost_tags\u003c/code\u003e table. We also still need to\nassociate \u003ccode\u003ePost\u003c/code\u003e and \u003ccode\u003eTag\u003c/code\u003e themselves. Ideally, we'd like to be able to call a\n\u003ccode\u003e@my_post.tags\u003c/code\u003e method, right? That's where \u003ccode\u003ehas_many :through\u003c/code\u003e comes in.\u003c/p\u003e\n\n\u003cp\u003eTo do this requires a bit of focus. But you can do it! First of all, let's add\nthe \u003ccode\u003ehas_many :post_tags\u003c/code\u003e line to our \u003ccode\u003ePost\u003c/code\u003e and \u003ccode\u003eTag\u003c/code\u003e models, and add the\n\u003ccode\u003ebelongs_to\u003c/code\u003e relationships to our \u003ccode\u003ePostTag\u003c/code\u003e model:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePost\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:author\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:post_tags\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePostTag\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:post\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:tag\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTag\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:post_tags\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo now we can run code like \u003ccode\u003epost.post_tags\u003c/code\u003e to get all the join entries. This\nis kinda sorta what we want. What we really want is to be able to call\n\u003ccode\u003epost.tags\u003c/code\u003e, so we need one more \u003ccode\u003ehas_many\u003c/code\u003e relationship to complete the link\nbetween tags and posts: \u003ccode\u003ehas_many :through\u003c/code\u003e. Essentially, our \u003ccode\u003ePost\u003c/code\u003e model has\nmany \u003ccode\u003etags\u003c/code\u003e \u003cem\u003ethrough\u003c/em\u003e the \u003ccode\u003epost_tags\u003c/code\u003e table, and vice versa. Let's write that\nout:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePost\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:author\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:post_tags\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:tags\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ethrough: :post_tags\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePostTag\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:post\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:tag\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTag\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:post_tags\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:posts\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ethrough: :post_tags\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow we've unlocked our \u003ccode\u003e@post.tags\u003c/code\u003e and \u003ccode\u003e@tag.posts\u003c/code\u003e methods:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\n\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etags\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#=\u0026gt; [#\u0026lt;Tag @id=1\u0026gt;, #\u0026lt;Tag @id=2\u0026gt;]\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003etag\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eTag\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast\u003c/span\u003e\n\u003cspan class=\"n\"\u003etag\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eposts\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#=\u0026gt; [#\u0026lt;Post @id=2\u0026gt;, #\u0026lt;Post @id=4\u0026gt;]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eConsult the documentation to learn more about the \u003ca href=\"http://guides.rubyonrails.org/association_basics.html#the-has-many-through-association\"\u003ehas many through\u003c/a\u003e association.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eFor every relationship, there is a foreign key somewhere. Foreign keys\ncorrespond to the \u003ccode\u003ebelongs_to\u003c/code\u003e macro on the model.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eOne-to-one\u003c/strong\u003e and \u003cstrong\u003emany-to-one\u003c/strong\u003e relationships only require a single foreign\nkey, which is stored in the 'subordinate' or 'owned' model. The other model can\naccess data in the associated table via a \u003ccode\u003ehas_one\u003c/code\u003e or \u003ccode\u003ehas_many\u003c/code\u003e method,\nrespectively.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eMany-to-many\u003c/strong\u003e relationships require a join table containing a foreign key for\nboth models. The models need to use the \u003ccode\u003ehas_many :through\u003c/code\u003e method to access\ndata from the related table via the join table.\u003c/p\u003e\n\n\u003cp\u003eYou can see the entire \u003ca href=\"http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html\"\u003elist of class methods\u003c/a\u003e\nin the Rails API docs.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eIn a one-to-many or one-to-one relationship, how do you determine which\nmodel's table should include a foreign key?\u003c/li\u003e\n\u003cli\u003eWhat is a join table and under what circumstances do we need one?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://guides.rubyonrails.org/association_basics.html\"\u003eActive Record Association Basics\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dbdiagram.io/d\"\u003eEntity Relationship Diagram Generator\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g9700abcd762ef2f4bb0b22df8d5a32d0","title":"Active Record Associations Review Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-active-record-associations-review-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-associations-review-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-associations-review-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-associations-review-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate one-to-many and many-to-many associations\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003ehas_many\u003c/code\u003e, \u003ccode\u003ebelongs_to\u003c/code\u003e and \u003ccode\u003ehas_many :through\u003c/code\u003e Active Record macros\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eFlatiron School has started its own taxi service, FlatironX, and we need to\nstart developing the application's domain model!\u003c/p\u003e\n\n\u003cp\u003eThree basic models have already been created, \u003ccode\u003ePassenger\u003c/code\u003e, \u003ccode\u003eRide\u003c/code\u003e, and \u003ccode\u003eTaxi\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eYour job is set up a \u003ccode\u003ehas_many :through\u003c/code\u003e relationship between these three\nmodels so that we can keep track of who's driving who around. It will work like\nthis:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eTaxi -\u0026lt; Rides \u0026gt;- Passengers\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eThis way, a \u003cstrong\u003etaxi\u003c/strong\u003e can have many \u003cstrong\u003epassengers\u003c/strong\u003e, and a \u003cstrong\u003epassenger\u003c/strong\u003e can have\nmany \u003cstrong\u003etaxis\u003c/strong\u003e!\u003c/p\u003e\n\n\u003ch2\u003eDeliverables\u003c/h2\u003e\n\n\u003ch3\u003eUpdating the Database with Migrations\u003c/h3\u003e\n\n\u003cp\u003eEach table only has a primary key, so you'll need to add the \u003cstrong\u003eforeign keys\u003c/strong\u003e to\nthe appropriate model so that Active Record can handle the \"has_many :through\"\nrelationship.\u003c/p\u003e\n\n\u003cp\u003eYou can either edit the migration files directly and add the foreign keys, or\ngenerate a new migration with \u003ccode\u003erails g migration\u003c/code\u003e to add columns to the\nappropriate table.\u003c/p\u003e\n\n\u003cp\u003eOnce your migrations are done, run \u003ccode\u003erails db:migrate\u003c/code\u003e to run the migrations.\u003c/p\u003e\n\n\u003ch3\u003eAdding Active Record Macros\u003c/h3\u003e\n\n\u003cp\u003eAfter completing the migrations, you'll also need to update the \u003ccode\u003eTaxi\u003c/code\u003e,\n\u003ccode\u003ePassenger\u003c/code\u003e, and \u003ccode\u003eRide\u003c/code\u003e models with the appropriate Active Record macros.\u003c/p\u003e\n\n\u003cp\u003eThe tests expect to be able to call certain instance methods on each of these\nmodels, such as \u003ccode\u003epassenger.taxis\u003c/code\u003e, so make sure to add the appropriate\n\u003ccode\u003ehas_many\u003c/code\u003e and \u003ccode\u003ebelongs_to\u003c/code\u003e macros to your models.\u003c/p\u003e\n\n\u003cp\u003eCheck out the join table section in the\n\u003ca href=\"http://guides.rubyonrails.org/association_basics.html#the-has-many-through-association\"\u003eActive Record Association Rails Guide\u003c/a\u003e if you need a\nrefresher on these.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://guides.rubyonrails.org/association_basics.html\"\u003eActive Record Associations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://guides.rubyonrails.org/association_basics.html#the-has-many-through-association\"\u003eActive Record Associations: Join Table section\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gcde976746e936b094889477c9ca331dc","title":"Active Record Validations Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-active-record-validations-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-validations-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-validations-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-active-record-validations-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eWrite basic validations using Active Record helpers\u003c/li\u003e\n\u003cli\u003eWrite custom validations\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eThis project has starter code for a couple of models, \u003ccode\u003eAuthor\u003c/code\u003e and \u003ccode\u003ePost\u003c/code\u003e. To\nget set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen run \u003ccode\u003elearn test\u003c/code\u003e to run the tests. We'll be focusing solely on the model\nfiles for this lab, so there's no need to run \u003ccode\u003erails s\u003c/code\u003e or view anything in the\nbrowser.\u003c/p\u003e\n\n\u003ch2\u003eBasic Validations\u003c/h2\u003e\n\n\u003cp\u003eAdd validations to these models such that...\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eAll authors have a name\u003c/li\u003e\n\u003cli\u003eNo two authors have the same name\u003c/li\u003e\n\u003cli\u003eAuthor phone numbers are exactly ten digits\u003c/li\u003e\n\u003cli\u003eAll posts have a title\u003c/li\u003e\n\u003cli\u003ePost content is at least 250 characters long\u003c/li\u003e\n\u003cli\u003ePost summary is a maximum of 250 characters\u003c/li\u003e\n\u003cli\u003ePost category is either \u003ccode\u003eFiction\u003c/code\u003e or \u003ccode\u003eNon-Fiction\u003c/code\u003e. This step requires an\n\u003ccode\u003einclusion\u003c/code\u003e validator, which was not outlined in the lesson. You'll need to\nrefer to the \u003ca href=\"https://guides.rubyonrails.org/active_record_validations.html\"\u003eRails guide\u003c/a\u003e to look up how to use\nit.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eCustom Validations\u003c/h2\u003e\n\n\u003cp\u003eFinally, add a custom validator to the \u003ccode\u003ePost\u003c/code\u003e model that ensures the title is\nsufficiently clickbait-y. The validator should add a validation error if the\ntitle does not contain:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\"Won't Believe\"\u003c/li\u003e\n\u003cli\u003e\"Secret\"\u003c/li\u003e\n\u003cli\u003e\"Top [number]\"\u003c/li\u003e\n\u003cli\u003e\"Guess\"\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eUse the \u003ca href=\"https://guides.rubyonrails.org/active_record_validations.html#custom-methods\"\u003eCustom methods\u003c/a\u003e style of validator found in the Rails\ndocumentation.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/active_record_validations.html\"\u003eActive Record Validations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/active_record_validations.html#custom-methods\"\u003eCustom Methods\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g1caaffe0188828f4c4e51eabef5f0441","title":"Adding React to Rails","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-adding-react-to-rails\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-adding-react-to-rails/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-adding-react-to-rails\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-adding-react-to-rails/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse \u003ccode\u003ecreate-react-app\u003c/code\u003e to generate a new React application within a Rails\nproject\u003c/li\u003e\n\u003cli\u003eProxy requests from React to Rails in development\u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003eforeman\u003c/code\u003e gem to run React and Rails together\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn the last lesson, we created a Rails API from scratch. Now it's time to see\nhow we can add a React frontend application as well.\u003c/p\u003e\n\n\u003cp\u003eThere are a number of ways to use React and Rails together, such as using the\n\u003ca href=\"https://github.com/rails/webpacker\"\u003e\u003ccode\u003ewebpacker\u003c/code\u003e gem\u003c/a\u003e to manage JavaScript as\npart of your Rails application. However, we like the simplicity and the tooling\nthat you get out of using \u003ca href=\"https://create-react-app.dev/\"\u003e\u003ccode\u003ecreate-react-app\u003c/code\u003e\u003c/a\u003e to\ngenerate a new React application within Rails. If you've used \u003ccode\u003ecreate-react-app\u003c/code\u003e\nbefore, you should feel right at home! We can also add a few additional tools to\nthe process to make running React and Rails together a bit easier.\u003c/p\u003e\n\n\u003ch2\u003eGenerating a React Application\u003c/h2\u003e\n\n\u003cp\u003eTo get started, let's spin up our React application using \u003ccode\u003ecreate-react-app\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpx create-react-app client \u003cspan class=\"nt\"\u003e--use-npm\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will create a new React application in a \u003ccode\u003eclient\u003c/code\u003e folder, and will use npm\ninstead of yarn to manage our dependencies.\u003c/p\u003e\n\n\u003cp\u003eWhen we're running React and Rails in development, we'll need two separate\nservers running on different ports — we'll run React on port 4000, and\nRails on port 3000. Whenever we want to make a request to our Rails API from\nReact, we'll need to make sure that our requests are going to port 3000.\u003c/p\u003e\n\n\u003cp\u003eWe can simplify this process of making requests to the correct port by using\n\u003ccode\u003ecreate-react-app\u003c/code\u003e in development to \u003ca href=\"https://create-react-app.dev/docs/proxying-api-requests-in-development/\"\u003eproxy the requests to our API\u003c/a\u003e.\nThis will let us write our network requests like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/movies\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// instead of fetch(\"http://localhost:3000/movies\")\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo set up this proxy feature, open the \u003ccode\u003epackage.json\u003c/code\u003e file in the \u003ccode\u003eclient\u003c/code\u003e\ndirectory and add this line at the top level of the JSON object:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"nl\"\u003e\"proxy\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"http://localhost:3000\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet's also update the \"start\" script in the the \u003ccode\u003epackage.json\u003c/code\u003e file to specify a\ndifferent port to run our React app in development:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"nl\"\u003e\"scripts\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"start\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"PORT=4000 react-scripts start\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith that set up, let's try running our servers! In your terminal, run Rails:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, open a new terminal, and run React:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will run \u003ccode\u003enpm start\u003c/code\u003e in the client directory. Verify that your app is\nworking by visiting:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"http://localhost:4000\"\u003ehttp://localhost:4000\u003c/a\u003e to view the React application\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"http://localhost:3000/movies\"\u003ehttp://localhost:3000/movies\u003c/a\u003e to view the Rails\napplication\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWe can also see how to make a request using \u003ccode\u003efetch\u003c/code\u003e. In the React application,\nupdate your \u003ccode\u003eApp.js\u003c/code\u003e file with the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003euseEffect\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003euseEffect\u003c/span\u003e\u003cspan class=\"p\"\u003e(()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/movies\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003emovies\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003emovies\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"p\"\u003e[]);\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eHello from React!\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will use the \u003ccode\u003euseEffect\u003c/code\u003e hook to fetch data from our Rails API, which you\ncan then view in the console.\u003c/p\u003e\n\n\u003ch2\u003eRunning React and Rails Together\u003c/h2\u003e\n\n\u003cp\u003eSince we'll often want to run our React and Rails applications together, it can\nbe helpful to be able to run them from just one command in the terminal instead\nof opening multiple terminals.\u003c/p\u003e\n\n\u003cp\u003eTo facilitate this, we'll use the excellent \u003ca href=\"https://github.com/ddollar/foreman\"\u003eforeman\u003c/a\u003e gem. Install it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egem \u003cspan class=\"nb\"\u003einstall \u003c/span\u003eforeman\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eForeman works with a special kind of file known as a Procfile, which lists\ndifferent processes to run for our application. Some hosting services, such as\nHeroku, use a Procfile to run applications, so by using a Procfile in\ndevelopment as well, we'll simplify the deploying process later.\u003c/p\u003e\n\n\u003cp\u003eIn the root directory, create a file \u003ccode\u003eProcfile.dev\u003c/code\u003e and add this code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eweb: PORT=4000 npm start --prefix client\napi: PORT=3000 rails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, run it with Foreman:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003eforeman start \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e Procfile.dev\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will start both React and Rails on separate ports, just like before; but\nnow we can run both with one command!\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eThere is one big caveat to this approach\u003c/strong\u003e: by running our client and server\nin the same terminal, it can be more challenging to read through the server logs\nand debug our code. Furthermore, \u003ccode\u003ebyebug\u003c/code\u003e will not work. If you're doing a lot of\ndebugging in the terminal, you should run the client and server separately to\nget a cleaner terminal output and allow terminal-based debugging with \u003ccode\u003ebyebug\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eYou can run each application separately by opening two terminal windows and\nrunning each of these commands in a separate window:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will run React on port 4000 (thanks to the configuration in the\n\u003ccode\u003eclient/package.json\u003c/code\u003e file), and Rails on port 3000 (the default port).\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn the past couple lessons, we've seen how to put together the two pieces we'll\nneed for full-stack applications by using \u003ccode\u003erails new\u003c/code\u003e to create a new Rails API,\nand \u003ccode\u003ecreate-react-app\u003c/code\u003e to create a React project. Throughout the rest of this\nmodule, we'll focus on how our two applications communicate and share data.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat options do you have for running Rails and React at the same time?\u003c/li\u003e\n\u003cli\u003eWhat are the advantages and disadvantages of using \u003ccode\u003eforeman\u003c/code\u003e as described in\nthis lesson?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://create-react-app.dev/docs/proxying-api-requests-in-development/\"\u003eProxying API Requests in Create React App\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g43026124127fee7f0ecab7bab9b2126e","title":"Asynchronous Web Requests Using Thunk and Redux","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-thunk-readme\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-thunk-readme/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-thunk-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-thunk-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse action creator functions to make asynchronous web requests\u003c/li\u003e\n\u003cli\u003eExplain why middleware is necessary for asynchronous actions\u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003eredux-thunk\u003c/code\u003e middleware for asynchronous actions\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003ePart of the value of using Redux is that it provides a centralized way to\ncontrol the data of an application. In a standard React/Redux application, any\nchild component can connect to the store directly from anywhere in the app. This\nallows us to keep many of our React components simple — no need for passing\nprops through many nested components, no need to use component \u003ccode\u003estate\u003c/code\u003e to keep\ntrack of all the data. A lot of code that would normally be stored in React\ncomponents can be removed or replaced.\u003c/p\u003e\n\n\u003cp\u003eWith Redux, we can focus more on presentation in our React components, and use\nactions and reducers to handle the logic of organizing data. In following with\nthis pattern, we'll be discussing a package that works in conjunction with\nRedux: \u003ccode\u003eredux-thunk\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eredux-thunk\u003c/code\u003e handles asynchronous calls when working with Redux. Think for a\nmoment: we have Redux handling all our app's data. So far, it's all been\nhard-coded data, i.e. data that we set ourselves. It would be great if we could\nstart getting data from other sources.\u003c/p\u003e\n\n\u003cp\u003eWell, if we had a server or an API, we could \u003cem\u003efetch\u003c/em\u003e some remote data, but we're\npresented with a familiar problem: we've just removed a lot of logic from our\ncomponents and now we're going to add more logic? Specifically, we're going to\nfetch data we'll likely want to keep in our Redux store — adding code to our\ncomponents seems to be a step backwards.\u003c/p\u003e\n\n\u003cp\u003eWith \u003ccode\u003eredux-thunk\u003c/code\u003e, we can incorporate asynchronous code in with our Redux\nactions. This allows us to continue keeping our components relatively simple and\nmore focused on presentation. In this lesson, we're going to go through what\nThunk is and how it is implemented with Redux.\u003c/p\u003e\n\n\u003ch2\u003eTrying to Send an Asynchronous Request in Redux\u003c/h2\u003e\n\n\u003cp\u003eWe're familiar with the Redux pattern in which the store dispatches an action to\nthe reducer, the reducer uses that action to make changes to the state, and\ncomponents re-render with new data.\u003c/p\u003e\n\n\u003cp\u003eGoing back to hard-coded examples, in previous lessons, we populated our store\nusing data inside an action creator function. Something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eNeil Armstrong\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003ecraft\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eApollo 11\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eBuzz Aldrin\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003ecraft\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eApollo 11\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eMichael Collins\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003ecraft\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eApollo 11\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e];\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhat happens though, when we're ready to pull in real live data from an external\nsource like an API?\u003c/p\u003e\n\n\u003cp\u003eWell, we already know how to make a web request. We can use something like\nJavaScript's native Fetch API to send a web request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://api.open-notify.org/astros.json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo, can we simply make a \u003ccode\u003efetch\u003c/code\u003e request inside our action creator function\ninstead of hard-coding our data? The code below is a good attempt, but it\nultimately ends in failure and disappointment:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/astronauts/Astronauts.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchAstronauts\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./astronautsSlice\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleClick\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// dispatch the action creator (see below!)\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efetchAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronautsList\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eastro\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e \u003cspan class=\"na\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eastro\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eastro\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003eonClick\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleClick\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eGet Astronauts\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eastronautsList\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003eAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/astronauts/astronautsSlice.js\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// Action Creators\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/astronautsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// Reducers\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e//array of astronauts\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/astronautsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo if you look at the code above, you get a sense for what we are trying to do.\nWhen a user clicks on the button, we call the \u003ccode\u003ehandleOnClick()\u003c/code\u003e function. This\ncalls our action creator, the \u003ccode\u003efetchAstronauts()\u003c/code\u003e function. The action creator\nthen hits the API, and returns an action with our data, which then updates the\nstate through the reducer.\u003c/p\u003e\n\n\u003cp\u003eWhile this might seem like it should work, in reality we have a big problem.\u003c/p\u003e\n\n\u003cp\u003eFetch requests in JavaScript are \u003cem\u003easynchronous\u003c/em\u003e. That means if we make a fetch\nrequest at the first line of our \u003ccode\u003efetchAstronauts()\u003c/code\u003e function:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://api.open-notify.org/astros.json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/astronautsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe code on the second line will start running \u003cem\u003ebefore the web request resolves\nand we have a response that we can work with\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003efetch()\u003c/code\u003e request returns something called a \u003cstrong\u003ePromise\u003c/strong\u003e. A Promise object is\nan object that represents some value that will be available later. We can access\nthe data when the promise \"resolves\" and becomes available by chaining a\n\u003ccode\u003ethen()\u003c/code\u003e function onto our \u003ccode\u003efetch()\u003c/code\u003e call.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://api.open-notify.org/astros.json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/astronautsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOur \u003ccode\u003ethen()\u003c/code\u003e function will run when the Promise that \u003ccode\u003efetch()\u003c/code\u003e returns is\n\u003cem\u003eresolved\u003c/em\u003e, allowing us to access the response data and parse it into JSON. This\ndoesn't solve our problem though because the \u003ccode\u003efetchAstronauts()\u003c/code\u003e function will\nstill return before the Promise is resolved.\u003c/p\u003e\n\n\u003cp\u003eThere's another problem. Because retrieving data takes time, and because we\nalways want our Redux store to reflect the current application state, we want to\nrepresent the state of the application in between the user asking for data and\nthe application receiving the data. It's almost like each time a user asks for\ndata we want to dispatch two actions to update our state: one to place our state\nas loading, and another to update the state with the data.\u003c/p\u003e\n\n\u003cp\u003eSo these are the steps we want to happen when the user wishes to call the API:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eInvoke \u003ccode\u003efetchAstronauts()\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eDirectly after invoking \u003ccode\u003efetchAstronauts()\u003c/code\u003e dispatch an action to indicate\nthat we are loading data.\u003c/li\u003e\n\u003cli\u003eCall the \u003ccode\u003efetch()\u003c/code\u003e method, which runs, and returns a Promise that we are\nwaiting to resolve.\u003c/li\u003e\n\u003cli\u003eWhen the Promise resolves, dispatch another action with a payload of the\nfetched data that gets sent to the reducer.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eGreat. So how do we do all of this?\u003c/p\u003e\n\n\u003ch2\u003eWe Need Middleware\u003c/h2\u003e\n\n\u003cp\u003eSo we need a way to dispatch an action saying we are loading data, then to make\na request to the API, and then to wait for the response and then dispatch\nanother action with the response data.\u003c/p\u003e\n\n\u003cp\u003eLucky for us, we can use some \u003cstrong\u003emiddleware\u003c/strong\u003e for exactly that! Middleware, in\nthis case, will allow us to slightly alter the behavior of our actions, allowing\nus to add in asynchronous requests. In this case, for middleware, we'll be using\nThunk.\u003c/p\u003e\n\n\u003cp\u003eTo use \u003ccode\u003eredux-thunk\u003c/code\u003e you would need to install the NPM package:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall \u003c/span\u003eredux-thunk\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, when you initialize the store in your \u003ccode\u003eindex.js\u003c/code\u003e file, you can incorporate\nyour middleware like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/index.js\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-dom\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eProvider\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux-thunk\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./App\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./reducer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e \u003cspan class=\"na\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eApp\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;,\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eroot\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNotice that we imported in a new function \u003ccode\u003eapplyMiddleware()\u003c/code\u003e from \u003ccode\u003eredux\u003c/code\u003e,\nalong with \u003ccode\u003ethunk\u003c/code\u003e from the \u003ccode\u003eredux-thunk\u003c/code\u003e package, and passed in\n\u003ccode\u003eapplyMiddleware(thunk)\u003c/code\u003e as a second argument to \u003ccode\u003ecreateStore\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWe can also set up our app to use the Redux DevTools. We'll use another package,\n\u003ccode\u003eredux-devtools-extension\u003c/code\u003e, to help with the setup:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall \u003c/span\u003eredux-devtools-extension\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen update our \u003ccode\u003eindex.js\u003c/code\u003e file like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-dom\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eProvider\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux-thunk\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposeWithDevTools\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux-devtools-extension\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./App\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./reducer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposedEnhancer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposeWithDevTools\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposedEnhancer\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e \u003cspan class=\"na\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eApp\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;,\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eroot\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eUsing Redux-Thunk Middleware\u003c/h2\u003e\n\n\u003cp\u003eIn the above code, we tell our store to use the \u003ccode\u003eredux-thunk\u003c/code\u003e middleware. This\nmiddleware will do a couple of interesting things:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ccode\u003eredux-thunk\u003c/code\u003e allows us to \u003cstrong\u003ereturn a function inside of our action\ncreator\u003c/strong\u003e. Normally, our action creator returns a plain JavaScript object, so\nreturning a function is a pretty big change.\u003c/li\u003e\n\u003cli\u003eThat function receives the store's dispatch function as its argument. With\nthat, we can dispatch multiple actions from inside that returned function.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eLet's see the code and then we'll walk through it.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/features/astronauts/astronautsSlice.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// dispatch an initial action to set up a \"loading\" state\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/astronautsLoading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// initiate a network request with fetch\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://api.open-notify.org/astros.json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// when we have data from the response, dispatch another action to add the data to our Redux store\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n          \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/astronautsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n          \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epeople\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can see above that we are returning a \u003cem\u003efunction\u003c/em\u003e and not an \u003cem\u003eaction\u003c/em\u003e, and\nthat the power we now get is the \u003cstrong\u003eability to dispatch actions from inside of\nthe returned function\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eWith that power, we first dispatch an action to indicate that we are about to\nmake a request to our API. Then we make the request. We do not hit our \u003ccode\u003ethen()\u003c/code\u003e\nfunction until the response is received, which means that we are not dispatching\nour action of type \u003ccode\u003e'astronauts/astronautsLoaded'\u003c/code\u003e until we receive our data.\nThus, we are able to send along that data.\u003c/p\u003e\n\n\u003ch3\u003eReviewing Everything Together\u003c/h3\u003e\n\n\u003cp\u003eLet's review the whole application now with \u003ccode\u003eredux-thunk\u003c/code\u003e configured. First we\nhave \u003ccode\u003eindex.js\u003c/code\u003e, which now imports \u003ccode\u003ethunkMiddleware\u003c/code\u003e and \u003ccode\u003eapplyMiddleware\u003c/code\u003e and\nuses them when creating the Redux store:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/index.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-dom\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eProvider\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux-thunk\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposeWithDevTools\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux-devtools-extension\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./App\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./reducers\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposedEnhancer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposeWithDevTools\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposedEnhancer\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e \u003cspan class=\"na\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eApp\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;,\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eroot\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe \u003ccode\u003eAstronauts\u003c/code\u003e component we showed earlier can remain the same — note that\nalthough we've called a function \u003ccode\u003efetchAstronauts()\u003c/code\u003e, no actual asynchronous\ncode is in the component. The component's main purpose is to render JSX. It uses\ndata from Redux via \u003ccode\u003euseSelector()\u003c/code\u003e and connects an \u003ccode\u003eonClick\u003c/code\u003e event to an action\nthrough \u003ccode\u003euseDispatch()\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/astronauts/Astronauts.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchAstronauts\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./astronautsSlice\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleClick\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efetchAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronautsList\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eastro\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e \u003cspan class=\"na\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eastro\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eastro\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003eonClick\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleClick\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eGet Astronauts\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eastronautsList\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003eAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhat happens when the \u003ccode\u003eonClick\u003c/code\u003e event is fired? All of that logic is taken care\nof outside of the component, in our \u003ccode\u003efetchAstronauts()\u003c/code\u003e action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/features/astronauts/astronautsSlice.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchAstronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/astronautsLoading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://api.open-notify.org/astros.json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n          \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/astronautsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n          \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eastronauts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epeople\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith \u003ccode\u003eredux-thunk\u003c/code\u003e configured, our actions can now \u003cem\u003ereturn\u003c/em\u003e a function. We must\nwrite the function, but we know that \u003ccode\u003edispatch()\u003c/code\u003e is passed in as an argument.\nNotice in the code above that there are \u003cem\u003etwo\u003c/em\u003e calls to \u003ccode\u003edispatch()\u003c/code\u003e, first\npassing in \u003ccode\u003e{ type: 'astronauts/astronautsLoading' }\u003c/code\u003e before the \u003ccode\u003efetch()\u003c/code\u003e call,\nthen passing in \u003ccode\u003e{ type: 'astronauts/astronautsLoaded', payload: astronauts }\u003c/code\u003e\n\u003cem\u003einside\u003c/em\u003e \u003ccode\u003e.then()\u003c/code\u003e. By having both \u003ccode\u003edispatch()\u003c/code\u003e calls, it is possible to know\njust before our application sends a remote request, and then immediately after\nthat request is resolved.\u003c/p\u003e\n\n\u003cp\u003eWe can update our reducer to include both \u003ccode\u003etype\u003c/code\u003es and to also change a bit of\nstate to indicate if data is in the process of being fetched. We'll modify the\ninitial state to do this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/astronauts/astronautsSlice.js\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e//array of astronauts\u003c/span\u003e\n  \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e//loading status for fetch\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/astronautsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eastronauts/astronautsLoading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eloading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, we have a way to indicate in our app when data is being loaded! If \u003ccode\u003estatus\u003c/code\u003e\nis \u003ccode\u003e'loading'\u003c/code\u003e, we could display a loading message in our components.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWe saw that when retrieving data from APIs, we run into a problem where the\naction creator returns an action before the data is retrieved. To resolve this,\nwe use a middleware called \u003ccode\u003eredux-thunk\u003c/code\u003e. \u003ccode\u003eredux-thunk\u003c/code\u003e allows us to return a\nfunction inside of our action creator instead of a plain JavaScript object. That\nreturned function receives the store's dispatch function, and with that we are\nable to dispatch multiple actions: one to place the state in a loading state,\nand another to update our store with the returned data.\u003c/p\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g5bb769073cfcc3cdaf17d5a4160cca5d","title":"Async Redux Lab: Pictures of Cats","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-thunk-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-thunk-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-thunk-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-thunk-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse \u003ccode\u003eredux-thunk\u003c/code\u003e middleware to make an asynchronous web request in an action\ncreator function\u003c/li\u003e\n\u003cli\u003eDispatch an action from the \u003ccode\u003euseEffect\u003c/code\u003e hook\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWho doesn't want to look at pictures of cats? Well, now you can look at up to 20\npictures of cats with our new React + Redux app. All you have to do is...build\nit yourself! In this lab, you are tasked with building out a React + Redux app\nthat fetches data using Thunk. Since this is a pretty specific task, we'll walk\nthrough it a bit in this Readme. Let's get started!\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eWe'll be working in two components: \u003ccode\u003eCats\u003c/code\u003e and \u003ccode\u003eCatList\u003c/code\u003e. The \u003ccode\u003eCats\u003c/code\u003e component\nwill be responsible for getting data from the state via \u003ccode\u003euseSelector\u003c/code\u003e. \u003ccode\u003eCats\u003c/code\u003e\nwill render a child component, \u003ccode\u003eCatList\u003c/code\u003e, which will receive the list of cat\npics from \u003ccode\u003eCats\u003c/code\u003e and render them in a series of \u003ccode\u003e\u0026lt;img\u0026gt;\u003c/code\u003e tags.\u003c/p\u003e\n\n\u003cp\u003eWe'll be getting our cat pics from a real API! Sort of. We made a very special\nAPI just for you to use with this lab (aren't you so lucky). We've got a GitHub\nrepository set up with GitHub pages to deliver a JSON file. If you point your\nbrowser to\n\u003ca href=\"https://learn-co-curriculum.github.io/cat-api/cats.json\"\u003ehttps://learn-co-curriculum.github.io/cat-api/cats.json\u003c/a\u003e you\nshould see a JSON collection of 20 cat image objects. Now that we have a source\nfor the data, we'll need to set up Redux and Thunk.\u003c/p\u003e\n\n\u003ch2\u003ePart 1: Set Up the Store and Reducer and Action Creator\u003c/h2\u003e\n\n\u003ch3\u003eConfiguring the Store\u003c/h3\u003e\n\n\u003cp\u003eFirst things first, use Redux's \u003ccode\u003ecreateStore()\u003c/code\u003e function to initialize your\nstore in \u003ccode\u003esrc/index.js\u003c/code\u003e. To get Redux configured, we'll need to import\n\u003ccode\u003ecreateStore\u003c/code\u003e from \u003ccode\u003eredux\u003c/code\u003e and \u003ccode\u003eProvider\u003c/code\u003e from \u003ccode\u003ereact-redux\u003c/code\u003e. We'll also need to\nimport a reducer. We haven't written it yet, but let's import from\n\u003ccode\u003esrc/reducers/catsReducer.js\u003c/code\u003e. We pass this reducer into \u003ccode\u003ecreateStore\u003c/code\u003e,\nassigning the return value to \u003ccode\u003estore\u003c/code\u003e. Then, we'll wrap the \u003ccode\u003eApp\u003c/code\u003e\ncomponent in \u003ccode\u003eProvider\u003c/code\u003e and pass \u003ccode\u003estore\u003c/code\u003e to it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/index.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-dom\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eProvider\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebootstrap/dist/css/bootstrap.min.css\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./App\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/cats/catsSlice.js\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e \u003cspan class=\"na\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eApp\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;,\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eroot\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is the Redux configuration we've seen previously. To implement Thunk, we'll\nneed to also import \u003ccode\u003eapplyMiddleware\u003c/code\u003e from \u003ccode\u003eredux\u003c/code\u003e and \u003ccode\u003ethunk\u003c/code\u003e from\n\u003ccode\u003eredux-thunk\u003c/code\u003e (package already included in \u003ccode\u003epackage.json\u003c/code\u003e). We pass \u003ccode\u003ethunk\u003c/code\u003e into\n\u003ccode\u003eapplyMiddleware()\u003c/code\u003e, and pass \u003cem\u003ethat\u003c/em\u003e in as the second argument for\n\u003ccode\u003ecreateStore\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/index.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-dom\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eProvider\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux-thunk\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebootstrap/dist/css/bootstrap.min.css\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./App\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/cats/catsSlice.js\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e \u003cspan class=\"na\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eApp\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;,\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eroot\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can also add the Redux DevTools:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-dom\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eProvider\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux-thunk\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposeWithDevTools\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux-devtools-extension\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebootstrap/dist/css/bootstrap.min.css\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./App\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/cats/catsSlice.js\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposedEnhancer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposeWithDevTools\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposedEnhancer\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e \u003cspan class=\"na\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eApp\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;,\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eroot\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe have the setup for connecting Redux to the React app, and we've configured\n\u003ccode\u003eredux-thunk\u003c/code\u003e. Now, we need to build out the reducer.\u003c/p\u003e\n\n\u003ch3\u003eSetting up the Reducer\u003c/h3\u003e\n\n\u003cp\u003eFor our \u003ccode\u003ecatsReducer()\u003c/code\u003e function in \u003ccode\u003e./src/features/cats/catsSlice.js\u003c/code\u003e, we'll want\nto set up a switch that handles two action types, \u003ccode\u003e'cats/catsLoading'\u003c/code\u003e and\n\u003ccode\u003e'cats/catsLoaded'\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/cats/catsSlice.js\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e// array of cats\u003c/span\u003e\n  \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// loading state\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/catsLoading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eloading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/catsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe also set up the initial state here. We can see that in the \u003ccode\u003e'cats/catsLoading'\u003c/code\u003e\ncase, \u003ccode\u003estate.status\u003c/code\u003e becomes \u003ccode\u003e'loading'\u003c/code\u003e, while the rest of \u003ccode\u003estate\u003c/code\u003e is just copied\nto a new object. In the \u003ccode\u003e'cats/catsLoaded'\u003c/code\u003e case, \u003ccode\u003estate.status\u003c/code\u003e becomes \u003ccode\u003e'idle'\u003c/code\u003e,\nand \u003ccode\u003estate.entities\u003c/code\u003e is set to the \u003ccode\u003eaction.payload\u003c/code\u003e array.\u003c/p\u003e\n\n\u003ch3\u003eSetting up the Action Creator\u003c/h3\u003e\n\n\u003cp\u003eNow, define your action creator function, \u003ccode\u003efetchCats()\u003c/code\u003e in\n\u003ccode\u003e./src/features/cats/catsSlice.js\u003c/code\u003e. Remember, \u003ccode\u003eredux-thunk\u003c/code\u003e alters the behavior of\naction creator functions, allowing us to \u003cem\u003ereturn\u003c/em\u003e a function that takes in\n\u003ccode\u003edispatch\u003c/code\u003e. Inside this function, we can execute asynchronous code, and, once\nresolved, we can use \u003ccode\u003edispatch\u003c/code\u003e to update our store with the remote data.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003efetchCats()\u003c/code\u003e action creator should use \u003ccode\u003efetch()\u003c/code\u003e to make the web request for\nyour cat pic JSON. It should use a \u003ccode\u003e.then()\u003c/code\u003e function to parse the JSON of the\nresponse to this request, and another \u003ccode\u003e.then()\u003c/code\u003e function chained on that to grab\nthe actual collection of cat pic image objects. Something like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttps://learn-co-curriculum.github.io/cat-api/cats.json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// instead of logging here, call dispatch and send the cat JSON data to your store\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eimages\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRemember, we built the \u003ccode\u003ecatsReducer\u003c/code\u003e to look for two action types. The first, \u003ccode\u003e'cats/catsLoading'\u003c/code\u003e, should be dispatched \u003cem\u003ebefore\u003c/em\u003e the \u003ccode\u003efetch()\u003c/code\u003e\nrequest is called. The other type, \u003ccode\u003e'cats/catsLoaded'\u003c/code\u003e, should be dispatched\nalong with a payload of the cats JSON collection. Judging by the case\nfor \u003ccode\u003e'cats/catsLoaded'\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ...\u003c/span\u003e\n\u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003ecats/catsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// ...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can see that the reducer is expecting an action that looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nl\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003ecats/catsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"c1\"\u003e// cat data from the cat API\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ePutting what we know together, we can start by writing the basic function definition:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe first thing we want to do in this function is send a \u003ccode\u003edispatch\u003c/code\u003e to indicate\nwe're loading (fetching) the cats:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/catsLoading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, we call \u003ccode\u003efetch()\u003c/code\u003e, dispatching the returned data:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/catsLoading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttps://learn-co-curriculum.github.io/cat-api/cats.json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/catsLoaded\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eimages\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn this case, we just need the data inside \u003ccode\u003eimages\u003c/code\u003e, so we can pass that\ndirectly when calling the second \u003ccode\u003edispatch\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003ePart 2: Build the Cats Component\u003c/h2\u003e\n\n\u003cp\u003eNow that our reducer and action creators are set up, it is time to display the\nretrieved data in our app. First, let's set up the \u003ccode\u003eCats\u003c/code\u003e component to read from\nour Redux store. We'll do this by first importing \u003ccode\u003euseSelector\u003c/code\u003e from\n\u003ccode\u003ereact-redux\u003c/code\u003e. Then, we'll call \u003ccode\u003euseSelector\u003c/code\u003e in our component and write a\ncallback function to access our Redux store state.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/features/cats/Cats.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eCats\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatPics\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n  \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecatPics\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclassName\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"App\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eCatBook\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"cm\"\u003e/* missing component */\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003eCats\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUsing the above code, you should see an empty array logged in the console when\nthe app is launched. This is the empty \u003ccode\u003eentities\u003c/code\u003e array in our initial state,\nnow mapped to \u003ccode\u003ecatPics\u003c/code\u003e in \u003ccode\u003eCats\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3\u003eDispatching the \u003ccode\u003efetchCats\u003c/code\u003e Action\u003c/h3\u003e\n\n\u003cp\u003eThis is something new, so read carefully...\u003c/p\u003e\n\n\u003cp\u003eYou might be wondering when/where we will actually dispatch our \u003ccode\u003efetchCats\u003c/code\u003e\naction to get all the cat pics into state. We want our cat pics to be fetched\nwhen the \u003ccode\u003eCats\u003c/code\u003e component is first loaded up. So, we'll enact a common pattern\nin which we use a side effect to fetch the cat pics.\u003c/p\u003e\n\n\u003ch3\u003eThe useEffect function\u003c/h3\u003e\n\n\u003cp\u003eWhen we use \u003ccode\u003euseEffect()\u003c/code\u003e in our component, the callback function we provide\nwill \u003cem\u003ealways be called automatically every time our component is rendered\u003c/em\u003e. We\ncan also provide an empty dependencies array to tell React to only run the\ncallback the first time our component is rendered. This is the perfect place to\ngo and get the cat pics.\u003c/p\u003e\n\n\u003cp\u003eWe need to import \u003ccode\u003euseEffect\u003c/code\u003e, then define our \u003ccode\u003euseEffect()\u003c/code\u003e callback function\nso that it calls our \u003ccode\u003efetchCats()\u003c/code\u003e action creator. We also need to import\n\u003ccode\u003euseDispatch()\u003c/code\u003e function to make \u003ccode\u003edispatch()\u003c/code\u003e available.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/features/cats/Cats.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003euseEffect\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./catsSlice\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eCats\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatPics\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\n  \u003cspan class=\"nx\"\u003euseEffect\u003c/span\u003e\u003cspan class=\"p\"\u003e(()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"p\"\u003e[]);\u003c/span\u003e\n\n  \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecatPics\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclassName\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"App\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eCatBook\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"cm\"\u003e/* missing component */\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003eCats\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAh! If we check the console, we'll see that \u003ccode\u003ecatPics\u003c/code\u003e is set to \u003ccode\u003e[]\u003c/code\u003e on the\nfirst render, but on the second, we see an array of 20 cat objects! Notice that\nwe still can call \u003ccode\u003edispatch\u003c/code\u003e here, even though we're \u003cem\u003ealso\u003c/em\u003e calling \u003ccode\u003edispatch\u003c/code\u003e\nin our action creator.\u003c/p\u003e\n\n\u003cp\u003eOnce you successfully fetch cats, put them in state, grab them from state and\npass them to \u003ccode\u003eCats\u003c/code\u003e using \u003ccode\u003euseSelector\u003c/code\u003e prop, you're ready to build the\n\u003ccode\u003eCatList\u003c/code\u003e component.\u003c/p\u003e\n\n\u003ch3\u003eThe CatList Component\u003c/h3\u003e\n\n\u003cp\u003eWe will leave the final task to you - building the \u003ccode\u003eCatList\u003c/code\u003e component. Your\ncontainer component, \u003ccode\u003eCats\u003c/code\u003e, should render the\u003ccode\u003eCatList\u003c/code\u003e component. \u003ccode\u003eCats\u003c/code\u003e will\npass \u003ccode\u003ecatPics\u003c/code\u003e down to \u003ccode\u003eCatList\u003c/code\u003e as a prop. \u003ccode\u003eCatList\u003c/code\u003e should iterate over the\ncat pics and display each cat pic in an image URL. Remember to use \u003ccode\u003edebugger\u003c/code\u003e to\ntake a look at the \u003ccode\u003ecatPics\u003c/code\u003e collection and determine which property of each\n\u003ccode\u003ecatPic\u003c/code\u003e object you will use to populate your \u003ccode\u003e\u0026lt;img\u0026gt;\u003c/code\u003e tag and render the image.\nIn order to get the tests to pass, you will need to give your \u003ccode\u003e\u0026lt;img\u0026gt;\u003c/code\u003e tags an\nalt prop of \"cat\".\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWith all tests passing, you should have a working example of a React + Redux +\nThunk application. Of the two components, one is purely presentational, just\nlike a regular React app. The other connects to Redux, but beyond that, it's not\nany different than a regular React + Redux app. Thunk lets us augment our action\ncreators and handle our asynchronous requests without requiring any major\nchanges to other parts of the application.\u003c/p\u003e\n\n\u003ch2\u003eBonus\u003c/h2\u003e\n\n\u003cp\u003eWhile we have a working application, there is one more thing we did not fully\nimplement: handling loading. If you've followed the instructions, you should\nhave access to \u003ccode\u003eloading\u003c/code\u003e in your \u003ccode\u003eCats\u003c/code\u003e component by calling \u003ccode\u003euseSelector\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWhile content is being fetched, it would be nice to show the user something -\noften, spinning icons are used, but even just a simple 'Loading...' is enough to\nshow to the user that content is on the way.\u003c/p\u003e\n\n\u003cp\u003eHow might we use the value of \u003ccode\u003eloading\u003c/code\u003e to implement a loading message until the\ncat images arrive?\u003c/p\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gfd0ac6a036eb0fcd2992aab69d53e7e8","title":"Authenticating Users Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-authenticating-users-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-authenticating-users-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-authenticating-users-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-authenticating-users-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the session hash to log in a user\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll continue working on the blog site and set up a basic login\nfeature.\u003c/p\u003e\n\n\u003cp\u003eThere is some starter code in place for a Rails API backend and a React frontend.\nTo get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can work on this lab by running the tests with \u003ccode\u003elearn test\u003c/code\u003e. It will also be\nhelpful to see what's happening during the request/response cycle by running the\napp in the browser. You can run the Rails server with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd you can run React in another terminal with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou don't have to make any changes to the React code to get this lab working.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eFor our basic login feature, we'll need the following functionality:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eA user can log in by providing their username in a form\u003c/li\u003e\n\u003cli\u003eA user can log out\u003c/li\u003e\n\u003cli\u003eA user can remain logged in, even after refreshing the page\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWe'll need to create the routes and controller methods to handle each of these features. Let's get started!\u003c/p\u003e\n\n\u003ch3\u003eSessions\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eGenerate these routes:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003ePOST /login\u003c/code\u003e: run the \u003ccode\u003eSessionsController#create\u003c/code\u003e method\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eDELETE /logout\u003c/code\u003e: run the \u003ccode\u003eSessionsController#destroy\u003c/code\u003e method\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCreate a sessions controller.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eNote:\u003c/strong\u003e If you use the generators to generate your controllers, be sure to\npass the \u003ccode\u003e--no-test-framework\u003c/code\u003e flag to avoid generating unneeded files:\n\u003ccode\u003erails g controller Sessions --no-test-framework\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMake a \u003ccode\u003eSessionsController#create\u003c/code\u003e method. It should:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eFind a user in the database using the username from \u003ccode\u003eparams\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eSave the user's ID to the session hash\u003c/li\u003e\n\u003cli\u003eReturn the user as a JSON object\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMake a \u003ccode\u003eSessionsController#destroy\u003c/code\u003e method. It should:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRemove the user ID from the session hash\u003c/li\u003e\n\u003cli\u003eReturn an empty response with a 204 No Content status code\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eUsers\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eGenerate these routes:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eGET /me\u003c/code\u003e: run the \u003ccode\u003eUsersController#show\u003c/code\u003e method\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCreate a users controller.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eNote:\u003c/strong\u003e If you use the generators to generate your controllers, be sure to\npass the \u003ccode\u003e--no-test-framework\u003c/code\u003e flag to avoid generating unneeded files:\n\u003ccode\u003erails g controller Users --no-test-framework\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMake a \u003ccode\u003eUsersController#show\u003c/code\u003e method. It should:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eFind a user in the database using the user id from the session hash\u003c/li\u003e\n\u003cli\u003eReturn the user as a JSON object\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ge47f46274d5ae68f0ff5e9073fbe6529","title":"Authorizing Requests Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-authorizing-requests-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-authorizing-requests-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-authorizing-requests-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-authorizing-requests-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the session hash to authorize a user to perform actions\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll continue working on the blog site, and add some features that\nonly logged in users have access to.\u003c/p\u003e\n\n\u003cp\u003eThere is some starter code in place for a Rails API backend and a React frontend.\nTo get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can work on this lab by running the tests with \u003ccode\u003elearn test\u003c/code\u003e. It will also be\nhelpful to see what's happening during the request/response cycle by running the\napp in the browser. You can run the Rails server with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd you can run React in another terminal with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou don't have to make any changes to the React code to get this lab working.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eNow that we've got the basic login feature working, let's reward our logged\nin users with some bonus content that only users who have logged in will be able to access!\u003c/p\u003e\n\n\u003cp\u003eWe added a new attribute to our articles, \u003ccode\u003eis_member_only\u003c/code\u003e, to reflect whether\nthe article should only be available to authorized users of the site. We also\ncreated a new \u003ccode\u003eMembersOnlyArticlesController\u003c/code\u003e class to display these exclusive\narticles to our logged in users.\u003c/p\u003e\n\n\u003cp\u003eYour goal is to add the following functionality to the\n\u003ccode\u003eMembersOnlyArticlesController\u003c/code\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIf a user is not signed in, the \u003ccode\u003e#index\u003c/code\u003e and \u003ccode\u003e#show\u003c/code\u003e actions should return a\nstatus code of 401 unauthorized, along with an error message\u003c/li\u003e\n\u003cli\u003eIf the user is signed in, the \u003ccode\u003e#index\u003c/code\u003e and \u003ccode\u003e#show\u003c/code\u003e actions should return the\nJSON data for the members-only articles.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://guides.rubyonrails.org/action_controller_overview.html#filters\"\u003eAction Controller Overview: Filters\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g14191492ca3fdfa0ccc48ee1c92d67a3","title":"Balancing Parentheses Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-balancing-parentheses\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-balancing-parentheses/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-balancing-parentheses\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-balancing-parentheses/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the \u003ccode\u003eStack\u003c/code\u003e implementation we built in the previous lab to solve a problem\u003c/li\u003e\n\u003cli\u003eWrite an algorithm to check whether the parentheses in a string are balanced\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll use the \u003ccode\u003eStack\u003c/code\u003e class you built in the previous lab to write\nan algorithm that takes a string as input and checks to see whether the\nparentheses in the string are balanced.\u003c/p\u003e\n\n\u003cp\u003eA single pair of parentheses is defined as balanced if it consists of an opening\nparenthesis followed by a matching closing parenthesis. A string containing some\nnumber of \u003ccode\u003e(\u003c/code\u003e and \u003ccode\u003e)\u003c/code\u003e characters will be considered balanced if it includes only\nbalanced pairs:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eBalanced: \u003ccode\u003e()\u003c/code\u003e, \u003ccode\u003e(()())\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eNot balanced: \u003ccode\u003e())()\u003c/code\u003e, \u003ccode\u003e)\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eYou will be using the \u003ccode\u003eStack\u003c/code\u003e implementation we developed in an earlier lesson\nto help you solve this lab. We have included the code in \u003ccode\u003elib/stack.rb\u003c/code\u003e. We have\nalso required that file in \u003ccode\u003elib/balancing_parentheses.rb\u003c/code\u003e, where you will be\ncoding your solution.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eWrite a \u003ccode\u003ebalancing_parentheses\u003c/code\u003e method in the \u003ccode\u003elib/balancing_parentheses.rb\u003c/code\u003e\nfile that:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eTakes as input a string consisting of some number of \u003ccode\u003e(\u003c/code\u003e and \u003ccode\u003e)\u003c/code\u003e characters\u003c/li\u003e\n\u003cli\u003eCreates an instance of the \u003ccode\u003eStack\u003c/code\u003e class\u003c/li\u003e\n\u003cli\u003eUsing the stack, checks the string to determine whether the parentheses\ninside it are balanced\u003c/li\u003e\n\u003cli\u003eReturns the number of additional parentheses that would need to be added to\nthe string to make it balanced\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eHere are some examples of the expected return value for your method for various\ninputs:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eInput: `()`\nOutput: 0\n\nInput: `())()`\nOutput: 1\n\nInput: `(()()(()`\nOutput: 2\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNote: There are a number of ways to solve this problem, but for this lab you\nneed to use a stack (specifically, an instance of our \u003ccode\u003eStack\u003c/code\u003e class) in the\nsolution.\u003c/p\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gaec20e0e0f7854854a662c98584208e1","title":"Binary Search Tree Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-binary-search-tree-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-binary-search-tree-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-binary-search-tree-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-binary-search-tree-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eImplement an \u003ccode\u003e#insert\u003c/code\u003e method in the \u003ccode\u003eBinarySearchTree\u003c/code\u003e class\u003c/li\u003e\n\u003cli\u003eImplement a \u003ccode\u003e#search\u003c/code\u003e method in the \u003ccode\u003eBinarySearchTree\u003c/code\u003e class\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn the previous lessons, you learned about different types of \u003ccode\u003eTree\u003c/code\u003e structures\nand different methods for traversing them. In this lab, you'll get some practice\nworking with a \u003ccode\u003eBinarySearchTree\u003c/code\u003e. As a reminder, a \u003cstrong\u003ebinary tree\u003c/strong\u003e is a special\nkind of tree in which each node has at most two child nodes, referred to as the\n\u003cstrong\u003eleft\u003c/strong\u003e child and \u003cstrong\u003eright\u003c/strong\u003e child.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/binary-tree.png\" alt=\"binary tree\"\u003e\u003c/p\u003e\n\n\u003cp\u003eEach node in a binary tree has three attributes: a \u003ccode\u003evalue\u003c/code\u003e, and references to\nits \u003ccode\u003eleft_child\u003c/code\u003e and \u003ccode\u003eright_child\u003c/code\u003e. If a node doesn't have either or both of\nthese child nodes, the attributes will be set to \u003ccode\u003enil\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eA \u003cstrong\u003ebinary search tree (BST)\u003c/strong\u003e is a special kind of a binary tree in which the\nvalue of a node's left child (if it has one) must be less than the value of the\nnode itself, and the value of its right child (if it has one) must be greater\nthan the value of the node itself:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree/binary-search-tree.png\" alt=\"binary search tree\"\u003e\u003c/p\u003e\n\n\u003cp\u003eFork and clone this lab, then take a look at the files in the \u003ccode\u003elib\u003c/code\u003e folder. Note\nthat we have provided you with the code for the \u003ccode\u003eBinarySearchTree\u003c/code\u003e and \u003ccode\u003eNode\u003c/code\u003e\nclasses. You will be doing all of your coding in \u003ccode\u003elib/binary_search_tree.rb\u003c/code\u003e.\nYou can run the tests at any point using \u003ccode\u003elearn test\u003c/code\u003e to check your work.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eTo pass the tests, you will need to write the following methods:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eBinarySearchTree#search\u003c/code\u003e: this method should take a target value as input and\nsearch for the \u003ccode\u003eNode\u003c/code\u003e with that value in the \u003ccode\u003eTree\u003c/code\u003e instance. The method\nshould return the \u003ccode\u003eNode\u003c/code\u003e with the target value if one is found and \u003ccode\u003enil\u003c/code\u003e\notherwise.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eBinarySearchTree#insert\u003c/code\u003e: this method should take a value as input, create a\nnew \u003ccode\u003eNode\u003c/code\u003e with that value, and insert it into the \u003ccode\u003eTree\u003c/code\u003e instance. The method\nshould insert nodes regardless of the tree's existing size, and should not\nallow duplicate nodes to be inserted. If the \u003ccode\u003eNode\u003c/code\u003e was inserted successfully,\nthe method should return that \u003ccode\u003eNode\u003c/code\u003e. Otherwise, the method should return\n\u003ccode\u003enil\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e these methods can be coded using either iteration or recursion; you\nare free to use whichever approach you’re comfortable with.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eHint:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eFor both methods, you’ll start at the root and compare the input value to the\nroot’s value. Depending on the result of the comparison, you’ll either be done,\nor you’ll continue to either the left or right child, where you’ll repeat the\nprocess.\u003c/p\u003e\n\n\u003cp\u003eSome tips to get it working:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eYou will need to use a variable to keep track of which node you’re currently\nchecking.\u003c/li\u003e\n\u003cli\u003eFor the \u003ccode\u003e#search\u003c/code\u003e method, you will want to continue looping until you’ve\neither found the target node or you’ve run out of nodes to check. For the\n\u003ccode\u003e#insert\u003c/code\u003e method, you will want to continue looping until you’ve either\ninserted the new node or found that there is already a node in the tree that\nhas the target value.\u003c/li\u003e\n\u003cli\u003eRecall that you can use \u003ccode\u003ewhile true\u003c/code\u003e to continue looping until a \u003ccode\u003ereturn\u003c/code\u003e\nstatement is executed.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Binary_search_tree\"\u003eWikipedia: Binary Search Tree\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g142c97fb106267761e431b7f2792911a","title":"(Candy) Store Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-create-store-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-create-store-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-create-store-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-create-store-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eWrite a method to create a store\u003c/li\u003e\n\u003cli\u003eWork with stores, reducers, and actions\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\n\u003cp\u003eGood news - you're opening a candy store! First, we just need to build an app to\nmanage our inventory.\u003c/p\u003e\n\n\u003cp\u003eFor now, we'll want to create a store to keep track of all of the types of candy\nwe sell. Later on, we'll learn how we can manage multiple pieces of state and\nmore than one reducer, but for this challenge, the state is going to be a basic\narray of strings. By the end of this lab, you should be able to open\n\u003ccode\u003eindex.html\u003c/code\u003e, use your store's \u003ccode\u003edispatch\u003c/code\u003e function to add a name of a type of\ncandy, and see that name appear on the page.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eWrite your code in \u003ccode\u003esrc/index.js\u003c/code\u003e. We've provided the \u003ccode\u003ecandyReducer\u003c/code\u003e function\nfor you, as well as a \u003ccode\u003erender\u003c/code\u003e function, so you can get a sense of how they'll\nwork.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWrite a function called \u003ccode\u003ecreateStore\u003c/code\u003e that takes in a reducer function as an\nargument.\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003ecreateStore\u003c/code\u003e function should return an object with two methods -\n\u003ccode\u003egetState\u003c/code\u003e, \u003ccode\u003edispatch\u003c/code\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003egetState\u003c/code\u003e should return the current state.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003edispatch\u003c/code\u003e should take in an action, update the state using the reducer,\n and call the render function.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eOnce you've written \u003ccode\u003ecreateStore\u003c/code\u003e, to get everything working, you'll need two\nmore things at the end of \u003ccode\u003eindex.js\u003c/code\u003e:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eNotice that in the provided \u003ccode\u003erender\u003c/code\u003e function, a variable named \u003ccode\u003estore\u003c/code\u003e is\ncalled. Define a variable named \u003ccode\u003estore\u003c/code\u003e and assign it to whatever is returned\nby the \u003ccode\u003ecreateStore\u003c/code\u003e function you've written when it is passed the\n\u003ccode\u003ecandyReducer\u003c/code\u003e function.\u003c/li\u003e\n\u003cli\u003eInitialize your state using a \u003ccode\u003edispatch\u003c/code\u003e call to the reducer.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/tutorials/fundamentals/part-4-store\"\u003eRedux Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g234a9d038023f3d5968437abf538c941","title":"Completing our Counter Application","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-dispatch-with-events\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-dispatch-with-events/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-dispatch-with-events\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-dispatch-with-events/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDispatch an action in response to a user event\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eUse \u003ccode\u003esrc/reducer.js\u003c/code\u003e to follow along. The file is already set up in\n\u003ccode\u003eindex.html\u003c/code\u003e, so if you run \u003ccode\u003eopen index.html\u003c/code\u003e, any code in \u003ccode\u003esrc/reducer.js\u003c/code\u003e will\nexecute.\u003c/p\u003e\n\n\u003ch2\u003eApplication Goal\u003c/h2\u003e\n\n\u003cp\u003eWe have built out most of the Redux pattern. Don't worry, we'll review it.\u003c/p\u003e\n\n\u003cp\u003eFor now, let's talk about what we want as a user experience. Here it is: you\nclick on a button, and you see a number on the page go from zero to one. Click\nagain, and you see the number go from one to two. We can see a couple of steps\ninvolved in this.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eClicking on the button should change the state.\u003c/li\u003e\n\u003cli\u003eThis change in state should be rendered.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eBrief Redux Review\u003c/h2\u003e\n\n\u003cp\u003eBy now, you've learned a lot about Redux, but the basic story about it has not\nchanged:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eAction -\u0026gt; Reducer -\u0026gt; New State\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFor example, to increase our state we call\n\u003ccode\u003edispatch({type: 'counter/increment'})\u003c/code\u003e. Our dispatch function calls our reducer\nwhich updates state, and then we render that view on the page.\u003c/p\u003e\n\n\u003cp\u003eIn the previous section, we learned that by dispatching an initial action and\nhaving a default argument in our reducer, we can set up our initial state.\u003c/p\u003e\n\n\u003ch2\u003eRebuild our Dispatch Function and our Reducer\u003c/h2\u003e\n\n\u003cp\u003eLet's code out this our counter application from scratch.\u003c/p\u003e\n\n\u003ch3\u003e1. Start by remembering our core fact about how Redux works\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eaction -\u0026gt; reducer -\u0026gt; new state\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet's translate that into code. This means if we pass an action and a previous\nstate to our reducer, the reducer should return the new state.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eCopy this into the \u003ccode\u003esrc/reducer.js\u003c/code\u003e file. Now let's get some feedback that we\ndid this correctly by opening up our \u003ccode\u003eindex.html\u003c/code\u003e file in the browser. This file\nhas a link to the \u003ccode\u003ereducer.js\u003c/code\u003e file, so your code will be accessible from the\nbrowser console.\u003c/p\u003e\n\n\u003cp\u003eIn the browser console, test the reducer function:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf you see a return value of \u003ccode\u003e{count: 1}\u003c/code\u003e then give yourself a big smile.\u003c/p\u003e\n\n\u003cp\u003eIf we type in \u003ccode\u003estate\u003c/code\u003e, we see that it's unchanged. We need to assign our state\nto be the return value of our reducer each time that we call the reducer. So how\ndo we do that? Think hard, there's no rush.\u003c/p\u003e\n\n\u003cp\u003eThinking...\u003c/p\u003e\n\n\u003cp\u003eThinking...\u003c/p\u003e\n\n\u003ch3\u003e2. Write a Dispatch Function\u003c/h3\u003e\n\n\u003cp\u003eWe can preserve the value of state by adding a \u003ccode\u003edispatch\u003c/code\u003e function to our\n\u003ccode\u003ereducer.js\u003c/code\u003e file. This \u003ccode\u003edispatch\u003c/code\u003e function should receive an argument of\n\u003ccode\u003eaction\u003c/code\u003e. It can access the state because it is declared earlier in the file in\nglobal scope.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow let's see if this reassigns \u003ccode\u003estate\u003c/code\u003e. Add this \u003ccode\u003edispatch\u003c/code\u003e function in and\nopen or refresh the \u003ccode\u003eindex.html\u003c/code\u003e file in the browser. Call\n\u003ccode\u003edispatch({type: 'counter/increment'})\u003c/code\u003e. It should return \u003ccode\u003eundefined\u003c/code\u003e, since\n\u003ccode\u003edispatch()\u003c/code\u003e doesn't return anything, but our \u003ccode\u003estate\u003c/code\u003e value should have changed!\nType in \u003ccode\u003estate\u003c/code\u003e and see if this is true. State should return \u003ccode\u003e{count: 1}\u003c/code\u003e.\nHurray!\u003c/p\u003e\n\n\u003cp\u003eNext problem. Our state says the count is 1, but do you think that is reflected\nin our HTML? Me neither. Ok, so what function is in charge of that. Give it a\nshot. I'll be waiting with the answer when you're ready.\u003c/p\u003e\n\n\u003ch3\u003e3. Write a Render Function\u003c/h3\u003e\n\n\u003cp\u003eWe need a function called render that will place this count on the page:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003econtainer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen we call \u003ccode\u003erender\u003c/code\u003e from the console, we should see HTML that reflects the\ncurrent count. Entering \u003ccode\u003edispatch({type: 'counter/increment'})\u003c/code\u003e to change state,\nthen \u003ccode\u003erender\u003c/code\u003e again should update the number displayed.\u003c/p\u003e\n\n\u003cp\u003eSince the two functions go together, the next step is to tie rendering with the\ndispatch function. Easy enough. Let's alter our dispatch method so that it looks\nlike this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEach time we dispatch an action, we have to update our HTML because the \u003ccode\u003erender\u003c/code\u003e\nfunction is also called. Now for a little refactoring. Let's have only our\ninitial state set in the reducer. We do that by setting our initial state as a\ndefault argument to our \u003ccode\u003ereducer\u003c/code\u003e reducer. Go ahead and tackle it. We'll show\nthe code below.\u003c/p\u003e\n\n\u003ch3\u003e4. Set the Initial State\u003c/h3\u003e\n\n\u003cp\u003eNow our \u003ccode\u003ereducer()\u003c/code\u003e function should look like the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// let state = {count: 0}\u003c/span\u003e\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe are commenting out/deleting the top line where we assign the state, because\ndispatching an action should take care of it (it doesn't). Call \u003ccode\u003edispatch\u003c/code\u003e with\nan action like \u003ccode\u003edispatch({type: 'counter/increment'})\u003c/code\u003e, and we would hope that\nbecause state is \u003ccode\u003eundefined\u003c/code\u003e, our default argument will be passed through. The\nproblem is that we still need to declare our state. So now our updated (working)\ncode looks like the following.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eCall \u003ccode\u003edispatch({type: 'counter/increment'})\u003c/code\u003e again, and we get no error. Instead\nwe get a beautiful piece of HTML code that says the number 1 on it. Now, if\ninstead we want to show the number zero, our default state, well we can just\nrefresh our page, and then dispatch an action that returns the default state\nlike so: \u003ccode\u003edispatch({type: '@@init'})\u003c/code\u003e. This does not increase our state, but it\ndoes return our default state and then call render.\u003c/p\u003e\n\n\u003cp\u003eThis is what we want to do each time we open our page. So let's add\n\u003ccode\u003edispatch({type: '@@INIT'})\u003c/code\u003e at the end of our javascript file. This is where we\nleft off previously. Our almost completed code should look like the following.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003econtainer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLooks good. But we're going further today. We need to make sure every time the\nuser clicks on a button, we dispatch an action. How do you think we do that.\u003c/p\u003e\n\n\u003ch3\u003e5. Integrating dispatch with a user event\u003c/h3\u003e\n\n\u003cp\u003eSo \u003ccode\u003edispatch\u003c/code\u003e is responsible for updating the state and re-rendering. And we\nwant an action to be dispatched each time a user clicks. So let's attach\n\u003ccode\u003edispatch\u003c/code\u003e execution to a click event.\u003c/p\u003e\n\n\u003cp\u003eWe'll be writing a \"vanilla\" JavaScript event listener.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebutton\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow every time we click, we dispatch an action of type increase. Dispatch first\ncalls our reducer, which updates our state. Then dispatch renders the updated\nview.\u003c/p\u003e\n\n\u003cp\u003ePutting everything together, our code should look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003econtainer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebutton\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eClick the button. Our application is done!\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWe saw that by thinking about redux from the perspective of\n\u003ccode\u003eaction -\u0026gt; reducer -\u0026gt; new state\u003c/code\u003e, we are able to get going. Then it's just a\nmatter of tackling each problem as we built out the functionality of the\napplication by following Redux patterns.\u003c/p\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g95a8f7d429b1405260be20a6b1e292a8","title":"Controller Exception Handling","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-controller-exception-handling\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-controller-exception-handling/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-controller-exception-handling\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-controller-exception-handling/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse exception handling techniques like \u003ccode\u003erescue\u003c/code\u003e and \u003ccode\u003erescue_from\u003c/code\u003e in a Rails\ncontroller\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll finish work on our Bird API by refactoring the controller\nto add in some helpful reusable error handling code. To get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will download all the dependencies for our app, set up the database, and\nrun the Rails server.\u003c/p\u003e\n\n\u003ch2\u003eVideo Walkthrough\u003c/h2\u003e\n\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/evlSdyGoE3s?rel=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eDRYing Up Controller Code\u003c/h2\u003e\n\n\u003cp\u003eIn the current implementation of our \u003ccode\u003eBirdsController\u003c/code\u003e, we've defined actions to\nhandle all five RESTful routes plus one additional custom route. You'll notice\nthere is some common behavior between a lot of the methods. For all the routes\nthat include a route parameter (\u003ccode\u003e/birds/:id\u003c/code\u003e), we're using the ID in the params\nhash to look up a bird; if the bird is found, we're performing some action with\nit, and if not, we're sending an error message back.\u003c/p\u003e\n\n\u003cp\u003eFor example, have a look at the \u003ccode\u003eshow\u003c/code\u003e and \u003ccode\u003eupdate\u003c/code\u003e actions:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# GET /birds/:id\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bird not found\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# PATCH /birds/:id\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bird not found\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBetween these two methods, there's a good amount of repeated code:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eFinding a bird based on the ID\u003c/li\u003e\n\u003cli\u003ePerforming control flow (if/else) based on whether or not the bird exists\u003c/li\u003e\n\u003cli\u003eReturning an error message with a status of \u003ccode\u003e:not_found\u003c/code\u003e if the bird doesn't\nexist\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThat same code also exists in the \u003ccode\u003eincrement_likes\u003c/code\u003e and \u003ccode\u003edestroy\u003c/code\u003e actions. That\nmakes this a good opportunity for a refactor to DRY up some of this repeated\nlogic!\u003c/p\u003e\n\n\u003cp\u003eLet's start by making a private method for generating the \u003ccode\u003e:not_found\u003c/code\u003e response:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003erender_not_found_response\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bird not found\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can then update our actions to use this method instead of implementing the\nrendering logic directly:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# GET /birds/:id\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender_not_found_response\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# PATCH /birds/:id\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender_not_found_response\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can also make a helper method to find a bird based on the ID in the params\nhash:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efind_bird\u003c/span\u003e\n  \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, our controller actions don't need to worry about how the \u003ccode\u003efind_bird\u003c/code\u003e method\nis implemented, as long as it returns a bird from the database. This frees us up\nto change how the bird finding logic is implemented in the future (for example,\nusing something other than the ID to look up a bird in the database, like a URL\nslug or \u003ca href=\"https://en.wikipedia.org/wiki/Universally_unique_identifier\"\u003eUUID\u003c/a\u003e).\u003c/p\u003e\n\n\u003cp\u003eHere's how our controller actions can use this method:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# GET /birds/:id\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_bird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender_not_found_response\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# PATCH /birds/:id\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_bird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender_not_found_response\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eHandling Exceptions\u003c/h2\u003e\n\n\u003cp\u003eWe can also shorten up the code in each of our controller methods by using a\ndifferent approach to finding a bird using the ID. This will also help us\nimprove our error handling. Currently, we're using the \u003ca href=\"https://api.rubyonrails.org/v6.1.3.2/classes/ActiveRecord/FinderMethods.html#method-i-find_by\"\u003e\u003ccode\u003efind_by\u003c/code\u003e\u003c/a\u003e\nmethod to look up a bird. \u003ccode\u003efind_by\u003c/code\u003e returns \u003ccode\u003enil\u003c/code\u003e if the record isn't found in\nthe database, which makes it useful for \u003ccode\u003eif/else\u003c/code\u003e control flow, since \u003ccode\u003enil\u003c/code\u003e is a\nfalse-y value in Ruby.\u003c/p\u003e\n\n\u003cp\u003eIf we use the \u003ca href=\"https://api.rubyonrails.org/v6.1.3.2/classes/ActiveRecord/FinderMethods.html#method-i-find\"\u003e\u003ccode\u003efind\u003c/code\u003e\u003c/a\u003e method instead, we'll get an\n\u003ccode\u003eActiveRecord::RecordNotFound\u003c/code\u003e exception instead of \u003ccode\u003enil\u003c/code\u003e when the record\ndoesn't exist. Try updating the \u003ccode\u003efind_bird\u003c/code\u003e action like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efind_bird\u003c/span\u003e\n  \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen make a request for an ID that doesn't exist in the database, like\n\u003ccode\u003elocalhost:3000/birds/9999\u003c/code\u003e. You should see an error message like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eActiveRecord::RecordNotFound (Couldn't find Bird with 'id'=9999)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can handle this error in our controller method by using a\n\u003ca href=\"https://ruby-doc.org/core-2.7.3/doc/syntax/exceptions_rdoc.html\"\u003e\u003ccode\u003erescue\u003c/code\u003e block in our method\u003c/a\u003e, like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_bird\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordNotFound\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender_not_found_response\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNot only is this code shorter than the previous implementation, it also gives a\nclearer separation between the \"happy path\" of our code (no exceptions/errors)\nand the logic for handling exceptions/errors. Try making the same request in the\nbrowser to \u003ccode\u003elocalhost:3000/birds/9999\u003c/code\u003e — now that we're handling the exception\nin the controller, you should see a 404 status code in the console with the \u003ccode\u003e{ \"error\": \"Bird not found\" }\u003c/code\u003e JSON response instead of a 500 server error.\u003c/p\u003e\n\n\u003cp\u003eWe use the same approach to our \u003ccode\u003eupdate\u003c/code\u003e action as well:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_bird\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordNotFound\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender_not_found_response\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe tradeoff to this approach of using exception handling rather than an if/else\ncontrol flow is that it may be less apparent to other developers looking at our\ncode at first what code in the \u003ccode\u003eupdate\u003c/code\u003e block would cause that exception to be\nthrown.\u003c/p\u003e\n\n\u003cp\u003eWe can take this one step further, and use the \u003ca href=\"https://api.rubyonrails.org/classes/ActiveSupport/Rescuable/ClassMethods.html#method-i-rescue_from\"\u003e\u003ccode\u003erescue_from\u003c/code\u003e method\u003c/a\u003e\nto handle the \u003ccode\u003eActiveRecord::RecordNotFound\u003c/code\u003e exception from \u003cstrong\u003eall\u003c/strong\u003e of our controller\nactions:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBirdsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erescue_from\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordNotFound\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ewith: :render_not_found_response\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# rest of controller...\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBy using the \u003ccode\u003erescue_from\u003c/code\u003e method this way, if \u003cem\u003eany\u003c/em\u003e of our controller actions\nthrow an \u003ccode\u003eActiveRecord::RecordNotFound\u003c/code\u003e exception, our\n\u003ccode\u003erender_not_found_response\u003c/code\u003e method will return the appropriate JSON response.\u003c/p\u003e\n\n\u003cp\u003eHere's the fully refactored version of the controller:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBirdsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erescue_from\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordNotFound\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ewith: :render_not_found_response\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# GET /birds\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebirds\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebirds\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# POST /birds\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# GET /birds/:id\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_bird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# PATCH /birds/:id\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_bird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# PATCH /birds/:id/like\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eincrement_likes\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_bird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003elikes: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elikes\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# DELETE /birds/:id\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edestroy\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_bird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edestroy\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ehead\u003c/span\u003e \u003cspan class=\"ss\"\u003e:no_content\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efind_bird\u003c/span\u003e\n    \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ebird_params\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epermit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:species\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:likes\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003erender_not_found_response\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bird not found\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eUsing exception handling techniques like \u003ccode\u003erescue\u003c/code\u003e and \u003ccode\u003erescue_from\u003c/code\u003e opens up a\nlot of possibilities in terms of how you structure your code. For our controller\nactions in particular, it allows us to isolate the \"happy path\" of our code\n(performing CRUD actions and rendering a response to the users) from the\nexception handling logic. It also lets us handle exceptions in a consistent way,\nso that users of our API get the same response for common errors, like not being\nable to find a particular resource.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat is the difference in behavior between the \u003ccode\u003efind\u003c/code\u003e and \u003ccode\u003efind_by\u003c/code\u003e methods?\nWhy is that difference important for how we handle not-found errors?\u003c/li\u003e\n\u003cli\u003eLooking at the final version of the controller code, what sequence of events\nwould happen if we tried to submit a \u003ccode\u003ePATCH\u003c/code\u003e request for a bird that doesn't\nexist?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://api.rubyonrails.org/classes/ActiveSupport/Rescuable/ClassMethods.html#method-i-rescue_from\"\u003e\u003ccode\u003erescue_from\u003c/code\u003e method\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g7ffdd7ca860a2fc1deba273bf5f9efd3","title":"Controller Validations","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-controller-validations-readme\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-controller-validations-readme/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-controller-validations-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-controller-validations-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCheck the validity of a model in a controller\u003c/li\u003e\n\u003cli\u003eRender a response with the error messages\u003c/li\u003e\n\u003cli\u003eUse HTTP status codes to provide additional context\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that we've seen how Active Record can be used to validate our data, let's\nsee how we can use that in our controllers to give our user access to the\nvalidation errors, so they can fix their typos or other problems with their\nrequest.\u003c/p\u003e\n\n\u003cp\u003eTo get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eManually Checking Validation\u003c/h2\u003e\n\n\u003cp\u003eUp until this point, our \u003ccode\u003ecreate\u003c/code\u003e action has looked something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/birds_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet's add some validation to our \u003ccode\u003eBird\u003c/code\u003e model, so that we don't end up with bad\ndata:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/models/bird.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBird\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003epresence: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003euniqueness: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, if we try to create a bird using Postman with bad data, we've got a\nproblem!\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"species\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Archilochus colubris\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOur server still returns a \u003ccode\u003eBird\u003c/code\u003e object, but we can clearly see that it wasn't\nsaved successfully:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"species\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Archilochus colubris\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"created_at\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"updated_at\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"likes\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFrom this process, we can tell:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eOur model validation prevented this bad data from being saved in the database\n(yay!)\u003c/li\u003e\n\u003cli\u003eThe response doesn't tell us anything about why the data wasn't saved (boo.)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eTo provide this additional context, we need to update our controller action to\nchange the response based on whether or not the bird was saved successfully.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerrors: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, we get a different response after sending that same request in Postman:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"can't be blank\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFrom the controller, \u003ccode\u003ebird.errors\u003c/code\u003e will give a serializable object with all the\nerror messages from our Active Record validations.\u003c/p\u003e\n\n\u003cp\u003eWe also included the status code of \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/422\"\u003e422 Unprocessable Entity\u003c/a\u003e, indicating\nthis was a bad request.\u003c/p\u003e\n\n\u003cp\u003eWe can clean up this controller action by handling the\n\u003ccode\u003eActiveRecord::RecordInvalid\u003c/code\u003e exception class along with \u003ccode\u003ecreate!\u003c/code\u003e or \u003ccode\u003eupdate!\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordInvalid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003einvalid\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerrors: \u003c/span\u003e\u003cspan class=\"n\"\u003einvalid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erecord\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn the \u003ccode\u003erescue\u003c/code\u003e block, the \u003ccode\u003einvalid\u003c/code\u003e variable is an instance of the exception\nitself. From that \u003ccode\u003einvalid\u003c/code\u003e variable, we can access the actual Active Record\ninstance with the \u003ccode\u003erecord\u003c/code\u003e method, where we can retrieve its errors.\u003c/p\u003e\n\n\u003cp\u003eWe can take a similar approach to validation in our \u003ccode\u003eupdate\u003c/code\u003e method, since\nvalidations will also run when a model is updated:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_bird\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordInvalid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003einvalid\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerrors: \u003c/span\u003e\u003cspan class=\"n\"\u003einvalid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erecord\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe could also handle \u003cstrong\u003eall\u003c/strong\u003e \u003ccode\u003eActiveRecord::RecordInvalid\u003c/code\u003e exceptions in the\ncontroller with the \u003ccode\u003erescue_from\u003c/code\u003e method. We'll add it along with the\n\u003ccode\u003erescue_from\u003c/code\u003e that we already implemented for \u003ccode\u003eActiveRecord::RecordNotFound\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBirdsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erescue_from\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordNotFound\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ewith: :render_not_found_response\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# added rescue_from\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erescue_from\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordInvalid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ewith: :render_unprocessable_entity_response\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# rest of controller actions...\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003erender_unprocessable_entity_response\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einvalid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerrors: \u003c/span\u003e\u003cspan class=\"n\"\u003einvalid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erecord\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# rest of private methods...\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, our \u003ccode\u003ecreate\u003c/code\u003e and \u003ccode\u003eupdate\u003c/code\u003e actions can focus on the happy path:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# create! exceptions will be handled by the rescue_from ActiveRecord::RecordInvalid code\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_bird\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# update! exceptions will be handled by the rescue_from ActiveRecord::RecordInvalid code\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eFormatting the Error Response\u003c/h2\u003e\n\n\u003cp\u003eWhen we're sending back error messages, we should take care to format the error\nmessages in a way that can be easily displayed by our frontend. Take another\nlook at the current implementation:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerrors: \u003c/span\u003e\u003cspan class=\"n\"\u003einvalid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erecord\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will return a JSON object in the body of the response with a key of \u003ccode\u003eerrors\u003c/code\u003e\npointing to a nested object where the \u003cstrong\u003ekeys\u003c/strong\u003e are the invalid attributes, and\n\u003cstrong\u003evalues\u003c/strong\u003e are the validation error messages, like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"can't be blank\"\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"species\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"must be unique\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe could also return a different format by using the \u003ccode\u003e#full_messages\u003c/code\u003e method\nto output an array of pre-formatted error messages:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerrors: \u003c/span\u003e\u003cspan class=\"n\"\u003einvalid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erecord\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efull_messages\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThat would produce a slightly different output:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Name can't be blank\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Species must be unique\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNotice in either case, the key on our JSON object is \u003ccode\u003eerrors\u003c/code\u003e since we are\nreturning a collection of error messages (either an object or an array).\u003c/p\u003e\n\n\u003cp\u003eWhich format you choose will depend largely on how you plan on using this data\non the frontend. It's good to know you have options!\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWith model validations in place, we can help protect our database against bad\ndata. Active Record validations also help provide \u003cstrong\u003eerror messages\u003c/strong\u003e to indicate\nwhy a certain value wasn't considered valid data. We can access the model's\nvalidity and error messages in the controller. By sending this data in the\nresponse, we'll be able to provide additional context to our clients about what\nwent wrong with their request so they can fix it.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eIf we have Active Record validations in place, what is the difference in how\nvalidation errors will be handled if we use \u003ccode\u003ecreate\u003c/code\u003e vs. \u003ccode\u003ecreate!\u003c/code\u003e?\u003c/li\u003e\n\u003cli\u003eIn the following line of code, what is the \u003ccode\u003einvalid\u003c/code\u003e variable and how can we\nuse it: \u003ccode\u003erescue ActiveRecord::RecordInvalid =\u0026gt; invalid\u003c/code\u003e?\u003c/li\u003e\n\u003c/ol\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g63a66f5e1c1dde8d71f6d1e673b4f20c","title":"Controller Validations Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-controller-validations-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-controller-validations-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-controller-validations-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-controller-validations-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCheck the validity of a model in a controller\u003c/li\u003e\n\u003cli\u003eRender a response with the error messages\u003c/li\u003e\n\u003cli\u003eUse HTTP status codes to provide additional context\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eTime to apply these new tools!\u003c/p\u003e\n\n\u003cp\u003eThe goal of this lab is to allow users of this blog-style application to create\nand edit authors and posts without worrying about typos or other mistakes\nleading to error-prone form submissions.\u003c/p\u003e\n\n\u003cp\u003eFor example, if someone creates a blog post with less than 100 characters of\ncontent, it's likely that they accidentally pasted the wrong text, or\nmisunderstood which information goes into which field. We can improve the user's\nexperience and the stability of our codebase by notifying users about these\nkinds of mistakes \u003cem\u003ebefore\u003c/em\u003e bad data gets into the database.\u003c/p\u003e\n\n\u003cp\u003eTo get started, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is a barebones app with two models, \u003ccode\u003eAuthor\u003c/code\u003e and \u003ccode\u003ePost\u003c/code\u003e. Right now, you\ncan...\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eGET /authors/1\u003c/code\u003e: \u003cstrong\u003eView an author\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ePOST /authors\u003c/code\u003e: \u003cstrong\u003eCreate an author\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eGET /posts/1\u003c/code\u003e: \u003cstrong\u003eView a post\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ePATCH /posts/1\u003c/code\u003e: \u003cstrong\u003eUpdate a post\u003c/strong\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eDeliverables\u003c/h2\u003e\n\n\u003ch3\u003eAuthor Validations\u003c/h3\u003e\n\n\u003cp\u003eAdd validations to \u003ccode\u003eAuthor\u003c/code\u003e such that...\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eThe name cannot be blank\u003c/li\u003e\n\u003cli\u003eThe e-mail is unique\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003ePost Validations\u003c/h3\u003e\n\n\u003cp\u003eAdd validations to \u003ccode\u003ePost\u003c/code\u003e such that...\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eThe title cannot be blank\u003c/li\u003e\n\u003cli\u003eThe category is either \u003ccode\u003e\"Fiction\"\u003c/code\u003e or \u003ccode\u003e\"Non-Fiction\"\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eThe content is at least 100 characters long\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003eController Actions\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003eChange \u003ccode\u003eAuthorsController#create\u003c/code\u003e to send back the error messages if the new\nauthor is invalid\u003c/li\u003e\n\u003cli\u003eChange \u003ccode\u003ePostsController#update\u003c/code\u003e to send back the error messages if the\nupdated post is invalid\u003c/li\u003e\n\u003c/ol\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g5eda3417cea6d37eeb7c65becf681b5b","title":"Cookies and Sessions Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-cookies-and-sessions-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-cookies-and-sessions-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-cookies-and-sessions-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-cookies-and-sessions-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the session hash to persist data across multiple requests\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, you'll be building out a blog paywall feature by using the session\nhash to keep track of how many page views a user has made.\u003c/p\u003e\n\n\u003cp\u003eThere is some starter code in place for a Rails API backend and a React\nfrontend. To get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can work on this lab by running the tests with \u003ccode\u003elearn test\u003c/code\u003e. It will also be\nhelpful to see what's happening during the request/response cycle by running the\napp in the browser. You can run the Rails server with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd you can run React in another terminal with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou don't have to make any changes to the React code to get this lab working.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eOur app will keep track of how many blog posts a user has viewed by using the\n\u003ccode\u003esession\u003c/code\u003e hash. Each user can view a \u003cstrong\u003emaximum of three articles\u003c/strong\u003e before seeing\nthe paywall.\u003c/p\u003e\n\n\u003cp\u003eWhen a user makes a \u003ccode\u003eGET\u003c/code\u003e request to \u003ccode\u003e/articles/:id\u003c/code\u003e, the following should\nhappen:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIf this is the first request this user has made, set \u003ccode\u003esession[:page_views]\u003c/code\u003e to\nan initial value of 0.\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eHint\u003c/strong\u003e: consider using \u003ccode\u003e||=\u003c/code\u003e to set this initial value!\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eFor every request to \u003ccode\u003e/articles/:id\u003c/code\u003e, increment the value of\n\u003ccode\u003esession[:page_views]\u003c/code\u003e by 1.\u003c/li\u003e\n\u003cli\u003eIf the user has viewed 3 or fewer pages, render a JSON response with the\narticle data.\u003c/li\u003e\n\u003cli\u003eIf the user has viewed more than 3 pages, render a JSON response including an\nerror message, and a status code of 401 unauthorized.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/v4.1.4/action_controller_overview.html#accessing-the-session\"\u003eRails - Accessing the Session\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gc6aa273a72046118b38b7cd7b7a284ca","title":"Cookies in APIs","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-cookies-in-rails-api\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-cookies-in-rails-api/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-cookies-in-rails-api\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-cookies-in-rails-api/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eConfigure a Rails API to use cookies\u003c/li\u003e\n\u003cli\u003eUse the developer tools to inspect cookies\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eConfiguring Cookies in Rails APIs\u003c/h2\u003e\n\n\u003cp\u003eSince cookies are such an important part of most web applications, Rails has\nexcellent support for cookies and sessions baked in. Unfortunately for us, when\nyou create a new application in API mode with \u003ccode\u003erails new appname --api\u003c/code\u003e, the\ncode needed for working with sessions and cookies in the controller is\nexcluded by default.\u003c/p\u003e\n\n\u003cp\u003eTo add session and cookie support back in, we need to update our application's\nconfiguration in the \u003ccode\u003econfig/application.rb\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/application.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003emodule\u003c/span\u003e \u003cspan class=\"nn\"\u003eMyApp\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eApplication\u003c/span\u003e\n    \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eload_defaults\u003c/span\u003e \u003cspan class=\"mf\"\u003e6.1\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# This is set in apps generated with the --api flag, and removes session/cookie middleware\u003c/span\u003e\n    \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapi_only\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e# Must add these lines!\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# Adding back cookies and session middleware\u003c/span\u003e\n    \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003euse\u003c/span\u003e \u003cspan class=\"no\"\u003eActionDispatch\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eCookies\u003c/span\u003e\n    \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003euse\u003c/span\u003e \u003cspan class=\"no\"\u003eActionDispatch\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSession\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eCookieStore\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e# Use SameSite=Strict for all cookies to help protect against CSRF\u003c/span\u003e\n    \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eaction_dispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecookies_same_site_protection\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"ss\"\u003e:strict\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will add in the necessary \u003ca href=\"https://guides.rubyonrails.org/rails_on_rack.html#action-dispatcher-middleware-stack\"\u003emiddleware\u003c/a\u003e for working with sessions and cookies\nin our application.\u003c/p\u003e\n\n\u003cp\u003eThe last line adds some additional security to our cookies by also\nconfiguring the \u003ccode\u003eSameSite\u003c/code\u003e policy for our cookies as \u003ccode\u003estrict\u003c/code\u003e, which means\nthat the browser will only send these cookies in requests to websites that are\non the same domain. This is a relatively new feature, but an important one for\nsecurity! You can read more about \u003ca href=\"https://web.dev/samesite-cookies-explained/\"\u003e\u003ccode\u003eSameSite\u003c/code\u003e cookies here\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eTo access the \u003ccode\u003ecookies\u003c/code\u003e hash in our controllers, we also need to include the\n\u003ccode\u003eActionController::Cookies\u003c/code\u003e module in our \u003ccode\u003eApplicationController\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/application_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplicationController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActionController\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eAPI\u003c/span\u003e\n  \u003cspan class=\"kp\"\u003einclude\u003c/span\u003e \u003cspan class=\"no\"\u003eActionController\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eCookies\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSince all of our controllers inherit from \u003ccode\u003eApplicationController\u003c/code\u003e, adding this\nmodule here means all of our controllers will be able to work with cookies.\u003c/p\u003e\n\n\u003ch2\u003eWorking With Sessions and Cookies\u003c/h2\u003e\n\n\u003cp\u003eWe've included some starter code for a Rails API application with this lesson so\nyou can see a basic example of working with sessions and cookies. The\nconfiguration is already done, so we can work on inspecting sessions and cookies\nin the controller and see how we can interact with them in our code.\u003c/p\u003e\n\n\u003cp\u003eTo set up and run the Rails application, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, in the browser, make a request to \u003ccode\u003ehttp://localhost:3000/sessions\u003c/code\u003e. This\nwill run the code in our \u003ccode\u003eSessionsController#index\u003c/code\u003e method:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n  \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:session_hello\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e||=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"World\"\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ecookies\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:cookies_hello\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e||=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"World\"\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003esession: \u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ecookies: \u003c/span\u003e\u003cspan class=\"n\"\u003ecookies\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eto_hash\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn this method, we're setting values on the \u003ccode\u003esession\u003c/code\u003e hash and the \u003ccode\u003ecookies\u003c/code\u003e\nhash, and serializing them in the response so we can view their values in the\nbrowser.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIf you haven't encountered \u003ca href=\"http://www.rubyinside.com/what-rubys-double-pipe-or-equals-really-does-5488.html\"\u003e\u003ccode\u003e||=\u003c/code\u003e\u003c/a\u003e syntax in Ruby, it's a\nshorthand way to assign a value if the current value is \u003ccode\u003enil\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e. So\nif \u003ccode\u003esession[:session_hello]\u003c/code\u003e has not already been assigned a value, it will be\nassigned a value of \"World\". Otherwise, it won't get assigned a new value.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe first time a user makes a request to this controller, Rails will include the\n\u003ccode\u003eSet-Cookie\u003c/code\u003e \u003cstrong\u003eresponse header\u003c/strong\u003e with our sessions and cookies values, which\nwill instruct the browser to store these values in memory and send them with any\nfuture requests on this domain.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/cookies-in-rails-api/set-cookie-headers.png\" alt=\"set-cookie headers\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAfter making the request, you should see something like this in the browser:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"session\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"session_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"2ed452b4e28ca49ce32749fc67571ced\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"session_hello\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"World\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"cookies\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"cookies_hello\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"World\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"_session_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"AT26hlXMDW5EroI89/piWHiTDRF4SQvtuvoeNZYBYNaApyLvl8a1MvhnTsLfTK57QeJCMM6YkyFqaSWguqVMWljwl+ZmELmT/wHXfFJiGL0kvadecPhyXup+p7kO66HAFVBSTOKefbkhDtQz8Ex5pHW+UBAhFfoDnDZ9/4QgST3LPyGHKf4Pgix+JwOFU9MqeFQqXZTITRW7DFi+aGDdrb1hUeIGZLuezO2QN3+TEu2xHMc=--HJwJL83oJZqcaIL1--snxu+v1esfT9YLOXUGxLYw==\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFrom this, we can see that the session and cookies hashes can both be used to\nstore key-value pairs of data. The entire session hash is actually stored in\nthat \u003ccode\u003e_session_id\u003c/code\u003e cookie, in a signed and encrypted format, which makes it\nimpossible for users to tamper with.\u003c/p\u003e\n\n\u003cp\u003eYou can view cookie information directly in the browser as well. In the\ndeveloper tools, find the \u003cstrong\u003eApplication\u003c/strong\u003e tab, and go to the \u003cstrong\u003eCookies\u003c/strong\u003e section\n(under \"Storage\" in the pane on the left). There, you'll find all the cookies\nfor our domain (\u003ccode\u003ehttp://localhost:3000\u003c/code\u003e):\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/cookies-in-rails-api/cookies-devtools.png\" alt=\"cookies in dev tools\"\u003e\u003c/p\u003e\n\n\u003cp\u003eCookies can be edited directly in the dev tools. Try changing the value of the\n\u003ccode\u003ecookies_hello\u003c/code\u003e key to something new. Then refresh the page in the browser to\nmake another request. If you try to edit the \u003ccode\u003e_session_id\u003c/code\u003e cookie, on the other\nhand, it will have no effect thanks to Rails security features like signing and\nencryption.\u003c/p\u003e\n\n\u003cp\u003eFinally, you can also view cookies by looking at the \u003cstrong\u003erequest headers\u003c/strong\u003e (under\nthe Network tab, click \"sessions\" then \"Headers\"):\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/cookies-in-rails-api/cookies-headers.png\" alt=\"cookies in headers\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eExplore\u003c/h2\u003e\n\n\u003cp\u003eTry adding a \u003ccode\u003ebyebug\u003c/code\u003e at the top of the \u003ccode\u003eSessionsController#index\u003c/code\u003e method:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebyebug\u003c/span\u003e\n  \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:session_hello\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e||=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"World\"\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ecookies\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:cookies_hello\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e||=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"World\"\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003esession: \u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ecookies: \u003c/span\u003e\u003cspan class=\"n\"\u003ecookies\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eto_hash\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eExperiment in the browser by changing the cookie values and making more requests\nto the server. Use the \u003ccode\u003ebyebug\u003c/code\u003e to see how changing these values in the browser\naffects what is available in the session and cookies hashes.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eRails has a lot of great functionality built in to work with cookies and sessions.\nWhen working with Rails in API mode, we need to add some additional configuration\nto get them working again.\u003c/p\u003e\n\n\u003cp\u003eCookies are an integral part of modern web applications; they help keep track of\n\u003cstrong\u003estateful\u003c/strong\u003e information in an inherently \u003cstrong\u003estateless\u003c/strong\u003e protocol by\nautomatically passing additional data with each request using the headers. We\ncan get a better sense of how cookies are being used by websites using the\nbrowser dev tools.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat configuration changes need to be made to enable session and cookie\nsupport in a Rails API application?\u003c/li\u003e\n\u003cli\u003eWhat are the two ways you can inspect a website's cookies using the browser\ndev tools?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/rails_on_rack.html#action-dispatcher-middleware-stack\"\u003eRails Middleware Stack\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/security.html#sessions\"\u003eRails Session Security\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://api.rubyonrails.org/classes/ActionDispatch/Session/CookieStore.html\"\u003eRails Session Cookie Configuration\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.dev/samesite-cookies-explained/\"\u003eSameSite Cookies Explained\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/docs/devtools/storage/cookies/\"\u003eChrome DevTools: Working With Cookies\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gd0e6927931843a2e5319e399e688c543","title":"Create a Queue from Two Stacks Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-queue-from-stack\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-queue-from-stack/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-queue-from-stack\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-queue-from-stack/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eImplement a \u003ccode\u003eMyQueue\u003c/code\u003e class using two \u003ccode\u003eStack\u003c/code\u003es\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eRecall in an earlier lesson we talked about the difference between a \u003ccode\u003eStack\u003c/code\u003e and\na \u003ccode\u003eQueue\u003c/code\u003e. Basically, they are very similar, except that \u003ccode\u003eStack\u003c/code\u003es process\nrecords in \u003cstrong\u003e\"First In, Last Out\"\u003c/strong\u003e (FILO) order, while \u003ccode\u003eQueue\u003c/code\u003es process records\nin \u003cstrong\u003e\"First In, First Out\"\u003c/strong\u003e (FIFO) order. We used as a real-world example of a\n\u003ccode\u003eQueue\u003c/code\u003e a line of airline passengers waiting to pass through the security\ncheckpoint: the passenger who joined the line first will be the first to pass\nthrough security (most of the time, anyway).\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-queue-from-stack/stack-vs-queue.png\" alt=\"stack-vs-queue\"\u003e\u003c/p\u003e\n\n\u003cp\u003eBecause the behavior of a \u003ccode\u003eQueue\u003c/code\u003e is a bit different from that of a \u003ccode\u003eStack\u003c/code\u003e, the\nmethod names that are used (by convention) are a bit different as well. Rather\nthan including \u003ccode\u003e#push\u003c/code\u003e and \u003ccode\u003e#pop\u003c/code\u003e methods, a \u003ccode\u003eQueue\u003c/code\u003e implementation generally\nhas an \u003ccode\u003e#add\u003c/code\u003e method, which adds an element to the end of the \u003ccode\u003eQueue\u003c/code\u003e, and a\n\u003ccode\u003e#remove\u003c/code\u003e method, which removes the first element in the \u003ccode\u003eQueue\u003c/code\u003e. (You might\nalso see these methods called \u003ccode\u003e#enqueue\u003c/code\u003e and \u003ccode\u003e#dequeue\u003c/code\u003e.) Finally, like a\n\u003ccode\u003eStack\u003c/code\u003e, a \u003ccode\u003eQueue\u003c/code\u003e usually includes a \u003ccode\u003e#peek\u003c/code\u003e method, but, in this case, \u003ccode\u003e#peek\u003c/code\u003e\nreturns the element that went into the \u003ccode\u003eQueue\u003c/code\u003e \u003cstrong\u003efirst\u003c/strong\u003e rather than the one\nthat went in most recently.\u003c/p\u003e\n\n\u003cp\u003eIn this lab, you will implement a \u003ccode\u003eMyQueue\u003c/code\u003e class, but you will be doing it a\nbit differently than you did for the \u003ccode\u003eStack\u003c/code\u003e class. Specifically, you will use\n\u003ccode\u003eStack\u003c/code\u003e as the underlying data structure rather than an array. We have included\nthe code in \u003ccode\u003elib/stack.rb\u003c/code\u003e. We have also required that file in\n\u003ccode\u003elib/queue_from_stack.rb\u003c/code\u003e, where you will be coding your solution.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eStart by creating the \u003ccode\u003eMyQueue\u003c/code\u003e class, and set it up to initialize \u003cstrong\u003e\u003cem\u003etwo\u003c/em\u003e\u003c/strong\u003e\nnew, empty instances of the \u003ccode\u003eStack\u003c/code\u003e class; in order for the tests to pass, you\nwill need to name these \u003ccode\u003e@s1\u003c/code\u003e and \u003ccode\u003e@s2\u003c/code\u003e. You should \u003cstrong\u003enot\u003c/strong\u003e initialize an empty\narray for your \u003ccode\u003eMyQueue\u003c/code\u003e instance.\u003c/p\u003e\n\n\u003cp\u003eOnce you have the first test passing, build out the following methods:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eMyQueue#add(value)\u003c/code\u003e: adds an element to the end of the \u003ccode\u003eQueue\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eMyQueue#remove\u003c/code\u003e: removes and returns the first element in the \u003ccode\u003eQueue\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eMyQueue#peek\u003c/code\u003e: returns the first element in the \u003ccode\u003eQueue\u003c/code\u003e without removing it\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eNote: in solving this challenge, you can only use the four methods included in\nthe \u003ccode\u003eStack\u003c/code\u003e implementation — \u003ccode\u003e#push\u003c/code\u003e, \u003ccode\u003e#pop\u003c/code\u003e, \u003ccode\u003e#peek\u003c/code\u003e, and \u003ccode\u003e#empty?\u003c/code\u003e — and the\n\u003cstrong\u003etwo\u003c/strong\u003e instances of \u003ccode\u003eStack\u003c/code\u003e that are created when the \u003ccode\u003eMyQueue\u003c/code\u003e instance is\ninitialized.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eHint:\u003c/strong\u003e If you're having a little trouble figuring out how to approach this\nproblem, give some thought to what will happen if you \u003ccode\u003epop\u003c/code\u003e each element off of\none \u003ccode\u003eStack\u003c/code\u003e instance and \u003ccode\u003epush\u003c/code\u003e it onto another. You should be able to use this\ninformation to set up your \u003ccode\u003eadd\u003c/code\u003e method such that the order of the elements is\ncorrect for using \u003ccode\u003e#push\u003c/code\u003e and \u003ccode\u003e#pop\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eAs you can probably imagine, implementing a \u003ccode\u003eQueue\u003c/code\u003e using a \u003ccode\u003eStack\u003c/code\u003e as the\nunderlying data structure is not the the most efficient way to go. Hopefully,\nhowever, building out this class gave you a good feel for the difference in how\nthese two data structures process records.\u003c/p\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g1490c4c5f80eed373ab46decf1f1d069","title":"Creating a Rails API from Scratch","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-creating-a-rails-api\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-creating-a-rails-api\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-creating-a-rails-api/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the \u003ccode\u003e--api\u003c/code\u003e flag to create an API-only Rails app\u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003eresource\u003c/code\u003e generator\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe've spent a lot of time now focusing on the backend, and now's a great\nopportunity to see what we can actually do with all the power of a Rails API to\nsupport a frontend application as well.\u003c/p\u003e\n\n\u003cp\u003eThroughout this section, we'll be building a DVD shop. We'll have a Rails API to\nsupport a React frontend application, and we'll be focusing on how that\nclient-server communication process works, as well as some challenges involved\nin communicating between two separate applications.\u003c/p\u003e\n\n\u003cp\u003eIn this lesson, we'll start by building the Rails backend from scratch and talk\nthrough some of the typical configuration when creating a new Rails API.\u003c/p\u003e\n\n\u003ch2\u003eGenerating a Rails API\u003c/h2\u003e\n\n\u003cp\u003eJust like we saw at the beginning of the phase, we can use \u003ccode\u003erails new\u003c/code\u003e to\ngenerate a new Rails application. We'll run that same command with a few\nadditional options to optimize our Rails app. Let's generate the backend code\nfor our \u003ccode\u003edvd-shop\u003c/code\u003e. Use \u003ccode\u003ecd ..\u003c/code\u003e to navigate out of the lab directory, and run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails new dvd-shop \u003cspan class=\"nt\"\u003e--api\u003c/span\u003e \u003cspan class=\"nt\"\u003e--minimal\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003e--api\u003c/code\u003e: this flag will create our new application with some additional\nAPI-specific configuration, and will skip the code for generating \u003ccode\u003e.erb\u003c/code\u003e files\nwith ActionView.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e--minimal\u003c/code\u003e: this flag skips a lot of additional Rails features that we\nwon't use in our API, such as code for sending emails and processing images.\nRead more about the \u003ca href=\"https://bigbinary.com/blog/rails-6-1-adds-minimal-option-support\"\u003e\u003ccode\u003e--minimal\u003c/code\u003e flag\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe reason we ask you to \u003ccode\u003ecd\u003c/code\u003e out of the lab directory is because when you\ngenerate a new Rails project, it will automatically create a new Git\nrepository for your Rails project. Since the lab directory is already a Git\nrepository, it's better to create this new project in its own directory, so\nyou don't end up with nested Git repositories.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eWith that code in place, let's generate the code for handling our first request\nfrom the client.\u003c/p\u003e\n\n\u003ch2\u003eUsing the Resource Generator\u003c/h2\u003e\n\n\u003cp\u003eOne of the main features of our frontend application will be to display a list\nof movies. For that feature, we'll want our API to handle a \u003ccode\u003eGET\u003c/code\u003e request to\n\u003ccode\u003e/movies\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eTo get that request working, we'll need to create a \u003cstrong\u003eroute\u003c/strong\u003e and \u003cstrong\u003econtroller\u003c/strong\u003e\naction on our Rails server. We'll also need a \u003cstrong\u003emodel\u003c/strong\u003e to interact with the\ndatabase, and a \u003cstrong\u003emigration\u003c/strong\u003e to generate the corresponding database table for\nthis model.\u003c/p\u003e\n\n\u003cp\u003eFor our \u003ccode\u003eMovie\u003c/code\u003e model, we'll want a table with the following attributes:\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eColumn Name\u003c/th\u003e\n\u003cth\u003eData Type\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003etitle\u003c/td\u003e\n\u003ctd\u003estring\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eyear\u003c/td\u003e\n\u003ctd\u003einteger\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003elength\u003c/td\u003e\n\u003ctd\u003einteger\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003edirector\u003c/td\u003e\n\u003ctd\u003estring\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003edescription\u003c/td\u003e\n\u003ctd\u003estring\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eposter_url\u003c/td\u003e\n\u003ctd\u003estring\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ecategory\u003c/td\u003e\n\u003ctd\u003estring\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ediscount\u003c/td\u003e\n\u003ctd\u003eboolean\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003efemale_director\u003c/td\u003e\n\u003ctd\u003eboolean\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eWe could create the route, model, controller, and migration individually, but\nsince this kind of operation is pretty common for a Rails developer, there's a\nhandy generator that will set up all the code we need: \u003ccode\u003erails g resource\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eNavigate into the \u003ccode\u003edvd-shop\u003c/code\u003e directory and run this code in your terminal:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g resource Movie title year:integer length:integer director description poster_url category discount:boolean female_director:boolean \u003cspan class=\"nt\"\u003e--no-test-framework\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis command will:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eGenerate a migration for creating a \u003ccode\u003emovies\u003c/code\u003e table with the specified attributes\u003c/li\u003e\n\u003cli\u003eGenerate a \u003ccode\u003eMovie\u003c/code\u003e model file\u003c/li\u003e\n\u003cli\u003eGenerate a \u003ccode\u003eMoviesController\u003c/code\u003e controller file\u003c/li\u003e\n\u003cli\u003eAdd \u003ccode\u003eresources :movies\u003c/code\u003e to the \u003ccode\u003eroutes.rb\u003c/code\u003e file\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIt's a powerful command, so make sure to use it sparingly! You should only use\n\u003ccode\u003erails g resource\u003c/code\u003e if you truly need all of that code generated.\u003c/p\u003e\n\n\u003ch2\u003eRunning the API\u003c/h2\u003e\n\n\u003cp\u003eTo get some sample data into our application, we've provided a \u003ccode\u003eseeds.rb\u003c/code\u003e file\nin the root directory of this repo. Copy the contents of this file into your\n\u003ccode\u003edb/seeds.rb\u003c/code\u003e file. Then, to set up and seed the database, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet's update our \u003ccode\u003eroutes.rb\u003c/code\u003e file to set up just the one route our frontend\nneeds, for the time being:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n\u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:movies\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can also add the index action to our controller:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emovies\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003emovies\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith that code in place, run \u003ccode\u003erails s\u003c/code\u003e to start the server, and visit\n\u003ccode\u003ehttp://localhost:3000/movies\u003c/code\u003e in the browser to see our movie data. Success!\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWhen creating a new Rails API project from scratch, you can use the \u003ccode\u003e--api\u003c/code\u003e flag\nto have Rails optimize your project for building a web API.\u003c/p\u003e\n\n\u003cp\u003eWe also saw how to use the \u003ccode\u003eresource\u003c/code\u003e generator, which can help quickly set\nup the code we need to create RESTful routes and CRUD functionality for one\nsingle resource.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following question:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat files are generated when running \u003ccode\u003erails g resource ResourceName\u003c/code\u003e?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/command_line.html\"\u003eThe Rails Command Line\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g8331e43569c7227add0f6be02fff9648","title":"Custom Rendering","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-custom-rendering\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-custom-rendering/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-custom-rendering\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-custom-rendering/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eRender JSON from a Rails controller\u003c/li\u003e\n\u003cli\u003eSelect specific model attributes to render in a Rails controller\u003c/li\u003e\n\u003cli\u003eRender a custom error message\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eFork and clone this repo, then run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will download all the dependencies for our app and set up the database.\u003c/p\u003e\n\n\u003ch2\u003eVideo Walkthrough\u003c/h2\u003e\n\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/N5_l1a-3OV8?rel=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eBy using \u003ccode\u003erender json:\u003c/code\u003e in our Rails controller, we can take entire models or\neven collections of models, have Rails convert them to JSON, and send them out\non request. We already have the makings of a basic API. In this lesson, we're\ngoing to look at shaping that data that gets converted to JSON and making it\nmore useful to us from the frontend JavaScript perspective.\u003c/p\u003e\n\n\u003cp\u003eThe way we structure our data matters — it can lead to better, simpler code in\nthe future. By specifically defining what data is being sent via a Rails\ncontroller, we have full control over what data our frontend has access to.\u003c/p\u003e\n\n\u003ch2\u003eRemoving Content When Rendering\u003c/h2\u003e\n\n\u003cp\u003eSometimes, when sending JSON data, such as an entire model, we don't want or\nneed to send the entire thing. Some data is sensitive, for instance. An API that\nsends user information might contain details of a user internally that it does\nnot want to ever share externally. Sometimes, data is just extra clutter we\ndon't need. For instance, if we visit \u003ccode\u003ehttp://localhost:3000/cheeses/2\u003c/code\u003e, here's\nthe JSON response we receive:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Pepper Jack\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"is_best_seller\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"created_at\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"2021-05-01T11:11:03.879Z\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"updated_at\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"2021-05-01T11:11:03.879Z\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBy default, using \u003ccode\u003erender json:\u003c/code\u003e will include all the attributes from our Active\nRecord model that are defined in its schema. But for our frontend purposes, we\nprobably don't need things like \u003ccode\u003ecreated_at\u003c/code\u003e and \u003ccode\u003eupdated_at\u003c/code\u003e. Rather than send\nthis unnecessary info when rendering, we could just pick and choose what we want\nto send:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003echeese\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003echeese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"n\"\u003echeese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003eprice: \u003c/span\u003e\u003cspan class=\"n\"\u003echeese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eprice\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003eis_best_seller: \u003c/span\u003e\u003cspan class=\"n\"\u003echeese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eis_best_seller\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere, we've created a new hash out of four keys, assigning the keys manually\nwith the attributes of \u003ccode\u003echeese\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe result is that when we visit a specific cheese's endpoint, like\n\u003ccode\u003ehttp://localhost:3000/cheeses/2\u003c/code\u003e, we'll see just the id, name, price, and best\nseller properties:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Pepper Jack\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"is_best_seller\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo simplify this process, we can take advantage of some built-in \u003cem\u003eserialization\u003c/em\u003e\noptions available to us in the \u003ccode\u003erender\u003c/code\u003e method. For example, we can use the\n\u003ccode\u003eonly:\u003c/code\u003e option directly after listing an object or array of objects we want to\nrender to JSON:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n  \u003cspan class=\"n\"\u003echeeses\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003echeeses\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:price\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:is_best_seller\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eVisiting \u003ccode\u003ehttp://localhost:3000/cheeses\u003c/code\u003e will now produce our array\nof cheese objects and each object will \u003cem\u003eonly\u003c/em\u003e have the \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003eprice\u003c/code\u003e,\nand \u003ccode\u003eis_best_seller\u003c/code\u003e values, leaving out everything else:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cheddar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"is_best_seller\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Pepper Jack\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"is_best_seller\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Limburger\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"is_best_seller\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAlternatively, rather than specifically listing every key we want to include, we\ncould also exclude particular content using the \u003ccode\u003eexcept:\u003c/code\u003e option, like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n  \u003cspan class=\"n\"\u003echeeses\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003echeeses\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eexcept: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:created_at\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:updated_at\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe above code would achieve the same result, producing only \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e,\n\u003ccode\u003eprice\u003c/code\u003e, and \u003ccode\u003eis_best_seller\u003c/code\u003e for each cheese. All the keys \u003cem\u003eexcept\u003c/em\u003e\n\u003ccode\u003ecreated_at\u003c/code\u003e and \u003ccode\u003eupdated_at\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eBoth the \u003ccode\u003eonly\u003c/code\u003e and \u003ccode\u003eexcept\u003c/code\u003e options are available to us thanks to the\n\u003ca href=\"https://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html\"\u003e\u003ccode\u003e.as_json\u003c/code\u003e\u003c/a\u003e method, which Rails uses internally when we call\n\u003ccode\u003erender json:\u003c/code\u003e with an Active Record object.\u003c/p\u003e\n\n\u003ch2\u003eExtending JSON Data with :methods\u003c/h2\u003e\n\n\u003cp\u003eIf you'll recall from previous lessons, we added one additional instance method\nto our \u003ccode\u003eCheese\u003c/code\u003e model:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCheese\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esummary\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"nb\"\u003ename\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e: $\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf we wanted to include that \u003ccode\u003esummary\u003c/code\u003e in the JSON response, we can do so\nusing the \u003ccode\u003emethods\u003c/code\u003e option, like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003echeese\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003echeese\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eexcept: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:created_at\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:updated_at\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"ss\"\u003emethods: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:summary\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith that code in place, our JSON response contains an additional key-value\npair, in which the key is the name of the method and the value is the result of\ncalling the method for the current \u003ccode\u003eCheese\u003c/code\u003e object:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cheddar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"is_best_seller\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"summary\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cheddar: $3\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eBasic Error Messaging When Rendering JSON Data\u003c/h2\u003e\n\n\u003cp\u003eWith the power to create our own APIs, we also have the power to define what to\ndo when things go wrong. In our \u003ccode\u003eshow\u003c/code\u003e action, we are currently using\n\u003ccode\u003eCheese.find_by\u003c/code\u003e, passing in \u003ccode\u003eid: params[:id]\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003echeese\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003echeese\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eexcept: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:created_at\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:updated_at\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"ss\"\u003emethods: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:summary\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen using \u003ccode\u003efind_by\u003c/code\u003e, if the record is not found, \u003ccode\u003enil\u003c/code\u003e is returned. As we have\nit set up, if \u003ccode\u003eparams[:id]\u003c/code\u003e does not match a valid id, \u003ccode\u003enil\u003c/code\u003e will be assigned to\nthe \u003ccode\u003echeese\u003c/code\u003e variable.\u003c/p\u003e\n\n\u003cp\u003eAs \u003ccode\u003enil\u003c/code\u003e is a \u003cem\u003efalse-y\u003c/em\u003e value in Ruby, this gives us the ability to write our\nown error messaging in the event that a request is made for a record that\ndoesn't exist:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003echeese\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003echeese\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003echeese\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eexcept: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:created_at\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:updated_at\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"ss\"\u003emethods: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:summary\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Cheese not found'\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, if we were to send a request to an invalid endpoint like\n\u003ccode\u003ehttp://localhost:3000/cheeses/hello_cheeses\u003c/code\u003e, rather than receiving a general\nHTTP error, we would still receive a response from the API:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"error\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cheese not found\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFrom here, we could build a more complex response, including additional details\nabout what might have occurred. We could even include a status code that follows\nHTTP conventions to indicate what went wrong:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003echeese\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003echeese\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003echeese\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eexcept: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:created_at\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:updated_at\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"ss\"\u003emethods: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:summary\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# status: :not_found will produce a 404 status code\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Cheese not found'\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAdding this status code won't change how the JSON data looks, but it will give\nthe client some additional information about what went wrong with this request.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWe can now take the instances of a model and render them to JSON, extracting out\nany specific content we do or do not want to send!\u003c/p\u003e\n\n\u003cp\u003eWhether you are building a professional API for a company or for your own\npersonal site, having the ability to fine tune how your data looks is a critical\nskill that we're only just beginning to scratch the surface on.\u003c/p\u003e\n\n\u003cp\u003eIn future lessons, we'll cover the topic of \u003cem\u003eserialization\u003c/em\u003e in more depth, and\nintroduce some additional tools to make it easier to customize the shape of our\nJSON response.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhy is it important to be able to customize the JSON that is returned by our\napps?\u003c/li\u003e\n\u003cli\u003eWhat are some options we can use with the \u003ccode\u003erender\u003c/code\u003e method to customize the\nJSON response?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html\"\u003eActiveRecord as_json method\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb607944ff8e6d540f31ce1aac553bd74","title":"Debugging Network Requests","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-debugging-network-requests\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-debugging-network-requests/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-debugging-network-requests\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-debugging-network-requests/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eIdentify where to look when there are issues communicating between client and\nserver\u003c/li\u003e\n\u003cli\u003eUse the browser developer tools to debug on the frontend\u003c/li\u003e\n\u003cli\u003eUse server logging tools and \u003ccode\u003ebyebug\u003c/code\u003e to isolate errors on the backend\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that we're able to make requests using JavaScript to our Rails server, let's\nfocus on some common issues that arise when making network requests, and learn\ntechniques to help debug.\u003c/p\u003e\n\n\u003cp\u003eTo get the backend set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, in a new terminal, run the frontend:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eConfirm both applications are up and running by visiting\n\u003ca href=\"http://localhost:4000\"\u003e\u003ccode\u003elocalhost:4000\u003c/code\u003e\u003c/a\u003e and viewing the list of movies in your\nReact application.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNote: This lesson is written using Chrome as our browser of choice for\ndebugging. If you're using a different browser, the names and behavior of some\nof the debugging tools may vary.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003eFrontend Debugging Tools\u003c/h2\u003e\n\n\u003cp\u003eTo understand the debugging process, let's start building a new feature in our\napp allowing users to create new movies. The RESTful way to build a feature\nlike this would be to allow users to make a \u003ccode\u003ePOST\u003c/code\u003e request to \u003ccode\u003e/movies\u003c/code\u003e. In our\nReact app, there's some code in place for this request already:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// client/src/components/MovieForm.js\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleSubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epreventDefault\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/movies\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eformData\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen the user submits the form, we'll use \u003ccode\u003efetch\u003c/code\u003e to make a \u003ccode\u003ePOST\u003c/code\u003e request to\n\u003ccode\u003e/movies\u003c/code\u003e with all the data from the form in the body of the request.\u003c/p\u003e\n\n\u003cp\u003eTry it out now, before adding any code to handle this in the backend!\u003c/p\u003e\n\n\u003cp\u003eVisit \u003ca href=\"http://localhost:4000/new\"\u003e\u003ccode\u003elocalhost:4000/new\u003c/code\u003e\u003c/a\u003e to view the form, and\nclick the Add Movie button to submit it.\u003c/p\u003e\n\n\u003cp\u003eWhat went wrong? How can you tell what went wrong? Where would you look to debug\nthis error?\u003c/p\u003e\n\n\u003cp\u003eFrom the user's perspective, it appears that nothing happened: we're not seeing\nany error messages, but we're also not seeing any indication that our request\nwent through.\u003c/p\u003e\n\n\u003cp\u003eFrom a \u003cstrong\u003edeveloper's\u003c/strong\u003e perspective, we'll need to investigate more closely to see\nwhy this request didn't work.\u003c/p\u003e\n\n\u003cp\u003eThe first place we can look is in the developer tools, in the \u003cstrong\u003eConsole\u003c/strong\u003e tab.\nYou'll see an error message that looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePOST http://localhost:4000/movies 404 (Not Found)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs you may have anticipated, since we haven't created this route on the backend\nyet, Rails sends a 404 error when we make this request. And any time we use\n\u003ccode\u003efetch\u003c/code\u003e to make a network request that returns a bad status code (400 or 500),\nthe browser will display an error message about this in the console.\u003c/p\u003e\n\n\u003cp\u003eAn even better place to look than the Console tab when debugging network request\nproblems is in the \u003cstrong\u003eNetwork\u003c/strong\u003e tab. Open the Network tab, and click the Add\nMovie button to submit the form again. You'll see a new request in the Network\ntab. Click the request to view more details:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-debugging-network-requests/network-404-headers.png\" alt=\"network 404 request headers\"\u003e\u003c/p\u003e\n\n\u003cp\u003eHere we can see the 404 status code, as well as some additional information\nabout the request. Clicking the Preview tab will give more details about the\nresponse the server sent back:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-debugging-network-requests/network-404-preview.png\" alt=\"network 404 response preview\"\u003e\u003c/p\u003e\n\n\u003cp\u003eSince our Rails server is running in Development mode, we can see some\nadditional useful information here, such as the exception message that was\nthrown.\u003c/p\u003e\n\n\u003cp\u003eIf you open your terminal where your Rails server is running, you'll see\nthe same message in the server logs:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eStarted POST \"/movies\" for ::1 at 2021-05-08 10:02:41 -0400\n\nActionController::RoutingError (No route matches [POST] \"/movies\"):\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow that we know what the problem is, let's start fixing it!\u003c/p\u003e\n\n\u003ch2\u003eDebugging the Response\u003c/h2\u003e\n\n\u003cp\u003eIn your Rails app, add a new route:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edraw\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:movies\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, add a controller method:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMoviesController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emovies\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003emovies\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, let's try and make the same request from our frontend by submitting the\nform again. Our request still isn't working, but now we're no longer getting\nthat routing error. Instead, our Network tab shows a successful request:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-debugging-network-requests/network-204-headers.png\" alt=\"network 204 no content\"\u003e\u003c/p\u003e\n\n\u003cp\u003eBut our Console tab tells a different story:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eUncaught (in promise) SyntaxError: Unexpected end of JSON input\n  at MovieForm.js:19\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003ePay careful attention to this error!\u003c/strong\u003e This is a very common error message\nto see as you're developing API-driven applications. What do you think this\nerror message indicates?\u003c/p\u003e\n\n\u003cp\u003eWell, it's a\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\"\u003e\u003ccode\u003eSyntaxError\u003c/code\u003e\u003c/a\u003e,\nwhich means it's an error that occurs when JavaScript is parsing our code.\u003c/p\u003e\n\n\u003cp\u003eIt's coming from our \u003ccode\u003efetch\u003c/code\u003e request as part of the \u003ccode\u003epromise\u003c/code\u003e chain:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/movies\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eformData\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe reason for this specific error is that \u003cstrong\u003ewe expect the server to return a\nstring of JSON-formatted data\u003c/strong\u003e, but the server is not returning any content.\u003c/p\u003e\n\n\u003cp\u003eRemember, when we call \u003ccode\u003er.json()\u003c/code\u003e, we are instructing JavaScript to read the\nresponse (\u003ccode\u003er\u003c/code\u003e) and parse it as a JSON-formatted string. If the response does not\ncontain JSON-formatted data, \u003cstrong\u003ethis code will error out\u003c/strong\u003e. We are not sending\n\u003cstrong\u003eany\u003c/strong\u003e data in the response:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eKeep this in mind when you see this error message! The solution to this problem\nis to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003ereturn JSON data in the response\u003c/strong\u003e from your controller actions, or\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003edon't use the \u003ccode\u003e.json()\u003c/code\u003e method on the response\u003c/strong\u003e if your controller does not\nrespond with JSON data\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eDebugging Params\u003c/h2\u003e\n\n\u003cp\u003eLet's continue working on this feature, and see how we can access the data from\nthe fetch request in our controller action. Start by adding a \u003ccode\u003ebyebug\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebyebug\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, enter some data in the form, and submit the form again to make another\nrequest. In your server tab, you'll now enter a debugging session:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e    8:   def create\n    9:     byebug\n=\u0026gt; 10:   end\n   11:\n   12: end\n(byebug)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUse this as an opportunity to inspect the request object, in particular looking\nat the \u003ccode\u003eparams\u003c/code\u003e hash:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e(byebug) params\n#\u0026lt;ActionController::Parameters {\"title\"=\u0026gt;\"\", \"year\"=\u0026gt;2021, \"length\"=\u0026gt;\"0\",\n\"director\"=\u0026gt;\"\", ...\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou'll see that all the key-value pairs from the \u003ccode\u003eformData\u003c/code\u003e object —\nrepresenting the input fields from the form that were sent in the body of the\nrequest — are present in the params hash. Type \u003ccode\u003ec\u003c/code\u003e and hit enter to exit the\n\u003ccode\u003ebyebug\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWe can use that to create a new \u003ccode\u003eMovie\u003c/code\u003e, and send the movie object back as a\nresponse:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emovie_params\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epermit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:year\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:director\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:description\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:poster_url\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:category\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:discount\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:female_director\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith that in place, we can submit the request one more time to finally\ncreate a \u003ccode\u003eMovie\u003c/code\u003e! A good place to look after a successful request is in the\nRails logs to see all the details of the request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eStarted POST \"/movies\" for ::1 at 2021-05-08 10:36:35 -0400\n\nProcessing by MoviesController#create as */* Parameters: {\"title\"=\u0026gt;\"\",\n\"year\"=\u0026gt;2021, \"length\"=\u0026gt;\"0\", \"director\"=\u0026gt;\"\", \"description\"=\u0026gt;\"\",\n\"poster_url\"=\u0026gt;\"\", \"category\"=\u0026gt;\"\", \"discount\"=\u0026gt;false, \"female_director\"=\u0026gt;false,\n\"movie\"=\u0026gt;{\"title\"=\u0026gt;\"\", \"year\"=\u0026gt;2021, \"length\"=\u0026gt;\"0\", \"director\"=\u0026gt;\"\",\n\"description\"=\u0026gt;\"\", \"poster_url\"=\u0026gt;\"\", \"category\"=\u0026gt;\"\", \"discount\"=\u0026gt;false,\n\"female_director\"=\u0026gt;false}}\n\nUnpermitted parameter: :movie\n  TRANSACTION (0.1ms)  begin transaction\n  ↳ app/controllers/movies_controller.rb:9:in `create'\n\n  Movie Create (3.2ms) INSERT INTO \"movies\" (\"title\", \"year\", \"length\",\n  \"director\", \"description\", \"poster_url\", \"category\", \"discount\",\n  \"female_director\", \"created_at\", \"updated_at\") VALUES (?, ?, ?, ?, ?, ?, ?, ?,\n  ?, ?, ?) [[\"title\", \"\"], [\"year\", 2021], [\"length\", 0], [\"director\", \"\"],\n  [\"description\", \"\"], [\"poster_url\", \"\"], [\"category\", \"\"], [\"discount\", 0],\n  [\"female_director\", 0], [\"created_at\", \"2021-05-08 14:36:35.970843\"],\n  [\"updated_at\", \"2021-05-08 14:36:35.970843\"]] ↳\n  app/controllers/movies_controller.rb:9:in `create'\n\n  TRANSACTION (0.9ms)  commit transaction\n  ↳ app/controllers/movies_controller.rb:9:in `create'\n\nCompleted 201 Created in 9ms (Views: 0.3ms | ActiveRecord: 4.1ms | Allocations: 2132)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can also view the Network tab to see a preview of the response data:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-debugging-network-requests/network-201-preview.png\" alt=\"network 201 created preview\"\u003e\u003c/p\u003e\n\n\u003ch2\u003eDebugging Server Errors\u003c/h2\u003e\n\n\u003cp\u003eLet's introduce one more error on the server to show another common class\nof errors we'll need to handle: server-side errors. In the \u003ccode\u003ecreate\u003c/code\u003e action,\nlet's imagine we made a typo (as we all do from time to time):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# Movi instead of Movie\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMovi\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSubmit the form again to initiate another request to this controller action.\nYou'll see a new error message in the browser console:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePOST http://localhost:4000/movies\n  500 (Internal Server Error)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhere would you look to debug this error? Well, there are a couple options, but\nyour best bet any time there is an error \u003cstrong\u003eon the server\u003c/strong\u003e as indicated with a\n500 status code is to look at the \u003cstrong\u003eserver logs\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eCheck your Rails server logs in the terminal, and you'll see:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eStarted POST \"/movies\" for ::1 at 2021-05-08 10:44:56 -0400\n   (0.1ms)  SELECT sqlite_version(*)\n\n...\n\nNameError (uninitialized constant MoviesController::Movi):\n\napp/controllers/movies_controller.rb:9:in `create'\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis gives us a clear place to look for the error. We can see:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ethe error itself: \u003ccode\u003eNameError (uninitialized constant MoviesController::Movi)\u003c/code\u003e,\nindicating that we're using a constant \u003ccode\u003eMovi\u003c/code\u003e incorrectly\u003c/li\u003e\n\u003cli\u003ethe file and line number of the error:\n\u003ccode\u003eapp/controllers/movies_controller.rb:9:in 'create'\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eNow, we know exactly where the error is! Sometimes your errors will be more\ndifficult to find, but utilizing the stack trace and the error message will give\na good indication of where to start looking.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWhen you see a \u003ccode\u003e404 Not Found\u003c/code\u003e error:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCheck the Network Tab on the frontend\u003c/li\u003e\n\u003cli\u003eCheck the Rails Server logs in the backend\u003c/li\u003e\n\u003cli\u003eAdd a new route to handle the HTTP Verb + Path for this request\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWhen you see an \u003ccode\u003eUnexpected end of JSON input\u003c/code\u003e error:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCheck your \u003ccode\u003efetch\u003c/code\u003e request\u003c/li\u003e\n\u003cli\u003eCheck the controller action, and make sure to \u003ccode\u003erender json:\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWhen you need to see data from the request in your controller:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAdd a \u003ccode\u003ebyebug\u003c/code\u003e to your controller method\u003c/li\u003e\n\u003cli\u003eMake a request from the browser\u003c/li\u003e\n\u003cli\u003eInspect \u003ccode\u003eparams\u003c/code\u003e in the \u003ccode\u003ebyebug\u003c/code\u003e session\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWhen you see a \u003ccode\u003e500 Internal Server Error\u003c/code\u003e error:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eOpen your Rails server log\u003c/li\u003e\n\u003cli\u003eLook for the last request that came through\u003c/li\u003e\n\u003cli\u003eFind the error message and stack trace to identify where the error originated\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eIn general, where does it make sense to look when debugging client errors\n(4XX HTTP Status codes)?\u003c/li\u003e\n\u003cli\u003eIn general, where does it make sense to look when debugging server errors\n(5XX HTTP status codes)?\u003c/li\u003e\n\u003cli\u003eWhat causes the \u003ccode\u003eUnexpected end of JSON input\u003c/code\u003e error and how can we fix it?\u003c/li\u003e\n\u003c/ol\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gc15f55aa1751fc43fc187a9ceb68e4ec","title":"Deleting Associated Data","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-deleting-associated-data\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-deleting-associated-data/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-deleting-associated-data\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-deleting-associated-data/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand dependencies between models based on their relationships\u003c/li\u003e\n\u003cli\u003eDelete child records when the associated parent record is removed\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll be adding delete functionality to our API so that users\ncan remove a dog house from the database. We'll keep using the same starter code\nfrom the previous lesson. You can set up the models with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eDeleting Associations\u003c/h2\u003e\n\n\u003cp\u003eIn our AirBudNB app, there is a one-to-many relationship between a dog house\nand its reviews:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/displaying-associated-data/airbudnb-erd.png\" alt=\"AirBudNB entity relationship diagram\"\u003e\u003c/p\u003e\n\n\u003cp\u003eRecall that at the level of the database, this means that for every entry\nin the \u003ccode\u003ereviews\u003c/code\u003e table, there is a \u003ccode\u003edog_house_id\u003c/code\u003e foreign key column that points\nto the row in the \u003ccode\u003edog_houses\u003c/code\u003e table:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/deleting-associated-data/airbudnb-reviews-table.png\" alt=\"AirBudNB reviews table\"\u003e\u003c/p\u003e\n\n\u003cp\u003eImagine we're creating a feature to give users the ability to delete a dog house\nfrom the site. When that dog house is deleted, what should happen to the\nreviews? Both from our users' perspective and from the database's perspective, it\ndoesn't make much sense to keep a review around if there's no dog house for it\nto be associated with.\u003c/p\u003e\n\n\u003cp\u003eIn fact, if you try removing a record from the database now, you'll see an error!\nTry this out in a Rails console session with \u003ccode\u003erails c\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eDogHouse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edestroy\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; ActiveRecord::InvalidForeignKey (SQLite3::ConstraintException: FOREIGN KEY constraint failed)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe issue is that this dog house has reviews associated with it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eDogHouse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ereviews\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; #ActiveRecord::Associations::CollectionProxy [#Review id: 1, ...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThose reviews must have a valid \u003ccode\u003edog_house_id\u003c/code\u003e for their foreign key because of\na database constraint that was established when we created the \u003ccode\u003ereviews\u003c/code\u003e table:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCreateReviews\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eMigration\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mf\"\u003e6.1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003echange\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecreate_table\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n      \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estring\u003c/span\u003e \u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\n      \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estring\u003c/span\u003e \u003cspan class=\"ss\"\u003e:comment\u003c/span\u003e\n      \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einteger\u003c/span\u003e \u003cspan class=\"ss\"\u003e:rating\u003c/span\u003e\n\n      \u003cspan class=\"c1\"\u003e# foreign_key: true establishes a relationship between a review and a dog house\u003c/span\u003e\n      \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:dog_house\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003enull: \u003c/span\u003e\u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eforeign_key: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\n      \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etimestamps\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo before removing the dog house, we must first remove the reviews. We can do this\nmanually from the Rails console:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eDogHouse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ereviews\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edestroy_all\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNotice in the SQL generated by Active Record, this finds all the associated\nreviews for the dog house and deletes them from the database:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e  DogHouse Load (0.3ms)  SELECT \"dog_houses\".* FROM \"dog_houses\" ORDER BY \"dog_houses\".\"id\" ASC LIMIT ?  [[\"LIMIT\", 1]]\n  Review Load (0.2ms)  SELECT \"reviews\".* FROM \"reviews\" WHERE \"reviews\".\"dog_house_id\" = ?  [[\"dog_house_id\", 1]]\n  Review Destroy (0.4ms)  DELETE FROM \"reviews\" WHERE \"reviews\".\"id\" = ?  [[\"id\", 1]]\n  Review Destroy (0.1ms)  DELETE FROM \"reviews\" WHERE \"reviews\".\"id\" = ?  [[\"id\", 2]]\n  Review Destroy (0.1ms)  DELETE FROM \"reviews\" WHERE \"reviews\".\"id\" = ?  [[\"id\", 3]]\n  Review Destroy (0.1ms)  DELETE FROM \"reviews\" WHERE \"reviews\".\"id\" = ?  [[\"id\", 4]]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter deleting the reviews, we can then safely delete the dog house:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eDogHouse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edestroy\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHowever, there is a better way!\u003c/p\u003e\n\n\u003ch2\u003eUsing dependent: :destroy\u003c/h2\u003e\n\n\u003cp\u003eAs part of the class definition for our \u003ccode\u003eDogHouse\u003c/code\u003e model, we included the\n\u003ccode\u003ehas_many\u003c/code\u003e association reference:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/models/dog_house.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDogHouse\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is what lets us easily find all the reviews associated with a dog house\ninstance by simply calling \u003ccode\u003e.reviews\u003c/code\u003e on any instance of the \u003ccode\u003eDogHouse\u003c/code\u003e class.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003ehas_many\u003c/code\u003e association reference also lets you provide\n\u003ca href=\"https://guides.rubyonrails.org/association_basics.html#options-for-has-many\"\u003eadditional options\u003c/a\u003e to customize its behavior. In our case\n(and in many cases involving a one-to-many relationship), we can use the\n\u003ca href=\"https://guides.rubyonrails.org/association_basics.html#dependent\"\u003e\u003ccode\u003edependent: :destroy\u003c/code\u003e\u003c/a\u003e option. This will tell Active Record\nto delete all the associated records when the parent record is deleted.\u003c/p\u003e\n\n\u003cp\u003eExit the Rails console session, then add this code to the \u003ccode\u003eDogHouse\u003c/code\u003e class:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/models/dog_house.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDogHouse\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003edependent: :destroy\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo as soon as we call \u003ccode\u003e.destroy\u003c/code\u003e on an instance of a \u003ccode\u003eDogHouse\u003c/code\u003e, all the reviews\nassociated with that instance will be destroyed! Restart the Rails console and\ntry it out:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eDogHouse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esecond\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edestroy\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNo more error! We were able to delete the dog house from the database along with\nits associated reviews with just this one line of code. And the SQL generated by\nActive Record matches our two-step approach from earlier of deleting the reviews\nfirst, then deleting the dog house:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e  DogHouse Load (0.1ms)  SELECT \"dog_houses\".* FROM \"dog_houses\" ORDER BY \"dog_houses\".\"id\" ASC LIMIT ? OFFSET ?  [[\"LIMIT\", 1], [\"OFFSET\", 1]]\n  TRANSACTION (0.1ms)  begin transaction\n  Review Load (0.1ms)  SELECT \"reviews\".* FROM \"reviews\" WHERE \"reviews\".\"dog_house_id\" = ?  [[\"dog_house_id\", 2]]\n  Review Destroy (0.4ms)  DELETE FROM \"reviews\" WHERE \"reviews\".\"id\" = ?  [[\"id\", 5]]\n  Review Destroy (0.1ms)  DELETE FROM \"reviews\" WHERE \"reviews\".\"id\" = ?  [[\"id\", 6]]\n  Review Destroy (0.1ms)  DELETE FROM \"reviews\" WHERE \"reviews\".\"id\" = ?  [[\"id\", 7]]\n  Review Destroy (0.1ms)  DELETE FROM \"reviews\" WHERE \"reviews\".\"id\" = ?  [[\"id\", 8]]\n  Review Destroy (0.1ms)  DELETE FROM \"reviews\" WHERE \"reviews\".\"id\" = ?  [[\"id\", 9]]\n  Review Destroy (0.1ms)  DELETE FROM \"reviews\" WHERE \"reviews\".\"id\" = ?  [[\"id\", 10]]\n  DogHouse Destroy (0.1ms)  DELETE FROM \"dog_houses\" WHERE \"dog_houses\".\"id\" = ?  [[\"id\", 2]]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIt's always a good idea to clean up any unused data in the database when\ndeleting records, and to make sure there aren't any records that lose a\nnecessary association when their parent record is deleted. With Active Record,\nwe can use the \u003ccode\u003edependent: :destroy\u003c/code\u003e option to automatically remove associated\nrecords when the parent record is deleted.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following question:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eIn what situations would you need to use the \u003ccode\u003edependent: :destroy\u003c/code\u003e option?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/association_basics.html\"\u003eActive Record Associations Basics\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/association_basics.html#dependent\"\u003e\u003ccode\u003edependent: :destroy\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g27df128b3c349f186fe8085403b4633f","title":"Dispatching Actions with useDispatch","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-use-dispatch-readme\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-use-dispatch-readme/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-use-dispatch-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-use-dispatch-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eWrite functions that connect Redux actions to component events\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eIntroduction\u003c/h3\u003e\n\n\u003cp\u003eIn the intro to this section, we saw how to use the \u003ccode\u003euseDispatch\u003c/code\u003e hook to access\nthe \u003ccode\u003edispatch\u003c/code\u003e method from our Redux store inside our components. Here, we'll\nexplore \u003ccode\u003euseDispatch\u003c/code\u003e in more detail, and talk about ways of organizing our\nRedux dispatching logic using action creators, like we saw in the previous\nlesson.\u003c/p\u003e\n\n\u003ch2\u003eIdentifying the Problem\u003c/h2\u003e\n\n\u003cp\u003eTo begin, take a look at the starting code provided in\n\u003ccode\u003esrc/features/counter/Counter.js\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/counter/Counter.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eCounter\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// read from the Redux store\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eitems\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e// gives us the dispatch function to send actions to the Redux store\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleOnClick\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// dispatching an action on click\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecount/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003eonClick\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleOnClick\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eClick\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003eCounter\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo recap what \u003ccode\u003euseDispatch\u003c/code\u003e is doing here: this code places a button on the page\nwith an \u003ccode\u003eonClick\u003c/code\u003e event listener pointed to \u003ccode\u003ehandleOnClick\u003c/code\u003e. When\n\u003ccode\u003ehandleOnClick\u003c/code\u003e is invoked, it calls the \u003ccode\u003edispatch\u003c/code\u003e function, provided by\n\u003ccode\u003euseDispatch\u003c/code\u003e, to send an action to our Redux store.\u003c/p\u003e\n\n\u003cp\u003eRemember from our earlier lessons that our Redux \u003ccode\u003estore\u003c/code\u003e has a special\n\u003ccode\u003edispatch\u003c/code\u003e method that we must call any time we want to create a new state? The\n\u003ca href=\"https://react-redux.js.org/api/hooks#usedispatch\"\u003e\u003ccode\u003euseDispatch\u003c/code\u003e hook\u003c/a\u003e gives us access to that \u003ccode\u003edispatch\u003c/code\u003e method so\nwe can use it from any of our components!\u003c/p\u003e\n\n\u003ch2\u003eUsing Action Creators\u003c/h2\u003e\n\n\u003cp\u003eRight now, we're writing our action objects directly our component file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecount/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHowever, imagine our application grows and we want other components to be able\nto dispatch this same action object. Re-writing these objects in every component\nwe need them is tedious and error prone. Remember, in the previous lesson on\naction creators, we created a function that \u003cem\u003ereturns\u003c/em\u003e an action object instead.\nLet's try that out here as well:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/counter/Counter.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eincrementCount\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecount/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eCounter\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eitems\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleOnClick\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eincrementCount\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003eonClick\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleOnClick\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eClick\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003eCounter\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut what if another component needs to dispatch this function as well? Let's\njust move it to our \u003ccode\u003ecounterSlice.js\u003c/code\u003e file and export it from there, to organize\nit alongside the rest of our Redux logic for this feature:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/features/counter/counterSlice.js\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// Action Creators\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eincrementCount\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecount/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// Reducer\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, we can just import it in any components that need this action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/counter/Counter.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eincrementCount\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./counterSlice.js\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow we have a good separation between our Redux-specific code and our React\ncomponents!\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/tutorials/fundamentals/part-7-standard-patterns#using-action-creators\"\u003eRedux: Using Action Creators\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g22d757330dca06480db8852c58fc7916","title":"Dispatching an Initial Action for Setup","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-initial-dispatch\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-initial-dispatch/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-initial-dispatch\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-initial-dispatch/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDispatch an initial action\u003c/li\u003e\n\u003cli\u003eExplain how dispatching an initial action gives an initial setup of the\nstore's state\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eUse the \u003ccode\u003esrc/reducer.js\u003c/code\u003e file to follow along in this code-along. Open\n\u003ccode\u003eindex.html\u003c/code\u003e and try running \u003ccode\u003edispatch({type: \"counter/increment\"})\u003c/code\u003e in the\nbrowser console. You should see a \u003ccode\u003e1\u003c/code\u003e appear on the otherwise blank page.\u003c/p\u003e\n\n\u003ch2\u003eDispatch an Initial Action to Render the View\u003c/h2\u003e\n\n\u003cp\u003eCurrently, we have built our \u003ccode\u003echangeState()\u003c/code\u003e reducer, and the \u003ccode\u003edispatch()\u003c/code\u003e and\n\u003ccode\u003erender()\u003c/code\u003e functions. Remember that we built the \u003ccode\u003edispatch()\u003c/code\u003e function such that\neach time we execute it, we call the \u003ccode\u003erender()\u003c/code\u003e function:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003equerySelector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e#app\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNotice that by calling \u003ccode\u003edispatch()\u003c/code\u003e with an action as an argument, we do render\nsomething on the page. We dispatch an action of \u003ccode\u003e\"counter/increment\"\u003c/code\u003e and we see\nthe number \u003ccode\u003e1\u003c/code\u003e in our HTML, but \u003cstrong\u003ewe never see the number zero displayed\u003c/strong\u003e. One\neasy way to fix this is to simply call the \u003ccode\u003erender()\u003c/code\u003e function at the bottom of\nour JavaScript code, like the previous lesson. We'll choose a different\napproach, though, and use the \u003ccode\u003edispatch()\u003c/code\u003e function we already have.\u003c/p\u003e\n\n\u003cp\u003eRemember that our \u003ccode\u003edispatch()\u003c/code\u003e function also calls our \u003ccode\u003erender()\u003c/code\u003e function. So,\nif we dispatch a meaningless action, our reducer will simply return the existing\nstate (the \u003ccode\u003edefault\u003c/code\u003e case in our \u003ccode\u003eswitch\u003c/code\u003e), and then our \u003ccode\u003erender()\u003c/code\u003e function\nwill be called. Let's try it by dispatching an action of type \u003ccode\u003e@@INIT\u003c/code\u003e. If you\nalready have \u003ccode\u003eindex.html\u003c/code\u003e open in browser, refresh the page and enter the\nfollowing into the browser console:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow the number displayed in the DOM starts at 0. And each time we call dispatch,\nthe DOM is appropriately updated.\u003c/p\u003e\n\n\u003cp\u003eNote that we can dispatch an action of any type, so long as it doesn't hit our\nswitch statement. We dispatch an action of type \u003ccode\u003e@@INIT\u003c/code\u003e by convention, but you\ncould just as well choose something else and get the same result:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebeef\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe \u003ccode\u003eswitch\u003c/code\u003e will return whatever state was passed into the \u003ccode\u003echangeState()\u003c/code\u003e\nfunction. Then \u003ccode\u003erender()\u003c/code\u003e will be called and that updated state will get applied\nto the DOM.\u003c/p\u003e\n\n\u003cp\u003eNow, if we want our page to display \u003ccode\u003e0\u003c/code\u003e when it first loads, we can just add\n\u003ccode\u003edispatch({ type: '@@INIT' })\u003c/code\u003e at the end of the file.\u003c/p\u003e\n\n\u003ch2\u003eDispatch an Initial Action to Set up our Initial State\u003c/h2\u003e\n\n\u003cp\u003eNow that we've seen a simple fix for setting up the initial render of HTML,\nlet's see if there's a simple fix for setting up our state. Notice that\ncurrently we set the initial value of the state at the very first line of our\nJavaScript with the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe problem here is that we would prefer to look to our reducer to see how to\nmanage the state. After all, our reducer returns the new state every time we\ndispatch a new action. Perhaps our reducer can also return our initial state?\u003c/p\u003e\n\n\u003cp\u003eLet's begin by simply declaring our state, but not assigning it to equal\nanything. So, we accordingly change the first line of our JavaScript:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003equerySelector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e#app\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut, we find that dispatching the action of type \u003ccode\u003e@@INIT\u003c/code\u003e gives us an error:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eUncaught TypeError: Cannot read property 'count' of undefined(…)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSee that? Our \u003ccode\u003erender()\u003c/code\u003e function is breaking because now state starts off as\n\u003ccode\u003eundefined\u003c/code\u003e. When we dispatch our action, it calls the reducer, which passes\nthrough our state whose value is \u003ccode\u003eundefined\u003c/code\u003e, and then returns the default value\nof our switch statement, which is just our \u003ccode\u003eundefined\u003c/code\u003e state.\u003c/p\u003e\n\n\u003cp\u003eWhat would be really nice is if we could say when you pass a state of\n\u003ccode\u003eundefined\u003c/code\u003e to our reducer, assign a value to our initial state. Luckily,\nJavaScript allows us to pass default arguments to functions and we can give our\n\u003ccode\u003echangeState()\u003c/code\u003e reducer a default argument to do just that. Let's change our\nreducer to the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow notice what happens:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//  =\u0026gt; { count: 0 }\u003c/span\u003e\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//  =\u0026gt; { count: 1 }\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHow did that work? Let's take it from the top.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003equerySelector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e#app\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAt the top of the file, we declare but do not assign a value to our state, so it\nstarts off undefined. Then at the bottom the file, we dispatch an action of\n\u003ccode\u003e'@@INIT'\u003c/code\u003e. This calls our \u003ccode\u003edispatch()\u003c/code\u003e function and passes through our initial\naction. \u003ccode\u003edispatch()\u003c/code\u003e calls the \u003ccode\u003echangeState()\u003c/code\u003e reducer. \u003ccode\u003echangeState()\u003c/code\u003e is\nexecuted, passing through two local variables: state and action. \u003ccode\u003eaction\u003c/code\u003e is\ndefined because we passed \u003ccode\u003e{ type: '@@INIT' }\u003c/code\u003e into dispatch. \u003ccode\u003estate\u003c/code\u003e is\ncurrently \u003ccode\u003eundefined\u003c/code\u003e, so, with that initial dispatch we are really calling:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003eundefined\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBecause \u003ccode\u003echangeState()\u003c/code\u003e now has a default argument, the \u003ccode\u003estate\u003c/code\u003e argument is set\nto \u003ccode\u003e{ count: 0 }\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWhen \u003ccode\u003echangeState()\u003c/code\u003e executes, the \u003ccode\u003eswitch\u003c/code\u003e statement executes the \u003ccode\u003edefault\u003c/code\u003e\ncase, returning the value of \u003ccode\u003estate\u003c/code\u003e. The code\n\u003ccode\u003echangeState(undefined, { type: '@@INIT' })\u003c/code\u003e \u003cem\u003ereturns\u003c/em\u003e \u003ccode\u003e{ count: 0 }\u003c/code\u003e,\u003c/p\u003e\n\n\u003cp\u003eIn \u003ccode\u003edispatch()\u003c/code\u003e, when the \u003ccode\u003echangeState()\u003c/code\u003e reducer returns, dispatch assigns the\nreturn value to \u003ccode\u003estate\u003c/code\u003e, thus updating our state to the initial value of\n\u003ccode\u003e{ count: 0 }\u003c/code\u003e. On the next line, \u003ccode\u003erender()\u003c/code\u003e is called, displaying \u003ccode\u003e0\u003c/code\u003e in our\nHTML.\u003c/p\u003e\n\n\u003cp\u003eEssentially, we take advantage of our state starting off as undefined, and never\nbeing undefined again. This means the reducer's default argument can be used to\nset up the initial state and never be used again.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWe learned that by dispatching an initial action of type \u003ccode\u003e'@@INIT'\u003c/code\u003e we get two\nbenefits: an initial rendering of the state, and the ability to set our initial\nstate in our reducer. We set our initial state in our reducer by using a default\nargument for the state parameter. Because state is not initially defined,\ndispatching an action assigns our state to that default value, and then sets\nstate as the default.\u003c/p\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g2a0bd513fc5c9e8cebb6922463a6c946","title":"Displaying Associated Data","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-displaying-associated-data\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-displaying-associated-data/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-displaying-associated-data\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-displaying-associated-data/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Active Model associations in the controller\u003c/li\u003e\n\u003cli\u003eRender nested JSON data based on model associations\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this section, we're going to be building out an API for an exciting new\nbusiness: AirBudNB, a website for renting dog houses. We are using two models to\nrepresent our application's data: \u003cstrong\u003edog houses\u003c/strong\u003e and \u003cstrong\u003ereviews\u003c/strong\u003e. A dog house\nhas many reviews, and each review belongs to one dog house.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eDogHouse -\u0026lt; Review\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/displaying-associated-data/airbudnb-erd.png\" alt=\"AirBudNB entity relationship diagram\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThe code for our models is already in place, so we can focus on getting the\ncontroller to return the right data. To get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eNesting has_many Associations\u003c/h2\u003e\n\n\u003cp\u003eOur designers have created a mockup of one of the pages of our application for\ndisplaying details about one individual dog house. It will look like this:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/displaying-associated-data/airbudnb-dog_houses-show.png\" alt=\"AirBudNB reviews page\"\u003e\u003c/p\u003e\n\n\u003cp\u003eOur API will need to serve up the data for this page as efficiently as possible.\nIdeally, that means we'll be able to have just \u003cstrong\u003eone\u003c/strong\u003e request that returns the\ndata about the dog house as well as a list of all its reviews.\u003c/p\u003e\n\n\u003cp\u003eStart up your Rails server and make a GET request to \u003ccode\u003e/dog_houses/1\u003c/code\u003e. Check\nout the controller action for this request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/dog_houses_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003edog_house\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDogHouse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edog_house\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eCurrently, this route returns \u003cem\u003eonly\u003c/em\u003e the data about the dog house, not its\nreviews:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"image\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://assets.petco.com/petco/image/upload/f_auto,q_auto/1563564-right-1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cozy Studio in Historic District\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"city\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Denver\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e90\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"favorite\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"latitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"39.7433\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"longitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"-104.98322\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003eNote\u003c/em\u003e: the seed file creates seed data randomly, so the data you see in your\nbrowser will be different.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eBased on our models, we know each dog house has many reviews associated with it,\nand we can use Active Record to access that data:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDogHouse\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can verify this by running \u003ccode\u003erails c\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eDogHouse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ereviews\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; #\u0026lt;ActiveRecord::Associations::CollectionProxy [#\u0026lt;Review id: 1...\u0026gt;, #\u0026lt;Review id: 2...\u0026gt;]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo we need some way to \u003cstrong\u003einclude\u003c/strong\u003e this review data in the response from our\ncontroller!\u003c/p\u003e\n\n\u003cp\u003eThankfully for us, Rails gives us some additional \u003ca href=\"https://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html#method-i-as_json\"\u003eserialization\u003c/a\u003e options when\nconverting Active Record objects to JSON data. In this case, the \u003ccode\u003einclude\u003c/code\u003e\noption will let us nest associated data in our response. Let's update the code\nin our controller:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edog_house\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003einclude: :reviews\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUsing \u003ccode\u003einclude: :reviews\u003c/code\u003e will call the \u003ccode\u003e.reviews\u003c/code\u003e method that is provided with\nthe \u003ccode\u003ehas_many :reviews\u003c/code\u003e macro, and will serialize the reviews as a nested array\nof JSON data. Try making that same \u003ccode\u003eGET /dog_houses/1\u003c/code\u003e request again, and you\nshould now see the reviews listed along with the dog house they belong to.\nAgain, your data will be different, but it should be structured as follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"image\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://assets.petco.com/petco/image/upload/f_auto,q_auto/1563564-right-1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cozy Studio in Historic District\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"city\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Denver\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e90\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"favorite\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"latitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"39.7433\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"longitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"-104.98322\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"reviews\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"username\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"emory_rolfson\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"comment\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Listicle diy messenger bag food truck yuccie pug thundercats.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"rating\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"username\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"willena\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"comment\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Brunch aesthetic williamsburg taxidermy.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"rating\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, our API returns all the data we need to handle this view on the frontend\nwith just one request.\u003c/p\u003e\n\n\u003ch2\u003eNesting belongs_to Data\u003c/h2\u003e\n\n\u003cp\u003eOne of the other pages our frontend will need is a page to list out all of the\ntop reviews, along with their associated dog house:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/displaying-associated-data/airbudnb-reviews-index.png\" alt=\"AirBudNB reviews page\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAgain, we'd like to make just one request to get all of the data to populate\nthis view. Currently, a \u003ccode\u003eGET\u003c/code\u003e to \u003ccode\u003e/reviews\u003c/code\u003e returns an array of all review\ndata, but it's missing the data we need for the associated dog house:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"username\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"alton\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"comment\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Meh polaroid letterpress occupy freegan.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"rating\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"username\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"malorie.grant\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"comment\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"8-bit 3 wolf moon tattooed blog +1.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"rating\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"username\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"mary.hodkiewicz\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"comment\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Fixie art party cronut pug tattooed.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"rating\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can see that each review has an associated dog house based on the\n\u003ccode\u003edog_house_id\u003c/code\u003e attribute, but it'd be quite the ordeal to make individual\nrequests for each dog house to get the associated data! Again, we can leverage\nthe power of our Active Record associations, and serialize the dog house along\nwith each review:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eReviewsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ereviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eorder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003erating: :desc\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ereviews\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003einclude: :dog_house\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith this \u003ccode\u003einclude: :dog_house\u003c/code\u003e option in place, we now get a nested object\nunder each review representing the dog house that the review belongs to:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"username\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"alton\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"comment\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Meh polaroid letterpress occupy freegan.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"rating\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"image\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://assets.petco.com/petco/image/upload/f_auto,q_auto/1563564-right-1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cozy Studio in Historic District\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"city\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Denver\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e90\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"favorite\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"latitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"39.7433\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"longitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"-104.98322\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"username\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"malorie.grant\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"comment\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"8-bit 3 wolf moon tattooed blog +1.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"rating\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"image\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://assets.petco.com/petco/image/upload/f_auto,q_auto/1563564-right-1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cozy Studio in Historic District\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"city\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Denver\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e90\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"favorite\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"latitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"39.7433\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"longitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"-104.98322\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"username\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"mary.hodkiewicz\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"comment\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Fixie art party cronut pug tattooed.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"rating\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"dog_house\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"image\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://loveincorporated.blob.core.windows.net/contentimages/gallery/e7fd2f69-8c5b-4865-8add-d3ae27693f45-bowwowhaus.jpg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Mid Century Studio in Lively Uptown\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"city\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Houston\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"price\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e88\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"favorite\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"latitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"29.750588\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"longitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"-95.364063\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow we can retrieve all the data for our reviews page with just one request!\u003c/p\u003e\n\n\u003cp\u003eYou may notice that making the request for this data is a bit slow compared to\nsome of the other endpoints we've been working on. This is due to how Active\nRecord is accessing data for the associated dog house for each individual\nreview.\u003c/p\u003e\n\n\u003cp\u003eIf you open the Rails server log after making this request, you'll see why:\nthere are a lot of SQL queries being fired off at our database! This is an\nexample of the \u003ca href=\"https://www.sitepoint.com/silver-bullet-n1-problem/\"\u003eN+1 problem\u003c/a\u003e. First, we load all reviews with\n\u003ccode\u003eReview.all\u003c/code\u003e; then, for each review returned by \u003ccode\u003eReview.all\u003c/code\u003e, we make a separate\nquery for each dog house associated with that review. This is definitely not\nideal! We'll learn about a solution to this problem in a future lesson, but for\nnow, keep an eye out for slow queries and look at the SQL code being executed in\nyour Rails server to identify where these issues arise.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWhen developing APIs with our frontend needs in mind, it's best to structure our\ndata to minimize the number of requests needed for the frontend to retrieve that\ndata. We can take advantage of Active Record associations using \u003ccode\u003ehas_many\u003c/code\u003e and\n\u003ccode\u003ebelongs_to\u003c/code\u003e relationships, and serialize JSON data between related models using\nthe \u003ccode\u003einclude\u003c/code\u003e option.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following question:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat does the \u003ccode\u003einclude\u003c/code\u003e option do for us and how do we use it?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html#method-i-as_json\"\u003eSerialization: as_json\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gd1842ff1b231b6bd9735636f55329428","title":"Displaying Associated Data Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-displaying-associated-data-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-displaying-associated-data-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-displaying-associated-data-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-displaying-associated-data-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Active Model associations in the controller\u003c/li\u003e\n\u003cli\u003eRender nested JSON data based on model associations\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll be creating an API for a Craigslist-style marketplace where a\nuser can sell items. We have two models, \u003ccode\u003eUser\u003c/code\u003e and \u003ccode\u003eItem\u003c/code\u003e, in a relationship\nwhere a user has many items, and each item belongs to a user.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eUser -\u0026lt; Item\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eGet the lab set up by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere is seed data in place so you can test your solution out in the browser or\nin Postman. You can also run \u003ccode\u003elearn test\u003c/code\u003e to run the tests.\u003c/p\u003e\n\n\u003ch2\u003eDeliverables\u003c/h2\u003e\n\n\u003cp\u003eHandle the following requests and return the appropriate JSON data in the response:\u003c/p\u003e\n\n\u003ch3\u003eUsers Show Route\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /users/:id\n\nResponse Body\n-------\n{\n  \"id\": 1,\n  \"username\": \"Dwayne\",\n  \"city\": \"Los Angeles\",\n  \"items\": [\n    {\n      \"id\": 1,\n      \"name\": \"Non-stick pan\",\n      \"description\": \"Sticks a bit\",\n      \"price\": 10\n    }\n  ]\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eItems Index Route\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /items\n\nResponse Body\n-------\n{\n  \"id\": 1,\n  \"name\": \"Non-stick pan\",\n  \"description\": \"Sticks a bit\",\n  \"price\": 10,\n  \"user\": {\n    \"id\": 1,\n    \"username\": \"Dwayne\",\n    \"city\": \"Los Angeles\"\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html#method-i-as_json\"\u003eSerialization: as_json\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ge10216cd35ee3675960a40fbdb222f0a","title":"Implement a Stack Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-implement-a-stack\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-implement-a-stack/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-implement-a-stack\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-implement-a-stack/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eImplement a \u003ccode\u003eStack\u003c/code\u003e using an array as the underlying data structure\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn the previous lesson, you learned what a \u003ccode\u003eStack\u003c/code\u003e is and what methods they\ncommonly include. In this lab, you will be building out an implementation of a\n\u003ccode\u003eStack\u003c/code\u003e. You will be using an array as the underlying data structure, and\ncalling on some built-in Ruby array methods to build your \u003ccode\u003eStack\u003c/code\u003e class's\nfunctionality.\u003c/p\u003e\n\n\u003cp\u003eStart by forking and cloning this lab. You'll be writing your code in the\n\u003ccode\u003elib/stack.rb\u003c/code\u003e file. You can run the tests at any point using \u003ccode\u003elearn test\u003c/code\u003e to\ncheck your work.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eFirst, create the \u003ccode\u003eStack\u003c/code\u003e class and set it up to initialize an instance variable\n\u003ccode\u003e@stack\u003c/code\u003e that points to an empty array.\u003c/p\u003e\n\n\u003cp\u003eOnce you have the first test passing, build out the following methods:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eStack#push(value)\u003c/code\u003e: add an element to the top of the stack\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eStack#pop\u003c/code\u003e: remove the element at the top of the stack\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eStack#peek\u003c/code\u003e: return the value of the element at the top of the stack without\nremoving it\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eBonus\u003c/h3\u003e\n\n\u003cp\u003eIf you'd like an extra challenge, try implementing the additional functionality\nbelow. There are tests for these in the \u003ccode\u003espec/stack_spec.rb\u003c/code\u003e file; uncomment the\n\u003cstrong\u003ebonus methods\u003c/strong\u003e section in the test file to try these out.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eModify your \u003ccode\u003eStack#initialize\u003c/code\u003e method to take an optional \u003ccode\u003elimit\u003c/code\u003e value and\nset that as an attribute.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eUpdate the \u003ccode\u003eStack#push\u003c/code\u003e value to only push the passed-in value if there's\nstill room in the \u003ccode\u003eStack\u003c/code\u003e. If the \u003ccode\u003eStack\u003c/code\u003e is full, the method should throw an\nerror.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eImplement the following additional methods:\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eStack#size\u003c/code\u003e: returns the number of elements contained in the \u003ccode\u003eStack\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eStack#empty?\u003c/code\u003e: returns true if the \u003ccode\u003eStack\u003c/code\u003e is empty; false otherwise\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eStack#full?\u003c/code\u003e: returns true if the \u003ccode\u003eStack\u003c/code\u003e is full; false otherwise\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eStack#search(value)\u003c/code\u003e: returns the distance between the top of the stack and the\ntarget element if it's present; -1 otherwise\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAfter you've made these changes, you might want to take another look through\nyour code and see if there's any refactoring you can do.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we got some practice building a data structure from scratch by\nimplementing a \u003ccode\u003eStack\u003c/code\u003e class. Recall that the runtime of our data structure will\ndepend on what data structure it uses under the hood. For this lab, we used an\narray as the underlying data structure, which means the runtime for the\n\u003ccode\u003e#search\u003c/code\u003e method is O(n), and the runtime for all of the other methods is O(1).\u003c/p\u003e\n\n\u003cp\u003eWhile our implementation is efficient in terms of time complexity, we have to\nconsider space complexity as well. One of the characteristics of an \u003ccode\u003eArray\u003c/code\u003e is\nthat each of the elements can be accessed directly using the \u003ccode\u003e[]\u003c/code\u003e operator. In\norder for this to work, all the elements need to be stored in a continuous block\nof memory. If we're trying to add an element and we're out of memory where the\narray is located, the entire array will need to be relocated. This is expensive\nin terms of memory, which means using an array as our underlying data structure\nis not optimal from the perspective of space complexity. Refer to \u003ca href=\"https://github.com/learn-co-curriculum/arrays-underneath\"\u003ethis\nlesson\u003c/a\u003e for a more comprehensive explanation of space and\ntime efficiency issues with arrays.\u003c/p\u003e\n\n\u003cp\u003eGiven that a \u003ccode\u003eStack\u003c/code\u003e only uses \u003ccode\u003epush\u003c/code\u003e and \u003ccode\u003epop\u003c/code\u003e methods, we don't need to use an\nunderlying data structure that allows direct access to all of the elements. A\nbetter choice is a \u003ccode\u003eLinkedList\u003c/code\u003e, because it uses a hash as \u003cem\u003eits\u003c/em\u003e underlying data\nstructure and hashes do not need to be stored in a continuous block of memory.\nThe \u003ccode\u003eLinkedList\u003c/code\u003e is the next data structure we'll learn about. Before we get to\nthat, however, let's get a little practice using \u003ccode\u003eStack\u003c/code\u003es.\u003c/p\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g509bb1345e868753765ffab0df627dbd","title":"Intro to Redux: Reading Data from State","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-intro-to-redux-codealong\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-intro-to-redux-codealong/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-intro-to-redux-codealong\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-intro-to-redux-codealong/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the \u003ccode\u003ecreateStore()\u003c/code\u003e function provided by the Redux library\u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003euseSelector()\u003c/code\u003e and \u003ccode\u003euseDispatch()\u003c/code\u003e hooks provided by React-Redux to\naccess and update the store\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn the previous section, we have been building using a \u003ccode\u003ecreateStore()\u003c/code\u003e function\nthat we wrote, and passing a reducer to it. We have been using the \u003ccode\u003edispatch()\u003c/code\u003e\nmethod from the store, to dispatch actions and update the state.\u003c/p\u003e\n\n\u003cp\u003eNow let's think about which part of our application would belong in the official\nRedux library — that is, which part of our codebase would be common to all\napplications. Well, probably not the reducer as our reducers seem unique to each\nReact \u0026amp; Redux application. The reducers are unique because sometimes we have\nreducers that would add or remove items, or add or remove users, or edit users,\netc. What these actions are and how the reducer manages the state is customized.\nThus, the reducer would not be part of the redux library that other developers\nwould use to build their application.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003ecreateStore()\u003c/code\u003e function, however, is generic across Redux applications. It\nalways returns a store (given a reducer) that will have a \u003ccode\u003edispatch\u003c/code\u003e method and\na \u003ccode\u003egetState\u003c/code\u003e method.\u003c/p\u003e\n\n\u003cp\u003eSo from now on, we will import our \u003ccode\u003ecreateStore()\u003c/code\u003e function from the official\nRedux library. Normally, to install Redux into a React application, you need to\ninstall two packages, \u003ccode\u003eredux\u003c/code\u003e and \u003ccode\u003ereact-redux\u003c/code\u003e by running\n\u003ccode\u003enpm install redux react-redux\u003c/code\u003e. These are already included in this lesson's\n\u003ccode\u003epackage.json\u003c/code\u003e file, so all you need to do is run \u003ccode\u003enpm install \u0026amp;\u0026amp; npm start\u003c/code\u003e to\nget started.\u003c/p\u003e\n\n\u003ch3\u003eStep 1: Setting Up The Store\u003c/h3\u003e\n\n\u003cp\u003eFirst things first, we'll use Redux to initialize our store and pass it down to\nour top-level container component.\u003c/p\u003e\n\n\u003cp\u003eRedux provides a function, \u003ccode\u003ecreateStore()\u003c/code\u003e, that, when invoked, returns an\ninstance of the Redux store for us. So we can use that function to create a\nstore. We want to import \u003ccode\u003ecreateStore()\u003c/code\u003e in our \u003ccode\u003esrc/index.js\u003c/code\u003e file, where\nReactDOM renders our application.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/index.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-dom\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* code change */\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ecounterReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/counter/counterSlice.js\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./App\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./index.css\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecounterReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* code change */\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eApp\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;,\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eroot\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNotice that we are importing the \u003ccode\u003ecreateStore\u003c/code\u003e function from Redux. Now, with\nthe above set up, we \u003cem\u003ecould\u003c/em\u003e pass \u003ccode\u003estore\u003c/code\u003e down through \u003ccode\u003eApp\u003c/code\u003e and we would be\nable to access the Redux store.\u003c/p\u003e\n\n\u003cp\u003eHowever, reducing the need for passing props is part of why Redux works well\nwith React. To avoid passing \u003ccode\u003estore\u003c/code\u003e as a prop, we use the \u003ccode\u003eProvider\u003c/code\u003e component,\nwhich is imported from \u003ccode\u003ereact-redux\u003c/code\u003e. The \u003ccode\u003eProvider\u003c/code\u003e component wraps the top\nlevel component, \u003ccode\u003eApp\u003c/code\u003e, in this case, and is the only component where \u003ccode\u003estore\u003c/code\u003e is\npassed in:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/index.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-dom\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eProvider\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* code change */\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ecounterReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/counter/counterSlice.js\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./App\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./index.css\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecounterReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// code change - added Provider to wrap around App\u003c/span\u003e\n\u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e \u003cspan class=\"na\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eApp\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* code change */\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eroot\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBy including the \u003ccode\u003eProvider\u003c/code\u003e, we'll be able to access our Redux store and/or\ndispatch actions from any component we want, regardless of where it is on the\ncomponent tree.\u003c/p\u003e\n\n\u003cp\u003eSo, to recap, just like we did previously, we call our \u003ccode\u003ecreateStore()\u003c/code\u003e function\nin \u003ccode\u003esrc/index.js\u003c/code\u003e. We pass our \u003ccode\u003ecreateStore()\u003c/code\u003e method a reducer, and then we\npass our newly created store to our \u003ccode\u003eApp\u003c/code\u003e component as a prop. You can find the\nreducer in \u003ccode\u003e./src/features/counter/counterSlice.js\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/counter/counterSlice.js\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecounterReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecount/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003econcat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003ecounterReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOur reducer is just producing a counter. It adds a new item to the list each\ntime it is called, and that item is one more than the last item.\u003c/p\u003e\n\n\u003cp\u003eInstead of having all of our functions encapsulated in a closure within\n\u003ccode\u003eindex.js\u003c/code\u003e as we did while building our own Redux set up, we've now separated\nout the reducer function, giving it a relevant name, \u003ccode\u003ecounterReducer\u003c/code\u003e, and let\nthe Redux library take care of our \u003ccode\u003ecreateStore\u003c/code\u003e function. These two pieces are\nboth imported into \u003ccode\u003esrc/index.js\u003c/code\u003e and used to create \u003ccode\u003estore\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis \u003ccode\u003estore\u003c/code\u003e value is then passed in as a prop to \u003ccode\u003eProvider\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3\u003eInteracting with the Store: useDispatch and useSelector\u003c/h3\u003e\n\n\u003cp\u003eTo gain access to the \u003ccode\u003estore\u003c/code\u003e somewhere in our app, we use two \u003cstrong\u003ehooks\u003c/strong\u003e\nprovided by \u003ccode\u003ereact-redux\u003c/code\u003e: the \u003ccode\u003euseDispatch\u003c/code\u003e hook (for dispatching actions to\nthe store), and the \u003ccode\u003euseSelector\u003c/code\u003e hook (for \u003cem\u003eselecting\u003c/em\u003e parts of state to access\nwithin our components).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/counter/Counter.js\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eCounter\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// read from the Redux store\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eitems\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e// gives us the dispatch function to send actions to the Redux store\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseDispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleOnClick\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// dispatching an action on click\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecount/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003eonClick\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleOnClick\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eClick\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003eCounter\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis code places a button on the page with an \u003ccode\u003eonClick\u003c/code\u003e event listener pointed\nto \u003ccode\u003ehandleOnClick\u003c/code\u003e. When \u003ccode\u003ehandleOnClick\u003c/code\u003e is invoked, it calls the \u003ccode\u003edispatch\u003c/code\u003e\nfunction, provided by \u003ccode\u003euseDispatch\u003c/code\u003e, to send an action to our Redux store.\u003c/p\u003e\n\n\u003cp\u003eRemember from our earlier lessons that our Redux \u003ccode\u003estore\u003c/code\u003e has a special\n\u003ccode\u003edispatch\u003c/code\u003e method that we must call any time we want to create a new state? The\n\u003ca href=\"https://redux.js.org/tutorials/fundamentals/part-5-ui-react#dispatching-actions-with-usedispatch\"\u003e\u003ccode\u003euseDispatch\u003c/code\u003e hook\u003c/a\u003e gives us access to that \u003ccode\u003edispatch\u003c/code\u003e method so\nwe can use it from any of our components!\u003c/p\u003e\n\n\u003cp\u003eSimilarly, in our previous Redux code, any time we wanted to access our store's\ninternal state, we used the store's \u003ccode\u003egetState\u003c/code\u003e method. In the example above, the\nway we can interact with the \u003ccode\u003egetState\u003c/code\u003e method is via the \u003ca href=\"https://redux.js.org/tutorials/fundamentals/part-5-ui-react#reading-state-from-the-store-with-useselector\"\u003e\u003ccode\u003euseSelector\u003c/code\u003e\nhook\u003c/a\u003e. This hook takes a \u003cem\u003ecallback function\u003c/em\u003e that will get called\nwith the \u003ccode\u003estate\u003c/code\u003e object from our Redux store. Whatever the callback function\nreturns will be returned by the hook.\u003c/p\u003e\n\n\u003cp\u003eSo in this example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eitems\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseSelector\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe're calling \u003ccode\u003euseSelector\u003c/code\u003e with a callback function, and returning the \u003ccode\u003eitems\u003c/code\u003e\nkey from our Redux store state.\u003c/p\u003e\n\n\u003cp\u003eAnother effect of using the \u003ccode\u003euseSelector\u003c/code\u003e hook is that it effectively\n'subscribes' our components to changes in the Redux store state. Whenever the\nvalue returned by our \u003ccode\u003euseSelector\u003c/code\u003e hook changes, the \u003ccode\u003euseSelector\u003c/code\u003e hook will\ncause our component to re-render. So as the store's \u003ccode\u003eitems\u003c/code\u003e property increases,\n\u003ccode\u003eCounter\u003c/code\u003e will display a different number!\u003c/p\u003e\n\n\u003cp\u003eIf you boot up the app, you should see a button on the page, followed by a zero.\nEvery button click dispatches an action to our store, causing it to change.\nSince data (\u003ccode\u003eitems\u003c/code\u003e) from that store is being accessed in \u003ccode\u003eCounter\u003c/code\u003e, \u003ccode\u003eCounter\u003c/code\u003e\nwill re-render and display the updated counter.\u003c/p\u003e\n\n\u003ch4\u003eAdd Logging to Our Reducer\u003c/h4\u003e\n\n\u003cp\u003eOk, so getting our application to re-render takes a bit of work, and we're going\nto go into greater depth in the next sections. In the meantime, let's get some\nfeedback. First, let's log our action and the new state. So we'll change the\nreducer to the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/counter/counterSlice.js\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecounterReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecount/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eCurrent state.items length %s\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eUpdating state.items length to %s\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003econcat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eInitial state.items length %s\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003ecounterReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis may look like a lot, but really all were doing is adding some logging\nbehavior. At the top of the function, we are logging the action. After the case\nstatement, we are storing our state as current state first. Then we are logging\nthe updating state value. Then under the default case statement, we just can log\nthe previous state because this state is unchanged.\u003c/p\u003e\n\n\u003cp\u003eNow, refresh your app, and give it a shot. You should see the correct action\nbeing dispatched, as well as an update to the state. While we aren't getting our\nstate directly from the store, we know that we are dispatching actions. We know\nthis because each time we click a button, we call\n\u003ccode\u003estore.dispatch({ type: 'count/increment' })\u003c/code\u003e and somehow this is hitting our\nreducer. So things are happening.\u003c/p\u003e\n\n\u003ch4\u003eRedux DevTools\u003c/h4\u003e\n\n\u003cp\u003eThere is this amazing piece of software that allows us to nicely view the state\nof our store and each action that is dispatched. The software does a lot more\nthan that. I'll let you read about it here:\n\u003ca href=\"https://github.com/reduxjs/redux-devtools\"\u003eredux-devtools-extension\u003c/a\u003e. Ok, so let's get to incorporating this. In\nfact, every time we use the Redux library going forward, we should make sure we\nincorporate devtools. Otherwise, you are flying blind.\u003c/p\u003e\n\n\u003cp\u003eFirst, just Google for Redux Devtools Chrome. There you will find the Chrome\nextension for Redux. Please download it, and refresh Chrome. You will know that\nyou have installed the extension if you go to your developer console in Google\nChrome, and then at the top bar you will see a couple of arrows. Click those\narrows, and if you see Redux as your dropdown, you properly installed the Chrome\nextension. Step one is done.\u003c/p\u003e\n\n\u003cp\u003eSecond, we need to tell our application to communicate with this extension.\nDoing so is pretty easy. Now we change the arguments to our \u003ccode\u003ecreateStore\u003c/code\u003e\nfunction to the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/index.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-dom\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eProvider\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ereact-redux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* code change */\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ecounterReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/counter/counterSlice.js\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eApp\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./App\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./index.css\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003ecounterReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003e__REDUX_DEVTOOLS_EXTENSION__\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003e__REDUX_DEVTOOLS_EXTENSION__\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* code change */\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003eReactDOM\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e \u003cspan class=\"na\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eApp\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;,\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eroot\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNotice that we are still passing through our reducer to the \u003ccode\u003ecreateStore\u003c/code\u003e\nfunction. The second argument is accessing our browser to find a function called\n\u003ccode\u003e__REDUX_DEVTOOLS_EXTENSION__\u003c/code\u003e. If that function is there, the function is\nexecuted. Now if you have your Chrome console opened, make sure the Redux\nDevTools Inspector is open (press \u003ccode\u003ecommand\u003c/code\u003e + \u003ccode\u003eshift\u003c/code\u003e + \u003ccode\u003ec\u003c/code\u003e, click on the arrows\nat the top right, and the dropdown for the extension). Now click on the tab that\nsays state. You should see \u003ccode\u003e{ items: [] }\u003c/code\u003e. If you do, it means that your app is\nnow communicating with the DevTools. Click on the button in your application, to\nsee if the state changes. Now for each time you click on it, you should see an\naction in the devtools that has the name of that action. If you are looking at\nthe last state, you should see the changes in our state.\u003c/p\u003e\n\n\u003cp\u003eWhew!\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we saw how to use the \u003ccode\u003ecreateStore()\u003c/code\u003e function. We saw that we\ncan rely on the Redux library to provide this function, and that we still need\nto write our own reducer to tell the store what the new state will be given a\nparticular action. We saw that when using the \u003ccode\u003ecreateStore()\u003c/code\u003e function, and\npassing through a reducer, we are able to change the state just as we did\npreviously. We were able to see these changes by hooking our application up to a\nChrome extension called Redux Devtools, and then providing the correct\nconfiguration.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store\"\u003eRedux: Creating a Store\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/tutorials/fundamentals/part-5-ui-react#dispatching-actions-with-usedispatch\"\u003eReact-Redux: useDispatch\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/tutorials/fundamentals/part-5-ui-react#reading-state-from-the-store-with-useselector\"\u003eReact-Redux: useSelector\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ge7811c775b1eb08d4f19f0f13f0506b9","title":"Nested Resource Routing","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-nested-resource-routing\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-nested-resource-routing/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-nested-resource-routing\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-nested-resource-routing/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand the value of nested routes\u003c/li\u003e\n\u003cli\u003eCreate nested routes\u003c/li\u003e\n\u003cli\u003eUnderstand how nested resource params are named\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe're going to keep working on our AirBudNB application, augmenting it to filter\nreviews by listing in a user-friendly and RESTful way.\u003c/p\u003e\n\n\u003cp\u003eTo set up the app, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eURL As Data\u003c/h3\u003e\n\n\u003cp\u003eYou've encountered REST already, but, just to review, it stands for\nREpresentational State Transfer and encapsulates a way of structuring a URL so\nthat access to specific resources is predictable and standardized.\u003c/p\u003e\n\n\u003cp\u003eIn practice, that means that, if we type \u003ccode\u003erails s\u003c/code\u003e and run our app,\nbrowsing to \u003ccode\u003e/reviews\u003c/code\u003e will show us the index of all \u003ccode\u003eReview\u003c/code\u003e objects. And if we\nwant to view a specific \u003ccode\u003eDogHouse\u003c/code\u003e, we can guess the URL for that (as long as we\nknow the dog house's \u003ccode\u003eid\u003c/code\u003e) by going to \u003ccode\u003e/dog_houses/:id\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWhy do we care?\u003c/p\u003e\n\n\u003cp\u003eLet's imagine we added a filter feature to our reviews page:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-nested-resource-routing/reviews-filter.png\" alt=\"reviews filter\"\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen the filter is active, we \u003cem\u003ecould\u003c/em\u003e make a request to our backend, using query\nparameters, to retrieve only the reviews that match the selected dog house:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003ehttp://localhost:3000/reviews?doghouse=1\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eThat's the opposite of REST. That makes me \u003cem\u003estressed\u003c/em\u003e. While using query params\nlike in the link above could work, we can do better by following REST\nconventions.\u003c/p\u003e\n\n\u003ch3\u003eDynamic Route Segments\u003c/h3\u003e\n\n\u003cp\u003eWhat we'd love to end up with here is something like \u003ccode\u003e/dog_houses/1/reviews\u003c/code\u003e for\nall of a dog house's reviews and \u003ccode\u003e/dog_houses/1/reviews/5\u003c/code\u003e to see an individual\nreview for that dog house.\u003c/p\u003e\n\n\u003cp\u003eWe know we can build out a route with dynamic segments, so our first instinct\nmight be to just define these in \u003ccode\u003eroutes.rb\u003c/code\u003e like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/dog_houses/:dog_house_id/reviews'\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/dog_houses/:dog_house_id/reviews/:review_id'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter adding those routes, let's check it out by browsing to\n\u003ccode\u003e/dog_houses/1/reviews\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eOops. Error. Gotta tell those routes explicitly which controller actions will\nhandle them. Okay, let's make it look more like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/dog_houses/:dog_house_id/reviews'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'dog_houses#reviews_index'\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/dog_houses/:dog_house_id/reviews/:id'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'dog_houses#review'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd to handle our new filtering routes, we'll need to add some code in our\n\u003ccode\u003edog_houses_controller\u003c/code\u003e to actually do the work.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e  \u003cspan class=\"c1\"\u003e# app/controllers/dog_houses_controller.rb\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ereviews_index\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edog_house\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDogHouse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:dog_house_id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ereviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edog_house\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ereviews\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ereviews\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003einclude: :dog_house\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ereview\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003einclude: :dog_house\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e If your IDs are different and you are having trouble with the URLs,\ntry running \u003ccode\u003erails db:reset\u003c/code\u003e to reset your database.\u003c/p\u003e\n\n\u003cp\u003eWe did it! We have much nicer URLs now. Are we done? Of course not. While this\nsetup will work, there are a couple of problems.\u003c/p\u003e\n\n\u003cp\u003eFirst, if we look at our \u003ccode\u003eroutes.rb\u003c/code\u003e, we've had to move away from using the\npreferred \u003ccode\u003eresources\u003c/code\u003e option and are now specifying HTTP verbs, routes, and\ncontroller actions. Given that implementing a filter is a fairly common task,\nthis is not ideal.\u003c/p\u003e\n\n\u003cp\u003eBeyond that, note that our \u003ccode\u003edog_houses_controller\u003c/code\u003e is now responsible for\nrendering reviews, which shouldn't be its responsibility. Furthermore, the code\nto find all reviews and to find individual reviews by their ID is essentially\nrepeated in both the \u003ccode\u003ereviews_controller\u003c/code\u003e and the \u003ccode\u003edog_houses_controller\u003c/code\u003e. Our\ncurrent code is violating both the DRY (Don't Repeat Yourself) and Separation of\nConcerns principles.\u003c/p\u003e\n\n\u003cp\u003eSeems like Rails would have a way to bail us out of this mess.\u003c/p\u003e\n\n\u003ch3\u003eNested Resource Routes\u003c/h3\u003e\n\n\u003cp\u003eTurns out, Rails \u003cem\u003edoes\u003c/em\u003e give us a way to make this a lot nicer.\u003c/p\u003e\n\n\u003cp\u003eIf we look again at our models, we see that a dog house \u003ccode\u003ehas_many :reviews\u003c/code\u003e and\na review \u003ccode\u003ebelongs_to :dog_house\u003c/code\u003e. Since a review can logically be considered a\n\u003cem\u003echild\u003c/em\u003e object of a dog house, it can also be considered a \u003cem\u003enested resource\u003c/em\u003e of\na dog house for routing purposes.\u003c/p\u003e\n\n\u003cp\u003eNested resources give us a way to document that parent/child relationship in our\nroutes and, ultimately, our URLs.\u003c/p\u003e\n\n\u003cp\u003eLet's get back into \u003ccode\u003eroutes.rb\u003c/code\u003e, delete the two routes we just added, and\nrecreate them as nested resources. We should end up with something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n\n\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edraw\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:dog_houses\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:show\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# nested resource for reviews\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:show\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:show\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow we have the resourced \u003ccode\u003e:dog_houses\u003c/code\u003e route, but by adding the \u003ccode\u003edo...end\u003c/code\u003e we\ncan pass it a block of its nested routes.\u003c/p\u003e\n\n\u003cp\u003eWe can still do things to the nested resources that we do to a non-nested\nresource, like limit them to only certain actions. In this case, we only want to\nnest \u003ccode\u003e:show\u003c/code\u003e and \u003ccode\u003e:index\u003c/code\u003e under \u003ccode\u003e:dog_houses\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eBelow that, we still have our regular resourced \u003ccode\u003e:reviews\u003c/code\u003e routes because we\nstill want to let people see all reviews or a single review, create reviews,\netc., outside of the context of a dog house.\u003c/p\u003e\n\n\u003cp\u003eYou can see the routes available by running \u003ccode\u003erails routes\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePrefix            Verb  URI Pattern                                     Controller#Action\ndog_house_reviews GET   /dog_houses/:dog_house_id/reviews(.:format)     reviews#index\n dog_house_review GET   /dog_houses/:dog_house_id/reviews/:id(.:format) reviews#show\n        dog_house GET   /dog_houses/:id(.:format)                       dog_houses#show\n          reviews GET   /reviews(.:format)                              reviews#index\n                  POST  /reviews(.:format)                              reviews#create\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNotice, in the 'Controller#Action' column, how now we are dealing with the\n\u003ccode\u003ereviews_controller\u003c/code\u003e rather than the \u003ccode\u003edog_houses_controller\u003c/code\u003e for our nested\nroutes — our code once again reflects good Separation of Concerns. And, since we\nalready have actions in \u003ccode\u003ereviews_controller\u003c/code\u003e to handle \u003ccode\u003e:show\u003c/code\u003e and \u003ccode\u003e:index\u003c/code\u003e, we\nwon't be repeating ourselves like we did in the \u003ccode\u003edog_houses_controller\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eNow we just need to update our \u003ccode\u003ereviews_controller\u003c/code\u003e to handle the nested\nresource. Let's update \u003ccode\u003eindex\u003c/code\u003e to account for the new routes:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/reviews_controller.rb\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:dog_house_id\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n      \u003cspan class=\"n\"\u003edog_house\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDogHouse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:dog_house_id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ereviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edog_house\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ereviews\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ereviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ereviews\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003einclude: :dog_house\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe added a condition to the \u003ccode\u003ereviews#index\u003c/code\u003e action to account for whether the\nuser is trying to access the index of \u003cem\u003eall\u003c/em\u003e reviews (\u003ccode\u003eReview.all\u003c/code\u003e) or just the\nindex of all reviews \u003cem\u003efor a certain dog house\u003c/em\u003e (\u003ccode\u003edog_house.reviews\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eThe condition hinges on whether there's a \u003ccode\u003e:dog_house_id\u003c/code\u003e key in the \u003ccode\u003eparams\u003c/code\u003e\nhash — in other words, whether the user navigated to\n\u003ccode\u003e/dog_houses/:dog_house_id/reviews\u003c/code\u003e or simply \u003ccode\u003e/reviews\u003c/code\u003e. We didn't have to\ncreate any new methods or make explicit calls to render new data. We just added\na simple check for \u003ccode\u003eparams[:dog_house_id]\u003c/code\u003e, and we're good to go.\u003c/p\u003e\n\n\u003cp\u003eWhere is \u003ccode\u003eparams[:dog_house_id]\u003c/code\u003e coming from? Rails provides it for us through\nthe nested route, so we don't have to worry about a collision with the \u003ccode\u003e:id\u003c/code\u003e\nparameter that \u003ccode\u003ereviews#show\u003c/code\u003e is looking for. Rails takes the parent resource's\nname and appends \u003ccode\u003e_id\u003c/code\u003e to it for a nice, predictable way to find the parent\nresource's ID. Since some of our review routes are nested like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:dog_houses\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:show\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:show\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe end up with these routes for reviews (notice the dynamic portions of the URI\nPatterns):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eVerb  URI Pattern                                     Controller#Action\nGET   /dog_houses/:dog_house_id/reviews               reviews#index\nGET   /dog_houses/:dog_house_id/reviews/:id           reviews#show\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou'll also notice we didn't make a single change to the \u003ccode\u003ereviews#show\u003c/code\u003e action.\nWhat about the new \u003ccode\u003e/dog_houses/:dog_house_id/reviews/:id\u003c/code\u003e route that we\nadded?\u003c/p\u003e\n\n\u003cp\u003eRemember, the point of nesting our resources is to DRY up our code. We had to\ncreate a conditional for the \u003ccode\u003ereviews#index\u003c/code\u003e action because it renders\n\u003cem\u003edifferent\u003c/em\u003e sets of reviews depending on the path,\n\u003ccode\u003e/dog_houses/:dog_house_id/reviews\u003c/code\u003e or \u003ccode\u003e/reviews\u003c/code\u003e. Conversely, the\n\u003ccode\u003ereviews#show\u003c/code\u003e route is going to render the \u003cem\u003esame\u003c/em\u003e information — data concerning\na single review — regardless of whether it is accessed via\n\u003ccode\u003e/dog_houses/:dog_house_id/reviews\u003c/code\u003e or \u003ccode\u003e/reviews/:id\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eFor good measure, let's go into our \u003ccode\u003edog_houses_controller.rb\u003c/code\u003e and delete the\ntwo actions (\u003ccode\u003ereview\u003c/code\u003e and \u003ccode\u003ereviews_index\u003c/code\u003e) that we added above so that it looks like\nthis:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/dog_houses_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDogHousesController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erescue_from\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordNotFound\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ewith: :render_not_found_response\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edog_house\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDogHouse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edog_house\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003erender_not_found_response\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Dog house not found\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eTop-tip:\u003c/strong\u003e Keep your application clean and easy to maintain by always removing\nunused code.\u003c/p\u003e\n\n\u003ch3\u003eCaveat on Nesting Resources More Than One Level Deep\u003c/h3\u003e\n\n\u003cp\u003eYou can nest resources more than one level deep, but that is generally a bad idea.\u003c/p\u003e\n\n\u003cp\u003eImagine if we also had comments on a review. This would be a perfectly fine use\nof nesting:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:comments\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe could then access a reviews's comments with \u003ccode\u003e/reviews/1/comments\u003c/code\u003e. That makes\na lot of sense.\u003c/p\u003e\n\n\u003cp\u003eBut if we then tried to add to our already nested \u003ccode\u003ereviews\u003c/code\u003e resource...\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:dog_houses\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:comments\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow we're getting into messy territory. Our URL is\n\u003ccode\u003e/dog_houses/1/reviews/1/comments\u003c/code\u003e, and we have to handle that filtering in our\ncontroller.\u003c/p\u003e\n\n\u003cp\u003eBut if we lean on our old friend Separation of Concerns, we can conclude that a\nreviews's comments are not the concern of a dog house and therefore don't\nbelong nested two levels deep under the \u003ccode\u003e:dog_houses\u003c/code\u003e resource.\u003c/p\u003e\n\n\u003cp\u003eIn addition, the reason to put the ID of the resource in the URL is so that we\nhave access to it in the controller. If we know we have the review with an ID of\n\u003ccode\u003e1\u003c/code\u003e, we can use our Active Record relationships to call:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e  \u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edog_house\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# This will tell us which dog house the review was for!\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# We don't need this information in the URL\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eNesting resources is a powerful tool that helps you keep your routes neat and\ntidy and is better than dynamic route segments for representing parent/child\nrelationships in your system.\u003c/p\u003e\n\n\u003cp\u003eHowever, as a general rule, you should only nest resources one level deep and\nensure that you are considering Separation of Concerns in your routing.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat are the benefits of using nested routes?\u003c/li\u003e\n\u003cli\u003eHow do we distinguish nested routes from parent routes in our \u003ccode\u003eroutes.rb\u003c/code\u003e\nfile?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html#nested-resources\"\u003eRouting: Nested Resources\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g7cd554b64caa3e951ca433a0c833bd4e","title":"Nested Resource Routing Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-nested-resource-routing-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-nested-resource-routing-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-nested-resource-routing-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-nested-resource-routing-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate nested routes\u003c/li\u003e\n\u003cli\u003eUse params in nested routes\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll continue working on our Craigslist-style marketplace API, and\nbuild out some nested routes to give users easier access to our data.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eUser -\u0026lt; Item\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eGet the lab set up by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere is seed data in place so you can test your solution out in Postman. You\ncan also run \u003ccode\u003elearn test\u003c/code\u003e to run the tests.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eYou will need to handle the requests listed below and return the appropriate\nJSON data in the response.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e watch out for \u003ca href=\"https://api.rubyonrails.org/classes/AbstractController/DoubleRenderError.html\"\u003eRails' \u003ccode\u003eDoubleRenderError\u003c/code\u003e\u003c/a\u003e as you\nwork. The error is fairly straightforward: Rails only allows \u003ccode\u003erender\u003c/code\u003e to be\ncalled once in an action. We have seen one way to avoid this error: by using\nconditional code to ensure that only one \u003ccode\u003erender\u003c/code\u003e executes. A second way to\navoid the error is to include an explicit \u003ccode\u003ereturn\u003c/code\u003e, eg: \u003ccode\u003ereturn render json: ...\u003c/code\u003e to keep any later \u003ccode\u003erender\u003c/code\u003e statements from executing.\u003c/p\u003e\n\n\u003ch3\u003eNested Items Index Route\u003c/h3\u003e\n\n\u003cp\u003eThis route should show all items for one individual user.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /users/:user_id/items\n\nResponse Body\n-------\n[\n  {\n    \"id\": 1,\n    \"name\": \"Non-stick pan\",\n    \"description\": \"Sticks a bit\",\n    \"price\": 10,\n    \"user_id\": 1\n  },\n  {\n    \"id\": 1,\n    \"name\": \"Ceramic plant pots\",\n    \"description\": \"Plants not included\",\n    \"price\": 31,\n    \"user_id\": 1\n  }\n]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eNested Item Show Route\u003c/h3\u003e\n\n\u003cp\u003eThis route should show one item matching the \u003ccode\u003e:id\u003c/code\u003e from the URL.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /users/:user_id/items/:id\n\nResponse Body\n-------\n{\n  \"id\": 1,\n  \"name\": \"Non-stick pan\",\n  \"description\": \"Sticks a bit\",\n  \"price\": 10,\n  \"user_id\": 1\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eNested Item Create Route\u003c/h3\u003e\n\n\u003cp\u003eThis route should create a new item that belongs to a user.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePOST /users/:user_id/items\n\nHeaders:\n-------\nContent-Type: application/json\n\nRequest Body:\n-------\n{\n  \"name\": \"Garden gnomes\",\n  \"description\": \"No refunds\",\n  \"price\": 23\n}\n\nResponse Body:\n-------\n{\n  \"id\": 2,\n  \"name\": \"Garden gnomes\",\n  \"description\": \"No refunds\",\n  \"price\": 23,\n  \"user_id\": 1\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html#nested-resources\"\u003eRouting: Nested Resources\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g7c44c258b0a75bee40ce25c9b42f8de4","title":"[Optional] JWT Auth in Redux and Rails","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-jwt-auth\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-jwt-auth/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-jwt-auth\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-jwt-auth/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: This optional assignment shows an alternative approach to using\nthe built-in session feature in Rails. It was originally written by an\ninstructor some time ago, and doesn't follow the same application structure\nyou've seen in other labs in this phase. Depending on your application's\narchitecture, this approach may be easier or more difficult to implement. The\nbenefit to JWT authentication and not using cookies/sessions for authentication\nis that it allows you truly treat your React and Rails applications as separate\napplications that don't need to be hosted on the same domain. If you have\nseparate repositories for your Rails API and React frontend, and plan on\ndeploying to separate hosting services, this approach will be easier to\nimplement. Otherwise, you're likely better off sticking with sessions and\ncookies!\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eSecond disclaimer\u003c/strong\u003e: This is a sample application and walks through \u003cem\u003eone\u003c/em\u003e\npossible auth implementation. It does not cover everything there is to know\nabout auth and is intended as an introduction. Please do not blindly copy/paste\nthe code here. Use this as a guide to get started.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eThird disclaimer\u003c/strong\u003e: there are tradeoffs to every auth implementation. To\nsecure our application further, we should set our tokens to expire and make sure\nour app is being served over \u003ca href=\"https://en.wikipedia.org/wiki/HTTPS\"\u003eHTTPS\u003c/a\u003e.\nFurthermore, there are some\n\u003ca href=\"https://stormpath.com/blog/where-to-store-your-jwts-cookies-vs-html5-web-storage\"\u003etradeoffs to storing JWTs in browser \u003ccode\u003elocalStorage\u003c/code\u003e\u003c/a\u003e.\n\u003ca href=\"https://stackoverflow.com/questions/35291573/csrf-protection-with-json-web-tokens/35347022#35347022\"\u003eThis StackOverflow post has a concise summary of the benefits/tradeoffs about where/how to store tokens client-side\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eWith that out of the way, here begins our journey:\u003c/p\u003e\n\n\u003ch2\u003eRAILS BCrypt, JWT 🔐\u003c/h2\u003e\n\n\u003ch3\u003eBuilding Our Server\u003c/h3\u003e\n\n\u003cp\u003eThis section will walk through building a rails server. Let's create our app\nwith:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails new backend_project_name \u003cspan class=\"nt\"\u003e--api\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe're going to need a few gems in our \u003ca href=\"https://learning.flatironschool.com/server/Gemfile\"\u003eGemfile\u003c/a\u003e so let's go ahead and\nadd them. \u003ccode\u003ecd\u003c/code\u003e into your project directory and run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle add jwt\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle add active_model_serializers\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle add faker\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf you get a gem not found error, try manually adding them to your\n\u003ca href=\"https://learning.flatironschool.com/server/Gemfile\"\u003eGemfile\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eDon't forget to uncomment \u003ccode\u003erack-cors\u003c/code\u003e and \u003ccode\u003ebcrypt\u003c/code\u003e from your\n\u003ca href=\"https://learning.flatironschool.com/server/Gemfile\"\u003eGemfile\u003c/a\u003e as well.\u003c/p\u003e\n\n\u003cp\u003eCall \u003ccode\u003ebundle install\u003c/code\u003e. Your \u003ca href=\"https://learning.flatironschool.com/server/Gemfile\"\u003eGemfile\u003c/a\u003e should look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003esource\u003c/span\u003e \u003cspan class=\"s1\"\u003e'https://rubygems.org'\u003c/span\u003e\n\u003cspan class=\"n\"\u003egit_source\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:github\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003erepo\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"https://github.com/\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"n\"\u003erepo\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e.git\"\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eruby\u003c/span\u003e \u003cspan class=\"s1\"\u003e'2.7.4'\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# Bundle edge Rails instead: gem 'rails', github: 'rails/rails', branch: 'main'\u003c/span\u003e\n\u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s1\"\u003e'rails'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'~\u0026gt; 6.1.4'\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Use sqlite3 as the database for Active Record\u003c/span\u003e\n\u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s1\"\u003e'sqlite3'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'~\u0026gt; 1.4'\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Use Puma as the app server\u003c/span\u003e\n\u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s1\"\u003e'puma'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'~\u0026gt; 5.0'\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Build JSON APIs with ease. Read more: https://github.com/rails/jbuilder\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# gem 'jbuilder', '~\u0026gt; 2.7'\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Use Redis adapter to run Action Cable in production\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# gem 'redis', '~\u0026gt; 4.0'\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Use Active Model has_secure_password\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# gem 'bcrypt', '~\u0026gt; 3.1.7'\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# Use Active Storage variant\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# gem 'image_processing', '~\u0026gt; 1.2'\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# Reduces boot times through caching; required in config/boot.rb\u003c/span\u003e\n\u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s1\"\u003e'bootsnap'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'\u0026gt;= 1.4.4'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003erequire: \u003c/span\u003e\u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# Use Rack CORS for handling Cross-Origin Resource Sharing (CORS), making cross-origin AJAX possible\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# gem 'rack-cors'\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003egroup\u003c/span\u003e \u003cspan class=\"ss\"\u003e:development\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:test\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# Call 'byebug' anywhere in the code to stop execution and get a debugger console\u003c/span\u003e\n  \u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s1\"\u003e'byebug'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eplatforms: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:mri\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:mingw\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:x64_mingw\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003egroup\u003c/span\u003e \u003cspan class=\"ss\"\u003e:development\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s1\"\u003e'listen'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'~\u0026gt; 3.3'\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring\u003c/span\u003e\n  \u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s1\"\u003e'spring'\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# Windows does not include zoneinfo files, so bundle the tzinfo-data gem\u003c/span\u003e\n\u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s1\"\u003e'tzinfo-data'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eplatforms: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:mingw\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:mswin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:x64_mingw\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:jruby\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"jwt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"~\u0026gt; 2.2\"\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"active_model_serializers\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"~\u0026gt; 0.10.12\"\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003egem\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"faker\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"~\u0026gt; 2.19\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eDon't forget to enable\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\"\u003eCORS\u003c/a\u003e in your app.\nUncomment the following in \u003ca href=\"https://learning.flatironschool.com/server/config/initializers/cors.rb\"\u003e\u003ccode\u003econfig/initializers/cors.rb\u003c/code\u003e\u003c/a\u003e. Don't forget\nto change the origins from \u003ccode\u003eexample.com\u003c/code\u003e to \u003ccode\u003e*\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eDepending on the use-case and needs of our API, we might want to limit access to\nour app. For example, if our React frontend is deployed to \u003ccode\u003emyCoolReactApp.com\u003c/code\u003e,\nwe might want to limit access to that domain only. If certain endpoints are\nmeant to be public, we can make those available but limit to \u003ccode\u003eGET\u003c/code\u003e requests, for\nexample.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/initializers/cors.rb\u003c/span\u003e\n\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einsert_before\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003eRack\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eCors\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eallow\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eorigins\u003c/span\u003e \u003cspan class=\"s1\"\u003e'*'\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eresource\u003c/span\u003e \u003cspan class=\"s1\"\u003e'*'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"ss\"\u003eheaders: :any\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"ss\"\u003emethods: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:get\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:post\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:put\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:patch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:delete\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:options\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:head\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can refer to the \u003ca href=\"https://github.com/cyu/rack-cors\"\u003erack-cors gem\u003c/a\u003e for more\ninformation about this file.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003ePlease don't forget to change these settings before deploying your app to the\ninternet. \u003cem\u003ePlease\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\n\u003ch3\u003eCreating Users\u003c/h3\u003e\n\n\u003cp\u003eRun the following commands to set up the \u003ccode\u003eUser\u003c/code\u003e model:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g model User username password_digest bio avatar\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g controller api/v1/users\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g serializer user\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAdd \u003ccode\u003ehas_secure_password\u003c/code\u003e to \u003ca href=\"https://learning.flatironschool.com/server/app/models/user.rb\"\u003e\u003ccode\u003eapp/models/user.rb\u003c/code\u003e\u003c/a\u003e. Recall that\n\u003ccode\u003ehas_secure_password\u003c/code\u003e comes from\n\u003ca href=\"https://api.rubyonrails.org/classes/ActiveModel/SecurePassword/ClassMethods.html#method-i-has_secure_password\"\u003e\u003ccode\u003eActiveModel\u003c/code\u003e and adds methods to set and authenticate against a BCrypt password\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_secure_password\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou might also want to add some\n\u003ca href=\"https://guides.rubyonrails.org/active_record_validations.html\"\u003evalidations\u003c/a\u003e to\nyour users:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_secure_password\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003euniqueness: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003ecase_sensitive: \u003c/span\u003e\u003cspan class=\"kp\"\u003efalse\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003chr\u003e\n\n\u003cp\u003eA \u003cstrong\u003e(Not So) Quick BCrypt Tangent\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cp\u003eRecall that \u003ccode\u003eBCrypt\u003c/code\u003e allows us to\n\u003ca href=\"https://en.wikipedia.org/wiki/Salt_(cryptography)\"\u003esalt\u003c/a\u003e users' plaintext\npasswords before running them through a\n\u003ca href=\"https://en.wikipedia.org/wiki/Cryptographic_hash_function\"\u003ehashing function\u003c/a\u003e. A\nhashing function is, basically, a \u003cem\u003eone way\u003c/em\u003e function. Similar to putting\nsomething in a meat grinder: we cannot \u003cem\u003efeasibly\u003c/em\u003e reconstruct something that's\nbeen ground up by a meat grinder. We then store these passwords that have been\n'digested' by \u003ccode\u003eBCrypt\u003c/code\u003e in our database.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003ca href=\"https://blog.mozilla.org/webdev/2012/06/08/lets-talk-about-password-storage/\"\u003eNever ever ever store your users' plaintext passwords in your database\u003c/a\u003e.\nIt's bad form and should be avoided at all costs.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eLet's take a look at some of the functionality provided by \u003ccode\u003eBCrypt\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# in rails console\u003c/span\u003e\n\u003cspan class=\"no\"\u003eBCrypt\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003ePassword\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'P@ssw0rd'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; \"$2a$10$D0iXNNy/5r2YC5GC4ArGB.dNL6IpUzxH3WjCewb3FM8ciwsHBt0cq\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ccode\u003eBCrypt::Password\u003c/code\u003e\n\u003ca href=\"https://github.com/codahale/bcrypt-ruby/blob/master/lib/bcrypt/password.rb#L23\"\u003einherits from the Ruby \u003ccode\u003eString\u003c/code\u003e class\u003c/a\u003e\nand has its own\n\u003ca href=\"https://github.com/codahale/bcrypt-ruby/blob/master/lib/bcrypt/password.rb#L65\"\u003e== instance method\u003c/a\u003e\nthat allows us to run a plaintext password through \u003ccode\u003eBCrypt\u003c/code\u003e \u003cem\u003eusing the same\nsalt\u003c/em\u003e and compare it against an already digested password:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# in rails console\u003c/span\u003e\n\u003cspan class=\"n\"\u003esalted_pw\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBCrypt\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003ePassword\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'P@ssw0rd'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; \"$2a$10$YQvJPemUzm8IdCCaHxiOOes6HMEHda/.Hl60cUoYb4X4fncgT8ubG\"\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003esalted_pw\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eclass\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; BCrypt::Password\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003esalted_pw\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'P@ssw0rd'\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; true\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ccode\u003eBCrypt\u003c/code\u003e also provides a method that will take a stringified \u003ccode\u003epassword_digest\u003c/code\u003e\nand turn it into an instance of \u003ccode\u003eBCrypt::Password\u003c/code\u003e, allowing us to call the\nover-written \u003ccode\u003e==\u003c/code\u003e method.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# in rails console\u003c/span\u003e\n\u003cspan class=\"n\"\u003esample_digest\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epassword_digest\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; \"$2a$10$SJiIJnmQJ/A4z4fFG5EuE.aOoCjacFuQMVpVzQnhPSJKYLFCoqmWy\"\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003esample_digest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eclass\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; String\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003esample_digest\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'P@ssword'\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#  =\u0026gt; false\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ebcrypt_sample_digest\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBCrypt\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003ePassword\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esample_digest\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; \"$2a$10$dw4sYcbLXc8XRX6YGc7ve.ot6LbYevMbSpFQZUaa8tm5NI8cxBPwa\"\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ebcrypt_sample_digest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eclass\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; BCrypt::Password\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ebcrypt_sample_digest\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'P@ssw0rd'\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; true\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cimg src=\"https://media.giphy.com/media/26ufdipQqU2lhNA4g/giphy.gif\" alt=\"mind blown\"\u003e\u003c/p\u003e\n\n\u003cp\u003eWe have no way of storing instances of \u003ccode\u003eBCrypt::Password\u003c/code\u003e in our database.\nInstead, we're storing users' password digests \u003cstrong\u003e\u003ca href=\"https://learning.flatironschool.com/server/db/schema.rb\"\u003eas strings\u003c/a\u003e\u003c/strong\u003e. If we\nwere to build our own \u003ccode\u003eUser#authenticate\u003c/code\u003e method using \u003ccode\u003eBCrypt\u003c/code\u003e, it might look\nsomething like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eauthenticate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eplaintext_password\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"no\"\u003eBCrypt\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003ePassword\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epassword_digest\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eplaintext_password\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# in rails console\u003c/span\u003e\n\n\u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthenticate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'not my password'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; false\u003c/span\u003e\n\n\u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthenticate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'P@ssw0rd'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; #\u0026lt;User id: 21, username: \"sylviawoods\", password_digest: \"$2a$10$dw4sYcbLXc8XRX6YGc7ve.ot6LbYevMbSpFQZUaa8tm...\", avatar: nil, created_at: \"2018-08-31 02:11:15\", updated_at: \"2018-08-31 02:11:15\", bio: \"'Sylvia Woods was an American restaurateur who founded the sould food restaurant Sylvia's in Harlem on Lenox Avenue, New York City in 1962. She published two cookbooks and was an important figure in the community.\"\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eInstead of creating our own \u003ccode\u003eUser#authenticate\u003c/code\u003e method, we can use\n\u003ca href=\"https://api.rubyonrails.org/classes/ActiveModel/SecurePassword/ClassMethods.html#method-i-has_secure_password\"\u003e\u003ccode\u003eActiveModel#has_secure_password\u003c/code\u003e\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_secure_password\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cimg src=\"https://media.giphy.com/media/l4Jz3a8jO92crUlWM/giphy.gif\" alt=\"salt bae\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eEnd of BCrypt Tangent\u003c/strong\u003e.\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cp\u003eLet's add a \u003ccode\u003ecreate\u003c/code\u003e method to our \u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/users_controller.rb\"\u003e\u003ccode\u003eUsersController\u003c/code\u003e\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApi::V1::UsersController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003euser: \u003c/span\u003e\u003cspan class=\"no\"\u003eUserSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'failed to create user'\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003euser_params\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003epermit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:bio\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:avatar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can use the\n\u003ca href=\"https://gist.github.com/mlanett/a31c340b132ddefa9cca\"\u003ebuilt in Rails HTTP status code symbols\u003c/a\u003e\nwhen sending responses to the client; \u003ccode\u003estatus: :unprocessable_entity\u003c/code\u003e, for instance.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNeed a refresher on\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\"\u003eHTTP Status Codes\u003c/a\u003e?\nCheck out \u003ca href=\"http://httpstatusrappers.com/\"\u003ehttp://httpstatusrappers.com/\u003c/a\u003e!\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAnd update our \u003ca href=\"https://learning.flatironschool.com/server/app/serializers/user_serializer.rb\"\u003e\u003ccode\u003eUserSerializer\u003c/code\u003e\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUserSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:avatar\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:bio\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext let's add the routes we'll need for our server. In\n\u003ca href=\"https://learning.flatironschool.com/server/config/routes.rb\"\u003e\u003ccode\u003econfig/routes.rb\u003c/code\u003e\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edraw\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003enamespace\u003c/span\u003e \u003cspan class=\"ss\"\u003e:api\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enamespace\u003c/span\u003e \u003cspan class=\"ss\"\u003e:v1\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:users\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n      \u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/login'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'auth#create'\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/profile'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'users#profile'\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTake some time to test this either in\n\u003ca href=\"https://www.getpostman.com/apps\"\u003ePostman\u003c/a\u003e or with JavaScript fetch:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://localhost:3000/api/v1/users\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eAccept\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n    \u003cspan class=\"na\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"na\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003esylviawoods\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"na\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ewhatscooking\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"na\"\u003ebio\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eSylvia Woods was an American restaurateur who founded the sould food restaurant Sylvia's in Harlem on Lenox Avenue, New York City in 1962. She published two cookbooks and was an important figure in the community.\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"na\"\u003eavatar\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttps://upload.wikimedia.org/wikipedia/commons/4/49/Syvia_of_Sylvia%27s_reaturant_N.Y.C_%28cropped%29.jpg\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}),\u003c/span\u003e\n\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e if you're using Postman and your formatting is set to \"raw and JSON\",\nremember to use double quotes (\"\") in both keys and values in the request.\u003c/p\u003e\n\n\u003cp\u003eImportant! \u003cstrong\u003eMake Sure You Can POST and Create a New User Before Proceeding\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://media.giphy.com/media/pcPs6v6fhE7Ru/giphy.gif\" alt=\"intermission\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eJSON Web Tokens (JWT)\u003c/h3\u003e\n\n\u003cp\u003eToken-based authentication is \u003cstrong\u003estateless\u003c/strong\u003e. \u003cem\u003eWe are not storing any information\nabout a logged in user on the server\u003c/em\u003e (which also means we don't need a model or\ntable for our user sessions). No stored information means our application can\nscale and add more machines as necessary without worrying about where a user is\nlogged in. Instead, the client (browser) stores a token and sends that token\nalong with every authenticated request. Instead of storing a plaintext username,\nor user_id, we can encode user data with JSON Web Tokens (JWT) and store that\nencoded token client-side.\u003c/p\u003e\n\n\u003ch4\u003eJWT Auth Flow\u003c/h4\u003e\n\n\u003cp\u003e\u003cimg src=\"https://i.stack.imgur.com/f2ZhM.png\" alt=\"jwt\"\u003e\u003c/p\u003e\n\n\u003cp\u003eHere is the JWT authentication flow for logging in:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eAn already existing user requests access with their username and password\u003c/li\u003e\n\u003cli\u003eThe app validates these credentials\u003c/li\u003e\n\u003cli\u003eThe app gives a signed token to the client\u003c/li\u003e\n\u003cli\u003eThe client stores the token and presents it with every request. This token is\neffectively the user's access pass––it proves to our server that they are who\nthey claim to be.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eJWTs are composed of three strings separated by periods:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eaaaaaaaaaaaaaaa.bbbbbbbbbbbbbbbbbbbbb.ccccccccccccccccccc\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003eThe first part (\u003ccode\u003eaaaaaaaaaaaa\u003c/code\u003e) is the header\u003c/li\u003e\n\u003cli\u003eThe second part (\u003ccode\u003ebbbbbbbbbbbb\u003c/code\u003e) is the payload - the good stuff, like who\nthis person is, and their id in our database.\u003c/li\u003e\n\u003cli\u003eThe third part (\u003ccode\u003eccccccccccccc\u003c/code\u003e) is the signature. The signature is a hash of\nthe header and the payload. It is hashed with a secret key, that we will\nprovide (and should store in an environment variable using a gem like\n\u003ca href=\"https://github.com/laserlemon/figaro#getting-started\"\u003eFigaro\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHead on over to \u003ca href=\"http://jwt.io/#debugger\"\u003ejwt.io\u003c/a\u003e and see for yourself:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg width=\"750\" alt=\"JWTs\" src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-jwt-auth/jwt.png\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eEncoding and Decoding JWTs\u003c/h3\u003e\n\n\u003cp\u003eSince we've already added \u003ca href=\"https://github.com/jwt/ruby-jwt\"\u003e\u003ccode\u003egem jwt\u003c/code\u003e\u003c/a\u003e to our\n\u003ca href=\"https://learning.flatironschool.com/server/Gemfile\"\u003egemfile\u003c/a\u003e, let's explore some JWT methods by opening a \u003ccode\u003erails console\u003c/code\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eJWT.encode\u003c/code\u003e takes up to three arguments: a payload to encode, an application\nsecret of the user's choice, and an optional third that can be used to specify\nthe hashing algorithm used. Typically, we don't need to show the third. This\nmethod returns a JWT as a string.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eJWT.decode\u003c/code\u003e takes three arguments as well: a JWT as a string, an application\nsecret, and (optionally) a hashing algorithm.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#in rails console\u003c/span\u003e\n\u003cspan class=\"n\"\u003epayload\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003ebeef: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'steak'\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ejwt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eencode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'boeuf'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; \"eyJhbGciOiJIUzI1NiJ9.eyJiZWVmIjoic3RlYWsifQ._IBTHTLGX35ZJWTCcY30tLmwU9arwdpNVxtVU0NpAuI\"\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003edecoded_hash\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ejwt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'boeuf'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; [{\"beef\"=\u0026gt;\"steak\"}, {\"alg\"=\u0026gt;\"HS256\"}]\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edecoded_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; {\"beef\"=\u0026gt;\"steak\"}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eBuilding this functionality into our \u003ca href=\"https://learning.flatironschool.com/server/app/controllers/application_controller.rb\"\u003e\u003ccode\u003eApplicationController\u003c/code\u003e\u003c/a\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eGiven that many different controllers will need to\n\u003ca href=\"https://en.wikipedia.org/wiki/Authentication\"\u003eauthenticate\u003c/a\u003e and\n\u003ca href=\"https://en.wikipedia.org/wiki/Authorization\"\u003eauthorize\u003c/a\u003e\nusers––\u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/auth_controller.rb\"\u003e\u003ccode\u003eAuthController\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/users_controller.rb\"\u003e\u003ccode\u003eUsersController\u003c/code\u003e\u003c/a\u003e, etc — it makes sense to lift the\nfunctionality of encoding/decoding tokens to our top level\n\u003ca href=\"https://learning.flatironschool.com/server/app/controllers/application_controller.rb\"\u003e\u003ccode\u003eApplicationController\u003c/code\u003e\u003c/a\u003e. Recall that \u003cstrong\u003eall\u003c/strong\u003e\ncontrollers inherit from \u003ca href=\"https://learning.flatironschool.com/server/app/controllers/application_controller.rb\"\u003e\u003ccode\u003eApplicationController\u003c/code\u003e\u003c/a\u003e!\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplicationController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActionController\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eAPI\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eencode_token\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# payload =\u0026gt; { beef: 'steak' }\u003c/span\u003e\n    \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eencode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'my_s3cr3t'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# jwt string: \"eyJhbGciOiJIUzI1NiJ9.eyJiZWVmIjoic3RlYWsifQ._IBTHTLGX35ZJWTCcY30tLmwU9arwdpNVxtVU0NpAuI\"\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edecoded_token\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# token =\u0026gt; \"eyJhbGciOiJIUzI1NiJ9.eyJiZWVmIjoic3RlYWsifQ._IBTHTLGX35ZJWTCcY30tLmwU9arwdpNVxtVU0NpAuI\"\u003c/span\u003e\n\n    \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'my_s3cr3t'\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# JWT.decode =\u0026gt; [{ \"beef\"=\u0026gt;\"steak\" }, { \"alg\"=\u0026gt;\"HS256\" }]\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# [0] gives us the payload { \"beef\"=\u0026gt;\"steak\" }\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ca href=\"https://jwt.io/introduction/\"\u003eAccording to the JWT Documentation\u003c/a\u003e: Whenever the\nuser wants to access a protected route or resource, the user agent (browser in\nour case) should send the JWT, typically in the Authorization header using the\nBearer schema. The content of the header should look like the following:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eAuthorization: Bearer \u0026lt;token\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eThe corresponding \u003ccode\u003efetch\u003c/code\u003e request might look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://localhost:3000/api/v1/profile\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eGET\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eAuthorization\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e`Bearer \u0026lt;token\u0026gt;`\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eKnowing this, we can set up our server to anticipate a JWT sent along in request\nheaders, \u003cem\u003einstead\u003c/em\u003e of passing the token directly to\n\u003ccode\u003eApplicationController#decoded_token\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplicationController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActionController\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eAPI\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eencode_token\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# payload =\u0026gt; { beef: 'steak' }\u003c/span\u003e\n    \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eencode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'my_s3cr3t'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# jwt string: \"eyJhbGciOiJIUzI1NiJ9.eyJiZWVmIjoic3RlYWsifQ._IBTHTLGX35ZJWTCcY30tLmwU9arwdpNVxtVU0NpAuI\"\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eauth_header\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# { 'Authorization': 'Bearer \u0026lt;token\u0026gt;' }\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Authorization'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edecoded_token\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eauth_header\u003c/span\u003e\n      \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eauth_header\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e' '\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# headers: { 'Authorization': 'Bearer \u0026lt;token\u0026gt;' }\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ebegin\u003c/span\u003e\n        \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'my_s3cr3t'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ealgorithm: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'HS256'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e# JWT.decode =\u0026gt; [{ \"beef\"=\u0026gt;\"steak\" }, { \"alg\"=\u0026gt;\"HS256\" }]\u003c/span\u003e\n      \u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eDecodeError\u003c/span\u003e\n        \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eA few things to note about the code above:\u003c/p\u003e\n\n\u003cp\u003eThe\n\u003ca href=\"https://ruby-doc.org/core-2.2.0/doc/syntax/exceptions_rdoc.html\"\u003e\u003ccode\u003eBegin/Rescue\u003c/code\u003e syntax\u003c/a\u003e\nallows us to \u003cstrong\u003erescue\u003c/strong\u003e out of an exception in Ruby. Let's see an example in a\n\u003ccode\u003erails console\u003c/code\u003e. In the event our server receives and attempts to decode an\n\u003cstrong\u003einvalid token\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# in rails console\u003c/span\u003e\n\u003cspan class=\"n\"\u003einvalid_token\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"nnnnnnnooooooootttttt.vvvvvvaaaallliiiiidddddd.jjjjjjjwwwwwttttttt\"\u003c/span\u003e\n\n\u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einvalid_token\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'my_s3cr3t'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ealgorithm: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'HS256'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# =\u0026gt; Traceback (most recent call last):\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#         1: from (irb):6\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# JWT::DecodeError (Invalid segment encoding)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn other words, if our server receives a bad token, this will raise an exception\ncausing a \u003ca href=\"http://httpstatusrappers.com/500.html\"\u003e500 Internal Server Error\u003c/a\u003e. We\ncan account for this by \u003cstrong\u003erescuing out of this exception\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# in rails console\u003c/span\u003e\n\u003cspan class=\"n\"\u003einvalid_token\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"nnnnnnnooooooootttttt.vvvvvvaaaallliiiiidddddd.jjjjjjjwwwwwttttttt\"\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003ebegin\u003c/span\u003e\n  \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einvalid_token\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'my_s3cr3t'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ealgorithm: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'HS256'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eDecodeError\u003c/span\u003e\n  \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; nil\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eInstead of crashing our server, we simply return \u003ccode\u003enil\u003c/code\u003e and keep trucking along.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://media.giphy.com/media/3xb5V0fbxHXck/giphy.gif\" alt=\"keep trucking\"\u003e\u003c/p\u003e\n\n\u003cp\u003eWe can then complete our \u003ca href=\"https://learning.flatironschool.com/server/app/controllers/application_controller.rb\"\u003e\u003ccode\u003eApplicationController\u003c/code\u003e\u003c/a\u003e by\nautomatically obtaining the user whenever an authorization header is present:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplicationController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActionController\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eAPI\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eencode_token\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# don't forget to hide your secret in an environment variable\u003c/span\u003e\n    \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eencode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'my_s3cr3t'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eauth_header\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Authorization'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edecoded_token\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eauth_header\u003c/span\u003e\n      \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eauth_header\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e' '\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ebegin\u003c/span\u003e\n        \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'my_s3cr3t'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ealgorithm: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'HS256'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eDecodeError\u003c/span\u003e\n        \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecurrent_user\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003edecoded_token\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# decoded_token=\u0026gt; [{\"user_id\"=\u0026gt;2}, {\"alg\"=\u0026gt;\"HS256\"}]\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# or nil if we can't decode the token\u003c/span\u003e\n      \u003cspan class=\"n\"\u003euser_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edecoded_token\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"s1\"\u003e'user_id'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n      \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003euser_id\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003elogged_in?\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e!!\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrent_user\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRecall that a Ruby object/instance is 'truthy': \u003ccode\u003e!!user_instance #=\u0026gt; true\u003c/code\u003e and\nnil is 'false-y': \u003ccode\u003e!!nil #=\u0026gt; false\u003c/code\u003e. Therefore \u003ccode\u003elogged_in?\u003c/code\u003e will just return a\nboolean depending on what our \u003ccode\u003ecurrent_user\u003c/code\u003e method returns.\u003c/p\u003e\n\n\u003cp\u003eFinally, let's lock down our application to prevent unauthorized access:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplicationController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActionController\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eAPI\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebefore_action\u003c/span\u003e \u003cspan class=\"ss\"\u003e:authorized\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eencode_token\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# should store secret in env variable\u003c/span\u003e\n    \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eencode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'my_s3cr3t'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eauth_header\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# { Authorization: 'Bearer \u0026lt;token\u0026gt;' }\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Authorization'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edecoded_token\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eauth_header\u003c/span\u003e\n      \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eauth_header\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e' '\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# header: { 'Authorization': 'Bearer \u0026lt;token\u0026gt;' }\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ebegin\u003c/span\u003e\n        \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'my_s3cr3t'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ealgorithm: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'HS256'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eJWT\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eDecodeError\u003c/span\u003e\n        \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecurrent_user\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003edecoded_token\u003c/span\u003e\n      \u003cspan class=\"n\"\u003euser_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edecoded_token\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"s1\"\u003e'user_id'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n      \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003euser_id\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003elogged_in?\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e!!\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrent_user\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eauthorized\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003emessage: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Please log in'\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003elogged_in?\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eA few things to note about the code above: \u003ccode\u003ebefore_action :authorized\u003c/code\u003e will call\nthe authorized method \u003cstrong\u003ebefore anything else happens in our app\u003c/strong\u003e. This will\neffectively lock down the entire application. Next we'll augment our\n\u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/users_controller.rb\"\u003e\u003ccode\u003eUsersController\u003c/code\u003e\u003c/a\u003e and build our\n\u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/auth_controller.rb\"\u003e\u003ccode\u003eAuthController\u003c/code\u003e\u003c/a\u003e to allow signup/login.\u003c/p\u003e\n\n\u003ch3\u003eUpdating the \u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/users_controller.rb\"\u003eUsersController\u003c/a\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eLet's update the \u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/users_controller.rb\"\u003eUsersController\u003c/a\u003e so that it issues a token\nwhen users register for our app:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApi::V1::UsersController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eskip_before_action\u003c/span\u003e \u003cspan class=\"ss\"\u003e:authorized\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e\n      \u003cspan class=\"vi\"\u003e@token\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eencode_token\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003euser_id: \u003c/span\u003e\u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003euser: \u003c/span\u003e\u003cspan class=\"no\"\u003eUserSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"ss\"\u003ejwt: \u003c/span\u003e\u003cspan class=\"vi\"\u003e@token\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'failed to create user'\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003euser_params\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003epermit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:bio\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:avatar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe need to make sure to skip the \u003ccode\u003ebefore_action :authorized\u003c/code\u003e coming from\n\u003ca href=\"https://learning.flatironschool.com/server/app/controllers/application_controller.rb\"\u003eApplicationController\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApi::V1::UsersController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eskip_before_action\u003c/span\u003e \u003cspan class=\"ss\"\u003e:authorized\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt wouldn't make sense to ask our users to be logged in before they create an\naccount. This circular logic will make it \u003cstrong\u003eimpossible\u003c/strong\u003e for users to\nauthenticate into the app. How can a user create an account if our app asks them\nto be logged in or \u003ccode\u003eauthorized\u003c/code\u003e to do so? Skipping the before action 'unlocks'\nthis portion of our app.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://media.giphy.com/media/l1J9Jzcs9OHXa310k/giphy.gif\" alt=\"omg\"\u003e\u003c/p\u003e\n\n\u003cp\u003eTry creating a new user again with either\n\u003ca href=\"https://www.getpostman.com/apps\"\u003epostman\u003c/a\u003e or fetch and confirm that your server\nsuccessfully issues a token on signup.\u003c/p\u003e\n\n\u003cp\u003eYou'll also need to store that token somewhere when the response comes back so\nthat you can use it for subsequent requests.\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\"\u003e\u003ccode\u003elocalStorage\u003c/code\u003e\u003c/a\u003e\nworks for this, although there are some\n\u003ca href=\"https://stormpath.com/blog/where-to-store-your-jwts-cookies-vs-html5-web-storage\"\u003etradeoffs to storing JWTs in browser \u003ccode\u003elocalStorage\u003c/code\u003e\u003c/a\u003e that are out of the scope of\nthis lesson. Here's how you could use \u003ccode\u003elocalStorage\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://localhost:3000/api/v1/users\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eAccept\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enewUserData\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// save the token to localStorage for future access\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003elocalStorage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esetItem\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ejwt\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejwt\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// save the user somewhere (in state!) to log the user in\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003esetUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cimg src=\"https://media.giphy.com/media/fSkMuhRxstDi5g5dwo/giphy.gif\" alt=\"sign me up gif\"\u003e\u003c/p\u003e\n\n\u003ch3\u003eImplementing Login\u003c/h3\u003e\n\n\u003cp\u003eA token should be issued in two different controller actions:\n\u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/users_controller.rb\"\u003e\u003ccode\u003eUsersController#create\u003c/code\u003e\u003c/a\u003e and\n\u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/auth_controller.rb\"\u003e\u003ccode\u003eAuthController#create\u003c/code\u003e\u003c/a\u003e. Think about what these methods are\nresponsible for––\u003cstrong\u003ea user signing up for our app for the first time\u003c/strong\u003e and \u003cstrong\u003ean\nalready existing user logging back in\u003c/strong\u003e. In both cases, our server needs to\nissue a new token🥇.\u003c/p\u003e\n\n\u003cp\u003eWe'll need to create a new controller to handle login:\n\u003ccode\u003erails g controller api/v1/auth\u003c/code\u003e. Next, let's add the following to this newly\ncreated \u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/auth_controller.rb\"\u003eAuthController\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApi::V1::AuthController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eskip_before_action\u003c/span\u003e \u003cspan class=\"ss\"\u003e:authorized\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eusername: \u003c/span\u003e\u003cspan class=\"n\"\u003euser_login_params\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e#User#authenticate comes from BCrypt\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthenticate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser_login_params\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# encode token comes from ApplicationController\u003c/span\u003e\n      \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eencode_token\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"ss\"\u003euser_id: \u003c/span\u003e\u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003euser: \u003c/span\u003e\u003cspan class=\"no\"\u003eUserSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"ss\"\u003ejwt: \u003c/span\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :accepted\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003emessage: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Invalid username or password'\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003euser_login_params\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# params { user: {username: 'Chandler Bing', password: 'hi' } }\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003epermit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can simply call our\n\u003ca href=\"https://learning.flatironschool.com/server/app/controllers/application_controller.rb\"\u003e\u003ccode\u003eApplicationController#encode_token\u003c/code\u003e\u003c/a\u003e method, passing\nthe found user's ID in a payload. The newly created JWT can then be passed back\nalong with the user's data. \u003cstrong\u003eThe user data can be stored in our application's\nstate\u003c/strong\u003e, e.g., \u003ca href=\"https://reactjs.org/\"\u003eReact\u003c/a\u003e or \u003ca href=\"https://redux.js.org/\"\u003eRedux\u003c/a\u003e,\nwhile the token can be stored client-side (similar to our signup feature).\u003c/p\u003e\n\n\u003cp\u003eA few things to keep in mind about the code above:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eUser.find_by({ name: 'Chandler Bing' })\u003c/code\u003e will either return a user instance\nif that user can be found \u003cstrong\u003eOR\u003c/strong\u003e it will return \u003ccode\u003enil\u003c/code\u003e if that user is not\nfound.\u003c/li\u003e\n\u003cli\u003eIn the event that the user is not found,\n\u003ccode\u003euser = User.find_by(username: params[:username])\u003c/code\u003e will evaluate to \u003ccode\u003enil\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eCan we call \u003ccode\u003e.authenticate\u003c/code\u003e on \u003ccode\u003enil\u003c/code\u003e? NO!!\n\u003ccode\u003eNoMethodError (undefined method 'authenticate' for nil:NilClass)\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eRuby, however, is \u003cstrong\u003elazy\u003c/strong\u003e. If Ruby encounters \u003ccode\u003e\u0026amp;\u0026amp;\u003c/code\u003e, both statements in the\nexpression must evaluate to true. If the statement on the left side evaluates\nto false, Ruby will \u003cstrong\u003enot even look at the statement on the right\u003c/strong\u003e. Let's see\nan example:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# in irb or a rails console\u003c/span\u003e\n\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; true\u003c/span\u003e\n\n\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; false\u003c/span\u003e\n\n\n\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003enot_a_variable\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; NameError (undefined local variable or method `not_a_variable` for main:Object)\u003c/span\u003e\n\n\u003cspan class=\"kp\"\u003efalse\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003enot_a_variable\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; false\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet's take another look at our previous example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"vi\"\u003e@user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eusername: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eauthenticate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf \u003ccode\u003e@user\u003c/code\u003e is \u003ccode\u003enil\u003c/code\u003e, which is false-y, \u003cstrong\u003eruby will not even attempt to call\n\u003ccode\u003e@user.authenticate\u003c/code\u003e\u003c/strong\u003e. Without this catch, we'd get a\n\u003ccode\u003eNoMethodError (undefined method 'authenticate' for nil:NilClass)\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eAgain, the client should be sending a JWT along with every authenticated\nrequest. Refer to this diagram from\n\u003ca href=\"https://www.vaadata.com/blog/jwt-tokens-and-security-working-principles-and-use-cases/\"\u003eVaadata\u003c/a\u003e:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://www.vaadata.com/blog/wp-content/uploads/2016/12/JWT_tokens_EN.png\" alt=\"Vaadata article on token auth\"\u003e\u003c/p\u003e\n\n\u003cp\u003eA sample request might look like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003etoken\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003elocalStorage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetItem\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ejwt\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://localhost:3000/api/v1/profile\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eGET\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eAuthorization\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e`Bearer \u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003etoken\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e`\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo, let's update our \u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/users_controller.rb\"\u003e\u003ccode\u003eUsersController\u003c/code\u003e\u003c/a\u003e so that an\nauthenticated user can access their profile information:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApi::V1::UsersController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eskip_before_action\u003c/span\u003e \u003cspan class=\"ss\"\u003e:authorized\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eprofile\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003euser: \u003c/span\u003e\u003cspan class=\"no\"\u003eUserSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrent_user\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :accepted\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003evalid?\u003c/span\u003e\n      \u003cspan class=\"vi\"\u003e@token\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eencode_token\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"ss\"\u003euser_id: \u003c/span\u003e\u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003euser: \u003c/span\u003e\u003cspan class=\"no\"\u003eUserSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vi\"\u003e@user\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"ss\"\u003ejwt: \u003c/span\u003e\u003cspan class=\"vi\"\u003e@token\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'failed to create user'\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003euser_params\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:user\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003epermit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:bio\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:avatar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOne final note about the snippet above:\n\u003ca href=\"https://learning.flatironschool.com/server/app/controllers/application_controller.rb\"\u003e\u003ccode\u003eApplicationController\u003c/code\u003e\u003c/a\u003e calls \u003ccode\u003eauthorized\u003c/code\u003e \u003cstrong\u003ebefore\nany other controller methods are called\u003c/strong\u003e. If authorization fails, our server\nwill never call \u003ca href=\"https://learning.flatironschool.com/server/app/controllers/api/v1/users_controller.rb\"\u003e\u003ccode\u003eUsersController#profile\u003c/code\u003e\u003c/a\u003e and will instead:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003emessage: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Please log in'\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unauthorized\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThat's it! You should now have a server set up to create a token when a user\nlogs in or signs up, and authenticate the user using that token for future\nrequests.\u003c/p\u003e\n\n\u003cp\u003eThe frontend implementation is up to you. Remember, the key to using JWT for\nauthentication is to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eStore the token in the browser when the user logs in (such as localStorage)\u003c/li\u003e\n\u003cli\u003eSend the token along with every request the user makes using an\n\u003ccode\u003eAuthentication\u003c/code\u003e header\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eExternal Resources\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/HTTPS\"\u003eHTTPS Wikipedia Article\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://stormpath.com/blog/where-to-store-your-jwts-cookies-vs-html5-web-storage\"\u003eStoring JWTs in Cookies vs HTML5 localStorage\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://stackoverflow.com/questions/35291573/csrf-protection-with-json-web-tokens/35347022#35347022\"\u003eStackOverflow Post on Cookies vs localStorage for Storing Tokens\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/learn-co-curriculum/mod3-project-week-setup-example\"\u003eMod3 API Setup Guide\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/cyu/rack-cors\"\u003erack-cors gem\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\"\u003eMDN article on CORS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/codahale/bcrypt-ruby\"\u003eBcrypt gem\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/codahale/bcrypt-ruby/blob/master/lib/bcrypt/password.rb#L23\"\u003eBcrypt::Password source code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Salt_(cryptography)\"\u003eWhat is a Salt in Cryptography\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Cryptographic_hash_function\"\u003eWhat is a Cryptographic Hash Function\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://api.rubyonrails.org/classes/ActiveModel/SecurePassword/ClassMethods.html#method-i-has_secure_password\"\u003eActiveModel has_secure_password docs\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://blog.mozilla.org/webdev/2012/06/08/lets-talk-about-password-storage/\"\u003eMozilla Blog Post on Storing Passwords in a Database\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/rails-api/active_model_serializers\"\u003eActiveModelSerializers gem\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/active_record_validations.html\"\u003eActiveRecord Validations Documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.sitepoint.com/active-model-serializers-rails-and-json-oh-my/\"\u003eSitePoint Article on ActiveModelSerializers in Rails\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.getpostman.com/apps\"\u003ePostman App for making HTTP requests\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://jwt.io/introduction/\"\u003eJWT Documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/jwt/ruby-jwt\"\u003eJWT Ruby Gem on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://blog.angular-university.io/angular-jwt/\"\u003eJWT in Depth\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://scotch.io/tutorials/the-ins-and-outs-of-token-based-authentication\"\u003eScotch.io: The Ins and Outs of Token Based Authentication\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Authentication\"\u003eAuthentication\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Authorization\"\u003eAuthorization\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://stackoverflow.com/questions/6556522/authentication-versus-authorization\"\u003eAuthentication vs Authorization\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/laserlemon/figaro#getting-started\"\u003eFigaro Gem for hiding secrets in your app\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://ruby-doc.org/core-2.2.0/doc/syntax/exceptions_rdoc.html\"\u003eRuby Begin Rescue Documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://httpstatusrappers.com\"\u003eHTTP Status Rappers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\"\u003eMDN Article on HTTP Status Codes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://gist.github.com/mlanett/a31c340b132ddefa9cca\"\u003eRails Status Code Symbols Cheat Sheet\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://reactjs.org/\"\u003eReact Documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/\"\u003eRedux Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gafc3a4d2e43abaf2286e7dd0d8b355ec","title":"Password Protection Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-password-protection-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-password-protection-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-password-protection-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-password-protection-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eImplement login and signup with a password\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003ehas_secure_password\u003c/code\u003e to hash and salt passwords\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe're going to make a Rails app that covers a simple authentication flow: users\ncan create accounts, log in, and log out.\u003c/p\u003e\n\n\u003cp\u003eThere is some starter code in place for a Rails API backend and a React frontend.\nTo get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can work on this lab by running the tests with \u003ccode\u003elearn test\u003c/code\u003e. It will also be\nhelpful to see what's happening during the request/response cycle by running the\napp in the browser. You can run the Rails server with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd you can run React in another terminal with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou don't have to make any changes to the React code to get this lab working.\u003c/p\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eOur app has three pages:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eA signup page, where the user enters their username, password, and password\nconfirmation.\u003c/li\u003e\n\u003cli\u003eA login page, where the user submits their username and password and are then\nlogged in.\u003c/li\u003e\n\u003cli\u003eA user homepage, which says, \"Welcome, ${username}!\"\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eUsers should not be able to log in if they enter an incorrect password.\u003c/p\u003e\n\n\u003cp\u003eNote: we're not covering password validations in this lab, so don't worry about\nthose. Password validation is hard to get right anyway — it's surprisingly easy\nto produce rules that decrease password security rather than enhance it.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eTo complete the lab and get the tests passing, you will need to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eCreate a User model, and migrations for a \u003ccode\u003eusers\u003c/code\u003e table with \u003ccode\u003eusername\u003c/code\u003e and\n\u003ccode\u003epassword_digest\u003c/code\u003e columns. Make sure to use \u003ccode\u003epassword_digest\u003c/code\u003e, not\n\u003ccode\u003epassword\u003c/code\u003e, in your migration, and to include the has_secure_password macro\nin your model.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eCreate a \u003ccode\u003eUsersController\u003c/code\u003e with a \u003ccode\u003ecreate\u003c/code\u003e method that responds to a \u003ccode\u003ePOST /signup\u003c/code\u003e request. It should: create a new user; save their hashed password in\nthe database; save the user's ID in the session hash; and return the user\nobject in the JSON response.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eAdd a \u003ccode\u003eshow\u003c/code\u003e method to your \u003ccode\u003eUsersController\u003c/code\u003e that responds to a \u003ccode\u003eGET /me\u003c/code\u003e\nrequest. If the user is authenticated, return the user object in the JSON\nresponse.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eCreate a Sessions controller with a \u003ccode\u003ecreate\u003c/code\u003e action for logging in that responds to a \u003ccode\u003ePOST /login\u003c/code\u003e request, and a\n\u003ccode\u003edestroy\u003c/code\u003e action for logging out that responds to a \u003ccode\u003eDELETE /logout\u003c/code\u003e request.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHappy coding!\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://api.rubyonrails.org/classes/ActiveModel/SecurePassword/ClassMethods.html\"\u003e\u003ccode\u003ehas_secure_password\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g5103ee67e5dffa3d58f99ed733ef0ac5","title":"Persisting State and Displaying State","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-dispatch\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-dispatch/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-dispatch\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-dispatch/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003ePersist changes to state\u003c/li\u003e\n\u003cli\u003eDisplay changes to the state in the view\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eAn HTML page, \u003ccode\u003eindex.html\u003c/code\u003e, is provided and already linked to \u003ccode\u003esrc/reducer.js\u003c/code\u003e.\nOpen \u003ccode\u003eindex.html\u003c/code\u003e in browser to access the functions in \u003ccode\u003ereducer.js\u003c/code\u003e and follow\nalong.\u003c/p\u003e\n\n\u003ch2\u003eBuilding our Counter Application\u003c/h2\u003e\n\n\u003cp\u003ePreviously, we've had a reducer that updates state. In the example we used, we\ndefined a \u003ccode\u003eswitch\u003c/code\u003e statement with one \u003ccode\u003ecase\u003c/code\u003e and a default:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// =\u0026gt; {count: 1}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003ePersisting State\u003c/h2\u003e\n\n\u003cp\u003eAny time we want to preserve the return value of our reducer function, we need\nto store it in some variable, like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//  =\u0026gt; {count: 1}\u003c/span\u003e\n\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//  =\u0026gt; {count: 2}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere, we're reassigning \u003ccode\u003estate\u003c/code\u003e to the return value of our reducer. This way,\neach time \u003ccode\u003echangeState\u003c/code\u003e is called, it is using the updated state in its\narguments.\u003c/p\u003e\n\n\u003cp\u003eLet's encapsulate this procedure in a function so that we can just call that\nmethod and it will persist our changes. We'll name that function \u003ccode\u003edispatch\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// =\u0026gt; {count: 1}\u003c/span\u003e\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// =\u0026gt; {count: 2}\u003c/span\u003e\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// =\u0026gt; {count: 3}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNice! Now we just call our \u003ccode\u003edispatch\u003c/code\u003e function, and pass through our action, and\nour state is preserved. Let's walk through it.\u003c/p\u003e\n\n\u003cp\u003eWe declare our \u003ccode\u003estate\u003c/code\u003e variable and assign it a value of \u003ccode\u003e{count: 0}\u003c/code\u003e. Then, we\ndefine our reducer and our new function \u003ccode\u003edispatch\u003c/code\u003e. At the bottom, we call the\n\u003ccode\u003edispatch\u003c/code\u003e function and pass through our action, \u003ccode\u003e{type: 'counter/increment'}\u003c/code\u003e.\nWhen we call \u003ccode\u003edispatch\u003c/code\u003e, this calls our \u003ccode\u003echangeState\u003c/code\u003e reducer, and passes the\naction object to the reducer. When called, the \u003ccode\u003echangeState\u003c/code\u003e reducer also takes\nin \u003ccode\u003estate\u003c/code\u003e, which has been declared up above.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003estate\u003c/code\u003e is assigned the return value of \u003ccode\u003echangeState\u003c/code\u003e. Since the\n\u003ccode\u003ecounter/increment\u003c/code\u003e type was used, the returned value of \u003ccode\u003echangeState\u003c/code\u003e contains\na \u003ccode\u003ecount\u003c/code\u003e equal to the previous state's count plus one.\u003c/p\u003e\n\n\u003cp\u003eThus, our state is updated. Each time \u003ccode\u003edispatch\u003c/code\u003e is called, the current version\nof \u003ccode\u003estate\u003c/code\u003e is passed into \u003ccode\u003echangeState\u003c/code\u003e, and then \u003ccode\u003estate\u003c/code\u003e is assigned a new\nvalue based on what \u003ccode\u003echangeState\u003c/code\u003e returns.\u003c/p\u003e\n\n\u003ch2\u003eRendering Our State\u003c/h2\u003e\n\n\u003cp\u003eIgnoring React for a bit, how would we display something like this on a page?\nAnd how would we make sure that our HTML updates every time we change our state?\nWell, to render this on the page we can write a render function that changes our\nHTML:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003equerySelector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e#app\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow if we want to call our render function, we'll see our state on the page:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003equerySelector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e#app\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// call the render function\u003c/span\u003e\n\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd presto! Our number is displayed on the page. However, we want to call\n\u003ccode\u003erender\u003c/code\u003e every time our state changes. And it's safe to say our state will not\nchange unless we call the \u003ccode\u003edispatch\u003c/code\u003e function. So we can ensure that the\n\u003ccode\u003erender\u003c/code\u003e function runs every time that our \u003ccode\u003edispatch\u003c/code\u003e function is called by\nchanging our \u003ccode\u003edispatch\u003c/code\u003e function to the following.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003equerySelector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e#app\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eJust to show everything together finally:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003equerySelector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e#app\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf you copy the code above into \u003ccode\u003esrc/reducer.js\u003c/code\u003e and open \u003ccode\u003eindex.html\u003c/code\u003e in your\nbrowser, in the console, you can confirm everything is working by running\n\u003ccode\u003edispatch({type: 'counter/increment'})\u003c/code\u003e and watch as the displayed count\nincreases!\u003c/p\u003e\n\n\u003cp\u003eWith just this set of functions, we could actually apply our own Redux pattern\nto a regular ol' JavaScript and HTML webpage!\u003c/p\u003e\n\n\u003cp\u003eIn the future, we'll also see how to dispatch actions in response to user\nevents.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we've introduced a new function called the \u003ccode\u003edispatch\u003c/code\u003e function.\nOur \u003ccode\u003edispatch\u003c/code\u003e function solved two problems for us.\u003c/p\u003e\n\n\u003cp\u003eFirst, it persisted changes to our state. This is because we called the\n\u003ccode\u003edispatch\u003c/code\u003e function, the \u003ccode\u003edispatch\u003c/code\u003e function called our reducer, and then we\ntook the return value from the reducer and assigned it to be our new state.\u003c/p\u003e\n\n\u003cp\u003eSecond, it ensured that each time our state updates, our HTML updates to reflect\nthese changes. It does this by simply calling the \u003ccode\u003erender\u003c/code\u003e function. Each time\nwe call \u003ccode\u003edispatch\u003c/code\u003e it's as if we are then calling render. Don't worry about\nre-rendering too much. Remember that when we integrate with React, React will\nonly be virtually re-rendering the DOM, and then updating the DOM with the\nsmallest number of changes to ensure a performant application.\u003c/p\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gc9fe59f13503557cc1e406a309244d50","title":"Phase 4 Blog","type":"Assignment","content":"\u003cp\u003e\u003cspan\u003eSubmit the link to your blog post below.\u003c/span\u003e\u003c/p\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g631544e193ded0257d6614233b950fab","title":"Phase 4 Code Challenge: Pizzas","type":"Assignment","content":"\u003cp\u003e\u003ca class=\"instructure_file_link inline_disabled\" title=\"phase-4-rails-api-code-challenge-pizza-restaurants-070822.zip\" href=\"viewer/files/phase-4-rails-api-code-challenge-pizza-restaurants-070822.zip?canvas_=1\u0026amp;canvas_qs_wrap=1\" target=\"_blank\"\u003ephase-4-rails-api-code-challenge-pizza-restaurants-070822.zip\u003c/a\u003e\u003c/p\u003e","submissionTypes":"a file upload","graded":true,"pointsPossible":15.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g66b20be01ec7d2e39201c8e6337a5fe2","title":"Phase 4 Rubric","type":"Assignment","content":"\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e\u003cspan\u003e: Students must score\u0026nbsp;3 or higher on\u0026nbsp;\u003c/span\u003e\u003cstrong\u003eeach\u003c/strong\u003e\u003cspan\u003e\u0026nbsp;deliverable to pass the overall code challenge.\u003c/span\u003e\u003c/p\u003e","submissionTypes":null,"graded":false,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g3b4f39132eabdae42a9d54c5162fbd97","title":"Putting it All Together: Auth","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-putting-it-all-together-auth\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-putting-it-all-together-auth/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-putting-it-all-together-auth\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-putting-it-all-together-auth/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eAuthenticate a user with a username and password\u003c/li\u003e\n\u003cli\u003eAuthorize logged in users for specific actions\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eThis is the biggest lab yet for this phase, so make sure to set aside some time\nfor this one. It's set up with a few different checkpoints so that you can build\nout the features incrementally. By the end of this lab, you'll have built out\nfull authentication and authorization flow using sessions and cookies in Rails,\nso getting this lab under your belt will give you some good code to reference\nwhen you're building your next project with auth. Let's get started!\u003c/p\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eAs with other labs in this section, there is some starter code in place for a\nRails API backend and a React frontend. To get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can work on this lab by running the tests with \u003ccode\u003elearn test\u003c/code\u003e. It will also be\nhelpful to see what's happening during the request/response cycle by running the\napp in the browser. You can run the Rails server with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd you can run React in another terminal with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eFor all the deliverables below, if you use any Rails generators to create models\nor controllers, make sure to use the \u003ccode\u003e--no-test-framework\u003c/code\u003e flag to avoid\noverwriting the existing tests.\u003c/p\u003e\n\n\u003ch3\u003eModels\u003c/h3\u003e\n\n\u003cp\u003eCreate a \u003ccode\u003eUser\u003c/code\u003e model with the following attributes:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eusername\u003c/code\u003e that is a \u003ccode\u003estring\u003c/code\u003e type\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003epassword_digest\u003c/code\u003e that is a \u003ccode\u003estring\u003c/code\u003e type\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eimage_url\u003c/code\u003e that is a \u003ccode\u003estring\u003c/code\u003e type\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ebio\u003c/code\u003e that is a \u003ccode\u003estring\u003c/code\u003e type\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eYour \u003ccode\u003eUser\u003c/code\u003e model should also:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eincorporate the \u003ccode\u003ehas_secure_password\u003c/code\u003e macro to enable password encryption with\n\u003ccode\u003ebcrypt\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003evalidate the user's username to ensure that it is \u003cstrong\u003epresent\u003c/strong\u003e and \u003cstrong\u003eunique\u003c/strong\u003e\n(no two users can have the same username)\u003c/li\u003e\n\u003cli\u003ea user \u003cstrong\u003ehas many\u003c/strong\u003e recipes\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eNext, create a \u003ccode\u003eRecipe\u003c/code\u003e model with the following attributes:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ea recipe \u003cstrong\u003ebelongs to\u003c/strong\u003e a user\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003etitle\u003c/code\u003e that is a \u003ccode\u003estring\u003c/code\u003e type\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003einstructions\u003c/code\u003e that is a \u003ccode\u003etext\u003c/code\u003e type\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eminutes_to_complete\u003c/code\u003e that is an \u003ccode\u003einteger\u003c/code\u003e type\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAdd validations for the \u003ccode\u003eRecipe\u003c/code\u003e model:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003etitle\u003c/code\u003e must be present\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003einstructions\u003c/code\u003e must be present and at least 50 characters long\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eRun the migrations after creating your models.\u003c/p\u003e\n\n\u003cp\u003eEnsure that the tests for the models are passing before moving forward. To run\nthe tests for \u003cem\u003eonly\u003c/em\u003e the model files, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erspec spec/models\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eSign Up Feature\u003c/h3\u003e\n\n\u003cp\u003eAfter creating the models, the next step is building out a sign up feature.\u003c/p\u003e\n\n\u003cp\u003eHandle sign up by implementing a \u003ccode\u003ePOST /signup\u003c/code\u003e route. It should:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eBe handled in the \u003ccode\u003eUsersController\u003c/code\u003e with a \u003ccode\u003ecreate\u003c/code\u003e action\u003c/li\u003e\n\u003cli\u003eIn the \u003ccode\u003ecreate\u003c/code\u003e action, if the user is valid:\n\n\u003cul\u003e\n\u003cli\u003eSave a new user to the database with their username, encrypted password,\nimage URL, and bio\u003c/li\u003e\n\u003cli\u003eSave the user's ID in the session hash\u003c/li\u003e\n\u003cli\u003eReturn a JSON response with the user's ID, username, image URL, and bio; and\nan HTTP status code of 201 (Created)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIf the user is not valid:\n\n\u003cul\u003e\n\u003cli\u003eReturn a JSON response with the error message, and an HTTP status code of\n422 (Unprocessable Entity)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNote: Recall that we need to format our error messages in a way that makes it\neasy to display the information in our frontend. For this lab, because we are\nsetting up multiple validations on our \u003ccode\u003eUser\u003c/code\u003e and \u003ccode\u003eRecipe\u003c/code\u003e models, our error\nresponses need to be formatted in a way that accommodates multiple errors.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3\u003eAuto-Login Feature\u003c/h3\u003e\n\n\u003cp\u003eUsers can log into our app! 🎉 But we want them to \u003cstrong\u003estay\u003c/strong\u003e logged in when they\nrefresh the page, or navigate back to our site from somewhere else.\u003c/p\u003e\n\n\u003cp\u003eHandle auto-login by implementing a \u003ccode\u003eGET /me\u003c/code\u003e route. It should:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eBe handled in the \u003ccode\u003eUsersController\u003c/code\u003e with a \u003ccode\u003eshow\u003c/code\u003e action\u003c/li\u003e\n\u003cli\u003eIn the \u003ccode\u003eshow\u003c/code\u003e action, if the user is logged in (if their \u003ccode\u003euser_id\u003c/code\u003e is in the\nsession hash):\n\n\u003cul\u003e\n\u003cli\u003eReturn a JSON response with the user's ID, username, image URL, and bio; and\nan HTTP status code of 201 (Created)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIf the user is \u003cstrong\u003enot\u003c/strong\u003e logged in when they make the request:\n\n\u003cul\u003e\n\u003cli\u003eReturn a JSON response with an error message, and a status of 401\n(Unauthorized)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eMake sure the signup and auto-login features work as intended before moving\nforward. You can test the \u003ccode\u003eUsersController\u003c/code\u003e requests with RSpec:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erspec spec/requests/users_spec.rb\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou should also be able to test this in the React application by signing up via\nthe sign up form to check the \u003ccode\u003ePOST /signup\u003c/code\u003e route; and refreshing the page\nafter logging in, and seeing that you are still logged in to test the \u003ccode\u003eGET /me\u003c/code\u003e\nroute.\u003c/p\u003e\n\n\u003ch3\u003eLogin Feature\u003c/h3\u003e\n\n\u003cp\u003eNow that users can create accounts via the API, let's give them a way to log\nback into an existing account.\u003c/p\u003e\n\n\u003cp\u003eHandle login by implementing a \u003ccode\u003ePOST /login\u003c/code\u003e route. It should:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eBe handled in the \u003ccode\u003eSessionsController\u003c/code\u003e with a \u003ccode\u003ecreate\u003c/code\u003e action\u003c/li\u003e\n\u003cli\u003eIn the \u003ccode\u003ecreate\u003c/code\u003e action, if the user's username and password are authenticated:\n\n\u003cul\u003e\n\u003cli\u003eSave the user's ID in the session hash\u003c/li\u003e\n\u003cli\u003eReturn a JSON response with the user's ID, username, image URL, and bio\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIf the user's username and password are not authenticated:\n\n\u003cul\u003e\n\u003cli\u003eReturn a JSON response with an error message, and a status of 401\n(Unauthorized)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eMake sure this route works as intended by running \u003ccode\u003elearn test\u003c/code\u003e before moving\nforward. You should also be able to test this in the React application by\nlogging in via the login form.\u003c/p\u003e\n\n\u003ch3\u003eLogout Feature\u003c/h3\u003e\n\n\u003cp\u003eUsers can log into our app! 🎉 Now, let's give them a way to log out.\u003c/p\u003e\n\n\u003cp\u003eHandle logout by implementing a \u003ccode\u003eDELETE /logout\u003c/code\u003e route. It should:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eBe handled in the \u003ccode\u003eSessionsController\u003c/code\u003e with a \u003ccode\u003edestroy\u003c/code\u003e action\u003c/li\u003e\n\u003cli\u003eIn the \u003ccode\u003edestroy\u003c/code\u003e action, if the user is logged in (if their \u003ccode\u003euser_id\u003c/code\u003e is in\nthe session hash):\n\n\u003cul\u003e\n\u003cli\u003eRemove the user's ID from the session hash\u003c/li\u003e\n\u003cli\u003eReturn an empty response with an HTTP status code of 204 (No Content)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIf the user is \u003cstrong\u003enot\u003c/strong\u003e logged in when they make the request:\n\n\u003cul\u003e\n\u003cli\u003eReturn a JSON response with an error message, and a status of 401\n(Unauthorized)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eMake sure the login and logout features work as intended before moving forward.\nYou can test the \u003ccode\u003eSessionsController\u003c/code\u003e requests with RSpec:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erspec spec/requests/sessions_spec.rb\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou should also be able to test this in the React application by logging in to\ncheck the \u003ccode\u003ePOST /login\u003c/code\u003e route; and logging out with the logout button to test\nthe \u003ccode\u003eDELETE /logout\u003c/code\u003e route.\u003c/p\u003e\n\n\u003ch3\u003eRecipe List Feature\u003c/h3\u003e\n\n\u003cp\u003eUsers should only be able to view recipes on our site after logging in.\u003c/p\u003e\n\n\u003cp\u003eHandle recipe viewing by implementing a \u003ccode\u003eGET /recipes\u003c/code\u003e route. It should:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eBe handled in the \u003ccode\u003eRecipesController\u003c/code\u003e with a \u003ccode\u003eindex\u003c/code\u003e action\u003c/li\u003e\n\u003cli\u003eIn the \u003ccode\u003eindex\u003c/code\u003e action, if the user is logged in (if their \u003ccode\u003euser_id\u003c/code\u003e is in the\nsession hash):\n\n\u003cul\u003e\n\u003cli\u003eReturn a JSON response with an array of all recipes with their title,\ninstructions, and minutes to complete data along with a nested user object;\nand an HTTP status code of 201 (Created)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIf the user is \u003cstrong\u003enot\u003c/strong\u003e logged in when they make the request:\n\n\u003cul\u003e\n\u003cli\u003eReturn a JSON response with an error message, and a status of 401\n(Unauthorized)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eRecipe Creation Feature\u003c/h3\u003e\n\n\u003cp\u003eNow that users can log in, let's allow them to create new recipes!\u003c/p\u003e\n\n\u003cp\u003eHandle recipe creation by implementing a \u003ccode\u003ePOST /recipes\u003c/code\u003e route. It should:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eBe handled in the \u003ccode\u003eRecipesController\u003c/code\u003e with a \u003ccode\u003ecreate\u003c/code\u003e action\u003c/li\u003e\n\u003cli\u003eIn the \u003ccode\u003ecreate\u003c/code\u003e action, if the user is logged in (if their \u003ccode\u003euser_id\u003c/code\u003e is in the\nsession hash):\n\n\u003cul\u003e\n\u003cli\u003eSave a new recipe to the database if it is valid. The recipe should \u003cstrong\u003ebelong\nto\u003c/strong\u003e the logged in user, and should have title, instructions, and minutes to\ncomplete data provided from the params hash\u003c/li\u003e\n\u003cli\u003eReturn a JSON response with the title, instructions, and minutes to complete\ndata along with a nested user object; and an HTTP status code of 201\n(Created)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIf the user is \u003cstrong\u003enot\u003c/strong\u003e logged in when they make the request:\n\n\u003cul\u003e\n\u003cli\u003eReturn a JSON response with an error message, and a status of 401\n(Unauthorized)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIf the recipe is \u003cstrong\u003enot valid\u003c/strong\u003e:\n\n\u003cul\u003e\n\u003cli\u003eReturn a JSON response with the error messages, and an HTTP status code of\n422 (Unprocessable Entity)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAfter finishing the \u003ccode\u003eRecipeController\u003c/code\u003e features, you're done! Make sure to check\nyour work. You should be able to run the full test suite now with \u003ccode\u003elearn test\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eYou should also be able to test this in the React application by creating a new\nrecipe with the recipe form, and viewing a list of recipes.\u003c/p\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g52c1685d1ee3e9154a29c53dc7562f0c","title":"Putting it All Together: Client-Server Communication","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-debugging-network-requests-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-debugging-network-requests-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-debugging-network-requests-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-debugging-network-requests-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand how to communicate between client and server using fetch, and how\nthe server will process the request based on the URL, HTTP verb, and request\nbody\u003c/li\u003e\n\u003cli\u003eDebug common problems that occur as part of the request-response cycle\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eJust like the last lesson, we've got code for a React frontend and Rails API\nbackend set up. This time though, it's up to you to use your debugging skills to\nfind and fix the errors!\u003c/p\u003e\n\n\u003cp\u003eTo get the backend set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, in a new terminal, run the frontend:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eConfirm both applications are up and running by visiting\n\u003ca href=\"http://localhost:4000\"\u003e\u003ccode\u003elocalhost:4000\u003c/code\u003e\u003c/a\u003e and viewing the list of toys in your\nReact application.\u003c/p\u003e\n\n\u003ch2\u003eDeliverables\u003c/h2\u003e\n\n\u003cp\u003eIn this application, we have the following features:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDisplay a list of all the toys\u003c/li\u003e\n\u003cli\u003eAdd a new toy when the toy form is submitted\u003c/li\u003e\n\u003cli\u003eUpdate the number of likes for a toy\u003c/li\u003e\n\u003cli\u003eDonate a toy to Goodwill (and delete it from our database)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe code is in place for all these features on our frontend, but there are some\nproblems with our API! We're able to display all the toys, but the other three\nfeatures are broken.\u003c/p\u003e\n\n\u003cp\u003eUse your debugging tools to find and fix these issues.\u003c/p\u003e\n\n\u003cp\u003eThere are no tests for this lesson, so you'll need to do your debugging in the\nbrowser and using the Rails server logs and \u003ccode\u003ebyebug\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: You shouldn't need to modify any of the React code to get the\napplication working. You should only need to change the code for the Rails API.\u003c/p\u003e\n\n\u003cp\u003eAs you work on debugging these issues, use the space in this README file to take\nnotes about your debugging process. Being a strong debugger is all about\ndeveloping a process, and it's helpful to document your steps as part of\ndeveloping your own process.\u003c/p\u003e\n\n\u003ch2\u003eYour Notes Here\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eAdd a new toy when the toy form is submitted\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eHow I debugged:\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUpdate the number of likes for a toy\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eHow I debugged:\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDonate a toy to Goodwill (and delete it from our database)\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eHow I debugged:\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb811e74fdb86d448221393a479f8442b","title":"Putting it All Together: Rails CRUD","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-mini-project-crud\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-mini-project-crud/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-mini-project-crud\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-mini-project-crud/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eGenerate an API that follows REST conventions\u003c/li\u003e\n\u003cli\u003eHandle full CRUD with one model\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow's your chance to put all the CRUD actions we've been learning to good use!\nWe're going to be building out an API in Rails as a backend for a spice store.\nThere's a React application in the \u003ccode\u003e/client\u003c/code\u003e directory that's all set up for the\nfrontend; your goal is to build out the necessary CRUD actions in the backend by\nfollowing RESTful conventions.\u003c/p\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eTo set up the frontend and backend dependencies, from the root directory, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003ch3\u003eSpice Model\u003c/h3\u003e\n\n\u003cp\u003eGenerate a class and migrations for a \u003ccode\u003eSpice\u003c/code\u003e model with the following attributes:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003etitle\u003c/code\u003e (string)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eimage\u003c/code\u003e (string)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003edescription\u003c/code\u003e (string)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003enotes\u003c/code\u003e (string)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003erating\u003c/code\u003e (float)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAfter you've created the model, check your work by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, use \u003ccode\u003erails c\u003c/code\u003e to view data about the spices.\u003c/p\u003e\n\n\u003ch3\u003eRoutes\u003c/h3\u003e\n\n\u003cp\u003eYour API should have the following routes:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eGET /spices\u003c/code\u003e: return an array of all spices\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ePOST /spices\u003c/code\u003e: create a new spice\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ePATCH /spices/:id\u003c/code\u003e: update an existing spice\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eDELETE /spices/:id\u003c/code\u003e: delete an existing spice\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eMake sure to follow REST conventions for generating these routes.\u003c/p\u003e\n\n\u003cp\u003eYou should also use strong params in the controller for the POST and PATCH\nrequests.\u003c/p\u003e\n\n\u003cp\u003eUse the tests to guide your progress and ensure that each route has the expected\nJSON response body and HTTP status code. You can also run the server with\n\u003ccode\u003erails s\u003c/code\u003e and test out the routes manually using Postman.\u003c/p\u003e\n\n\u003cp\u003eGood luck! 💪\u003c/p\u003e\n\n\u003cp\u003eOnce your API is working, you can try out the full application in the browser\nwhen you're ready to see everything come together. You can run the Rails\napplication in one terminal by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, \u003cstrong\u003eopen another terminal\u003c/strong\u003e and run React:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEach application will run on its own port on \u003ccode\u003elocalhost\u003c/code\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eReact: \u003ca href=\"http://localhost:4000\"\u003ehttp://localhost:4000\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eRails: \u003ca href=\"http://localhost:3000\"\u003ehttp://localhost:3000\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g91e9ec1190f54eccb5388f98316256ab","title":"Rails and Active Record","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-and-active-record-readme\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-and-active-record-readme/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-and-active-record-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-and-active-record-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Rails to generate a model\u003c/li\u003e\n\u003cli\u003eCreate seed data\u003c/li\u003e\n\u003cli\u003eTest code using the Rails console\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this code-along, we'll discuss how Active Record fits into a Rails\napplication, as well as some tools to make it easier to set up models in your\nRails apps.\u003c/p\u003e\n\n\u003cp\u003eFork and clone this repo, then run \u003ccode\u003ebundle install\u003c/code\u003e to download the required\ndependencies before coding along.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This code-along has been set up as a Rails app for you, so you will\nbe running all the terminal commands inside the lesson directory.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\n\n\n\n\u003ch2\u003eActive Record's Role\u003c/h2\u003e\n\n\u003cp\u003eActive Record is the built-in ORM that Rails utilizes to manage the model\naspects of an application. What is an ORM? An ORM is an Object Relational Mapper\nsystem — a module that enables your application to manage data in a\nmethod-driven structure. This means that you are able to run queries, add\nrecords, and perform all of the traditional database processes by leveraging\nmethods as opposed to writing SQL manually. For example, below is the\ntraditional way that we would query a database of 'cheeses' using SQL:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight sql\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"k\"\u003eFROM\u003c/span\u003e \u003cspan class=\"n\"\u003echeeses\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eCompared with leveraging Active Record:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBy using Active Record, you are also able to perform advanced query tasks, such\nas method chaining and scoping, which typically require less code and make for a\nmore readable query.\u003c/p\u003e\n\n\u003ch2\u003eActive Record Models\u003c/h2\u003e\n\n\u003cp\u003eBy using model files, we are able to create an organized layer of abstraction\nfor our data. An important thing to remember is that at the end of the day the\nmodel file is a Ruby class. It will typically inherit from the\n\u003ccode\u003eActiveRecord::Base\u003c/code\u003e class, which means that it has access to a number of\nmethods that assist in working with the database. However, you can treat it like\na regular Ruby class, allowing you to create methods, data attributes, and\neverything else that you would want to do in a class file.\u003c/p\u003e\n\n\u003cp\u003eA typical model file will contain code such as but not limited to the following:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://api.rubyonrails.org/classes/ActiveRecord/Scoping/Named/ClassMethods.html\"\u003eCustom scopes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eModel instance methods\u003c/li\u003e\n\u003cli\u003eDefault settings for database columns\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://api.rubyonrails.org/classes/ActiveModel/Validations/ClassMethods.html\"\u003eValidations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html\"\u003eModel-to-model relationships\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://api.rubyonrails.org/classes/ActiveRecord/Callbacks.html\"\u003eCallbacks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eCustom algorithms\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cem\u003eIf any/all of the items above aren't familiar to you yet, don't worry. We'll\ncover them in future lessons. It's important to have an idea of what can be\nincluded in a model file, even at this early stage.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003eCreating an Active Record Model\u003c/h2\u003e\n\n\u003cp\u003eAs a Rails developer, one common task you'll have is creating models that are\nconnected to a database via Active Record. To simplify this task, and ensure\nthat your code follows Rails conventions, Rails has a built-in generator\nto help write some of the code you'll need for a new model.\u003c/p\u003e\n\n\u003cp\u003eLet's start with a definition of what our model will be. For our Cheese Shop\napplication, we'll want a way to keep track of all of our cheeses. In\nparticular, we'll want to know our cheese's \u003cem\u003ename\u003c/em\u003e, its \u003cem\u003eprice\u003c/em\u003e in dollars, and\nwhether it's a \u003cem\u003ebest seller\u003c/em\u003e. In the database, our \u003ccode\u003echeeses\u003c/code\u003e should look something\nlike this:\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003ccode\u003eid\u003c/code\u003e\u003c/th\u003e\n\u003cth\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/th\u003e\n\u003cth\u003e\u003ccode\u003eprice\u003c/code\u003e\u003c/th\u003e\n\u003cth\u003e\u003ccode\u003eis_best_seller\u003c/code\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e1\u003c/td\u003e\n\u003ctd\u003eCheddar\u003c/td\u003e\n\u003ctd\u003e3\u003c/td\u003e\n\u003ctd\u003etrue\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2\u003c/td\u003e\n\u003ctd\u003ePepper Jack\u003c/td\u003e\n\u003ctd\u003e4\u003c/td\u003e\n\u003ctd\u003etrue\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e3\u003c/td\u003e\n\u003ctd\u003eLimburger\u003c/td\u003e\n\u003ctd\u003e8\u003c/td\u003e\n\u003ctd\u003efalse\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eTo set this up in our Rails app, we'll need a few things:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eA \u003cstrong\u003emigration\u003c/strong\u003e with instructions on how the table should be created in the\ndatabase\u003c/li\u003e\n\u003cli\u003eA \u003cstrong\u003emodel\u003c/strong\u003e so we can interact with that table via Active Record\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eUsing Rails Generators\u003c/h2\u003e\n\n\u003cp\u003eRails gives us an easy way of creating both of these things using a\n\u003cstrong\u003egenerator\u003c/strong\u003e we can run from the command line.\u003c/p\u003e\n\n\u003cp\u003eMake sure you've navigated into the directory for this lesson, then run this\ncommand in your terminal:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g model Cheese name price:integer is_best_seller:boolean \u003cspan class=\"nt\"\u003e--no-test-framework\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe're telling Rails to generate the code for a Cheese model, with a \u003ccode\u003ename\u003c/code\u003e\nattribute (string, the default data type), \u003ccode\u003eprice\u003c/code\u003e (integer), and\n\u003ccode\u003eis_best_seller\u003c/code\u003e (boolean).\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eIMPORTANT\u003c/strong\u003e: Note that we have added the \u003ccode\u003eno-test-framework\u003c/code\u003e argument to our\n\u003ccode\u003erails g\u003c/code\u003e command. \u003cstrong\u003eYou should add this argument to every Rails generator\ncommand you run while you're working in the Flatiron curriculum.\u003c/strong\u003e Without this\nflag, the Rails generator will automatically create spec files that can\ninterfere with the lab tests. If you forget to add it, you will have to comb\nthrough your local repo and manually delete all of the newly-created,\nunnecessary tests. This is not fun!\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003ePlease, remember the \u003ccode\u003e--no-test-framework\u003c/code\u003e argument.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eYou'll see this code added in a \u003ccode\u003ecreate_cheeses.rb\u003c/code\u003e file — the name of the file\nwill be prepended with a time stamp — inside the \u003ccode\u003edb/migrate\u003c/code\u003e folder:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCreateCheeses\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eMigration\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mf\"\u003e6.1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003echange\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecreate_table\u003c/span\u003e \u003cspan class=\"ss\"\u003e:cheeses\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n      \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estring\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\n      \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einteger\u003c/span\u003e \u003cspan class=\"ss\"\u003e:price\u003c/span\u003e\n      \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eboolean\u003c/span\u003e \u003cspan class=\"ss\"\u003e:is_best_seller\u003c/span\u003e\n\n      \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etimestamps\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs well as this code in the \u003ccode\u003eapp/models\u003c/code\u003e folder:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/models/cheese.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCheese\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eWorking With Migrations\u003c/h2\u003e\n\n\u003cp\u003eNow that we've created this migration, we have to run the migration, which will\ncreate this table for us and generate a schema file.\u003c/p\u003e\n\n\u003cp\u003eRun the migration by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFor a refresher on migrations, see \u003ca href=\"http://edgeguides.rubyonrails.org/active_record_migrations.html\"\u003ethis documentation\u003c/a\u003e. This\nmigration follows the standard naming convention. When you want to create a\ntable, the migration's class name should reflect that; hence, \u003ccode\u003eCreateCheeses\u003c/code\u003e.\nThis is then reiterated by the \u003ccode\u003e:cheeses\u003c/code\u003e argument passed to the \u003ccode\u003ecreate_table\u003c/code\u003e\nmethod. The filename itself needs to be unique, and you will notice that the\nmigration file name is prepended with a timestamp value to make sure that we can\nrun migrations in the order they were written.\u003c/p\u003e\n\n\u003cp\u003eThe timestamp also plays a role in making sure that only new migrations run when\nwe run \u003ccode\u003erails db:migrate\u003c/code\u003e. The \u003ccode\u003edb/schema.rb\u003c/code\u003e file is updated with a version\nnumber corresponding to the timestamp of the last migration you ran. When you\nrun \u003ccode\u003erails db:migrate\u003c/code\u003e again, only migrations whose timestamps are greater than\nthe schema's version number will run. So, the numbers at the beginning of the\nfilenames of your migrations are required so Active Record can be sure to run\neach of your migrations just once and in the proper order.\u003c/p\u003e\n\n\u003cp\u003eAfter running \u003ccode\u003erails db:migrate\u003c/code\u003e we can see that our \u003ccode\u003edb/schema.rb\u003c/code\u003e file has\nbeen updated with our new \u003ccode\u003echeeses\u003c/code\u003e table!\u003c/p\u003e\n\n\u003ch2\u003eSeeding Data\u003c/h2\u003e\n\n\u003cp\u003eTo add some initial data in our database, we can take advantage of the 'seeds' feature of Rails. We can write some code in a \u003ccode\u003edb/seeds.rb\u003c/code\u003e file that is responsible for setting up our database:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# db/seeds.rb\u003c/span\u003e\n\u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Cheddar'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eprice: \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eis_best_seller: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Pepper Jack'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eprice: \u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eis_best_seller: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Limburger'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eprice: \u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eis_best_seller: \u003c/span\u003e\u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, run \u003ccode\u003erails db:seed\u003c/code\u003e to execute all the code in the \u003ccode\u003edb/seeds.rb\u003c/code\u003e file.\u003c/p\u003e\n\n\u003cp\u003eLet's test out our code using the Rails console. Open up the console by running\n\u003ccode\u003erails console\u003c/code\u003e or \u003ccode\u003erails c\u003c/code\u003e. Running the console will load the entire Rails\nenvironment and give you command line access to the app and the database. The\nconsole is a powerful tool that you can leverage in order to test out scripts,\nmethods, and database queries.\u003c/p\u003e\n\n\u003cp\u003eOnce the session has started, run the following command to ensure it recognizes\nour new Cheese model:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf everything is set up properly, you will see that it returns all the cheeses\nwe created in the seed file! You can test out some other methods here as well:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRecall that Active Record also allows us to use method chaining to access the\nattributes we've defined for our Cheese model:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ename\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith our \u003ccode\u003eCheese\u003c/code\u003e model working, let's add a new feature that returns a summary\nof a cheese. Exit out of the Rails console with \u003ccode\u003econtrol + d\u003c/code\u003e. Then add this to\nthe Cheese model file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/models/cheese.rb\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esummary\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ename\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e: $\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eprice\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eGo ahead and test this new method out in the Rails console by running a query on\none of our records, for example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esummary\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you didn't exit the Rails console before adding the new Cheese#summary\nmethod, you can get the console to reload all your code by running \u003ccode\u003ereload!\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIt should return the summary value of the last cheese we created: \u003ccode\u003e\"Limburger: $8\"\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eAs you may have noticed, we did not have to create a controller, route, view,\netc. in order to get the \u003ccode\u003eCheese\u003c/code\u003e model working. The data aspect of the\napplication can work separately from the view and data flow logic. This level of\nabstraction makes it possible to test the behavior of our models without\nhaving them strongly coupled to how they are rendered to the user.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWe covered quite a bit of material in this lesson. You should now have a firm\nunderstanding of Active Record models in Rails. Active Record is a powerful tool\nthat enables developers to focus on the logic of their applications while\nstreamlining processes such as connecting to the database, running queries, and\nmuch more.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat are some of the ways that using Active Record in Rails makes it easier\nto interact with model data stored in a database?\u003c/li\u003e\n\u003cli\u003eWhat are the advantages of using a Rails generator to create our models?\u003c/li\u003e\n\u003cli\u003eWhy is it important for migration file names to have a timestamp prepended?\u003c/li\u003e\n\u003c/ol\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g5a1e9a7887b42a6076238d26032a2838","title":"Rails and Active Record Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-and-active-record-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-and-active-record-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-and-active-record-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-and-active-record-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e  \u003ch2\u003eLearning Goals\u003c/h2\u003e  \u003cul\u003e \u003cli\u003eUse Rails to generate a model\u003c/li\u003e \u003cli\u003eAdd methods to a model\u003c/li\u003e \u003c/ul\u003e  \u003ch2\u003eIntroduction\u003c/h2\u003e  \u003cp\u003eThroughout this module, we'll be building an application for viewing student data. In this lesson, we'll start by creating a Student model.\u003c/p\u003e  \u003cp\u003eTo get set up, run \u003ccode\u003ebundle install\u003c/code\u003e to download all the necessary dependencies.\u003c/p\u003e  \u003cp\u003eThen, run \u003ccode\u003elearn test\u003c/code\u003e to run the tests.\u003c/p\u003e  \u003ch2\u003eInstructions\u003c/h2\u003e  \u003cp\u003eUsing \u003ccode\u003erails g model\u003c/code\u003e, create a new Student model with the following attributes:\u003c/p\u003e  \u003cul\u003e \u003cli\u003e\n\u003ccode\u003efirst_name\u003c/code\u003e (string)\u003c/li\u003e \u003cli\u003e\n\u003ccode\u003elast_name\u003c/code\u003e (string)\u003c/li\u003e \u003cli\u003e\n\u003ccode\u003egrade\u003c/code\u003e (integer)\u003c/li\u003e \u003c/ul\u003e  \u003cp\u003e\u003cstrong\u003eDon't forget to add the \u003ccode\u003e--no-test-framework\u003c/code\u003e argument to your generate command!\u003c/strong\u003e\u003c/p\u003e  \u003cp\u003eAdd an instance method \u003ccode\u003eStudent#to_s\u003c/code\u003e which will return the student's first name and last name concatenated with a space between. For example: calling \u003ccode\u003e.to_s\u003c/code\u003e on a student with a \u003ccode\u003efirst_name\u003c/code\u003e of \"Dwayne\" and a \u003ccode\u003elast_name\u003c/code\u003e of \"Johnson\" should return \"Dwayne Johnson\".\u003c/p\u003e  \u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: remember to run \u003ccode\u003erails db:migrate\u003c/code\u003e after generating the migration file. You can also test your code by running \u003ccode\u003erails c\u003c/code\u003e and creating a Student instance.\u003c/p\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g1ad81b75e4351a4c20473cf15d2ec0e0","title":"Rails Create, Index, and Show Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-create-read-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-create-read-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-create-read-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-create-read-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eGenerate \u003ccode\u003ecreate\u003c/code\u003e, \u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003eshow\u003c/code\u003e routes for one resource\u003c/li\u003e\n\u003cli\u003eUse strong params to create a new resource\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll be building an API for a plant store! In addition to our\nusual Rails code, there is code for a React frontend application in the \u003ccode\u003eclient\u003c/code\u003e\ndirectory.\u003c/p\u003e\n\n\u003cp\u003eThe code for the frontend application is done. Your job is to create the Rails\nAPI so that the \u003ccode\u003efetch\u003c/code\u003e requests on the frontend work successfully.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eThe React application is in the \u003ccode\u003eclient\u003c/code\u003e directory. To set it up, from the root\ndirectory, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUsing \u003ccode\u003e--prefix client\u003c/code\u003e will run the npm command within the \u003ccode\u003eclient\u003c/code\u003e directory.\u003c/p\u003e\n\n\u003cp\u003eTo set up your backend, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo see how the React application and Rails API are interacting, you can run the\nRails application in one terminal by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, \u003ca href=\"https://code.visualstudio.com/docs/editor/integrated-terminal#_managing-terminals\"\u003eopen another terminal\u003c/a\u003e and run React:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEach application will run on its own port on \u003ccode\u003elocalhost\u003c/code\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eReact: \u003ca href=\"http://localhost:4000\"\u003ehttp://localhost:4000\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eRails: \u003ca href=\"http://localhost:3000\"\u003ehttp://localhost:3000\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eTake a look through the components in the \u003ccode\u003eclient/src/components/\u003c/code\u003e folder to get\na feel for what our app does. Note that the \u003ccode\u003efetch\u003c/code\u003e requests in the frontend (in\n\u003ccode\u003eNewPlantForm\u003c/code\u003e and \u003ccode\u003ePlantPage\u003c/code\u003e) don't include the backend domain:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/plants\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// instead of fetch(\"http://localhost:3000/plants\")\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is because we are \u003ca href=\"https://create-react-app.dev/docs/proxying-api-requests-in-development/\"\u003eproxying\u003c/a\u003e these requests to\nour API.\u003c/p\u003e\n\n\u003ch2\u003eDeliverables\u003c/h2\u003e\n\n\u003ch3\u003eModel\u003c/h3\u003e\n\n\u003cp\u003eCreate a \u003ccode\u003ePlant\u003c/code\u003e model that matches this specification:\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eColumn Name\u003c/th\u003e\n\u003cth\u003eData Type\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003ename\u003c/td\u003e\n\u003ctd\u003estring\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eimage\u003c/td\u003e\n\u003ctd\u003estring\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eprice\u003c/td\u003e\n\u003ctd\u003edecimal\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e\u003cstrong\u003eIf you use a Rails generator, don't forget to pass the \u003ccode\u003e--no-test-framework\u003c/code\u003e\nargument!\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eAfter creating the \u003ccode\u003ePlant\u003c/code\u003e model, you can run \u003ccode\u003erails db:migrate db:seed\u003c/code\u003e to run\nyour migration and add some sample data to your database.\u003c/p\u003e\n\n\u003cp\u003eCheck your progress by running \u003ccode\u003erails c\u003c/code\u003e and verifying that the plants were\ncreated successfully!\u003c/p\u003e\n\n\u003ch3\u003eRoutes\u003c/h3\u003e\n\n\u003cp\u003eYour API should have the following routes as well as the associated controller\nactions that return the appropriate JSON data:\u003c/p\u003e\n\n\u003ch4\u003eIndex Route\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /plants\n\n\nResponse Body\n-------\n[\n  {\n    \"id\": 1,\n    \"name\": \"Aloe\",\n    \"image\": \"./images/aloe.jpg\",\n    \"price\": 11.50\n  },\n  {\n    \"id\": 2,\n    \"name\": \"ZZ Plant\",\n    \"image\": \"./images/zz-plant.jpg\",\n    \"price\": 25.98\n  }\n]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch4\u003eShow Route\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /plants/:id\n\n\nResponse Body\n------\n{\n  \"id\": 1,\n  \"name\": \"Aloe\",\n  \"image\": \"./images/aloe.jpg\",\n  \"price\": 11.50\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch4\u003eCreate Route\u003c/h4\u003e\n\n\u003cp\u003eIn your controller's \u003ccode\u003ecreate\u003c/code\u003e action, use strong params when creating the new\n\u003ccode\u003ePlant\u003c/code\u003e object.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePOST /plants\n\n\nHeaders\n-------\nContent-Type: application/json\n\n\nRequest Body\n------\n{\n  \"name\": \"Aloe\",\n  \"image\": \"./images/aloe.jpg\",\n  \"price\": 11.50\n}\n\n\nResponse Body\n-------\n{\n  \"id\": 1,\n  \"name\": \"Aloe\",\n  \"image\": \"./images/aloe.jpg\",\n  \"price\": 11.50\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOnce all the tests are passing, start up the React app and explore the\nfunctionality to see how the routes you created are being used.\u003c/p\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g6936e389dfffdf05f4d11bedfffdfb9e","title":"Rails Mock Challenge - Camping Fun","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-mock-challenge-camping-fun\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-mock-challenge-camping-fun/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-mock-challenge-camping-fun\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-mock-challenge-camping-fun/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003cp\u003eCongratulations! You have been hired by Access Camp and for your first job, you\nhave been tasked with building out a website to log campers with their\nactivities.\u003c/p\u003e\n\n\u003cp\u003eIn this repo, there is a Rails application with some features built out. There\nis also a fully built React frontend application, so you can test if your API is\nworking.\u003c/p\u003e\n\n\u003cp\u003eYour job is to build out the Rails API to add the functionality described in the\ndeliverables below.\u003c/p\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eTo download the dependencies for the frontend and backend, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere is some starter code in the \u003ccode\u003edb/seeds.rb\u003c/code\u003e file so that once you've\ngenerated the models, you'll be able to create data to test your application.\u003c/p\u003e\n\n\u003cp\u003eYou can run your Rails API on \u003ca href=\"http://localhost:3000\"\u003e\u003ccode\u003elocalhost:3000\u003c/code\u003e\u003c/a\u003e by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can run your React app on \u003ca href=\"http://localhost:4000\"\u003e\u003ccode\u003elocalhost:4000\u003c/code\u003e\u003c/a\u003e by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou are not being assessed on React, and you don't have to update any of the React\ncode; the frontend code is available just so that you can test out the behavior\nof your API in a realistic setting.\u003c/p\u003e\n\n\u003cp\u003eThere are also tests included which you can run using \u003ccode\u003erspec\u003c/code\u003e to check your work.\u003c/p\u003e\n\n\u003cp\u003eDepending on your preference, you can either check your progress by:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRunning \u003ccode\u003erspec\u003c/code\u003e and seeing if your code passes the tests\u003c/li\u003e\n\u003cli\u003eRunning the React application in the browser and interacting with the API via\nthe frontend\u003c/li\u003e\n\u003cli\u003eRunning the Rails server and using Postman to make requests\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eModels\u003c/h2\u003e\n\n\u003cp\u003eYou need to create the following relationships:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eA \u003ccode\u003eCamper\u003c/code\u003e has many \u003ccode\u003eSignups\u003c/code\u003e, and has many \u003ccode\u003eActivity\u003c/code\u003es through \u003ccode\u003eSignup\u003c/code\u003es\u003c/li\u003e\n\u003cli\u003eAn \u003ccode\u003eActivity\u003c/code\u003e has many \u003ccode\u003eSignups\u003c/code\u003e, and has many has many \u003ccode\u003eCamper\u003c/code\u003es through \u003ccode\u003eSignup\u003c/code\u003es\u003c/li\u003e\n\u003cli\u003eA \u003ccode\u003eSignup\u003c/code\u003e belongs to a \u003ccode\u003eCamper\u003c/code\u003e and belongs to a \u003ccode\u003eActivity\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eStart by creating the models and migrations for the following database tables:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/mock-challenge-camping-fun/diagram.png\" alt=\"domain diagram\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIf you use a Rails generator to create the models, make sure to use the\n\u003ccode\u003e--no-test-framework\u003c/code\u003e flag to avoid overwriting the test files.\u003c/p\u003e\n\n\u003cp\u003eAdd any code needed in the model files to establish the relationships.\u003c/p\u003e\n\n\u003cp\u003eThen, run the migrations and seed file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you aren't able to get the provided seed file working, you are welcome to\ngenerate your own seed data to test the application.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003eValidations\u003c/h2\u003e\n\n\u003cp\u003eAdd validations to the \u003ccode\u003eCamper\u003c/code\u003e model:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003emust have a \u003ccode\u003ename\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003emust have an \u003ccode\u003eage\u003c/code\u003e between 8 and 18\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAdd validations to the \u003ccode\u003eSignup\u003c/code\u003e model:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003emust have a \u003ccode\u003etime\u003c/code\u003e between 0 and 23 (referring to the hour of day for the\nactivity)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eRoutes\u003c/h2\u003e\n\n\u003cp\u003eSet up the following routes. Make sure to return JSON data in the format\nspecified along with the appropriate HTTP verb.\u003c/p\u003e\n\n\u003ch3\u003eGET /campers\u003c/h3\u003e\n\n\u003cp\u003eReturn JSON data in the format below. \u003cstrong\u003eNote\u003c/strong\u003e: you should return a JSON\nresponse in this format, without any additional nested data related to each\ncamper.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Caitlin\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"age\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Lizzie\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"age\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eGET /campers/:id\u003c/h3\u003e\n\n\u003cp\u003eIf the \u003ccode\u003eCamper\u003c/code\u003e exists, return JSON data in the format below. \u003cstrong\u003eNote\u003c/strong\u003e: you will\nneed to serialize the data for this response differently than for the\n\u003ccode\u003eGET /campers\u003c/code\u003e route. Make sure to include an array of activities for each\ncamper.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Caitlin\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"age\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"activities\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Archery\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"difficulty\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Swimming\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"difficulty\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eCamper\u003c/code\u003e does not exist, return the following JSON data, along with\nthe appropriate HTTP status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"error\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Camper not found\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003ePOST /campers\u003c/h3\u003e\n\n\u003cp\u003eThis route should create a new \u003ccode\u003eCamper\u003c/code\u003e. It should accept an object with the\nfollowing properties in the body of the request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Zoe\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"age\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eCamper\u003c/code\u003e is created successfully, send back a response with the new\n\u003ccode\u003eCamper\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Zoe\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"age\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eCamper\u003c/code\u003e is \u003cstrong\u003enot\u003c/strong\u003e created successfully, return the following JSON data,\nalong with the appropriate HTTP status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"validation errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eGET /activities\u003c/h3\u003e\n\n\u003cp\u003eReturn JSON data in the format below:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Archery\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"difficulty\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Swimming\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"difficulty\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eDELETE /activities/:id\u003c/h3\u003e\n\n\u003cp\u003eIf the \u003ccode\u003eActivity\u003c/code\u003e exists, it should be removed from the database, along with\nany \u003ccode\u003eSignup\u003c/code\u003es that are associated with it (a \u003ccode\u003eSignup\u003c/code\u003e belongs\nto an \u003ccode\u003eActivity\u003c/code\u003e, so you need to delete the \u003ccode\u003eSignup\u003c/code\u003es before the\n\u003ccode\u003eActivity\u003c/code\u003e can be deleted).\u003c/p\u003e\n\n\u003cp\u003eAfter deleting the \u003ccode\u003eActivity\u003c/code\u003e, return an \u003cem\u003eempty\u003c/em\u003e response body, along with the\nappropriate HTTP status code.\u003c/p\u003e\n\n\u003cp\u003eIf the \u003ccode\u003eActivity\u003c/code\u003e does not exist, return the following JSON data, along with\nthe appropriate HTTP status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"error\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Activity not found\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003ePOST /signups\u003c/h3\u003e\n\n\u003cp\u003eThis route should create a new \u003ccode\u003eSignup\u003c/code\u003e that is associated with an\nexisting \u003ccode\u003eCamper\u003c/code\u003e and \u003ccode\u003eActivity\u003c/code\u003e. It should accept an object with the following\nproperties in the body of the request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"time\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"camper_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"activity_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eSignup\u003c/code\u003e is created successfully, send back a response with the data\nrelated to the \u003ccode\u003eActivity\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Archery\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"difficulty\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eSignup\u003c/code\u003e is \u003cstrong\u003enot\u003c/strong\u003e created successfully, return the following JSON data,\nalong with the appropriate HTTP status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"validation errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gaee865029dc07081ad583c591f508019","title":"Rails Mock Challenge - Cosmic Travel","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-practice-challenge-cosmic-challenge\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-cosmic-challenge/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-cosmic-challenge\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-cosmic-challenge/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003cp\u003eIt is the year 2100 and you run an interplanetary space travel agency. You are building a website to book scientists on missions to other planets.\u003c/p\u003e\n\n\u003cp\u003eIn this repo, there is a Rails application with some features built out. There\nis also a fully built React frontend application, so you can test if your API is\nworking.\u003c/p\u003e\n\n\u003cp\u003eYour job is to build out the Rails API to add the functionality described in the\ndeliverables below.\u003c/p\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eTo download the dependencies for the frontend and backend, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere is some starter code in the \u003ccode\u003edb/seeds.rb\u003c/code\u003e file so that once you've\ngenerated the models, you'll be able to create data to test your application.\u003c/p\u003e\n\n\u003cp\u003eYou can run your Rails API on \u003ca href=\"http://localhost:3000\"\u003e\u003ccode\u003elocalhost:3000\u003c/code\u003e\u003c/a\u003e by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can run your React app on \u003ca href=\"http://localhost:4000\"\u003e\u003ccode\u003elocalhost:4000\u003c/code\u003e\u003c/a\u003e by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou are not being assessed on React, and you don't have to update any of the React\ncode; the frontend code is available just so that you can test out the behavior\nof your API in a realistic setting.\u003c/p\u003e\n\n\u003cp\u003eThere are also tests included which you can run using \u003ccode\u003erspec\u003c/code\u003e to check your work.\u003c/p\u003e\n\n\u003cp\u003eDepending on your preference, you can either check your progress by:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRunning \u003ccode\u003erspec\u003c/code\u003e and seeing if your code passes the tests\u003c/li\u003e\n\u003cli\u003eRunning the React application in the browser and interacting with the API via\nthe frontend\u003c/li\u003e\n\u003cli\u003eRunning the Rails server and using Postman (or equivalent API client) to make requests\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eModels\u003c/h2\u003e\n\n\u003cp\u003eIt is your job to build out Planet, Scientist, and Mission models so that scientists can book their missions. \u003cstrong\u003eIn a given mission, one scientist will visit one planet\u003c/strong\u003e. Over their careers, \u003cstrong\u003escientists will visit many planets\u003c/strong\u003e and \u003cstrong\u003eplanets will be visited by many scientists\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eYou need to create the following relationships:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eA \u003ccode\u003eScientist\u003c/code\u003e has many \u003ccode\u003eMissions\u003c/code\u003e, and has many \u003ccode\u003ePlanet\u003c/code\u003es through \u003ccode\u003eMission\u003c/code\u003es\u003c/li\u003e\n\u003cli\u003eAn \u003ccode\u003ePlanet\u003c/code\u003e has many \u003ccode\u003eMissions\u003c/code\u003e, and has many \u003ccode\u003eScientist\u003c/code\u003es through \u003ccode\u003eMission\u003c/code\u003es\u003c/li\u003e\n\u003cli\u003eA \u003ccode\u003eMission\u003c/code\u003e belongs to a \u003ccode\u003eScientist\u003c/code\u003e and belongs to a \u003ccode\u003ePlanet\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eStart by creating the models and migrations for the following database tables:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/mock-challenge-cosmic-challenge/cosmic_erd.png\" alt=\"cosmic_erd\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIf you use a Rails generator to create the models, make sure to use the\n\u003ccode\u003e--no-test-framework\u003c/code\u003e flag to avoid overwriting the test files.\u003c/p\u003e\n\n\u003cp\u003eAdd any code needed in the model files to establish the relationships.\u003c/p\u003e\n\n\u003cp\u003eThen, run the migrations and seed file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you aren't able to get the provided seed file working, you are welcome to\ngenerate your own seed data to test the application.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003eValidations\u003c/h2\u003e\n\n\u003cp\u003eAdd validations to the \u003ccode\u003eScientist\u003c/code\u003e model:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003emust have a \u003ccode\u003ename\u003c/code\u003e, and a \u003ccode\u003efield_of_study\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ename\u003c/code\u003es must be unique\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAdd validations to the \u003ccode\u003eMission\u003c/code\u003e model:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003emust have a \u003ccode\u003ename\u003c/code\u003e, a \u003ccode\u003escientist\u003c/code\u003e and a \u003ccode\u003eplanet\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003ea \u003ccode\u003escientist\u003c/code\u003e cannot join the same \u003ccode\u003emission\u003c/code\u003e twice\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eRoutes\u003c/h2\u003e\n\n\u003cp\u003eSet up the following routes. Make sure to return JSON data in the format\nspecified along with the appropriate HTTP verb.\u003c/p\u003e\n\n\u003ch3\u003eGET /scientists\u003c/h3\u003e\n\n\u003cp\u003eReturn JSON data in the format below. \u003cstrong\u003eNote\u003c/strong\u003e: you should return a JSON\nresponse in this format, without any additional nested data related to each\nscientist.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Mel T. Valent\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"field_of_study\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"xenobiology\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"avatar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://robohash.org/mel_t_valent?set=set5\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"P. Legrange\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"field_of_study\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"orbital mechanics\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"avatar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://robohash.org/p_legrange?set=set5\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eGET /scientists/:id\u003c/h3\u003e\n\n\u003cp\u003eIf the \u003ccode\u003eScientist\u003c/code\u003e exists, return JSON data in the format below. \u003cstrong\u003eNote\u003c/strong\u003e: you will\nneed to serialize the data for this response differently than for the\n\u003ccode\u003eGET /scientists\u003c/code\u003e route. Make sure to include an array of missions for each\nscientist.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Mel T. Valent\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"field_of_study\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"xenobiology\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"avatar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://robohash.org/mel_t_valent?set=set5\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"planets\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"TauCeti E\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"distance_from_earth\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"12 light years\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"nearest_star\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"TauCeti\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"image\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"planet3\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Maxxor\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"distance_from_earth\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"9 parsecs\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"nearest_star\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Canus Minor\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"image\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"planet7\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eScientist\u003c/code\u003e does not exist, return the following JSON data, along with\nthe appropriate HTTP status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"error\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Scientist not found\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003ePOST /scientists\u003c/h3\u003e\n\n\u003cp\u003eThis route should create a new \u003ccode\u003eScientist\u003c/code\u003e. It should accept an object with the\nfollowing properties in the body of the request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Evan T'Horizon\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"field_of_study\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"astronavigation\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"avatar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://robohash.org/evan_thorizon?set=set5\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eScientist\u003c/code\u003e is created successfully, send back a response with the new\n\u003ccode\u003eScientist\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Evan T'Horizon\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"field_of_study\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"astronavigation\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"avatar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://robohash.org/evan_thorizon?set=set5\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eScientist\u003c/code\u003e is \u003cstrong\u003enot\u003c/strong\u003e created successfully, return the following JSON data,\nalong with the appropriate HTTP status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"validation errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003ePATCH /scientists/:id\u003c/h3\u003e\n\n\u003cp\u003eThis route should update an existing \u003ccode\u003eScientist\u003c/code\u003e. It should accept an object with one or more of the\nfollowing properties in the body of the request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bevan T'Horizon\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"field_of_study\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"warp drive tech\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"avatar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://robohash.org/bevan_thorizon?set=set5\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eScientist\u003c/code\u003e is updated successfully, send back a response with the updated\n\u003ccode\u003eScientist\u003c/code\u003e and a 202 \u003ccode\u003e:accepted\u003c/code\u003e status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bevan T'Horizon\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"field_of_study\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"warp drive tech\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"avatar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://robohash.org/bevan_thorizon?set=set5\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eScientist\u003c/code\u003e is \u003cstrong\u003enot\u003c/strong\u003e updated successfully, return the following JSON data,\nalong with the appropriate HTTP status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"validation errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOR, given an invalid ID, the appropriate HTTP status code, and the following JSON:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"error\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Scientist not found\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eDELETE /scientists/:id\u003c/h3\u003e\n\n\u003cp\u003eIf the \u003ccode\u003eScientist\u003c/code\u003e exists, it should be removed from the database, along with\nany \u003ccode\u003eMission\u003c/code\u003es that are associated with it (a \u003ccode\u003eMission\u003c/code\u003e belongs\nto an \u003ccode\u003eScientist\u003c/code\u003e, so you need to delete the \u003ccode\u003eMission\u003c/code\u003es before the\n\u003ccode\u003eScientist\u003c/code\u003e can be deleted).\u003c/p\u003e\n\n\u003cp\u003eAfter deleting the \u003ccode\u003eScientist\u003c/code\u003e, return an \u003cem\u003eempty\u003c/em\u003e response body, along with the\nappropriate HTTP status code.\u003c/p\u003e\n\n\u003cp\u003eIf the \u003ccode\u003eScientist\u003c/code\u003e does not exist, return the following JSON data, along with\nthe appropriate HTTP status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"error\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Scientist not found\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eGET /planets\u003c/h3\u003e\n\n\u003cp\u003eReturn JSON data in the format below. \u003cstrong\u003eNote\u003c/strong\u003e: you should return a JSON\nresponse in this format, without any additional nested data related to each\nplanet.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"TauCeti E\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"distance_from_earth\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"12 light years\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"nearest_star\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"TauCeti\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"image\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"planet3\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Maxxor\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"distance_from_earth\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"9 parsecs\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"nearest_star\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Canus Minor\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"image\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"planet7\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003ePOST /missions\u003c/h3\u003e\n\n\u003cp\u003eThis route should create a new \u003ccode\u003eMissions\u003c/code\u003e. It should accept an object with the\nfollowing properties in the body of the request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Project Terraform\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"scientist_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"planet_id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eMission\u003c/code\u003e is created successfully, send back a response with the \u003ccode\u003eplanet\u003c/code\u003e associated with the new \u003ccode\u003eMission\u003c/code\u003e (contrary to convention, which normally dictates the response would include data about the \u003cem\u003emission\u003c/em\u003e that was created):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Maxxor\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"distance_from_earth\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"9 parsecs\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"nearest_star\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Canus Minor\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"image\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"planet7\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the \u003ccode\u003eMission\u003c/code\u003e is \u003cstrong\u003enot\u003c/strong\u003e created successfully, return the following JSON data,\nalong with the appropriate HTTP status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"validation errors\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g7cf9045415f827a5f5b8ab890ac1eca5","title":"Rails Practice Challenge - Apartments","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-practice-challenge-apartments\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-apartments/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-apartments\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-apartments/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eTo download the dependencies for backend, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere is some starter code in the \u003ccode\u003edb/seeds.rb\u003c/code\u003e file so that once you've\ngenerated the models, you'll be able to create data to test your application.\u003c/p\u003e\n\n\u003cp\u003eYou can run your Rails API on \u003ca href=\"http://localhost:3000\"\u003e\u003ccode\u003elocalhost:3000\u003c/code\u003e\u003c/a\u003e by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere are no tests for this application, so you'll need to check your progress\nby running the server and using Postman to make requests.\u003c/p\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe're going to build an API for an apartment management company. Create the\nfollowing database structure. You will have three models (and their\ncorresponding tables), \u003ccode\u003eApartment\u003c/code\u003e, \u003ccode\u003eTenant\u003c/code\u003e and \u003ccode\u003eLease\u003c/code\u003e, with the following\nrelationships:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eA tenant has many apartments and has many leases\u003c/li\u003e\n\u003cli\u003eAn apartment has many tenants and has many leases\u003c/li\u003e\n\u003cli\u003eA lease belongs to an apartment and belongs to a tenant\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe models should have the following attributes (along with any attributes\nneeded to create the relationships defined above):\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eApartment\n\n\u003cul\u003e\n\u003cli\u003enumber\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eTenant\n\n\u003cul\u003e\n\u003cli\u003ename (must be present)\u003c/li\u003e\n\u003cli\u003eage (must be \u0026gt;= 18)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eLease\n\n\u003cul\u003e\n\u003cli\u003erent\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eMake sure to define validations for your models so that no bad data can be saved\nto the database.\u003c/p\u003e\n\n\u003ch2\u003eDeliverables\u003c/h2\u003e\n\n\u003cp\u003eAs a user, I can:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate, read, update and delete \u003cstrong\u003eApartments\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate, read, update and delete \u003cstrong\u003eTenants\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate and delete \u003cstrong\u003eLease\u003c/strong\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFollow good API design practices and use RESTful routing conventions. Make sure\nto handle errors and invalid data by returning the appropriate status code along\nwith a message.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eTime yourself while working on the deliverables\u003c/li\u003e\n\u003cli\u003eCommit when you hit 75 minutes\u003c/li\u003e\n\u003cli\u003eWhen you have finished all deliverables, commit again.\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g63a1d4899c2813aff7983923122969e1","title":"Rails Practice Challenge - Gym","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-practice-challenge-gym\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-gym/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-gym\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-gym/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eTo download the dependencies for backend, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere is some starter code in the \u003ccode\u003edb/seeds.rb\u003c/code\u003e file so that once you've\ngenerated the models, you'll be able to create data to test your application.\nYou can run your Rails API on \u003ca href=\"http://localhost:3000\"\u003e\u003ccode\u003elocalhost:3000\u003c/code\u003e\u003c/a\u003e by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere are no tests for this application, so you'll need to check your progress\nby running the server and using Postman to make requests.\u003c/p\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe're going to build an app for a Gym create the following database structure.\nYou will have three models (and their corresponding tables), \u003ccode\u003eGym\u003c/code\u003e, \u003ccode\u003eClient\u003c/code\u003e and\n\u003ccode\u003eMembership\u003c/code\u003e, with the following relationships:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eA client has many gyms and has many memberships\u003c/li\u003e\n\u003cli\u003eA gym has many clients and has many memberships\u003c/li\u003e\n\u003cli\u003eA membership belongs to a gym and belongs to a client\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eMigrations\u003c/h3\u003e\n\n\u003cp\u003eWrite migrations to create the following tables:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eGyms\u003c/strong\u003e Table:\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align: center\"\u003e\u003cstrong\u003eid\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"text-align: center\"\u003e\u003cstrong\u003ename\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"text-align: center\"\u003e\u003cstrong\u003eaddress\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003e1\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003eL.A.Fitness\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003eSuite 981 1795 Leida Fords, Nataliemouth, TN 14377-4979\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003e2\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003ePlanet Fitness\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e7768 David Avenue, Greenside, PA 67475-3655\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e\u003cstrong\u003eClients\u003c/strong\u003e Table:\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align: center\"\u003e\u003cstrong\u003eid\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"text-align: center\"\u003e\u003cstrong\u003ename\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"text-align: center\"\u003e\u003cstrong\u003eage\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003e1\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003eCasie Effertz\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e18\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003e2\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003eDorris Bogan\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e52\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003e3\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003eBernie Schiller\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e44\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003e4\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003eManie Dare\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e29\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e\u003cstrong\u003eMemberships\u003c/strong\u003e Table:\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align: center\"\u003e\u003cstrong\u003eid\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"text-align: center\"\u003e\u003cstrong\u003egym_id\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"text-align: center\"\u003e\u003cstrong\u003eclient_id\u003c/strong\u003e\u003c/th\u003e\n\u003cth style=\"text-align: center\"\u003e\u003cstrong\u003echarge\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003e1\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e1\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e1\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e40\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003e2\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e1\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e2\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e40\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003e3\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e2\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e1\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e50\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003e4\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e2\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e3\u003c/td\u003e\n\u003ctd style=\"text-align: center\"\u003e60\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch3\u003eDeliverables\u003c/h3\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIt may be helpful to write a list of the routes you'll need before you begin.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eA user should be able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eCreate a new membership\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eNew membership require a gym_id, client_id, and membership charge.\u003c/li\u003e\n\u003cli\u003eValidation: A client can have only one membership with gym\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eView one specific gym\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eif \u003ccode\u003eGym\u003c/code\u003e exists, return JSON data for the gym\u003c/li\u003e\n\u003cli\u003eelse return error with a status code\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eDelete a gym\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIf the \u003ccode\u003eGym\u003c/code\u003e exists, it should be removed from the database, along with\nany \u003ccode\u003eMembership\u003c/code\u003es that are associated with it (a \u003ccode\u003eMembership\u003c/code\u003e belongs\nto a \u003ccode\u003eGym\u003c/code\u003e, so you need to delete the \u003ccode\u003eMembership\u003c/code\u003es before the\n\u003ccode\u003eGym\u003c/code\u003e can be deleted).\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAfter deleting the \u003ccode\u003eGym\u003c/code\u003e, return an \u003cem\u003eempty\u003c/em\u003e response body, along with the\nappropriate HTTP status code.\u003c/p\u003e\n\n\u003cp\u003eIf the \u003ccode\u003eGym\u003c/code\u003e does not exist, return the following JSON data, along with\nthe appropriate HTTP status code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"error\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Gym not found\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eView one specific client\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eif \u003ccode\u003eClient\u003c/code\u003e exists, return JSON data for the Client\u003c/li\u003e\n\u003cli\u003eelse return error with a status code\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eBonus\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003eOn client show route, send response that includes total amount for all\nmembership for that client.\u003c/li\u003e\n\u003cli\u003eCreate index and update routes for gym and client\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g13f26c6b020e7fbf2bbada71d6ca6e7d","title":"Rails Practice Challenge - Students","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-practice-challenge-students\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-students/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-students\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-students/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eTo download the dependencies for backend, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere is some starter code in the \u003ccode\u003edb/seeds.rb\u003c/code\u003e file so that once you've\ngenerated the models, you'll be able to create data to test your application.\u003c/p\u003e\n\n\u003cp\u003eYou can run your Rails API on \u003ca href=\"http://localhost:3000\"\u003e\u003ccode\u003elocalhost:3000\u003c/code\u003e\u003c/a\u003e by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere are no tests for this application, so you'll need to check your progress\nby running the server and using Postman make requests.\u003c/p\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe're going to build an API for an instructor to manage their students. Create\nthe following database structure. You will have two models (and their\ncorresponding tables), \u003ccode\u003eStudent\u003c/code\u003e and \u003ccode\u003eInstructor\u003c/code\u003e, with the following\nrelationships:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAn instructor has many students\u003c/li\u003e\n\u003cli\u003eA student belongs to an instructor\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe models should have the following attributes (along with any attributes\nneeded to create the relationships defined above):\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eInstructor\n\n\u003cul\u003e\n\u003cli\u003ename (must be present)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eStudent\n\n\u003cul\u003e\n\u003cli\u003ename (must be present)\u003c/li\u003e\n\u003cli\u003emajor\u003c/li\u003e\n\u003cli\u003eage (must be \u0026gt;= 18)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eMake sure to define validations for your models so that no bad data can be saved\nto the database.\u003c/p\u003e\n\n\u003ch2\u003eDeliverables\u003c/h2\u003e\n\n\u003cp\u003eAs a user, I can:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate, read, update and delete \u003cstrong\u003eInstructors\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate, read, update and delete \u003cstrong\u003eStudents\u003c/strong\u003e\n\n\u003cul\u003e\n\u003cli\u003eWhen creating or updating a student, they must be associated with an\ninstructor\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFollow good API design practices and use RESTful routing conventions. Make sure\nto handle errors and invalid data by returning the appropriate status code along\nwith a message.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eTime yourself while working on the deliverables\u003c/li\u003e\n\u003cli\u003eCommit when you hit 75 minutes\u003c/li\u003e\n\u003cli\u003eWhen you have finished all deliverables, commit again.\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb17ee99cf4840cb19fd3c78d92dbf186","title":"Rails Resource Routing: Create","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-resources-create\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-create/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-create\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-create/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Rails to create a resource\u003c/li\u003e\n\u003cli\u003eUnderstand the connection between the request body and \u003ccode\u003eparams\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll continue working on our Bird API by adding a \u003ccode\u003ecreate\u003c/code\u003e\naction, so that clients can use our API to create new birds. To get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will download all the dependencies for our app and set up the database.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eHTTP Verb\u003c/th\u003e\n\u003cth\u003ePath\u003c/th\u003e\n\u003cth\u003eController#Action\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e/birds\u003c/td\u003e\n\u003ctd\u003ebirds#index\u003c/td\u003e\n\u003ctd\u003eShow all birds\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cstrong\u003ePOST\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003e/birds\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003ebirds#create\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003eCreate a new bird\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e/birds/:id\u003c/td\u003e\n\u003ctd\u003ebirds#show\u003c/td\u003e\n\u003ctd\u003eShow a specific bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePATCH or PUT\u003c/td\u003e\n\u003ctd\u003e/birds/:id\u003c/td\u003e\n\u003ctd\u003ebirds#update\u003c/td\u003e\n\u003ctd\u003eUpdate a specific bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDELETE\u003c/td\u003e\n\u003ctd\u003e/birds/:id\u003c/td\u003e\n\u003ctd\u003ebirds#destroy\u003c/td\u003e\n\u003ctd\u003eDelete a specific bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\n\n\n\u003ch2\u003eCreating New Birds\u003c/h2\u003e\n\n\u003cp\u003eAs always, the first thing we'll need to do to add a new endpoint to our API is\nupdate our routes. Following REST conventions, we'll want our clients to make a\nPOST request to \u003ccode\u003e/birds\u003c/code\u003e to create a new bird. Using the \u003ccode\u003eresources\u003c/code\u003e method, we\ncan create this route by adding in \u003ccode\u003ecreate\u003c/code\u003e to the list of actions we want\nhandled:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edraw\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birds\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:show\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter updating our routes, run \u003ccode\u003erails routes\u003c/code\u003e to check what routes are now\navailable:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePrefix  Verb  URI Pattern           Controller#Action\n birds  GET   /birds(.:format)      birds#index\n        POST  /birds(.:format)      birds#create\n  bird  GET   /birds/:id(.:format)  birds#show\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAwesome! We've successfully added a \u003ccode\u003ePOST /birds\u003c/code\u003e route, which will run the\n\u003ccode\u003ecreate\u003c/code\u003e in our \u003ccode\u003eBirdsController\u003c/code\u003e. Since we haven't set up that action, let's do\nso now. For the time being, let's add in a \u003ccode\u003ebyebug\u003c/code\u003e so that we can test out this\nroute and see what we'll need to do in order to create a new bird:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBirdsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# POST /birds\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebyebug\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# etc\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRun your server now with \u003ccode\u003erails s\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eNow, we'll need to make a \u003ccode\u003ePOST /birds\u003c/code\u003e with some data about the bird we're\ntrying to create. Recall from our schema that our \u003ccode\u003ebirds\u003c/code\u003e table\nhas \u003ccode\u003ename\u003c/code\u003e and \u003ccode\u003especies\u003c/code\u003e columns:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ecreate_table\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"birds\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eforce: :cascade\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estring\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"name\"\u003c/span\u003e\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estring\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"species\"\u003c/span\u003e\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edatetime\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"created_at\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eprecision: \u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003enull: \u003c/span\u003e\u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\n  \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edatetime\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"updated_at\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eprecision: \u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003enull: \u003c/span\u003e\u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo create a new \u003ccode\u003eBird\u003c/code\u003e instance, we'll need to provide values for these two\nattributes. If we were making this request using \u003ccode\u003efetch\u003c/code\u003e, it'd look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://localhost:3000/birds\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eMonk Parakeet\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003especies\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eMyiopsitta monachus\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}),\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet's make that request using Postman (remember to add \u003ccode\u003eContent-Type\u003c/code\u003e:\n\u003ccode\u003eapplication/json\u003c/code\u003e to the headers as well):\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-rails-resources-create/birds-post-request.png\" alt=\"birds post request with postman\"\u003e\u003c/p\u003e\n\n\u003cp\u003eAfter making the request, we'll hit our \u003ccode\u003ebyebug\u003c/code\u003e debugger, so we can see all the\ndata about the request that we have access to:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e    1: class BirdsController \u0026lt; ApplicationController\n    2:\n    3:   # POST /birds\n    4:   def create\n    5:     byebug\n=\u0026gt;  6:   end\n    7:\n    8:   # GET /birds\n    9:   def index\n   10:     birds = Bird.all\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFrom the \u003ccode\u003ebyebug\u003c/code\u003e session, let's see how we can get access to the data we need\nto handle this request. Remember, our goal in this action is to \u003cstrong\u003ecreate a new\nbird\u003c/strong\u003e and \u003cstrong\u003esend the new bird object in the response\u003c/strong\u003e, so ultimately, we'll\nwant some code like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"sc\"\u003e??\u003c/span\u003e\u003cspan class=\"p\"\u003e?,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"sc\"\u003e??\u003c/span\u003e\u003cspan class=\"p\"\u003e?)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: \u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003ecreated\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe \u003ccode\u003estatus: :created\u003c/code\u003e option will send a 201 status code, which indicates\nthat the request has succeeded and has led to the creation of a resource.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eTo fill in the blanks, we'll need to figure out how to get data from the\n\u003cstrong\u003ebody\u003c/strong\u003e of the request, where our client sent the \u003ccode\u003ename\u003c/code\u003e and \u003ccode\u003especies\u003c/code\u003e for this\nnew bird.\u003c/p\u003e\n\n\u003cp\u003eIn the \u003ccode\u003ebyebug\u003c/code\u003e session, we can access the \u003cstrong\u003eentire\u003c/strong\u003e request object by using\nthe \u003ccode\u003erequest\u003c/code\u003e method:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e(byebug) request\n#\u0026lt;ActionDispatch::Request POST \"http://localhost:3000/birds\" for ::1\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis \u003ccode\u003erequest\u003c/code\u003e object has all kinds of info about what was sent in the request.\nTry some of these methods out in your \u003ccode\u003ebyebug\u003c/code\u003e session:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003erequest.request_method\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003erequest.headers[\"Content-Type\"]\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003erequest.body.read\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe last one, \u003ccode\u003erequest.body.read\u003c/code\u003e, will read the body of the request as a\nstring. Nice! We could take it a step further, and parse that string as json:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e(byebug) JSON.parse(request.body.read)\n{\"name\"=\u0026gt;\"Monk Parakeet\", \"species\"=\u0026gt;\"Myiopsitta monachus\"}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will return a Ruby hash of key-value pairs by parsing the JSON string from\nthe request body. However, that's a lot of steps for a fairly common task as a\nRails developer. Wouldn't it be nice if there was a bit of ✨ Rails magic ✨ to\nmake it easier to access that parsed request data? Enter the \u003ccode\u003eparams\u003c/code\u003e hash!\u003c/p\u003e\n\n\u003ch2\u003eUsing Params\u003c/h2\u003e\n\n\u003cp\u003eWe can more easily access all the information from the request body by using\n\u003ccode\u003eparams\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e(byebug) params\n#\u0026lt;ActionController::Parameters {\"name\"=\u0026gt;\"Monk Parakeet\", \"species\"=\u0026gt;\"Myiopsitta monachus\", \"controller\"=\u0026gt;\"birds\", \"action\"=\u0026gt;\"create\", \"bird\"=\u0026gt;{\"name\"=\u0026gt;\"Monk Parakeet\", \"species\"=\u0026gt;\"Myiopsitta monachus\"}} permitted: false\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe've seen \u003ccode\u003eparams\u003c/code\u003e once before, as a way to access the dynamic part of the URL:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# GET /birds/:id\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# params[:id] refers to the dynamic part of our route, defined by :id\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# a request to /birds/2 would give params[:id] a value of 2\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn this case, we can see that all the data from the body of our request has been\nadded to this \u003ccode\u003eparams\u003c/code\u003e hash! Any time Rails receives a request with a\n\u003ccode\u003eContent-Type\u003c/code\u003e of \u003ccode\u003eapplication/json\u003c/code\u003e, it will automatically load the request\nbody into the \u003ccode\u003eparams\u003c/code\u003e hash. Let's use that information to create our bird. Exit\nthe \u003ccode\u003ebyebug\u003c/code\u003e session by typing \u003ccode\u003econtinue\u003c/code\u003e or \u003ccode\u003ec\u003c/code\u003e and hit enter. Then, update\nyour controller action like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:species\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBack in Postman, send the same request through. Now, you should see a response\nin Postman with the newly created bird! You should also see in your Rails server\nlog the SQL that was executed when the bird was created:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eStarted POST \"/birds\" for ::1 at 2021-05-02 10:09:03 -0400\n   (0.1ms)  SELECT sqlite_version(*)\nProcessing by BirdsController#create as */*\n  Parameters: {\"name\"=\u0026gt;\"Monk Parakeet\", \"species\"=\u0026gt;\"Myiopsitta monachus\", \"bird\"=\u0026gt;{\"name\"=\u0026gt;\"Monk Parakeet\", \"species\"=\u0026gt;\"Myiopsitta monachus\"}}\n  TRANSACTION (0.1ms)  begin transaction\n  ↳ app/controllers/birds_controller.rb:5:in `create'\n  Bird Create (2.0ms)  INSERT INTO \"birds\" (\"name\", \"species\", \"created_at\", \"updated_at\") VALUES (?, ?, ?, ?)  [[\"name\", \"Monk Parakeet\"], [\"species\", \"Myiopsitta monachus\"], [\"created_at\", \"2021-05-02 14:09:03.955909\"], [\"updated_at\", \"2021-05-02 14:09:03.955909\"]]\n  ↳ app/controllers/birds_controller.rb:5:in `create'\n  TRANSACTION (0.9ms)  commit transaction\n  ↳ app/controllers/birds_controller.rb:5:in `create'\nCompleted 201 Created in 15ms (Views: 0.5ms | ActiveRecord: 4.1ms | Allocations: 4408)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSuccess!\u003c/p\u003e\n\n\u003cp\u003eExperiment using Postman and \u003ccode\u003ebyebug\u003c/code\u003e. What would you change if you wanted to\nadd additional keys to the \u003ccode\u003eparams\u003c/code\u003e hash? What would you expect the server to\nreturn if the new bird \u003cstrong\u003ewasn't\u003c/strong\u003e created successfully?\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWe have now learned how to handle the \u003ccode\u003ecreate\u003c/code\u003e action. In the next lesson, we'll\nexplore the \u003ccode\u003eparams\u003c/code\u003e hash further, and talk about ways to refactor our code\nusing additional features of the \u003ccode\u003eparams\u003c/code\u003e hash.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhen using \u003ccode\u003efetch\u003c/code\u003e to make a \u003ccode\u003ePOST\u003c/code\u003e request as opposed to a \u003ccode\u003eGET\u003c/code\u003e request,\nwhat additional property needs to be passed along with the \u003ccode\u003emethod\u003c/code\u003e and\n\u003ccode\u003eheaders\u003c/code\u003e?\u003c/li\u003e\n\u003cli\u003eHow do we access this additional information to use it in our controller\naction?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/action_controller_overview.html#json-parameters\"\u003eJSON Parameters\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g69edca9bd5df924079bb888542b48a00","title":"Rails Resource Routing: Destroy","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-resources-destroy\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-destroy/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-destroy\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-destroy/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDelete a resource using Rails\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll continue working on our Bird API by adding a \u003ccode\u003edestroy\u003c/code\u003e\naction, so that clients can use our API to delete birds. To get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will download all the dependencies for our app and set up the database.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eHTTP Verb\u003c/th\u003e\n\u003cth\u003ePath\u003c/th\u003e\n\u003cth\u003eController#Action\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e/birds\u003c/td\u003e\n\u003ctd\u003ebirds#index\u003c/td\u003e\n\u003ctd\u003eShow all birds\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePOST\u003c/td\u003e\n\u003ctd\u003e/birds\u003c/td\u003e\n\u003ctd\u003ebirds#create\u003c/td\u003e\n\u003ctd\u003eCreate a new bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e/birds/:id\u003c/td\u003e\n\u003ctd\u003ebirds#show\u003c/td\u003e\n\u003ctd\u003eShow a specific bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePATCH or PUT\u003c/td\u003e\n\u003ctd\u003e/birds/:id\u003c/td\u003e\n\u003ctd\u003ebirds#update\u003c/td\u003e\n\u003ctd\u003eUpdate a specific bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cstrong\u003eDELETE\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003e/birds/:id\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003ebirds#destroy\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003eDelete a specific bird\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\n\n\n\u003ch2\u003eDeleting a Bird\u003c/h2\u003e\n\n\u003cp\u003eWe're at the last step on our journey to becoming CRUD experts! Our goal is to\ngive users the ability to delete birds via the API. To start, we'll need to set\nup a route to handle a \u003ccode\u003eDELETE /birds/:id\u003c/code\u003e request. We can do so by adding\n\u003ccode\u003e:destroy\u003c/code\u003e to our resources:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birds\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:show\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:update\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:destroy\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd since we're now using all five RESTful routes, we can omit the \u003ccode\u003eonly\u003c/code\u003e option:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birds\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRunning \u003ccode\u003erails routes\u003c/code\u003e will show us all the RESTful routes in our application,\nplus our custom route:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails routes\n\u003cspan class=\"gp\"\u003ePrefix Verb   URI Pattern               Controller#\u003c/span\u003eAction\n\u003cspan class=\"gp\"\u003e birds GET    /birds(.:format)          birds#\u003c/span\u003eindex\n\u003cspan class=\"gp\"\u003e       POST   /birds(.:format)          birds#\u003c/span\u003ecreate\n\u003cspan class=\"gp\"\u003e  bird GET    /birds/:id(.:format)      birds#\u003c/span\u003eshow\n\u003cspan class=\"gp\"\u003e       PATCH  /birds/:id(.:format)      birds#\u003c/span\u003eupdate\n\u003cspan class=\"gp\"\u003e       PUT    /birds/:id(.:format)      birds#\u003c/span\u003eupdate\n\u003cspan class=\"gp\"\u003e       DELETE /birds/:id(.:format)      birds#\u003c/span\u003edestroy\n\u003cspan class=\"gp\"\u003e       PATCH  /birds/:id/like(.:format) birds#\u003c/span\u003eincrement_likes\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe'll also need to add a \u003ccode\u003edestroy\u003c/code\u003e action to our controller where we'll be\ndeleting the bird from the database:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edestroy\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edestroy\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ehead\u003c/span\u003e \u003cspan class=\"ss\"\u003e:no_content\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bird not found\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn this controller action, our goal is to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eFind a bird using the ID from the route params\u003c/li\u003e\n\u003cli\u003eRemove it from the database with \u003ccode\u003ebird.destroy\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eYou'll also notice that instead of rendering a JSON response, we're returning\n\u003ccode\u003ehead :no_content\u003c/code\u003e if our bird was successfully deleted. \u003ccode\u003e:no_content\u003c/code\u003e will give\na 204 status code, indicating that the server has successfully fulfilled the\nrequest and that there is no content to send in the response. We're also not\nsending any payload of data in the body of the request.\u003c/p\u003e\n\n\u003cp\u003eOne thing to watch out for: if the API doesn't return JSON data, and you try to\nread the response data from a \u003ccode\u003efetch\u003c/code\u003e request, you will get an error:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://localhost:3000/birds/3\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eDELETE\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"c1\"\u003e// this line will error out, because there is no JSON to parse!\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eDepending on your needs, you could send back a JSON response to verify that the\nrequest was completed successfully. For example, \u003ccode\u003ejson-server\u003c/code\u003e handles a\nsuccessful delete request by sending an empty object:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edestroy\u003c/span\u003e\n\u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUltimately, you can decide which option you prefer based on how you'll use this\ndata in your client application.\u003c/p\u003e\n\n\u003cp\u003eMake sure to test these out in Postman to see the difference between using\n\u003ccode\u003ehead\u003c/code\u003e and \u003ccode\u003erender\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eNow that we've covered the Delete action, you can perform all four CRUD actions\nwith Rails and do so following RESTful conventions!\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following question:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat options did you learn about in this lesson for returning information to\nyour users about the status of a delete request?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://api.rubyonrails.org/v6.1.3.1/classes/ActionController/Head.html#method-i-head\"\u003eThe \u003ccode\u003ehead\u003c/code\u003e method\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE#responses\"\u003eDELETE request status codes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gc72af5e00c1fb5927a5d0bbe4ee0e4f0","title":"Rails Resource Routing: Index and Show","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-resources-index-show\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-index-show/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-index-show\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-index-show/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the benefits of RESTful routing conventions in Rails\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003eresources\u003c/code\u003e to generate routes\u003c/li\u003e\n\u003cli\u003eUnderstand how to view all routes in a Rails application\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this module, we'll be building out full CRUD with the five RESTful routes for\none resource. We'll be making an API for birding enthusiasts, so the resource\nwe'll be working with is birds. In this lesson, we'll cover the two routes for\n\u003cstrong\u003eread\u003c/strong\u003e actions to display information about the birds in our database: the\n\u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003eshow\u003c/code\u003e actions.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eHTTP Verb\u003c/th\u003e\n\u003cth\u003ePath\u003c/th\u003e\n\u003cth\u003eController#Action\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cstrong\u003eGET\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003e/birds\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003ebirds#index\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003eShow all birds\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePOST\u003c/td\u003e\n\u003ctd\u003e/birds\u003c/td\u003e\n\u003ctd\u003ebirds#create\u003c/td\u003e\n\u003ctd\u003eCreate a new bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cstrong\u003eGET\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003e/birds/:id\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003ebirds#show\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003eShow a specific bird\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePATCH or PUT\u003c/td\u003e\n\u003ctd\u003e/birds/:id\u003c/td\u003e\n\u003ctd\u003ebirds#update\u003c/td\u003e\n\u003ctd\u003eUpdate a specific bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDELETE\u003c/td\u003e\n\u003ctd\u003e/birds/:id\u003c/td\u003e\n\u003ctd\u003ebirds#destroy\u003c/td\u003e\n\u003ctd\u003eDelete a specific bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\n\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eFirst, we'll need to install the dependencies as usual:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, we'll need to make a \u003ccode\u003eBird\u003c/code\u003e model and generate some sample data for\nour API. Let's use a Rails generator to set up our model:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g model Bird name species \u003cspan class=\"nt\"\u003e--no-test-framework\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter generating the model, run the migration:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, we'll create some seed data in the \u003ccode\u003edb/seeds.rb\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Black-Capped Chickadee\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Poecile Atricapillus\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Grackle\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Quiscalus Quiscula\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Common Starling\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Sturnus Vulgaris\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Mourning Dove\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Zenaida Macroura\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo add these birds to our database, run the seed file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eCreating RESTful Routes with Resources\u003c/h2\u003e\n\n\u003cp\u003eTo set up our \u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003eshow\u003c/code\u003e actions, we'll first need to create some\nroutes. Recall that the RESTful convention for these routes is as follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /birds      =\u0026gt; show a list of all birds\nGET /birds/:id  =\u0026gt; show one specific bird\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eJust like in previous lessons, we can build the routes for these actions in\nRails by hand, like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n\n\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edraw\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/birds'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'birds#index'\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/birds/:id'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'birds#show'\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can verify that these routes were added successfully by viewing all of our\napp's routes using a handy Rake task. In your terminal, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails routes\n\u003cspan class=\"gp\"\u003ePrefix  Verb  URI Pattern           Controller#\u003c/span\u003eAction\n\u003cspan class=\"gp\"\u003e birds  GET   /birds(.:format)      birds#\u003c/span\u003eindex\n\u003cspan class=\"gp\"\u003e        GET   /birds/:id(.:format)  birds#\u003c/span\u003eshow\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHowever, there is a better way to build the routes: Rails provides a tool,\n\u003ccode\u003eresources\u003c/code\u003e, that enforces RESTful conventions and saves us work.\u003c/p\u003e\n\n\u003cp\u003eEdit the \u003ccode\u003econfig/routes.rb\u003c/code\u003e file like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edraw\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birds\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, run \u003ccode\u003erails routes\u003c/code\u003e again:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails routes\n\u003cspan class=\"gp\"\u003ePrefix  Verb    URI Pattern           Controller#\u003c/span\u003eAction\n\u003cspan class=\"gp\"\u003e birds  GET     /birds(.:format)      birds#\u003c/span\u003eindex\n\u003cspan class=\"gp\"\u003e        POST    /birds(.:format)      birds#\u003c/span\u003ecreate\n\u003cspan class=\"gp\"\u003e  bird  GET     /birds/:id(.:format)  birds#\u003c/span\u003eshow\n\u003cspan class=\"gp\"\u003e        PATCH   /birds/:id(.:format)  birds#\u003c/span\u003eupdate\n\u003cspan class=\"gp\"\u003e        PUT     /birds/:id(.:format)  birds#\u003c/span\u003eupdate\n\u003cspan class=\"gp\"\u003e        DELETE  /birds/:id(.:format)  birds#\u003c/span\u003edestroy\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith just one line of code — \u003ccode\u003eresources :birds\u003c/code\u003e — Rails created all the RESTful\nroutes we need and mapped them to the appropriate controller action!\u003c/p\u003e\n\n\u003cp\u003eWith great power comes great responsibility. Even though we'll eventually add\nall of these RESTful routes to our API, for the time being, we only need two:\nthe \u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003eshow\u003c/code\u003e routes. We can still use \u003ccode\u003eresources\u003c/code\u003e and customize which\nroutes are created like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edraw\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birds\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:show\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRunning \u003ccode\u003erails routes\u003c/code\u003e now will give us the same output as when we wrote out the\nroutes by hand:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails routes\n\u003cspan class=\"gp\"\u003ePrefix  Verb  URI Pattern           Controller#\u003c/span\u003eAction\n\u003cspan class=\"gp\"\u003e birds  GET   /birds(.:format)      birds#\u003c/span\u003eindex\n\u003cspan class=\"gp\"\u003e        GET   /birds/:id(.:format)  birds#\u003c/span\u003eshow\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs a rule, \u003cstrong\u003eyou should only generate routes that your API is actually using\u003c/strong\u003e.\nIf you create a route using \u003ccode\u003eresources\u003c/code\u003e, but don't implement the controller\naction for that route, your API's consumers (any clients using your API) will\nget an unexpected response if they try to use a route that doesn't exist.\u003c/p\u003e\n\n\u003ch2\u003eHandling the Index and Show Actions\u003c/h2\u003e\n\n\u003cp\u003eTo complete our first couple RESTful actions, let's set up a controller:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g controller Birds \u003cspan class=\"nt\"\u003e--no-test-framework\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn the controller, add the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/bird_controller.rb\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBirdsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# GET /birds\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebirds\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebirds\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# GET /birds/:id\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bird not found\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRun \u003ccode\u003erails s\u003c/code\u003e and visit the \u003ccode\u003e/birds\u003c/code\u003e and \u003ccode\u003e/birds/1\u003c/code\u003e endpoints in the browser to\ncheck your work!\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned how to set up the two \"Read\" CRUD actions.\nSpecifically, we set up the routes to handle the requests as well as the\ncontroller actions to return the requested information. We also learned how to\nuse a built-in tool, \u003ccode\u003eresources\u003c/code\u003e, as an easier way to set up routes that follow\n\u003cstrong\u003eREST conventions\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eTools like \u003ccode\u003eresources\u003c/code\u003e are examples of Rails' use of the \u003cstrong\u003econvention over\nconfiguration\u003c/strong\u003e paradigm. What are the advantages of this approach?\u003c/li\u003e\n\u003cli\u003eWhy is it a good idea to limit the routes you create to ones that your API\nwill actually use?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html#resource-routing-the-rails-default\"\u003eRails Resource Routing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://api.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/Resources.html\"\u003e\u003ccode\u003eresources\u003c/code\u003e method\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g75d9e39a276968d59f2238ac72b98398","title":"Rails Resource Routing: Update","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-resources-update\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-update/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-update\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-resources-update/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUpdate a resource using Rails\u003c/li\u003e\n\u003cli\u003eDefine custom routes in addition to \u003ccode\u003eresources\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we'll continue working on our Bird API by adding an \u003ccode\u003eupdate\u003c/code\u003e\naction, so that clients can use our API to update birds. To get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will download all the dependencies for our app and set up the database.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eHTTP Verb\u003c/th\u003e\n\u003cth\u003ePath\u003c/th\u003e\n\u003cth\u003eController#Action\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e/birds\u003c/td\u003e\n\u003ctd\u003ebirds#index\u003c/td\u003e\n\u003ctd\u003eShow all birds\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePOST\u003c/td\u003e\n\u003ctd\u003e/birds\u003c/td\u003e\n\u003ctd\u003ebirds#create\u003c/td\u003e\n\u003ctd\u003eCreate a new bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e/birds/:id\u003c/td\u003e\n\u003ctd\u003ebirds#show\u003c/td\u003e\n\u003ctd\u003eShow a specific bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cstrong\u003ePATCH or PUT\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003e/birds/:id\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003ebirds#update\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003eUpdate a specific bird\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDELETE\u003c/td\u003e\n\u003ctd\u003e/birds/:id\u003c/td\u003e\n\u003ctd\u003ebirds#destroy\u003c/td\u003e\n\u003ctd\u003eDelete a specific bird\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\n\n\n\u003ch2\u003eAdding Features\u003c/h2\u003e\n\n\u003cp\u003eOur birding app has grown wildly in popularity, which means it's time to add a\nnew feature to keep our users happy! Market research suggests we can increase\nuser engagement by adding a \"like\" feature to our application. To do this,\nwe'll need to update our \u003ccode\u003eBird\u003c/code\u003e model to keep track of the number of likes.\u003c/p\u003e\n\n\u003cp\u003eWe'll also need to create a new API endpoint so that users can update the number\nof likes for a specific bird.\u003c/p\u003e\n\n\u003ch2\u003eChanging Our Model With Migrations\u003c/h2\u003e\n\n\u003cp\u003eLet's start by creating a new migration to update our \u003ccode\u003eBird\u003c/code\u003e model and the\nassociated \u003ccode\u003ebirds\u003c/code\u003e table:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g migration AddLikesToBird likes:integer \u003cspan class=\"nt\"\u003e--no-test-framework\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eNote: the \u003ccode\u003e--no-test-framework\u003c/code\u003e argument isn't actually needed in this case\nbecause the Rails migration generator does not create tests. However, it\ndoesn't hurt to include it so we do so to encourage the habit.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThis will create a new migration file for updating our \u003ccode\u003ebirds\u003c/code\u003e table with a new\ncolumn for \u003ccode\u003elikes\u003c/code\u003e. Let's also add a default value of 0 likes, and ensure we're\nnot permitting null values to be saved to the likes column:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eAddLikesToBird\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eMigration\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mf\"\u003e6.1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003echange\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eadd_column\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birds\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:likes\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:integer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003enull: \u003c/span\u003e\u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003edefault: \u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eFor a refresher on migrations, check out the\n\u003ca href=\"https://guides.rubyonrails.org/active_record_migrations.html\"\u003eActive Record docs\u003c/a\u003e!\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eNext, run the migration:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe'll also want to re-seed our database. You can do so with this command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:reset\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will drop our old development database, and re-create it from scratch based\non our schema and seed file.\u003c/p\u003e\n\n\u003cp\u003eWith our data set up, let's turn to the next action: updating likes!\u003c/p\u003e\n\n\u003ch2\u003eUpdating Existing Birds\u003c/h2\u003e\n\n\u003cp\u003eTo start, we'll need to create a new route and controller action to give our\nclients the ability to update birds. Recall that following RESTful conventions,\nwe'll want to set up a \u003ccode\u003ePATCH /birds/:id\u003c/code\u003e route. Just like for our \u003ccode\u003eshow\u003c/code\u003e route,\nwe need the ID in the URL to identify \u003cstrong\u003ewhich\u003c/strong\u003e bird is being updated.\u003c/p\u003e\n\n\u003cp\u003eWe can use \u003ccode\u003eresources\u003c/code\u003e to add this route by adding the \u003ccode\u003e:update\u003c/code\u003e action in our\n\u003ccode\u003eroutes.rb\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birds\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:show\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:update\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, add an \u003ccode\u003eupdate\u003c/code\u003e action in our controller. Our goal in this action is to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003efind the bird that matches the ID from the route params\u003c/li\u003e\n\u003cli\u003eupdate the bird using the params from the body of the request\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBirdsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# rest of actions here...\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# PATCH /birds/:id\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bird not found\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eJust like in the \u003ccode\u003ecreate\u003c/code\u003e action, we are using strong params when updating the\nbird. We can modify the strong params in the \u003ccode\u003ebird_params\u003c/code\u003e method to allow the\n\u003ccode\u003elikes\u003c/code\u003e as well:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ebird_params\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epermit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:species\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:likes\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRun \u003ccode\u003erails s\u003c/code\u003e and test out this route in Postman. Try updating the likes for one\nspecific bird:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePATCH /birds/1\n\n\nHeaders\n-------\nContent-Type: application/json\n\n\nRequest Body\n------\n{\n  \"likes\": 1\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf we had the client application built out, to implement this feature, we would\nadd a \"Like\" button to each bird's information. When the button is clicked, the\nfrontend code would access the current value of \u003ccode\u003elikes\u003c/code\u003e, add 1 to it, then send\nthat information in the request body of a \u003ccode\u003ePUT\u003c/code\u003e OR \u003ccode\u003ePATCH\u003c/code\u003e request. But\nresponsibility for keeping track of and updating the likes doesn't really belong\nin the frontend. To fix this, we can use a custom route.\u003c/p\u003e\n\n\u003ch2\u003eCreating Custom Routes\u003c/h2\u003e\n\n\u003cp\u003eTo take the responsibility for handling likes off of the frontend, we can\nprovide a \u003cstrong\u003ecustom route\u003c/strong\u003e that will do the work of calculating the number of\nlikes and incrementing it. With this approach, all the frontend has to do is\nsend a request to our new custom route, without worrying about sending any data\nin the body of the request.\u003c/p\u003e\n\n\u003cp\u003eUpdate the \u003ccode\u003eroutes.rb\u003c/code\u003e file like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eRails\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edraw\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresources\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birds\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eonly: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:index\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:show\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:create\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:update\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"n\"\u003epatch\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/birds/:id/like\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"birds#increment_likes\"\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen create the \u003ccode\u003eincrement_likes\u003c/code\u003e controller action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eincrement_likes\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003elikes: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elikes\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerror: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bird not found\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :not_found\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNotice that in this action, the only information we need from \u003ccode\u003eparams\u003c/code\u003e is the\n\u003ccode\u003eid\u003c/code\u003e; we're able to use the bird's current number of likes to calculate the next\nnumber of likes! Our client app no longer needs to concern itself with sending\nthat data or performing that calculation.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eA note on breaking convention: by creating this custom route, we are breaking\nthe REST conventions we had been following up to this point. One alternate way\nto structure this kind of feature and keep our routes and controllers RESTful\nwould be to create a new controller, such as Birds::LikesController, and add\nan \u003ccode\u003eupdate\u003c/code\u003e action in this controller. The creator of Rails, DHH, advocates\nfor \u003ca href=\"http://jeromedalbert.com/how-dhh-organizes-his-rails-controllers/\"\u003ethis approach for managing sub-resources\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eContinuing on our journey with REST and CRUD, we've seen how to update a record,\nusing \u003ccode\u003ePATCH /birds/:id\u003c/code\u003e. We also saw how to break RESTful conventions and\ncreate a custom route.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eUnder what circumstances does it make sense to create a custom route?\u003c/li\u003e\n\u003cli\u003eWhat are the advantages and disadvantages of using custom routes?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/active_record_migrations.html\"\u003eActive Record Migrations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://jeromedalbert.com/how-dhh-organizes-his-rails-controllers/\"\u003eHow DHH Organizes His Rails Controllers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g46b74b66bf6994f71b7de1b4de8c2506","title":"Rails Routing Basics","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-routing-basics-readme\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-routing-basics-readme/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-routing-basics-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-routing-basics-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand the flow of data in a Rails app\u003c/li\u003e\n\u003cli\u003eMap routes to controller actions\u003c/li\u003e\n\u003cli\u003eGenerate a controller\u003c/li\u003e\n\u003cli\u003eSend JSON data as a response\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eFork and clone this repo, then run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will download all the dependencies for our app and set up the database.\u003c/p\u003e\n\n\n\n\n\n\u003ch2\u003eRouting\u003c/h2\u003e\n\n\u003cp\u003eHow does your application know what code to run when it receives a request? This\nis where routing comes in.\u003c/p\u003e\n\n\u003cp\u003eBefore we dive into the code and routing configurations, it helps to know how\nHTTP works at a high level. Below is the flow that takes place when a user\nattempts to go to a page on a Rails application:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eA client sends a request to the server (this could be: a user entering a URL\nin a browser; a JavaScript application using \u003ccode\u003efetch\u003c/code\u003e; etc)\u003c/li\u003e\n\u003cli\u003eThat request is sent to the server where the application's router interprets\nthe request and sends a message to the controller mapped to that route\u003c/li\u003e\n\u003cli\u003eThe controller uses the model to access data from the database\u003c/li\u003e\n\u003cli\u003eThe controller then uses that data to render a view (HTML or JSON)\u003c/li\u003e\n\u003cli\u003eThe server returns an HTTP response, which contains the HTML or JSON data\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eCreating a Route\u003c/h2\u003e\n\n\u003cp\u003eLet's try this out in our application. We'll continue using our Cheese Shop app\nas an example. Our goal will be to create an endpoint for our application that\nwill return a list of all our cheeses as JSON data.\u003c/p\u003e\n\n\u003cp\u003eTo begin, start up the Rails server with \u003ccode\u003erails s\u003c/code\u003e and go to\n\u003ca href=\"http://localhost:3000/cheeses\"\u003e\u003ccode\u003ehttp://localhost:3000/cheeses\u003c/code\u003e\u003c/a\u003e. As you will\nsee, this throws a routing error: \u003ccode\u003eNo route matches [GET] \"/cheeses\"\u003c/code\u003e. To fix\nthis, we'll need to add a route.\u003c/p\u003e\n\n\u003cp\u003eStart by opening the \u003ccode\u003econfig/routes.rb\u003c/code\u003e file and adding the following route\ninside of the \u003ccode\u003edraw\u003c/code\u003e block:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'cheeses'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'cheeses#index'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet's look at the components that make up this route code:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eHTTP verb\u003c/strong\u003e: in this case we're using the \u003ccode\u003eget\u003c/code\u003e HTTP verb.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003ePath\u003c/strong\u003e: \u003ccode\u003e'cheeses'\u003c/code\u003e represents the path in the URL bar that the route will be\nmapped to.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eController Action\u003c/strong\u003e: \u003ccode\u003e'cheeses#index'\u003c/code\u003e tells the Rails routing system that\nthis route should be passed through the \u003ccode\u003eCheesesController\u003c/code\u003e's \u003ccode\u003eindex\u003c/code\u003e action.\nIf the term \u003ccode\u003eaction\u003c/code\u003e sounds foreign, actions are just Rails-speak for an\ninstance method in a controller. So in the \u003ccode\u003eCheesesController\u003c/code\u003e will be a method\ncalled \u003ccode\u003eindex\u003c/code\u003e that gets called when a user goes to \u003ccode\u003e/cheeses\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eNow go back to\n\u003ca href=\"http://localhost:3000/cheeses\"\u003e\u003ccode\u003ehttp://localhost:3000/cheeses\u003c/code\u003e\u003c/a\u003e, and refresh\nthe page. You should now see that the error message has changed. It's no longer\ncomplaining about not having a route; it should now say:\n\u003ccode\u003euninitialized constant CheesesController\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eLet's fix this by creating a new controller for our cheeses. You can generate a controller using a Rails generator, just like with a model:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g controller Cheeses \u003cspan class=\"nt\"\u003e--no-test-framework\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNotice the naming convention we're following: for a \u003ccode\u003eCheese\u003c/code\u003e model, we need a\n\u003ccode\u003eCheeses\u003c/code\u003e controller. \u003cstrong\u003eModel names are always singular, and controller names\nare plural\u003c/strong\u003e. These conventions are important to keep in mind!\u003c/p\u003e\n\n\u003cp\u003eThis will create a blank controller file \u003ccode\u003e/app/controllers/cheeses_controller.rb\u003c/code\u003e\nthat we can use to map to the routing file. Since there are a number of methods\nbuilt into the Rails controller system, you will also want the controller to\ninherit from the application controller. The new file should have code that\nlooks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCheesesController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe standard naming convention for controllers is the name of the controller\nfollowed by the word \u003ccode\u003eController\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf you refresh the browser now, you will see a new error:\n\u003ccode\u003eThe action 'index' could not be found for CheesesController\u003c/code\u003e. This means that\nit found our controller (woot!) but couldn't find the action \u003ccode\u003eindex\u003c/code\u003e in that\ncontroller (womp womp).\u003c/p\u003e\n\n\u003cp\u003eWe're making good progress (even though we're using EDD - error driven\ndevelopment), and it's good to see each of the errors so that when you encounter\nthese in your real world projects you will know how to fix them. This current\nerror is fixed by adding the following method in the \u003ccode\u003eCheesesController\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn this method, our goal is to send back a list of all our cheeses as JSON data.\nTo help accomplish our goal, let's do a bit of debugging in our controller action\nusing \u003ccode\u003ebyebug\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebyebug\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you haven't encountered \u003ccode\u003ebyebug\u003c/code\u003e before, it's a way to add \u003cem\u003ebreakpoints\u003c/em\u003e to\nour Rails code so we can \u003cem\u003epause the execution of our code\u003c/em\u003e and experiment. It\nfunctions similarly to \u003ccode\u003ebinding.pry\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eVisit \u003ca href=\"http://localhost:3000/cheeses\"\u003e\u003ccode\u003ehttp://localhost:3000/cheeses\u003c/code\u003e\u003c/a\u003e in the\nbrowser again, and check your terminal: you should be in the \u003ccode\u003ebyebug\u003c/code\u003e session\nnow! That means you have access to everything that's available inside our\ncontroller and can try out the code we need to return our list of cheeses.\u003c/p\u003e\n\n\u003cp\u003eFrom your \u003ccode\u003ebyebug\u003c/code\u003e session, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003echeeses\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will create a new \u003ccode\u003echeeses\u003c/code\u003e variable with all the cheese data from the\ndatabase!\u003c/p\u003e\n\n\u003cp\u003eTo see how to return a response with this cheese data, you can also run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003echeeses\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eCalling the \u003ccode\u003erender\u003c/code\u003e method with the \u003ccode\u003ejson:\u003c/code\u003e option will produce a\nJSON-formatted string of data which the controller can then use as the body of\nthe response being sent back to the client. If we pass an Active Record object\n(in this case, our \u003ccode\u003echeeses\u003c/code\u003e variable) to this render method, it will be\n\u003cem\u003eserialized\u003c/em\u003e as JSON data based on the attributes of the object.\u003c/p\u003e\n\n\u003cp\u003eTo exit \u003ccode\u003ebyebug\u003c/code\u003e gracefully, type \u003ccode\u003econtinue\u003c/code\u003e or \u003ccode\u003ec\u003c/code\u003e and hit enter.\u003c/p\u003e\n\n\u003cp\u003eNow that we've seen how that code will run in \u003ccode\u003ebyebug\u003c/code\u003e, let's add it to the\ncontroller action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n  \u003cspan class=\"n\"\u003echeeses\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003echeeses\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eVisit \u003ca href=\"http://localhost:3000/cheeses\"\u003e\u003ccode\u003ehttp://localhost:3000/cheeses\u003c/code\u003e\u003c/a\u003e in the\nbrowser one more time. Now you should see the JSON data being returned!\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eYou should now have a firm understanding of how to implement basic routing in\nyour application for static pages. Try experimenting by adding more routes and\ncontroller actions, and see what other responses you can set up by changing how\nyou are accessing data from the database (like using the \u003ccode\u003e.order\u003c/code\u003e or \u003ccode\u003e.limit\u003c/code\u003e\nmethods from Active Record).\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhen an HTTP request is made to a Rails app, what is the sequence of events\nthat happens to return the response?\u003c/li\u003e\n\u003cli\u003eWhat three components make up a route in Rails?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html\"\u003eRails Routing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g30af72554c74150e517c2b3b77842e34","title":"Rails Routing Basics Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-routing-basics-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-routing-basics-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-routing-basics-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-routing-basics-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a route\u003c/li\u003e\n\u003cli\u003eMap a route to a controller/action\u003c/li\u003e\n\u003cli\u003eSend JSON data as a response\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe'll continue building our API for viewing student data. In this lesson, we'll\nadd some routes and controller logic for displaying data about our students.\u003c/p\u003e\n\n\u003cp\u003eTo get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will download all the dependencies for our app and set up the database.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003ch3\u003eIndex Route\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a route for making a \u003ccode\u003eGET\u003c/code\u003e request to \u003ccode\u003e/students\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eGenerate a \u003ccode\u003eStudentsController\u003c/code\u003e with an \u003ccode\u003eindex\u003c/code\u003e action for handling the route;\ndon't forget to pass the \u003ccode\u003e--no-test-framework\u003c/code\u003e argument!\u003c/li\u003e\n\u003cli\u003eIn the \u003ccode\u003eindex\u003c/code\u003e action, return JSON data representing a list of all\nstudents\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eGrades Route\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a route for making a \u003ccode\u003eGET\u003c/code\u003e request to \u003ccode\u003e/students/grades\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eAdd a \u003ccode\u003egrades\u003c/code\u003e action in the \u003ccode\u003eStudentsController\u003c/code\u003e for handling that route\u003c/li\u003e\n\u003cli\u003eIn the \u003ccode\u003egrades\u003c/code\u003e action, return JSON data representing a list of all students,\nordered by grade from highest to lowest\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eBonus: Highest Grade Route\u003c/h3\u003e\n\n\u003cp\u003e\u003cstrong\u003eUn-comment out the last test in \u003ccode\u003e/spec/requests/students_spec.rb\u003c/code\u003e to complete the bonus.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a route for making a \u003ccode\u003eGET\u003c/code\u003e request to \u003ccode\u003e/students/highest-grade\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eAdd a \u003ccode\u003ehighest_grade\u003c/code\u003e action in the \u003ccode\u003eStudentsController\u003c/code\u003e for handling that\nroute\u003c/li\u003e\n\u003cli\u003eIn the \u003ccode\u003ehighest_grade\u003c/code\u003e action, return JSON data representing the one student\nwith the highest grade\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eNote\u003c/strong\u003e: while the other two routes should return an array of data, this\nroute should return just one student object!\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html\"\u003eRails Routing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/active_record_querying.html\"\u003eActive Record Query Interface\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g5c38125798c3d590264ac061a1492206","title":"Rails Update and Destroy Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-update-destroy-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-update-destroy-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-update-destroy-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-update-destroy-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eGenerate \u003ccode\u003eupdate\u003c/code\u003e and \u003ccode\u003edestroy\u003c/code\u003e routes for one resource\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll continue building an API for the plant store! The code for\nthe frontend React application is done; you can find it in the \u003ccode\u003eclient\u003c/code\u003e\ndirectory. Your job is to create the Rails API so that the \u003ccode\u003efetch\u003c/code\u003e requests on\nthe frontend work successfully.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eTo set up the frontend and backend dependencies, from the root directory, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo see how the React application and Rails API are interacting, you can run the\nRails application in one terminal by running:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, \u003cstrong\u003eopen another terminal\u003c/strong\u003e and run React:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEach application will run on its own port on \u003ccode\u003elocalhost\u003c/code\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eReact: \u003ca href=\"http://localhost:4000\"\u003ehttp://localhost:4000\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eRails: \u003ca href=\"http://localhost:3000\"\u003ehttp://localhost:3000\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eDeliverables\u003c/h2\u003e\n\n\u003ch3\u003eRoutes\u003c/h3\u003e\n\n\u003cp\u003eYour API should have the following routes as well as the associated controller\nactions that return the appropriate JSON data:\u003c/p\u003e\n\n\u003ch4\u003eUpdate Route\u003c/h4\u003e\n\n\u003cp\u003eMaking a PATCH request to this route with an object in the body should update one\nplant, and return the updated plant in the response. You should use strong\nparams to handle the update.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePATCH /plants/:id\n\n\nHeaders\n-------\nContent-Type: application/json\n\n\nRequest Body\n------\n{\n  \"is_in_stock\": false\n}\n\n\nResponse Body\n-------\n{\n  \"id\": 1,\n  \"name\": \"Aloe\",\n  \"image\": \"./images/aloe.jpg\",\n  \"price\": 11.50,\n  \"is_in_stock\": false\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch4\u003eDestroy Route\u003c/h4\u003e\n\n\u003cp\u003eMaking a DELETE request to this route should delete one plant from the database.\nYou should return a response of \u003ccode\u003ehead :no_content\u003c/code\u003e to indicate a successful\ndeletion.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eDELETE /plants/:id\n\n\nResponse Body\n------\nno content\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g24b5d2b6c23aceb1b49e1f341c44b11e","title":"Reducers Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-reducers-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-reducers-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-reducers-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-reducers-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eWrite a reducer function\u003c/li\u003e\n\u003cli\u003eUse a reducer to update create a new state based on an action\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\n\u003cp\u003eEach year, around the holidays especially, we forget who we need to buy presents\nfor. Let's write a function that will help us manage our gift recipient list. We\nshould be able to add a person we need to buy a present for and remove people we\nno longer like (or who give us socks every year!).\u003c/p\u003e\n\n\u003cp\u003eIn this lab, we will focus on writing two reducers to help us handle this task.\nSince we're drilling down into one concept, React is not set up in this lab, nor\nis there an \u003ccode\u003eindex.html\u003c/code\u003e file. Follow the instructions below and implement your\ncode in \u003ccode\u003e/src/manageFriends.js\u003c/code\u003e and \u003ccode\u003e/src/managePresents.js\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eTo get started, run \u003ccode\u003enpm install\u003c/code\u003e to install the test dependencies.\u003c/p\u003e\n\n\u003cp\u003eFor this lab, you won't be able to run any code in the browser. Just run the\ntests to check your code as you go!\u003c/p\u003e\n\n\u003cp\u003eYou'll be writing two reducers for this lesson. Both reducers should be pure\nfunctions. This means that the functions cannot change any object defined\noutside of the functions. It also means that given an input, the reducers will\nalways return the same output.\u003c/p\u003e\n\n\u003ch3\u003e\n\u003ccode\u003emanagePresents\u003c/code\u003e Function\u003c/h3\u003e\n\n\u003cp\u003eIn \u003ccode\u003emanagePresents.js\u003c/code\u003e, write a function called \u003ccode\u003emanagePresents()\u003c/code\u003e that takes in\nthe previous state and an action as its argument. The default value for the\nstate argument is an object with a key, \u003ccode\u003enumberOfPresents\u003c/code\u003e, assigned to \u003ccode\u003e0\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eActions passed into this reducer will only have a \u003cem\u003etype\u003c/em\u003e attribute, so they\nwould look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003epresents/increase\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the reducer receives a \u003ccode\u003etype\u003c/code\u003e set to \u003ccode\u003e\"presents/increase\"\u003c/code\u003e, return a new\nstate where the value of \u003ccode\u003enumberOfPresents\u003c/code\u003e is increased by one. Use the tests\nto guide you as you build out this reducer.\u003c/p\u003e\n\n\u003ch3\u003e\n\u003ccode\u003emanageFriends\u003c/code\u003e Function\u003c/h3\u003e\n\n\u003cp\u003eIn \u003ccode\u003emanageFriends.js\u003c/code\u003e, write a function called \u003ccode\u003emanageFriends\u003c/code\u003e that takes in the\nprevious state and an action as its argument. Here, the initial state should be\nan object with a key, \u003ccode\u003efriends\u003c/code\u003e, set to an empty array.\u003c/p\u003e\n\n\u003cp\u003eThis time, the reducer should be able to handle two actions, \u003ccode\u003e\"friends/add\"\u003c/code\u003e and\n\u003ccode\u003e\"friends/remove\"\u003c/code\u003e. When adding a friend, the action will include a \u003ccode\u003efriend\u003c/code\u003e key\nassigned to an object with \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ehometown\u003c/code\u003e, and \u003ccode\u003eid\u003c/code\u003e keys.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003efriends/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eChrome Boi\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ehomewtown\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eNYC\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen our reducer receives \u003ccode\u003e\"friends/add\"\u003c/code\u003e, it should return a new state with\nthis friend object added to the \u003ccode\u003efriends\u003c/code\u003e array.\u003c/p\u003e\n\n\u003cp\u003eWhen removing a friend, instead of an object, the action will include an \u003ccode\u003eid\u003c/code\u003e\nkey with an integer. Find the friend with the matching \u003ccode\u003eid\u003c/code\u003e and remove them.\nThought of in another way, the reducer is really returning a new state with an\narray of \u003ccode\u003efriends\u003c/code\u003e that includes everyone \u003cem\u003eexcept\u003c/em\u003e the removed friend.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003efriends/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eDon't Mutate State\u003c/h2\u003e\n\n\u003cp\u003eAs the Redux documentation notes:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIn order to update values immutably, your code must make copies of existing\nobjects/arrays, and then modify the copies. We can do this by hand using\nJavaScript's array / object spread operators, as well as array methods that\nreturn new copies of the array instead of mutating the original array.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eHere's an example of creating a copy an object using the spread operator\n(\u003ccode\u003e{...}\u003c/code\u003e):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003edog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003escooby\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003ecolor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebrown\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003eage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003eolderDog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003edog\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003eage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003edog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis would translate to the same English, \"Return a new object that contains all\nthe key-value pairs from \u003ccode\u003edog\u003c/code\u003e copied over with the \u003ccode\u003eage\u003c/code\u003e key overwritten with a\nnew value\".\u003c/p\u003e\n\n\u003cp\u003eAs you're working through these tests, make sure your functions don't mutate\nstate!\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\"\u003eMozilla Object.assign\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://redux.js.org/docs/recipes/UsingObjectSpreadOperator.html\"\u003eRedux Docs: Object Spread Operator\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\"\u003eMozilla findIndex\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://redux.js.org/docs/basics/Reducers.html\"\u003eRedux Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gf5fd71590fa88d00b7451197de42f8d0","title":"Redux Combine Reducers","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-combine-reducers\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-combine-reducers/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-combine-reducers\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-combine-reducers/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eWrite action creators and reducers to modify application state\u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003ecombineReducers()\u003c/code\u003e function to delegate different pieces of state to\neach reducer\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eSo far we have been using a single reducer to return a new state when an action\nis dispatched. This works great for a small application where we only need our\nreducer to manage the state of one resource. However, as you will see, when\nworking with multiple resources, placing all of this logic in one reducer\nfunction can quickly become unwieldy.\u003c/p\u003e\n\n\u003cp\u003eEnter \u003ccode\u003ecombineReducers()\u003c/code\u003e to save the day! In this lab, we'll see how Redux's\n\u003ccode\u003ecombineReducers()\u003c/code\u003e function lets us delegate different pieces of state to\nseparate reducer functions.\u003c/p\u003e\n\n\u003cp\u003eWe'll do this in the context of a book application that we'll use to keep track\nof programming books that we've read.\u003c/p\u003e\n\n\u003cp\u003eWe want our app to do two things:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eKeep track of all the books we've read: title, author, description.\u003c/li\u003e\n\u003cli\u003eKeep track of the authors who wrote these books.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eDetermine Application State Structure\u003c/h2\u003e\n\n\u003cp\u003eOur app will need a state object that stores two types of information:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eAll our books, in an array\u003c/li\u003e\n\u003cli\u003eOur authors, also in an array\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eEach of these types of information — all our books, and the authors — should be\nrepresented on our store's state object. We want to think of our store's state\nstructure as a database. We will represent this as a belongs to/has many\nrelationship, in that a book belongs to an author and an author has many books.\nSo this means each author would have its own id, and each book would have an\nauthorId as a foreign key.\u003c/p\u003e\n\n\u003cp\u003eWith that, we can set the application state as:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eauthors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e//array of authors\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e// array of books\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo our state object will have two top-level keys, each pointing to an array. For\nnow, let's write a single reducer to manage both of these resources.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eauthors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e//array of authors\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e// array of books\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003enewBooks\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003enewBooks\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eauthors/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eauthors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthors\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eauthors/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003enewAuthors\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eauthors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003enewAuthors\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is the current set up in \u003ccode\u003esrc/features/books/booksSlice.js\u003c/code\u003e, and it works.\nYou can see, however, by working with just two resources, the size of our\nreducer increased significantly. Moreover, by placing each resource in the same\nreducer, we are coupling these resources together, where we would prefer to\nmaintain their separation. By creating separate reducers for each resource in an\napplication, we can keep our code organized as our applications get more\ncomplicated.\u003c/p\u003e\n\n\u003ch2\u003eRefactor by using combineReducers\u003c/h2\u003e\n\n\u003cp\u003eThe \u003ccode\u003ecombineReducers()\u003c/code\u003e function allows us to write two or more separate\nreducers, then pass each reducer to the \u003ccode\u003ecombineReducers()\u003c/code\u003e function to produce\nthe reducer we wrote above. Then we pass that combined reducer to the store in\n\u003ccode\u003esrc/index.js\u003c/code\u003e. Let's write some code, and then we'll walk through it below.\u003c/p\u003e\n\n\u003cp\u003eFirst, let's reorganize our code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003esrc\n├── features\n│   ├── authors\n│   │   ├── AuthorInput.js\n│   │   ├── Authors.js\n│   │   └── authorSlice.js\n│   └── books\n│       ├── BookInput.js\n│       ├── Books.js\n│       └── booksSlice.js\n└── reducers.js\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eStart by creating separate folders for the code related to each 'domain' of our\napp: authors and books. Move your component code into the appropriate folders,\nand update your imports in \u003ccode\u003eApp.js\u003c/code\u003e. Then, create a new \u003ccode\u003eauthorSlice.js\u003c/code\u003e file.\nUpdate the \u003ccode\u003eauthorSlice.js\u003c/code\u003e file with this code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/authors/authorSlice.js\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// Action Creators\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eaddAuthor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eauthors/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eremoveAuthor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eauthors/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// Reducers\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[];\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthorsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eauthors/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e[...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eauthors/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, update the \u003ccode\u003ebooksSlice.js\u003c/code\u003e file like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// ./src/features/books/booksSlice.js\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// Action Creators\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eaddBook\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eremoveBook\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// Reducers\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[];\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ebooksReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e[...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAlso, fix the imports for the action creators in your components.\u003c/p\u003e\n\n\u003cp\u003eFinally, create a new file for our combined reducers:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/reducers.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecombineReducers\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthorsReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/authors/authorsSlice\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ebooksReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/books/booksSlice\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecombineReducers\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eauthors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthorsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ebooksReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere's a lot of code there, so let's unpack it a bit:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecombineReducers\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthorsReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/authors/authorsSlice\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ebooksReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/books/booksSlice\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecombineReducers\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eauthors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthorsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ebooksReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThrough \u003ccode\u003ecombineReducer\u003c/code\u003e, we're telling Redux to produce a reducer which will\nreturn a state that has both a key of \u003ccode\u003ebooks\u003c/code\u003e with a value equal to the return\nvalue of the \u003ccode\u003ebooksReducer()\u003c/code\u003e \u003cem\u003eand\u003c/em\u003e a key of \u003ccode\u003eauthors\u003c/code\u003e with a value equal to the\nreturn value of the \u003ccode\u003eauthorsReducer()\u003c/code\u003e. Now if you look at the \u003ccode\u003ebooksReducer()\u003c/code\u003e\nand the \u003ccode\u003eauthorsReducer()\u003c/code\u003e you will see that each returns a default state of an\nempty array.\u003c/p\u003e\n\n\u003cp\u003eWe'll also need to import our new root reducer in the \u003ccode\u003esrc/index.js\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./reducer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003e__REDUX_DEVTOOLS_EXTENSION__\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003e__REDUX_DEVTOOLS_EXTENSION__\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBy passing our \u003ccode\u003erootReducer\u003c/code\u003e to the \u003ccode\u003ecreateStore\u003c/code\u003e method, the application\nmaintains its initial state of \u003ccode\u003e{ books: [], authors: [] }\u003c/code\u003e, just as it did when\nwe had one reducer. From the application's perspective nothing has changed.\u003c/p\u003e\n\n\u003ch2\u003eExamining Our New Reducers\u003c/h2\u003e\n\n\u003cp\u003eNow if we examine the \u003ccode\u003eauthorsReducer()\u003c/code\u003e, notice that this reducer only concerns\nitself with its own \u003cem\u003eslice\u003c/em\u003e of the state. This makes sense. Remember that\nultimately the array that the \u003ccode\u003eauthorsReducer()\u003c/code\u003e returns will be the value to\nthe key of authors. Similarly the \u003ccode\u003eauthorsReducer()\u003c/code\u003e only receives as its state\nargument the value of \u003ccode\u003estate.authors\u003c/code\u003e, in other words the authors array.\u003c/p\u003e\n\n\u003cp\u003eIf we examine the \u003ccode\u003eauthorsReducer()\u003c/code\u003e, we see that we no longer retrieve the list\nof authors with a call to \u003ccode\u003estate.authors\u003c/code\u003e, but can access the list of authors\nsimply by calling \u003ccode\u003estate\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[];\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthorsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eauthors/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e[...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eauthors/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eDispatching Actions\u003c/h2\u003e\n\n\u003cp\u003eThe \u003ccode\u003ecombineReducer()\u003c/code\u003e function returns to us one large reducer that looks like\nthe following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eauthors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e//array of authors\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e// array of books\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// ...\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003enewBooks\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// ...\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// ...\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBecause of this, we can dispatch actions the same way we always did:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eSnow Crash\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eNeal Stephenson\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe dispatched action above will hit our switch statement in the reducer and add\na new author.\u003c/p\u003e\n\n\u003cp\u003eOne thing to note: if you want to have more than one reducer respond to the same\naction, you can! For example, in our application, when a user inputs information\nabout a book, the user \u003cem\u003ealso\u003c/em\u003e inputs the author's name. It would be handy if,\nwhen a user submits a book with an author, that author is also added to our\nauthor array.\u003c/p\u003e\n\n\u003cp\u003eThe action dispatched doesn't change:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eSnow Crash\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eNeal Stephenson\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOur \u003ccode\u003ebooksReducer\u003c/code\u003e can stay the same for now:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[];\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ebooksReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e[...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHowever, in \u003ccode\u003eauthorsReducer\u003c/code\u003e, we can \u003cem\u003ealso\u003c/em\u003e include a switch case for\n\u003ccode\u003e\"books/add\"\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ev4\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003euuid\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[];\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthorsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eauthors/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e[...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eauthors/remove\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebooks/add\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eexistingAuthor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthorName\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthorName\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eexistingAuthor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n          \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n          \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003eauthorName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eauthorName\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e];\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn the new \u003ccode\u003e\"books/add\"\u003c/code\u003e case, we're checking to see if an \u003ccode\u003eauthorName\u003c/code\u003e matches\nwith the name dispatched from the \u003ccode\u003eBookInput\u003c/code\u003e component. If the name already\nexists, state is returned unchanged. If the name is not present, it is added to\nthe author array. Use the example above to modify the \u003ccode\u003eauthorReducer\u003c/code\u003e reducer\nand you can see the effect. We have two separate forms, one for adding just\nauthors, and one that adds books \u003cem\u003eand\u003c/em\u003e authors.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e We're using a useful package, \u003ccode\u003euuid\u003c/code\u003e, to handle unique ID generation.\nWith this refactor, since we are creating an author ID from within the reducer\ninstead of in \u003ccode\u003eAuthorInput.js\u003c/code\u003e, we need to import it here as well.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn React/Redux apps where we're using and storing many resources in our store,\nkeeping reducers separated helps us organize code and separate concerns. Actions\ncan cause multiple reducers to modify their own state, but we can still keep all\nmodifications to a \u003cem\u003eparticular\u003c/em\u003e resource within its own separate file.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/tutorials/fundamentals/part-3-state-actions-reducers#combining-reducers\"\u003eCombining Reducers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://egghead.io/lessons/javascript-redux-implementing-combinereducers-from-scratch\"\u003eImplementing Combine Reducers from Scratch\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gddb55f38ef9f756bd1f5a122f1efb1f9","title":"Redux Put It Together","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-quote-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-quote-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-quote-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-quote-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse the \u003ccode\u003ereact-redux\u003c/code\u003e library and the \u003ccode\u003eredux\u003c/code\u003e library to build an application\nwith multiple resources\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\n\u003cp\u003eIn this lab we will be building an application for making quotes. This will\ninclude creating a quote and updating the global Redux state.\u003c/p\u003e\n\n\u003cp\u003eIn our \u003ccode\u003eApp\u003c/code\u003e component we will render the components: \u003ccode\u003eQuoteForm\u003c/code\u003e \u0026amp; \u003ccode\u003eQuotes\u003c/code\u003e. We\nwill also need a reducer and actions file for our Quotes.\u003c/p\u003e\n\n\u003ch3\u003eQuotes Reducer\u003c/h3\u003e\n\n\u003cp\u003eThe quotes reducer should have an initial state of:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[];\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut when a quote is added, it should look like this (we will be using the \u003ccode\u003euuid\u003c/code\u003e\nnode package for generating ids):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e23423424242-42342423424242-fafdb\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003econtent\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eOne Awesome Quote\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eLuke Ghenco\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe will also need to extend out the \u003ccode\u003equotesReducer\u003c/code\u003e to handle removing quotes,\nupvoting quotes, and downvoting quotes as well. Check out the test specs for how\nto build these.\u003c/p\u003e\n\n\u003cp\u003eIf you need help updating state in your reducer without mutating state, check\nout the \u003ca href=\"https://redux.js.org/recipes/structuring-reducers/immutable-update-patterns\"\u003eRedux docs\u003c/a\u003e for some helpful patterns.\u003c/p\u003e\n\n\u003ch3\u003eQuotes Actions\u003c/h3\u003e\n\n\u003cp\u003eBuild out several actions as specified in the tests that build Action Creators\nfor add, removing, upvoting and downvoting quotes.\u003c/p\u003e\n\n\u003ch3\u003eQuoteForm Component\u003c/h3\u003e\n\n\u003cp\u003eOur \u003ccode\u003eQuoteForm\u003c/code\u003e component will have a \u003ccode\u003etextarea\u003c/code\u003e for a quotes content and an\ninput for a quotes author. We will be using component state for updating the\ninputs and making a controlled form, so make sure to have state for \u003ccode\u003econtent\u003c/code\u003e\nand \u003ccode\u003eauthor\u003c/code\u003e. You will dispatch an action to Redux using an action you will\ncreate called \u003ccode\u003eaddQuote()\u003c/code\u003e that will take a quote as an argument and start the\nreducer process.\u003c/p\u003e\n\n\u003ch3\u003eQuotes Component\u003c/h3\u003e\n\n\u003cp\u003eThe \u003ccode\u003eQuotes\u003c/code\u003e component will render a list of individual \u003ccode\u003eQuoteCard\u003c/code\u003e components.\nIt needs to be connected to the \u003ccode\u003eRedux\u003c/code\u003e state so that it can render the quotes.\nAlso make sure to attach the remove, upvote, and downvote actions from the\nQuotes Actions file to pass down as callback props to the \u003ccode\u003eQuoteCard\u003c/code\u003e component.\u003c/p\u003e\n\n\u003ch3\u003eQuoteCard Component\u003c/h3\u003e\n\n\u003cp\u003eMake sure to connect the callback action props to the the Upvote, Downvote and\nDelete buttons.\u003c/p\u003e\n\n\u003ch4\u003eExample App\u003c/h4\u003e\n\n\u003cp\u003eHere is an image of the example app, of what you are trying to build.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://s3-us-west-2.amazonaws.com/curriculum-content/web-development/react/quote-app-image.png\" alt=\"quote app example\"\u003e\u003c/p\u003e\n\n\u003ch4\u003eNote\u003c/h4\u003e\n\n\u003cp\u003eWe are using the \u003ccode\u003euuid\u003c/code\u003e package for this to create random unique ids. Here is\nthe documentation for \u003ca href=\"https://github.com/uuidjs/uuid\"\u003e\u003ccode\u003euuid\u003c/code\u003e\u003c/a\u003e. To use it, just\nimport it into your reducer and invoke it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ev4\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003euuid\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// '1fd3234'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/recipes/structuring-reducers/immutable-update-patterns\"\u003eImmutable Update Patterns\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ge2df59c6e0539f99f37909efa21673e6","title":"Redux Toolkit","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-toolkit\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-toolkit/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-toolkit\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-toolkit/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse Redux Toolkit to simplify Redux setup and help follow best practices\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eAs we've been writing Redux code, we've added a pretty significant amount of\ncomplexity to our applications for managing state. For the apps we've been\nbuilding in labs, this amount of complexity certainly may feel like overkill -\nwe could just as easily have used \u003ccode\u003euseState\u003c/code\u003e and called it a day! As\napplications grow, having a consistent, predictable pattern for managing state\nwill be beneficial.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eHowever\u003c/strong\u003e, as we've seen, adding more state means adding more \"boilerplate\"\ncode, such as:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreating new reducers\u003c/li\u003e\n\u003cli\u003eHandling state immutably in our reducers\u003c/li\u003e\n\u003cli\u003eAdding new action creators\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWe also need to go through a good amount of setup just to get Redux up and\nrunning:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCombine our reducers\u003c/li\u003e\n\u003cli\u003eConfigure the Redux Dev Tools\u003c/li\u003e\n\u003cli\u003eCreate our store\u003c/li\u003e\n\u003cli\u003eAdd the \u003ccode\u003eredux-thunk\u003c/code\u003e middleware for async actions\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe amount of boilerplate code to get Redux up and running, and add new\nfeatures, has been a consistent pain point for developers. Thankfully, the Redux\nteam now has a tool to simplify the setup and make our job a bit easier: \u003cstrong\u003eRedux\nToolkit\u003c/strong\u003e. We're going to work on refactoring an application that fetches data\nfrom an API to see how using Redux Toolkit can help simplify our code.\u003c/p\u003e\n\n\u003cp\u003eTo get started, install Redux Toolkit:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e @reduxjs/toolkit\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, code along as we refactor.\u003c/p\u003e\n\n\u003ch2\u003eStore Setup\u003c/h2\u003e\n\n\u003cp\u003eCurrently, our store setup looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/store.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux-thunk\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposeWithDevTools\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux-devtools-extension\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./reducer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposedEnhancer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposeWithDevTools\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposedEnhancer\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe're also creating a root reducer in a separate file using \u003ccode\u003ecombineReducers\u003c/code\u003e,\nso that we can add more reducers as our need for state grows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/reducer.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecombineReducers\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eredux\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/cats/catsSlice\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecombineReducers\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ecats\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs you by now are surely aware, it takes quite a bit of work to get all the\ntools we need (\u003ccode\u003ecombineReducers\u003c/code\u003e, \u003ccode\u003eredux-thunk\u003c/code\u003e, the Redux DevTools, etc.) all\nin place! Let's see how this setup looks with the Redux Toolkit instead:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/store.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003econfigureStore\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@reduxjs/toolkit\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e./features/cats/catsSlice\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003econfigureStore\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ecats\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis one \u003ccode\u003econfigureStore\u003c/code\u003e function does all the work we'd done by hand to set up\nour store and greatly simplifies it. It handles the work of:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCombining the reducers (we can just add other reducers in the \u003ccode\u003econfigureStore\u003c/code\u003e\nfunction!);\u003c/li\u003e\n\u003cli\u003eSetting up \u003ccode\u003eredux-thunk\u003c/code\u003e (which is installed automatically as a dependency of\nRedux Toolkit); and\u003c/li\u003e\n\u003cli\u003eAdding the Redux DevTools!\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIf you run \u003ccode\u003enpm test\u003c/code\u003e now, you should be able to confirm all the functionality\nwe had previously set up by hand still works!\u003c/p\u003e\n\n\u003cp\u003eOne other benefit we get from the Redux toolkit is automatic checks for bugs\naround mutating state in our reducers.\u003c/p\u003e\n\n\u003cp\u003eIn our reducer, let's introduce a bug by mutating state (for demo purposes only,\nof course):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/features/cats/catsSlice.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/fetchCats/pending\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e// mutating state! nonono\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eloading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf you run \u003ccode\u003enpm start\u003c/code\u003e and run our app in the browser, you should now get a\nnice, big error message in the console warning you about not mutating state in\nthe reducer. This is an excellent error to have pop up in our applications -\nbugs related to improperly mutating state are notoriously difficult to spot, and\ncan introduce a lot of strange behavior into our apps. Having this automatic\ncheck in place should give us more confidence that we're writing our reducer\ncode properly!\u003c/p\u003e\n\n\u003cp\u003eNow that we're done with the Redux Toolkit setup for our store, we can also now\nsafely remove some dependencies from our app (since they're included with Redux\nToolkit):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm uninstall redux redux-thunk\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eCreating Slices\u003c/h2\u003e\n\n\u003cp\u003eLet's turn our attention next to our reducer and action creator code. All our\ncode is in the \u003ccode\u003esrc/features/cats/catsSlice.js\u003c/code\u003e file (a few new actions have\nbeen added for demo purposes). Let's start with the reducer:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/features/cats/catsSlice.js\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e// array of cats\u003c/span\u003e\n  \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// loading state\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// sync actions\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/catAdded\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/catRemoved\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/catUpdated\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// async actions\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/fetchCats/pending\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eloading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/fetchCats/fulfilled\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOne of the key requirements of our reducer is that we must always \u003cstrong\u003ereturn a new\nversion of state\u003c/strong\u003e, and \u003cstrong\u003enever\u003c/strong\u003e mutate state. We're using the spread operator\nand a few tricks with different array methods to accomplish this. Let's see how\nwe could simplify this with Redux Toolkit.\u003c/p\u003e\n\n\u003cp\u003eTo start off, we'll need to import the \u003ccode\u003ecreateSlice\u003c/code\u003e function:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateSlice\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@reduxjs/toolkit\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, we can update our reducer code like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e// array of cats\u003c/span\u003e\n  \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// loading state\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsSlice\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ereducers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003ecatAdded\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e// using createSlice lets us mutate state!\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003ecatUpdated\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecat\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// async actions to come...\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRunning \u003ccode\u003enpm test\u003c/code\u003e now after swapping out our reducer should still pass for all\ntests except those related to our \u003cem\u003easync\u003c/em\u003e actions (more on that later).\u003c/p\u003e\n\n\u003cp\u003eOne thing you'll notice is that we're now allowed to mutate state - no more\nspread operator! Under the hood, Redux Toolkit uses a library called \u003ca\u003eImmer\u003c/a\u003e\nto handle immutable state updates. We can safely write code that mutates state,\nas long as we're using \u003ccode\u003ecreateSlice\u003c/code\u003e, and Immer will ensure that we're not\n\u003cem\u003eactually\u003c/em\u003e mutating state.\u003c/p\u003e\n\n\u003cp\u003eUsing \u003ccode\u003ecreateSlice\u003c/code\u003e will \u003cem\u003ealso\u003c/em\u003e generate our action creators automatically!\nLet's delete the \u003ccode\u003ecatAdded\u003c/code\u003e and \u003ccode\u003ecatUpdated\u003c/code\u003e action creators we wrote by hand,\nand replace them with the ones generated by \u003ccode\u003ecreateSlice\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// the `catsSlice` object will have an `actions` property\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// with the auto-generated action creators\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatAdded\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatUpdated\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eactions\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eAsync Action Creators\u003c/h2\u003e\n\n\u003cp\u003eRedux Toolkit also gives us another way to work with \u003cem\u003easync\u003c/em\u003e action creators\nusing \u003ccode\u003eredux-thunk\u003c/code\u003e. We'll have to do a bit more work here to get these working\nthan with our normal, non-thunk action creators creators.\u003c/p\u003e\n\n\u003cp\u003eFirst, we'll need to import another function from Redux Toolkit:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateAsyncThunk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateSlice\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@reduxjs/toolkit\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, we can use this \u003ccode\u003ecreateAsyncThunk\u003c/code\u003e function to create our \u003ccode\u003efetchCats\u003c/code\u003e\nfunction:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateAsyncThunk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/fetchCats\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// return a Promise containing the data we want\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttps://learn-co-curriculum.github.io/cat-api/cats.json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eimages\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, to add this to our reducer:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsSlice\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ereducers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// sync reducers here\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// add this as a new key\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eextraReducers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// handle async action types\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epending\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eloading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efulfilled\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo recap what the code above is doing:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWe created a new async action creator using \u003ccode\u003ecreateAsyncThunk\u003c/code\u003e, called\n\u003ccode\u003efetchCats\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eWe added a new key on the slice object called \u003ccode\u003eextraReducers\u003c/code\u003e, where we can\nadd custom reducer logic\u003c/li\u003e\n\u003cli\u003eWe added a case in \u003ccode\u003eextraReducers\u003c/code\u003e for the \u003ccode\u003efetchCats.pending\u003c/code\u003e state, which\nwill run when our fetch request has not yet come back with a response\u003c/li\u003e\n\u003cli\u003eWe also added a case for \u003ccode\u003efetchCats.fulfilled\u003c/code\u003e, which will run when our\nresponse comes back with the cat data\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThere's a lot to take in there! Working with async actions is still challenging,\nbut using this approach at least gives us a consistent way to structure our\nasync code and reduce the amount of hand-written logic for dealing with various\nfetch statuses ('idle', 'loading', 'error').\u003c/p\u003e\n\n\u003cp\u003eHere's what our completed slice file looks like after all those changes:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// src/features/cats/catsSlice.js\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateAsyncThunk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateSlice\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@reduxjs/toolkit\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateAsyncThunk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats/fetchCats\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// return a Promise containing the data we want\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttps://learn-co-curriculum.github.io/cat-api/cats.json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eimages\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsSlice\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecats\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"c1\"\u003e// array of cats\u003c/span\u003e\n    \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// loading state\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ereducers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003ecatAdded\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e// using createSlice lets us mutate state!\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003ecatUpdated\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecat\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eextraReducers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// handle async actions: pending, fulfilled, rejected (for errors)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epending\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eloading\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003efetchCats\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efulfilled\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eentities\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eidle\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatAdded\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatUpdated\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eactions\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003ecatsSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRunning the tests again should still give you a passing result - meaning that\nour refactor was successful.\u003c/p\u003e\n\n\u003cp\u003eYou can see the full, working code in the solution branch.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eUsing Redux Toolkit can help remove a lot of the \"boilerplate\" setup code for\nworking with Redux. It can also help save us from some of the common pitfalls of\nworking with Redux, such as mutating state. Finally, it also gives us a way to\nstructure our async code so that we can handle various loading states\nconsistently and predictably.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://redux-toolkit.js.org/introduction/quick-start\"\u003eRedux Toolkit\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://redux-toolkit.js.org/tutorials/advanced-tutorial\"\u003eRedux Toolkit: Advanced Tutorial\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g54263ec22a7289d3c2ee818d20448a15","title":"Refactoring Our Code Into A Library","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-create-store\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-create-store/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-create-store\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-create-store/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand which part of our codebase can be used across applications\u003c/li\u003e\n\u003cli\u003eUnderstand how to encapsulate the functions we built\u003c/li\u003e\n\u003cli\u003eUse the \u003ccode\u003egetState\u003c/code\u003e method\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we will learn how to turn our code into a library that can be\nused across JavaScript applications. Use \u003ccode\u003esrc/createStore.js\u003c/code\u003e to follow along.\nOpen \u003ccode\u003eindex.html\u003c/code\u003e to try out the code.\u003c/p\u003e\n\n\u003ch2\u003eWrite a \u003ccode\u003ecreateStore\u003c/code\u003e Function\u003c/h2\u003e\n\n\u003cp\u003eLet's look at the code that we wrote in the last section.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003econtainer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebutton\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSee that \u003ccode\u003estate\u003c/code\u003e variable all the way at the top of our code? Remember, that\nvariable holds a representation of all of our data we need to display. So it's\nnot very good if this variable is global, and we can accidentally overwrite\nsimply by writing \u003ccode\u003estate = 'bad news bears'\u003c/code\u003e somewhere else in our codebase.\nGoodbye state.\u003c/p\u003e\n\n\u003cp\u003eWe can solve this by wrapping our state in a function. (We will discuss a bit\nlater why we have named this function \u003ccode\u003ecreateStore\u003c/code\u003e.)\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// ...\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003econtainer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow if you reload the browser, you'll see an error pointing to where we are\ndispatching our initial action; this is because the \u003ccode\u003edispatch\u003c/code\u003e function does not\nhave access to that declared state. Notice that \u003ccode\u003erender\u003c/code\u003e won't have access to\nour state either. At this point, we might be tempted to move everything inside\nof our new function. However, the goal here is to include only the code that\nwould be common to all JavaScript applications inside the function. We'll try to\nfigure out exactly what we should move in the next section.\u003c/p\u003e\n\n\u003ch2\u003eUse Function Scope to Encapsulate State\u003c/h2\u003e\n\n\u003cp\u003eWe ultimately want our new function to become a function that all of our\napplications following the Redux pattern can use. To decide what our new\nfunction should be able to do, let's go back to our Redux fundamentals.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eAction -\u0026gt; Reducer -\u0026gt; New State.\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eThe function that goes through this flow for us is the \u003ccode\u003edispatch\u003c/code\u003e function. We\ncall \u003ccode\u003edispatch\u003c/code\u003e with an action, and it calls our reducer and returns to us a new\nstate. So let's move dispatch inside of our new method.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// state is now accessible to dispatch\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eNote: You may notice that in the above code we made a \u003cem\u003eclosure\u003c/em\u003e. As you surely\nremember a JavaScript function has access to all the variables that were in\nscope at the time of its definition. This feature is called a closure since a\nfunction encloses or draws a protective bubble around the variables in its\nscope and carries those with it when invoked later.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAs you see above, \u003ccode\u003edispatch\u003c/code\u003e is now private to our new function. But we'll need\nto call the function when certain events happen in our application (eg. we might\nwant to call dispatch when a user clicks on a button). So we expose the method\nby having our function return a JavaScript object containing the \u003ccode\u003edispatch\u003c/code\u003e\nmethod. In Redux terms, this returned JavaScript object is called the \u003cstrong\u003estore\u003c/strong\u003e,\nso we've named the method \u003ccode\u003ecreateStore\u003c/code\u003e because that's what it does.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn order to access the \u003ccode\u003edispatch\u003c/code\u003e method, we will create a variable \u003ccode\u003estore\u003c/code\u003e and\nset it equal to the result of calling \u003ccode\u003ecreateStore\u003c/code\u003e. Because \u003ccode\u003ecreateStore\u003c/code\u003e\nreturns an object that contains the \u003ccode\u003edispatch\u003c/code\u003e method, we can now access the\nmethod from \u003ccode\u003estore\u003c/code\u003e. Let's modify the code where we dispatch the initial action\nas follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo now we have this object called a store which contains all of our\napplication's state. Right now we can dispatch actions that modify that state,\nbut we need some way to retrieve data from the store. To do this, our store\nshould respond to one other method, \u003ccode\u003egetState\u003c/code\u003e. This method simply returns the\nstate so we can use it elsewhere in our application. We will also need to add\n\u003ccode\u003egetState\u003c/code\u003e to the object our \u003ccode\u003ecreateStore\u003c/code\u003e function returns.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003egetState\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003egetState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow we can get our code working by changing \u003ccode\u003erender\u003c/code\u003e to the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003econtainer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetState\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e...and then updating our button event listener to use \u003ccode\u003estore.dispatch\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebutton\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAll in all, with these changes, the code should look like the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003egetState\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003egetState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003econtainer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetState\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebutton\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOur code is back to working. And it looks like we have a function called\n\u003ccode\u003ecreateStore\u003c/code\u003e which can work with any JavaScript application... almost.\u003c/p\u003e\n\n\u003ch2\u003eAbstract Away the Reducer\u003c/h2\u003e\n\n\u003cp\u003eWe know that Redux works by having an action dispatched, which calls a reducer,\nand then renders the view. Our \u003ccode\u003ecreateStore\u003c/code\u003e's dispatch method does that.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNotice, however, that we did not move the \u003ccode\u003ereducer\u003c/code\u003e function into the\n\u003ccode\u003ecreateStore\u003c/code\u003e function. Take a look at it. \u003cem\u003eThis code\u003c/em\u003e is particular to our\napplication.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe happen to have an application that increases a count. But we can imagine\napplications that manage people's songs, their GitHub repositories, or their\ncontacts. So we want our \u003ccode\u003edispatch\u003c/code\u003e method to call a reducer every time an\naction is dispatched. However, we don't want the \u003ccode\u003ecreateStore\u003c/code\u003e function to\nspecify what that reducer is, or what it does. We want \u003ccode\u003ecreateStore\u003c/code\u003e to be\ngeneric enough for \u003cem\u003eany\u003c/em\u003e JavaScript application. Instead, we should make the\nreducer an argument to our \u003ccode\u003ecreateStore\u003c/code\u003e function. Then we pass through our\nreducer function when invoking the \u003ccode\u003ecreateStore\u003c/code\u003e method.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003egetState\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003egetState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"nl\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003econtainer\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003econtainer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etextContent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetState\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ereducer\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// createStore takes the reducer as an argument\u003c/span\u003e\n\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e@@INIT\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ebutton\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ecounter/increment\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs you see above, \u003ccode\u003ecreateStore\u003c/code\u003e takes the reducer as the argument. This sets the\nnew store's reducer as \u003ccode\u003ereducer\u003c/code\u003e. When an action is dispatched, it calls the\nreducer that we passed through when creating the store.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eWith this set up, we've got a fully functional \u003ccode\u003estore\u003c/code\u003e that encapsulates our\nstate and provides a controlled way to write (\u003ccode\u003edispatch\u003c/code\u003e) and retrieve\n(\u003ccode\u003egetState\u003c/code\u003e) information.\u003c/p\u003e\n\n\u003cp\u003eEvery piece of code that would be common to any JavaScript application following\nthis pattern is wrapped inside of the \u003ccode\u003ecreateStore\u003c/code\u003e function. Any code that is\nparticular to our application is outside that function.\u003c/p\u003e\n\n\u003cp\u003eWhat's particular to a specific application?\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eHow the DOM is updated in our \u003ccode\u003erender\u003c/code\u003e function\u003c/li\u003e\n\u003cli\u003eWhat events trigger a dispatch method\u003c/li\u003e\n\u003cli\u003eHow our state should change in response to different actions being dispatched.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThese are all implemented outside of our \u003ccode\u003ecreateStore\u003c/code\u003e function. What is generic\nto each application following this pattern?\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThat a call to \u003ccode\u003edispatch\u003c/code\u003e should call a reducer, reassign the state, and\nrender a change.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThis is implemented inside the \u003ccode\u003ecreateStore\u003c/code\u003e function.\u003c/p\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g91b0187c4eb8bfa5bd50f979cad55bc4","title":"Reverse a Doubly Linked List","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-reverse-doubly-linked-list\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-reverse-doubly-linked-list/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-reverse-doubly-linked-list\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-reverse-doubly-linked-list/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eBuild a doubly linked list and use it to solve an algorithm\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eAt this point we've learned how to solve algorithms with singly linked lists,\nand learned what doubly linked lists are, so it's time to put that knowledge to\nuse and solve an algorithm with a doubly linked list!\u003c/p\u003e\n\n\u003cp\u003eFork and clone this lab; you'll be coding in the \u003ccode\u003elib\u003c/code\u003e folder. You can\nrun the tests at any point using \u003ccode\u003elearn test\u003c/code\u003e to check your work.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eWrite a method \u003ccode\u003eLinkedList#reverse!\u003c/code\u003e that reverses the list in place, so the\nhead is the new tail, the tail is the new head, and all of the \u003ccode\u003eprev_node\u003c/code\u003e and\n\u003ccode\u003enext_node\u003c/code\u003e attributes of each node in the list point to the correct nodes.\u003c/p\u003e\n\n\u003cp\u003eFor example:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eInput:  \u003ccode\u003e6 \u0026lt;--\u0026gt; 7 \u0026lt;--\u0026gt; 8\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eOutput: \u003ccode\u003e8 \u0026lt;--\u0026gt; 7 \u0026lt;--\u0026gt; 6\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eInput:  \u003ccode\u003e11 \u0026lt;--\u0026gt; 18 \u0026lt;--\u0026gt; 19 \u0026lt;--\u0026gt; 94\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eOutput: \u003ccode\u003e94 \u0026lt;--\u0026gt; 19 \u0026lt;--\u0026gt; 18 \u0026lt;--\u0026gt; 11\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eInput:  \u003ccode\u003e41 \u0026lt;--\u0026gt; 101 \u0026lt;--\u0026gt; 8 \u0026lt;--\u0026gt; 28 \u0026lt;--\u0026gt; 32\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eOutput: \u003ccode\u003e32 \u0026lt;--\u0026gt; 28 \u0026lt;--\u0026gt; 8 \u0026lt;--\u0026gt; 101 \u0026lt;--\u0026gt; 41\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003eBonus\u003c/h3\u003e\n\n\u003cp\u003eTry to solve the problem recursively!\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eHint: You might want to create a recursive helper method \u003ccode\u003ereverse_node\u003c/code\u003e\ninstead of trying to use the \u003ccode\u003ereverse!\u003c/code\u003e method recursively.\u003c/p\u003e\n\u003c/blockquote\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gd37dd6f8ba2d735d6783f8360a58151b","title":"Route Params","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-route-params-readme\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-route-params-readme/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-route-params-readme\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-route-params-readme/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a dynamic route\u003c/li\u003e\n\u003cli\u003eUse route parameters in the controller via the params hash\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eFork and clone this repo, then run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will download all the dependencies for our app and set up the database.\u003c/p\u003e\n\n\u003ch2\u003eVideo Walkthrough\u003c/h2\u003e\n\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/BWeBbIDlHwI?rel=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\n\u003ch2\u003eReview\u003c/h2\u003e\n\n\u003cp\u003eYou already know how to create a static request, which is where you create a\npage that doesn't take any parameters and simply renders a view. For example:\n\u003ccode\u003elocalhost:3000/cheeses\u003c/code\u003e. For Rails to process this request, the \u003ccode\u003eroutes.rb\u003c/code\u003e file\ncontains a route such as:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/cheeses'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'cheeses#index'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is mapped to the \u003ccode\u003echeeses\u003c/code\u003e controller and its \u003ccode\u003eindex\u003c/code\u003e action, which renders\nan array of cheeses as JSON.\u003c/p\u003e\n\n\u003ch2\u003eDynamic Routes\u003c/h2\u003e\n\n\u003cp\u003eConsider this scenario: We're building a frontend feature for displaying data\nabout one individual cheese. It'd be nice to be able to request data about \u003cem\u003eone\nindividual cheese\u003c/em\u003e, instead of only being able to retrieve an array of all\ncheeses. Ideally, we'd use the ID of the cheese as part of the URL to identify\nwhich cheese we're gathering data about: \u003ccode\u003elocalhost:3000/cheeses/3\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWe could make separate routes for each cheese:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/cheeses/1'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"cheeses#first\"\u003c/span\u003e\n\u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/cheeses/2'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"cheeses#second\"\u003c/span\u003e\n\u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/cheeses/3'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"cheeses#third\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut that would quickly get ridiculous. You would have to modify your web server\nevery time someone creates a new cheese! Enter \u003cstrong\u003edynamic routes\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# config/routes.rb\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/cheeses/:id'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'cheeses#show'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eA breakdown of the dynamic route process flow is below:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eThe \u003ccode\u003eroutes.rb\u003c/code\u003e file takes in the request to \u003ccode\u003elocalhost:3000/cheeses/3\u003c/code\u003e and\nprocesses it like normal, except this time it also parses the \u003ccode\u003e3\u003c/code\u003e as a \u003cstrong\u003eURL\nparameter\u003c/strong\u003e and passes it to the \u003ccode\u003eCheesesController\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eFrom that point, the controller action that you write will parse the \u003ccode\u003e3\u003c/code\u003e\nparameter and run a query on the \u003ccode\u003eCheese\u003c/code\u003e model.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eOnce we have the correct Cheese instance, we can render a JSON response.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eIn review, what's the difference between static and dynamic routes?\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eStatic routes have a fixed path. For example, the \u003ccode\u003e/cheeses\u003c/code\u003e path will always\nshow a list of all cheeses.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eDynamic routes will render different data based on the parameters in the path.\nFor example, when \u003ccode\u003e3\u003c/code\u003e is passed in as the parameter to the \u003ccode\u003e/cheeses/:id\u003c/code\u003e\nroute, the app should render the data for the cheese with an ID of \u003ccode\u003e3\u003c/code\u003e. When\n\u003ccode\u003e222\u003c/code\u003e is passed in, the app should render the data for the cheese with an ID\nof \u003ccode\u003e222\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCode Implementation\u003c/h2\u003e\n\n\u003cp\u003eIn order to setup a dynamic request feature, we've got some tests already in\nplace:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# spec/requests/cheeses_spec.rb\u003c/span\u003e\n\n\u003cspan class=\"no\"\u003eRSpec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edescribe\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Cheeses'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003etype: :request\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003edescribe\u003c/span\u003e \u003cspan class=\"s1\"\u003e'GET /cheeses/:id'\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    \u003cspan class=\"n\"\u003elet!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:cheese\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cheddar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eprice: \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eis_best_seller: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"s1\"\u003e'returns the cheese with the matching id'\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/cheeses/\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"n\"\u003echeese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eid\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\n\n      \u003cspan class=\"n\"\u003eexpect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003einclude_json\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n        \u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"n\"\u003ea_kind_of\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n        \u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Cheddar'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"ss\"\u003eprice: \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"ss\"\u003eis_best_seller: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRunning \u003ccode\u003elearn test\u003c/code\u003e gives us an expected error:\n\u003ccode\u003eActionController::RoutingError: No route matches [GET] \"/cheeses/1\"\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eTo correct this error, let's draw a route in \u003ccode\u003econfig/routes.rb\u003c/code\u003e that maps to a\nshow action in the \u003ccode\u003eCheesesController\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/cheeses/:id'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eto: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'cheeses#show'\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou will notice something that's different from the static route. The \u003ccode\u003e/:id\u003c/code\u003e\ntells the routing system that this route can receive a parameter and that the\nparameter will be passed to the controller's \u003ccode\u003eshow\u003c/code\u003e action. With this route in\nplace, let's run our tests again.\u003c/p\u003e\n\n\u003cp\u003eYou should see a new failure this time:\n\u003ccode\u003eAbstractController::ActionNotFound: The action 'show' could not be found for CheesesController\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis means that we need to create a corresponding \u003ccode\u003eshow\u003c/code\u003e action in the\n\u003ccode\u003eCheesesController\u003c/code\u003e. Let's get this failure fixed by adding a show action to our controller:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/cheeses_controller.rb\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCheesesController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003echeeses\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003echeeses\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRun the tests again. You'll see a new error:\n\u003ccode\u003eJSON::ParserError: unexpected token at ''\u003c/code\u003e. We're getting this error because\nwe're not returning any JSON data from our controller action.\u003c/p\u003e\n\n\u003cp\u003eIf you start the Rails server and navigate to \u003ccode\u003e/cheeses/1\u003c/code\u003e or any other cheese\nrecord, the router will know what you're talking about so it won't return an\nerror. However, it won't display the requested content because the controller\nstill needs to be told what to do with the \u003ccode\u003eid\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3\u003eThe Params Hash\u003c/h3\u003e\n\n\u003cp\u003eWe first need to get the ID sent by the user through the dynamic URL. This\nvariable is passed into the controller in a hash called \u003ccode\u003eparams\u003c/code\u003e. Let's put a\n\u003ccode\u003ebyebug\u003c/code\u003e inside our \u003ccode\u003e#show\u003c/code\u003e action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/cheeses_controller.rb\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebyebug\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRun the tests to drop into the debugger and take a look at the value of\n\u003ccode\u003eparams\u003c/code\u003e. You should see this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#\u0026lt;ActionController::Parameters {\"controller\"=\u0026gt;\"cheeses\", \"action\"=\u0026gt;\"show\", \"id\"=\u0026gt;\"1\"} permitted: false\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSince we named the route \u003ccode\u003e/cheeses/:id\u003c/code\u003e, the ID is the value of the \u003ccode\u003e:id\u003c/code\u003e key,\nstored in \u003ccode\u003eparams[:id]\u003c/code\u003e. You can verify that by checking the value of\n\u003ccode\u003eparams[:id]\u003c/code\u003e in \u003ccode\u003ebyebug\u003c/code\u003e. So next we can set up our \u003ccode\u003e#show\u003c/code\u003e action to find and\ndisplay the requested cheese:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/cheeses_controller.rb\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n  \u003cspan class=\"n\"\u003echeese\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eCheese\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003echeese\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn the first line, our show action is running a database query on the \u003ccode\u003eCheese\u003c/code\u003e\nmodel that will return a cheese with an ID that matches the route parameters. It\nwill store this record in the \u003ccode\u003echeese\u003c/code\u003e variable, which we can then use to render\nJSON data for that cheese object.\u003c/p\u003e\n\n\u003cp\u003eAnd with that, our test is passing, and you now know how to create dynamic\nroutes in Rails! You should also be able to run \u003ccode\u003erails s\u003c/code\u003e and visit\n\u003ccode\u003elocalhost:3000/cheeses/1\u003c/code\u003e to see the JSON data for one individual cheese.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eparams\u003c/code\u003e hash will keep coming back throughout this phase, so make sure you\nfeel comfortable with this concept. For instance: if we wanted a different key\nrather than \u003ccode\u003e:id\u003c/code\u003e in the params hash, what do you think would need to change?\nExperiment a bit with the code in the \u003ccode\u003eroutes.rb\u003c/code\u003e file and the controller, and\nuse \u003ccode\u003ebyebug\u003c/code\u003e to test your assumptions!\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eDynamic routes are helpful when we want to associate some data from the URL with\na record from the database. To create a dynamic route, use the \u003ccode\u003e:param_name\u003c/code\u003e\nsyntax as part of the route, such as \u003ccode\u003eget \"/cheeses/:id\", to: \"cheeses#show\"\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe dynamic parts of the route will be available in the \u003cstrong\u003eparams hash\u003c/strong\u003e in your\ncontroller, so when a request comes in for \u003ccode\u003e/cheeses/3\u003c/code\u003e, you can access the\nnumber \u003ccode\u003e3\u003c/code\u003e in your controller using \u003ccode\u003eparams[:id]\u003c/code\u003e, and then look up the\nassociated record in the database.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat do we mean when we say that a route is \u003cstrong\u003edynamic\u003c/strong\u003e?\u003c/li\u003e\n\u003cli\u003eHow do we tell Rails that a route can receive a \u003cstrong\u003eparameter\u003c/strong\u003e?\u003c/li\u003e\n\u003cli\u003eHow do we retrieve the value of a parameter inside our controller?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html\"\u003eRails Routing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gbd21e6fe3993ef4a9a09e4d922286065","title":"Route Params Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-route-params-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-route-params-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-route-params-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-route-params-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a dynamic route\u003c/li\u003e\n\u003cli\u003eUse the params hash in the controller\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe'll continue building our API for viewing student data. In this lesson, we'll\nadd a route and controller action for displaying data about one individual\nstudent.\u003c/p\u003e\n\n\u003cp\u003eTo get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will download all the dependencies for our app and set up the database.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eIn this lab, we'll add the last feature to our student management app. You will\nneed to integrate the following scenario in your application:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eThe user is able to go to a URL with the student's ID (i.e. \u003ccode\u003e/students/2\u003c/code\u003e) to\nreceive information on the student.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe application should render the values from the student record with the\ncorresponding ID in the database.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eYou can try out your solution by running \u003ccode\u003erails s\u003c/code\u003e and visiting\n\u003ccode\u003elocalhost:3000/students/2\u003c/code\u003e in the browser.\u003c/p\u003e\n\n\u003cp\u003eThere are two failing RSpec specs in this lesson; you can find them in\n\u003ccode\u003espec/requests/student_spec.rb\u003c/code\u003e. Make sure they pass without breaking the other\ntests. To complete this lesson, all specs should pass by running \u003ccode\u003elearn test\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eBonus: Query Params\u003c/h2\u003e\n\n\u003cp\u003eIf you've used other APIs, or investigated some URLs as you've browsed the\ninternet, you may have noticed some URLs have this special syntax:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ehttps://www.google.com/search?q=bread\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThat \u003ccode\u003e?q=bread\u003c/code\u003e portion of the URL is known as a\n\u003ca href=\"https://en.wikipedia.org/wiki/Query_string\"\u003e\u003cstrong\u003equery string parameter\u003c/strong\u003e\u003c/a\u003e. Query string parameters are another\nway of providing data in a request. They're structured as key-value pairs, like\nso:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e/students?key1=value1\u0026amp;key2=value2\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRails gives us access to these query string parameters as part of the params\nhash:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; { key1: \"value1\", key2: \"value2\" }\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs a bonus deliverable:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eUn-comment out the last test in \u003ccode\u003e/spec/requests/students_spec.rb\u003c/code\u003e to complete the bonus.\u003c/strong\u003e\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eUse query params in the \u003ccode\u003eindex\u003c/code\u003e action to return a list of all students whose\nfirst or last name matches the query parameter.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html\"\u003eRails Guides on Routing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://api.rubyonrails.org/classes/ActionDispatch/Routing.html\"\u003eRouting API Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g7d73020b5bd9776c34ef2da4acb88edd","title":"Serializing Associations","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-serializing-associations\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-serializing-associations/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-serializing-associations\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-serializing-associations/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eSerialize nested data using \u003ccode\u003ehas_many\u003c/code\u003e and \u003ccode\u003ebelongs_to\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eWe have seen how \u003ccode\u003eActiveModel::Serializer\u003c/code\u003e can be used to easily customize the\nJSON being returned for a single model. But what if we have multiple associated\nmodels? As it turns out, that situation can also be handled easily with AMS, by\nusing the Active Record macros \u003ccode\u003ehas_many\u003c/code\u003e and \u003ccode\u003ebelongs_to\u003c/code\u003e that we're already\nfamiliar with. In this lesson, we'll learn how to implement serializers for\nassociated models in our Movie app.\u003c/p\u003e\n\n\u003cp\u003eTo enable us to do this, we've expanded our movie app to include two more\nmodels. Specifically, we made the following changes:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eInstead of including \u003ccode\u003edirector\u003c/code\u003e as an attribute of our \u003ccode\u003eMovie\u003c/code\u003e instances,\nwe created a separate \u003ccode\u003eDirector\u003c/code\u003e class.\u003c/li\u003e\n\u003cli\u003eWe modified our app to include movie reviews using a \u003ccode\u003eReview\u003c/code\u003e class.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe relationships we want to model look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eDirector -\u0026lt; Movies -\u0026lt; Reviews\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo implement the \u003ccode\u003eDirector\u003c/code\u003e class, we made the following changes to our code:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eRemoved \u003ccode\u003edirector\u003c/code\u003e and \u003ccode\u003efemale_director\u003c/code\u003e as attributes in our movie migration\nfile; added a \u003ccode\u003edirector_id\u003c/code\u003e attribute\u003c/li\u003e\n\u003cli\u003eAdded a new migration for our \u003ccode\u003edirector\u003c/code\u003e model with three attributes: \u003ccode\u003ename\u003c/code\u003e,\n\u003ccode\u003ebirthplace\u003c/code\u003e and \u003ccode\u003efemale_director\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eAdded the \u003ccode\u003ebelongs_to :director\u003c/code\u003e macro to the \u003ccode\u003eMovie\u003c/code\u003e model and the\n\u003ccode\u003ehas_many :movies\u003c/code\u003e macro to the \u003ccode\u003eDirector\u003c/code\u003e model\u003c/li\u003e\n\u003cli\u003eAdded \u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003eshow\u003c/code\u003e routes for the \u003ccode\u003eDirector\u003c/code\u003e model in \u003ccode\u003econfig/routes.rb\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eAdded a \u003ccode\u003eDirectorsController\u003c/code\u003e and created the \u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003eshow\u003c/code\u003e actions\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eTo implement the \u003ccode\u003eReview\u003c/code\u003e class, we made the following changes:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eAdded a new migration with four attributes: \u003ccode\u003eauthor\u003c/code\u003e, \u003ccode\u003edate\u003c/code\u003e, \u003ccode\u003eurl\u003c/code\u003e, and\n\u003ccode\u003emovie_id\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eAdded the \u003ccode\u003ehas_many :reviews\u003c/code\u003e macro to the \u003ccode\u003eMovie\u003c/code\u003e model and the\n\u003ccode\u003ebelongs_to :movie\u003c/code\u003e macro to the \u003ccode\u003eReview\u003c/code\u003e model\u003c/li\u003e\n\u003cli\u003eAdded an \u003ccode\u003eindex\u003c/code\u003e route for the \u003ccode\u003eReview\u003c/code\u003e model in \u003ccode\u003econfig/routes.rb\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eCreated a \u003ccode\u003eReviewsController\u003c/code\u003e and added the \u003ccode\u003eindex\u003c/code\u003e action\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eSpend a few minutes looking through the code to familiarize yourself with how\neverything is set up.\u003c/p\u003e\n\n\u003ch2\u003eUsing ActiveModel::Serializer with Associated Data\u003c/h2\u003e\n\n\u003cp\u003eLet's see the updated version of our app in action. To set it up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe setup for \u003ccode\u003eMovie\u003c/code\u003e has not changed: you should still be able to navigate to\nits \u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003eshow\u003c/code\u003e routes, as well as the custom \u003ccode\u003e/movies/:id/summary\u003c/code\u003e and\n\u003ccode\u003emovie_summaries\u003c/code\u003e routes we created in the last lesson.\u003c/p\u003e\n\n\u003cp\u003eTake a look at the new \u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003eshow\u003c/code\u003e routes for \u003ccode\u003eDirector\u003c/code\u003e in the browser.\nYou'll see that the JSON for the directors includes two attributes that we don't\nwant: \u003ccode\u003ecreated_at\u003c/code\u003e and \u003ccode\u003eupdated_at\u003c/code\u003e. Luckily we know how to fix this — we simply\nneed to create a serializer for \u003ccode\u003edirector\u003c/code\u003e as we did for \u003ccode\u003emovies\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g serializer director\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can then add the desired attributes to the \u003ccode\u003edirector_serializer\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/serializers/director_serializer.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDirectorSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birthplace\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:female_director\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow if you navigate to \u003ccode\u003e/directors\u003c/code\u003e or \u003ccode\u003e/directors/:id\u003c/code\u003e you will see that we're\nonly displaying the desired attributes.\u003c/p\u003e\n\n\u003ch2\u003eSerializing a One-to-Many Association\u003c/h2\u003e\n\n\u003cp\u003eLet's take a look at our new \u003ccode\u003eMovie\u003c/code\u003e index route. Now that we've removed the\n\u003ccode\u003edirector\u003c/code\u003e and \u003ccode\u003efemale_director\u003c/code\u003e attributes, the JSON for \u003ccode\u003emovies\u003c/code\u003e no longer\nincludes any information about director. We need to figure out how to add the\ninformation about each movie's associated director to the JSON being returned by\nthe \u003ccode\u003emovies\u003c/code\u003e serializer. AMS allows us to do this using the same macros in the\nserializers that we use to set up associations in our model files. In this case,\nwe want our serializer to reflect the fact that \u003ccode\u003eMovie\u003c/code\u003e belongs to \u003ccode\u003eDirector\u003c/code\u003e,\nso we'll update the serializer as follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# serializers/movie_serializer.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovieSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:year\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:description\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:poster_url\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:category\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:discount\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:director\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow if you navigate to \u003ccode\u003elocalhost:3000/movies/1\u003c/code\u003e, you should see the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"title\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"The Color Purple\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"year\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1985\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"length\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e154\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"description\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Whoopi Goldberg brings Alice Walker's Pulitzer Prize-winning feminist novel to life as Celie, a Southern woman who suffered abuse over decades. A project brought to a hesitant Steven Spielberg by producer Quincy Jones, the film marks Spielberg's first female lead.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"poster_url\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://pisces.bbystatic.com/image2/BestBuy_US/images/products/3071/3071213_so.jpg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"category\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Drama\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"discount\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"director\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Steven Spielberg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"birthplace\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cincinnati, OH\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"female_director\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe once again can see the director information for our movie!\u003c/p\u003e\n\n\u003cp\u003eWe can also set up the relationship in the other direction, by adding the\ncorresponding macro in our \u003ccode\u003eDirectorSerializer\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# serializers/director_serializer.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDirectorSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birthplace\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:female_director\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:movies\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBecause we have included the \u003ccode\u003ehas_many\u003c/code\u003e macro in the \u003ccode\u003eDirector\u003c/code\u003e serializer, when\nwe navigate to \u003ccode\u003elocalhost:3000/directors/:id\u003c/code\u003e, we can see the list of movies that\nbelong to that particular director:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Steven Spielberg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"birthplace\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cincinnati, OH\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"female_director\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"movies\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"title\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"The Color Purple\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"year\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1985\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"length\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e154\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"description\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Whoopi Goldberg brings Alice Walker's Pulitzer Prize-winning feminist novel to life as Celie, a Southern woman who suffered abuse over decades. A project brought to a hesitant Steven Spielberg by producer Quincy Jones, the film marks Spielberg's first female lead.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"poster_url\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://pisces.bbystatic.com/image2/BestBuy_US/images/products/3071/3071213_so.jpg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"category\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Drama\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"discount\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eIMPORTANT\u003c/strong\u003e: You should only add macros to your serializers if you're sure you\nneed the data! The level of complexity ramps up quickly as you add more macros,\nso keeping them to a minimum will save you headaches in the long run. It's also\ngood to consider how much data is being sent with each request, since adding more\ndata means running more SQL code to access that info from different tables in the\ndatabase, which will make our responses slower.\u003c/p\u003e\n\n\u003cp\u003eRails automatically uses the appropriate serializer, based on naming\nconventions, to display the associated data for each of our models. We can see\nthat in the example above: Rails has used the \u003ccode\u003eMovieSerializer\u003c/code\u003e to render the\n\u003ccode\u003emovie\u003c/code\u003e JSON, so all of the attributes we listed in that serializer are rendered\nin the \u003ccode\u003eDirector\u003c/code\u003e's \u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003eshow\u003c/code\u003e routes.\u003c/p\u003e\n\n\u003ch2\u003eSerializing a Many-to-Many Association\u003c/h2\u003e\n\n\u003cp\u003eOur Movie example uses a one-to-many association (directors have many movies and\nmovies belong to a director), but you you can also use Active Model Serializers\nwith a many-to-many association.\u003c/p\u003e\n\n\u003cp\u003eFor example, if we had an app with \u003ccode\u003eArticle\u003c/code\u003e and \u003ccode\u003eTag\u003c/code\u003e models, we could create a\njoin table and set up \u003ccode\u003ehas_many :through\u003c/code\u003e associations for both models:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/models/article.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eArticle\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:article_tags\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:tags\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ethrough: :article_tags\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# app/models/article_tag.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eArticleTag\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:article\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:tag\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# app/models/tag.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTag\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:article_tags\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:articles\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ethrough: :article_tags\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, if we want the JSON for \u003ccode\u003eArticle\u003c/code\u003e to include a list of the article's tags,\nwe would simply use \u003ccode\u003ehas_many :tags\u003c/code\u003e in our \u003ccode\u003eArticleSerializer\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/serializers/article_serializer.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eArticleSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:author\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:content\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:tags\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBecause the \u003ccode\u003ehas_many :through\u003c/code\u003e association is defined in the model files, Rails\nwill know to nest a list of each article's tags in the JSON that's being\nreturned.\u003c/p\u003e\n\n\u003ch2\u003eAdding Custom Serializers\u003c/h2\u003e\n\n\u003cp\u003eLet's return to our Movie example. We have successfully set up our Director\nserializer to include a list of the director's movies in the JSON that's\nreturned:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Steven Spielberg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"birthplace\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cincinnati, OH\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"female_director\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"movies\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"title\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"The Color Purple\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"year\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1985\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"length\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e154\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"description\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Whoopi Goldberg brings Alice Walker's Pulitzer Prize-winning feminist novel to life as Celie, a Southern woman who suffered abuse over decades. A project brought to a hesitant Steven Spielberg by producer Quincy Jones, the film marks Spielberg's first female lead.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"poster_url\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://pisces.bbystatic.com/image2/BestBuy_US/images/products/3071/3071213_so.jpg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"category\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Drama\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"discount\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith only one Steven Spielberg movie in our data, including all that information\nisn't too unreasonable. But what happens when we add the rest of his movies to\nour database? We may decide we don't need to include \u003cstrong\u003eall\u003c/strong\u003e the details of\nevery movie in this view.\u003c/p\u003e\n\n\u003cp\u003eTo fix this, we can simply create a new, streamlined serializer:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g serializer director_movie\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere we'll include just the title and year of each of the director's movies:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDirectorMovieSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:year\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, if you refresh the page... nothing changes. Why not?\u003c/p\u003e\n\n\u003cp\u003eRecall that Rails automatically selects the serializer based on naming\nconventions, so it's still using the \u003ccode\u003eDirectorSerializer\u003c/code\u003e to render the data. To\nfix this, we need to tell the \u003ccode\u003eDirectorSerializer\u003c/code\u003e that it should be using this\nnew serializer instead; we need to pass it \u003cem\u003eexplicitly\u003c/em\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDirectorSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birthplace\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:female_director\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:movies\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eserializer: \u003c/span\u003e\u003cspan class=\"no\"\u003eDirectorMovieSerializer\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRails is still using \u003ccode\u003eDirectorSerializer\u003c/code\u003e to render the JSON for the director,\nbut now \u003ccode\u003eDirectorSerializer\u003c/code\u003e is passing along the request for the director's\nmovies to the new, simplified serializer.\u003c/p\u003e\n\n\u003cp\u003eNow if you refresh the page, you should see the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Steven Spielberg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"birthplace\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cincinnati, OH\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"female_director\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"movies\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"title\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"The Color Purple\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"year\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1985\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eDeeply Nested Models\u003c/h2\u003e\n\n\u003cp\u003eNow that we've got the JSON set up the way we want for our associated \u003ccode\u003eMovie\u003c/code\u003e\nand \u003ccode\u003eDirector\u003c/code\u003e models, we can turn our attention to the \u003ccode\u003eReview\u003c/code\u003e model. Let's\ntake another look at our model relationships:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eDirector -\u0026lt; Movies -\u0026lt; Reviews\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe've already set up the association in the \u003ccode\u003eMovie\u003c/code\u003e and \u003ccode\u003eReview\u003c/code\u003e model files:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/models/movie.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovie\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:director\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# app/models/review.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eReview\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:movie\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, we'll create our \u003ccode\u003ereview\u003c/code\u003e serializer:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails g serializer review\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can also specify the attributes we want to include:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/serializers/review_serializer.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eReviewSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:author\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:date\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:url\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can now go to \u003ccode\u003elocalhost:3000/reviews\u003c/code\u003e and see our reviews listed. However,\nviewing a list of reviews separately from the information about the movies\nthey're associated with is not particularly helpful.\u003c/p\u003e\n\n\u003cp\u003eWhat we really want to do is render the information about a movie's reviews\nalong with the rest of the information about that movie. In fact, we don't\nreally need to render information about reviews at all \u003cem\u003eexcept\u003c/em\u003e as part of the\ndata rendered for a particular movie!\u003c/p\u003e\n\n\u003cp\u003eBefore we figure out how to get that in place, let's follow good programming\npractice and delete the code we no longer need: we'll remove the resource for\n\u003ccode\u003ereview\u003c/code\u003es from the \u003ccode\u003eroutes.rb\u003c/code\u003e file and the \u003ccode\u003eindex\u003c/code\u003e action from the\n\u003ccode\u003eReviewsController\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eOnce that's done, to get reviews included in the JSON that's returned for a\ngiven movie, we'll simply add the appropriate macro to the \u003ccode\u003eMovieSerializer\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovieSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:year\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:length\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:description\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:poster_url\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:category\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:discount\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:director\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow if we visit \u003ccode\u003elocalhost:3000/movies/1\u003c/code\u003e, we can verify that the reviews are\nnow included in the movie's JSON.\u003c/p\u003e\n\n\u003cp\u003eSo let's review where we are: the JSON for directors includes their movies, and\nthe JSON for movies includes their reviews. Given that, if we visit\n\u003ccode\u003elocalhost:3000/directors/1\u003c/code\u003e, will we see the full set of nested data?\nUnfortunately, no, we won't. Our \u003ccode\u003eDirector\u003c/code\u003e JSON will look just the same as it\ndid before we added the \u003ccode\u003eReview\u003c/code\u003e model:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Steven Spielberg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"birthplace\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cincinnati, OH\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"female_director\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"movies\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"title\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"The Color Purple\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"year\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1985\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is because, by default, \u003cstrong\u003eAMS only nests associations one level deep\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis behavior is intended to protect against overly complex JSON that's nested\nmany layers deep. Luckily, we can override the behavior by using the \u003ca href=\"https://github.com/rails-api/active_model_serializers/blob/v0.10.6/docs/general/adapters.md#include-option\"\u003einclude\noption\u003c/a\u003e in the top-level controller — in this case, the \u003ccode\u003eDirectorsController\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# app/controllers/directors_controller.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDirectorsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edirectors\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDirector\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eall\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edirectors\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003einclude: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'movies'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'movies.reviews'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edirector\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDirector\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edirector\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003einclude: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'movies'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'movies.reviews'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet's take a look at the render statement in our \u003ccode\u003eshow\u003c/code\u003e action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003edirector\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003einclude: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'movies'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'movies.reviews'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis code tells AMS that we want to render information for the \u003ccode\u003edirector\u003c/code\u003e, and\nto also include information for the \u003ccode\u003emovies\u003c/code\u003e associated with that director, and\nfor the \u003ccode\u003ereviews\u003c/code\u003e associated with those \u003ccode\u003emovies\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eFinally, because we're using our custom \u003ccode\u003eDirectorMovieSerializer\u003c/code\u003e to render the\nmovies in our \u003ccode\u003eDirector\u003c/code\u003e routes, we also need to add the \u003ccode\u003ehas_many :reviews\u003c/code\u003e\nmacro to that serializer:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDirectorMovieSerializer\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveModel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eSerializer\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:year\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003ehas_many\u003c/span\u003e \u003cspan class=\"ss\"\u003e:reviews\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith these changes in place, refresh the page and you should now see this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Steven Spielberg\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"birthplace\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cincinnati, OH\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"female_director\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"movies\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"title\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"The Color Purple\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"year\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1985\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"reviews\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n        \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"author\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Roger Ebert\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"date\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"December 20, 1985\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"url\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://www.rogerebert.com/reviews/the-color-purple-1985\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n        \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n        \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"author\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Variety Staff\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"date\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"December 31, 1984\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"url\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://variety.com/1984/film/reviews/the-color-purple-1200426436/\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n        \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n        \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"author\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Janet Maslin\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"date\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"December 18, 1985\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"url\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://www.nytimes.com/1985/12/18/movies/moviesspecial/the-color-purple.html\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n        \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n      \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNice!\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003eActiveModel::Serializer\u003c/code\u003e provides some powerful yet simple-to-use tools for\ncrafting the JSON our app returns, and it does so in a way that's consistent\nwith Rails conventions.\u003c/p\u003e\n\n\u003cp\u003eTo summarize:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eTo customize the JSON returned for a resource, create a \u003cstrong\u003eserializer\u003c/strong\u003e for\nthat resource and list the desired attributes.\u003c/li\u003e\n\u003cli\u003eThe serializer is used \u003cstrong\u003eimplicitly\u003c/strong\u003e by Rails based on naming conventions; to\noverride this, custom serializers can be passed \u003cstrong\u003eexplicitly\u003c/strong\u003e.\u003c/li\u003e\n\u003cli\u003eAMS enables the use of the \u003ccode\u003ebelongs_to\u003c/code\u003e and \u003ccode\u003ehas_many\u003c/code\u003e macros in serializers\nto render associated data; these macros should be used sparingly.\u003c/li\u003e\n\u003cli\u003eBy default, AMS will only nest associations one level deep in the serialized\nJSON. To override this, the \u003ccode\u003einclude\u003c/code\u003e option can be used.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eIf we have \u003ccode\u003eRecipe\u003c/code\u003e and \u003ccode\u003eIngredient\u003c/code\u003e resources and we want to nest\ningredients under recipes in the json we're returning, in which file would we\nuse the \u003ccode\u003ehas_many\u003c/code\u003e macro? In which file would we use the \u003ccode\u003ebelongs_to\u003c/code\u003e macro?\u003c/li\u003e\n\u003cli\u003eIf we want to specify a custom serializer for the parent resource (\u003ccode\u003eRecipe\u003c/code\u003e),\nin which file would we do that? In which file would we specify a custom\nserializer for the child resource (\u003ccode\u003eIngredient\u003c/code\u003e)?\u003c/li\u003e\n\u003cli\u003eIn which file do we use the \u003ccode\u003einclude\u003c/code\u003e keyword to set up deep nesting?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/rails-api/active_model_serializers/blob/0-10-stable/docs/general/getting_started.md\"\u003eGetting Started with Active Model Serializer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/rails-api/active_model_serializers/blob/v0.10.6/docs/general/adapters.md#include-option\"\u003eIncluding Nested Associations\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"gb4cbadd7fe7030e0212dae9eda9775fd","title":"Singly Linked List Methods Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-implement-singly-linked-list\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-implement-singly-linked-list/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-implement-singly-linked-list\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-implement-singly-linked-list/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eBuild out common methods for a Singly Linked List\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn the previous lesson, you learned what a Singly Linked List is and we built\nout the initial \u003ccode\u003eLinkedList\u003c/code\u003e and \u003ccode\u003eNode\u003c/code\u003e classes, as well as learned how to\n\u003ccode\u003eappend\u003c/code\u003e on to a linked list. We also learned how to add to our Singly Linked\nList. In this lab, let's build out some more of the common methods we might need\nwhen using a Singly Linked List.\u003c/p\u003e\n\n\u003cp\u003eFork and clone this lab; you'll be coding in the \u003ccode\u003elib\u003c/code\u003e folder. You can run the\ntests at any point using \u003ccode\u003elearn test\u003c/code\u003e to check your work.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eStart by building out the \u003ccode\u003eLinkedList\u003c/code\u003e class.\u003c/p\u003e\n\n\u003cp\u003eOnce you have the first test passing, build out the following methods:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eLinkedList#prepend(node)\u003c/code\u003e: adds a node to the beginning of the list (the \u003ccode\u003ehead\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eLinkedList#append(node)\u003c/code\u003e: adds a node to the end of the list (feel free to\nreuse/modify the code from the previous lesson)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eLinkedList#delete_head\u003c/code\u003e: delete the \u003ccode\u003ehead\u003c/code\u003e node\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eLinkedList#delete_tail\u003c/code\u003e: removes the node at the end of the list\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eLinkedList#add_after(index, node)\u003c/code\u003e: adds a node after the given index of the linked\nlist\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eLinkedList#search(value)\u003c/code\u003e: finds a node with the given value within the list\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g6174e7653b61b7391203fa5a8e714cbb","title":"Singly Linked List Return Node Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-singly-linked-list-return-node\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-singly-linked-list-return-node/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-singly-linked-list-return-node\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-singly-linked-list-return-node/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eBuild a Singly Linked List and use it to solve an algorithm\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eNow that we have learned to build out our \u003ccode\u003eLinkedList\u003c/code\u003e and \u003ccode\u003eNode\u003c/code\u003e classes, as\nwell as implemented some common methods to get a feel for working with linked\nlists, let's use our Singly Linked List to solve an algorithm!\u003c/p\u003e\n\n\u003cp\u003eFork and clone this lab; you'll be coding in the \u003ccode\u003elib\u003c/code\u003e folder. You can\nrun the tests at any point using \u003ccode\u003elearn test\u003c/code\u003e to check your work.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eWrite a method \u003ccode\u003e#nth_from_end\u003c/code\u003e that takes a number \u003ccode\u003en\u003c/code\u003e and returns the value at\nthe \u003ccode\u003en\u003c/code\u003eth node from the \u003cstrong\u003eend\u003c/strong\u003e of the linked list. If the \u003ccode\u003en\u003c/code\u003eth node does not\nexist, return \u003ccode\u003enil\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eFor example, when given a linked list \u003ccode\u003e3 -\u0026gt; 2 -\u0026gt; 1\u003c/code\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWhen \u003ccode\u003en = 1\u003c/code\u003e, return \u003ccode\u003e1\u003c/code\u003e (the element at the end of the list)\u003c/li\u003e\n\u003cli\u003eWhen \u003ccode\u003en = 3\u003c/code\u003e, return \u003ccode\u003e3\u003c/code\u003e (the third element from the end)\u003c/li\u003e\n\u003cli\u003eWhen \u003ccode\u003en = 4\u003c/code\u003e, return \u003ccode\u003enil\u003c/code\u003e (since 4 is greater than the length of the list)\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g50cfd1be121d154f3b0ce6cc7649feb5","title":"Strong Params and Mass Assignment","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-rails-strong-params\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-strong-params/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-strong-params\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-rails-strong-params/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eExplain the benefits and dangers of mass assignment\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003eparams.permit\u003c/code\u003e to allow specific params\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSetup\u003c/h2\u003e\n\n\u003cp\u003eTo get set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will download all the dependencies for our app and set up the database.\u003c/p\u003e\n\n\n\n\n\n\u003ch2\u003eRevisiting The Create Action\u003c/h2\u003e\n\n\u003cp\u003eIn the previous lesson, we used the \u003ccode\u003eparams\u003c/code\u003e hash to access data from the body\nof a request, and create a new bird:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:species\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSince our model only has two attributes, this code looks fairly reasonable. But\nimagine we were building a new model, \u003ccode\u003eBirdWatcher\u003c/code\u003e, representing the users in\nour application, that has more attributes:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eBirdWatcher\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eemail: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:email\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eprofile_image: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:profile_image\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003efavorite_species: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:favorite_species\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eadmin: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:admin\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhile this approach for creating a new \u003ccode\u003eBirdWatcher\u003c/code\u003e would work, it feels like a\nlot of extra work to type \u003ccode\u003eattribute: params[:attribute]\u003c/code\u003e for every single\nattribute we're using! Since the \u003ccode\u003e.create\u003c/code\u003e method expects a hash of key-value\npairs, and \u003ccode\u003eparams\u003c/code\u003e is a hash of key-value pairs, it would be much nicer to be\nable to just pass in the entire \u003ccode\u003eparams\u003c/code\u003e hash and call it a day:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eBirdWatcher\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHowever, doing so would open us up to some surprising security vulnerabilities,\nso Rails would actually prevent that code from working! Let's explore why, and\nsee an alternate approach to working with \u003ccode\u003eparams\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eWhat Is Mass Assignment?\u003c/h2\u003e\n\n\u003cp\u003eLet's take a step back from Rails for the moment, and think back to\nObject-Oriented Ruby. We could design a \u003ccode\u003eBirdWatcher\u003c/code\u003e class of our own, without\nActive Record, like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBirdWatcher\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eattr_accessor\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:email\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:bio\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:favorite_species\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:admin\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003einitialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@email\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:email\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@bio\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:bio\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@favorite_species\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:favorite_species\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@admin\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:admin\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, we can pass in one hash when creating a new \u003ccode\u003eBirdWatcher\u003c/code\u003e, just like we\nwould when creating an object with Active Record:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eBirdWatcher\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Reggie\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eemail: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"birdman5000@gmail.com\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003efavorite_species: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Crow\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003ebio: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Just a bird-loving guy\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eadmin: \u003c/span\u003e\u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo far so good! Now, let's imagine that instead of passing in that hash\ndirectly, we're getting that hash of data from a user making a request to our\nAPI to create a new account. Pretend this \u003ccode\u003eparams\u003c/code\u003e hash is being created based\non a user making a request to our server:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Emma\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eemail: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"lady.von.birdbrain@yahoo.com\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003efavorite_species: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Blue Jay\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003ebio: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Always be birding\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eadmin: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIdeally, a user shouldn't be able to create their own account and give themself\n\u003ccode\u003eadmin\u003c/code\u003e privileges. But if we pass this entire hash of parameters to our\n\u003ccode\u003e#initialize\u003c/code\u003e method, that's exactly what will happen:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eBirdWatcher\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; #\u0026lt;BirdWatcher:0x00007fa635094858 @name=\"Emma\", ... @admin=true\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eActive Record works similarly: it uses mass assignment to take a hash of\nkey-value pairs and assign them to attributes on our models. As a result,\npassing in the entire \u003ccode\u003eparams\u003c/code\u003e hash when creating a new record in our database\nwould open us up to the \u003ca href=\"https://en.wikipedia.org/wiki/Mass_assignment_vulnerability\"\u003emass assignment vulnerability\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eSo how do we fix it?\u003c/p\u003e\n\n\u003ch2\u003eStrong Params\u003c/h2\u003e\n\n\u003cp\u003eFirst, run \u003ccode\u003erails s\u003c/code\u003e to start the server. Let's use Postman to create a new bird:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eRoute\n-------\nPOST /birds\n\nHeaders\n-------\nContent-Type: application/json\n\nBody\n------\n{\n  \"name\": \"Blue Jay\",\n  \"species\": \"Cyanocitta cristata\"\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will create a new \u003ccode\u003eBird\u003c/code\u003e in our \u003ccode\u003eBirdsController#create\u003c/code\u003e action:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"ss\"\u003especies: \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:species\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe approach above is a perfectly valid solution to the mass-assignment issue.\nSince we are \u003cstrong\u003eexplicitly\u003c/strong\u003e specifying which attributes we'd like our new bird\nto be created with, there's no chance of a user updating an attribute other than\nname or species.\u003c/p\u003e\n\n\u003cp\u003eUpdate the \u003ccode\u003ecreate\u003c/code\u003e method like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, make another request using Postman. We'll get back a\n\u003ccode\u003e500 - Internal Server Error\u003c/code\u003e as a response, with an\n\u003ccode\u003eActiveModel::ForbiddenAttributesError\u003c/code\u003e as the exception.\u003c/p\u003e\n\n\u003cp\u003eThis is thanks to Rails' built-in security protection against the\n\u003ca href=\"https://en.wikipedia.org/wiki/Mass_assignment_vulnerability\"\u003emass assignment vulnerability\u003c/a\u003e in action. We can't just pass in the entire\nparams hash, since that would mean a malicious user could potentially update\nattributes of our model that we don't want to give them access to.\u003c/p\u003e\n\n\u003cp\u003eWhat we can do instead is use \u003ca href=\"https://guides.rubyonrails.org/action_controller_overview.html#strong-parameters\"\u003eStrong Parameters\u003c/a\u003e to \u003cstrong\u003epermit\u003c/strong\u003e\n\u003cem\u003eonly\u003c/em\u003e the parameters that we want to use:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epermit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:species\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen we call \u003ccode\u003eparams.permit(:name, :species)\u003c/code\u003e, this will return a new hash with\n\u003cstrong\u003eonly\u003c/strong\u003e the name and species keys. Rails will also mark this new hash as\n\u003ccode\u003epermitted\u003c/code\u003e, which means we can safely use this new hash for mass assignment.\u003c/p\u003e\n\n\u003cp\u003eTry making that same request in Postman, but this time, add an \u003ccode\u003eid\u003c/code\u003e key to the\nJSON in your request body. Now the bird is successfully created but, since the\n\u003ccode\u003eid\u003c/code\u003e key was not allowed, only the \u003ccode\u003ename\u003c/code\u003e and \u003ccode\u003especies\u003c/code\u003e were used. The server\nlogs will verify this for us:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eStarted POST \"/birds\" for ::1 at 2021-05-03 07:45:33 -0400\n   (0.1ms)  SELECT sqlite_version(*)\nProcessing by BirdsController#create as */*\n  Parameters: {\"name\"=\u0026gt;\"Blue Jay\", \"species\"=\u0026gt;\"Cyanocitta cristata\", \"id\"=\u0026gt;99, \"bird\"=\u0026gt;{\"id\"=\u0026gt;99, \"name\"=\u0026gt;\"Blue Jay\", \"species\"=\u0026gt;\"Cyanocitta cristata\"}}\nUnpermitted parameters: :id, :bird\n  TRANSACTION (0.1ms)  begin transaction\n  ↳ app/controllers/birds_controller.rb:12:in `create'\n  Bird Create (0.8ms)  INSERT INTO \"birds\" (\"name\", \"species\", \"created_at\", \"updated_at\") VALUES (?, ?, ?, ?)  [[\"name\", \"Blue Jay\"], [\"species\", \"Cyanocitta cristata\"], [\"created_at\", \"2021-05-03 11:45:33.745635\"], [\"updated_at\", \"2021-05-03 11:45:33.745635\"]]\n  ↳ app/controllers/birds_controller.rb:12:in `create'\n  TRANSACTION (1.3ms)  commit transaction\n  ↳ app/controllers/birds_controller.rb:12:in `create'\nCompleted 201 Created in 22ms (Views: 2.5ms | ActiveRecord: 3.6ms | Allocations: 3803)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eRefactoring Params\u003c/h2\u003e\n\n\u003cp\u003eIn Rails controllers there's a strong convention among developers to create a\nseparate \u003ccode\u003eprivate\u003c/code\u003e method for strong params, like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBirdsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# POST /birds\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebird\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBird\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebird_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003ebird\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e# other controller actions here\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# all methods below here are private\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ebird_params\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epermit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:species\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis makes our \u003ccode\u003ecreate\u003c/code\u003e action a bit cleaner, and will give us the opportunity\nto reuse this private method later in our \u003ccode\u003eupdate\u003c/code\u003e action.\u003c/p\u003e\n\n\u003cp\u003eYou may also have noticed that even though the request body only has this data:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Blue Jay\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"species\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cyanocitta cristata\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOur params hash looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Blue Jay\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\"species\"\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cyanocitta cristata\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\"bird\"\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\"name\"\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Blue Jay\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\"species\"\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Cyanocitta cristata\"\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe reason for this is that Rails by default will\n\u003ca href=\"https://edgeguides.rubyonrails.org/action_controller_overview.html#json-parameters\"\u003ewrap JSON parameters\u003c/a\u003e as a nested hash under a key based on\nthe name of the controller (in our case, \u003ccode\u003ebird\u003c/code\u003e since we're in a\n\u003ccode\u003eBirdsController\u003c/code\u003e). This is the reason that in the Rails server log, even with\nour strong params in place, you'll still see \u003ccode\u003eUnpermitted parameters: :bird\u003c/code\u003e for\nour requests.\u003c/p\u003e\n\n\u003cp\u003eYou can disable the wrap parameters feature in an individual controller:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBirdsController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ewrap_parameters\u003c/span\u003e \u003cspan class=\"ss\"\u003eformat: \u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can also disable it for all controllers if you like, by going into the\n\u003ccode\u003econfig/initializers/wrap_parameters.rb\u003c/code\u003e file and updating it like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eActiveSupport\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eon_load\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:action_controller\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ewrap_parameters\u003c/span\u003e \u003cspan class=\"ss\"\u003eformat: \u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eIn this lesson, we learned how we can use mass assignment to reduce the amount\nof code we need to write to create a new instance of a model. We also learned\nwhy using mass assignment can expose us to security vulnerabilities and how to\nkeep that from happening.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat is the mass assignment vulnerability?\u003c/li\u003e\n\u003cli\u003eWhat security precaution is built in to Rails to protect against this\nvulnerability?\u003c/li\u003e\n\u003cli\u003eWhat two approaches can we use to handle parameters safely?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/action_controller_overview.html#strong-parameters\"\u003eRails Guides on Strong Params\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g8ce1b33019c3f2e0f87dbf35eadd13fd","title":"Tree Traversal","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-data-structures-tree-traversal\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-tree-traversal/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-tree-traversal\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-data-structures-tree-traversal/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnderstand what tree traversal is\u003c/li\u003e\n\u003cli\u003eUnderstand breadth-first vs. depth-first traversal\u003c/li\u003e\n\u003cli\u003eImplement breadth-first and depth-first traversal algorithms\u003c/li\u003e\n\u003cli\u003eDiscuss Big O considerations of tree traversal algorithms\u003c/li\u003e\n\u003cli\u003eUse tree traversal to recreate the \u003ccode\u003egetElementById\u003c/code\u003e method\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn the last lesson, we learned about different types of trees, how they're\nconstructed, and what they're used for. In this lesson, we'll learn two\ndifferent methods for visiting the nodes in a tree.\u003c/p\u003e\n\n\u003ch2\u003eTypes of Tree Traversal\u003c/h2\u003e\n\n\u003cp\u003eTree traversal refers to the process of visiting each of the nodes in a tree in\nsome systematic way. There are several approaches that are commonly used, each\nof which results in the nodes being visited in a particular order. These\napproaches can be divided into two general categories: \u003cstrong\u003ebreadth-first\u003c/strong\u003e and\n\u003cstrong\u003edepth-first\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch3\u003eBreadth First\u003c/h3\u003e\n\n\u003cp\u003eIn breadth-first traversal, we start at the root, then visit the remaining nodes\nlevel by level, left to right:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree-traversal/breadth-first.png\" alt=\"bf-traversal\"\u003e\u003c/p\u003e\n\n\u003cp\u003eIn this example, the nodes would be visited in the following order:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e20 -\u0026gt; 50 -\u0026gt; 2 -\u0026gt; 11 -\u0026gt; 45 -\u0026gt; 8 -\u0026gt; 101 -\u0026gt; 39 -\u0026gt; 75 -\u0026gt; 57\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSay we want to build a method on our \u003ccode\u003eTree\u003c/code\u003e class that takes a node as input and\nreturns an array containing the values of the root node and all of its child\nnodes in breadth-first order. How would we go about building this in code? We\nwill need to use a second array to keep track of which nodes we still need to\nvisit. The order in which we add nodes to this second array will control the\norder of the elements in the output array.\u003c/p\u003e\n\n\u003cp\u003eLet's start by writing some pseudocode:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eInitialize an empty output array\nInitialize an array of nodes to visit and add the root node to it\nWhile there are nodes in the nodes to visit array\n  Remove the first node from the nodes to visit array\n  Add its value to the output array\n  Add its children (if any) to the end of the nodes to visit array\nReturn the output array\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTake a couple of minutes to walk through the pseudocode using the example tree\nin the diagram above so you can visualize how it works.\u003c/p\u003e\n\n\u003cp\u003eLet's start by defining our method and creating our \u003ccode\u003enodes_to_visit\u003c/code\u003e and\n\u003ccode\u003eresult\u003c/code\u003e array variables. We also want to set up our method to take a node as an\nargument, and initialize \u003ccode\u003enodes_to_visit\u003c/code\u003e with that variable:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ebreadth_first_traversal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n  \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, we'll create our \u003ccode\u003ewhile\u003c/code\u003e loop:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ebreadth_first_traversal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n  \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# traverse our node\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eInside our \u003ccode\u003ewhile\u003c/code\u003e loop, we want to do three things:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eRemove the first node from the \u003ccode\u003enodes_to_visit\u003c/code\u003e array\u003c/li\u003e\n\u003cli\u003eAdd its value to the result array, and\u003c/li\u003e\n\u003cli\u003eAdd its children (if any) to the \u003ccode\u003enodes_to_visit\u003c/code\u003e array\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ebreadth_first_traversal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n  \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 1. Remove the first node from the `nodes_to_visit` array\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enode\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eshift\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 2. Add its value to the result array\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:value\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 3. Add its children (if any) to the END of the `nodes_to_visit` array\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:children\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet's call our method using the following very simple node as input:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree-traversal/simple-tree.png\" alt=\"simple node\"\u003e\u003c/p\u003e\n\n\u003cp\u003eWe set up our variables, then call the method, passing the root node as an\nargument:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003echild_1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003echild_2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003echild_3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eroot\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003evalue: \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003echild_1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echild_2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echild_3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ebreadth_first_traversal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; [1, 2, 3, 4]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eDepth First\u003c/h3\u003e\n\n\u003cp\u003eWith depth-first traversal, rather than visiting nodes level by level, we\ninstead work our way down to the bottom of the tree first. Once we get to the\nbottom, we backtrack until we get to a node that hasn't been fully explored yet,\nwork our way down to the bottom again, and so on until we're done:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree-traversal/depth-first.gif\" alt=\"depth-first-gif\"\u003e\u003c/p\u003e\n\n\u003cp\u003eThis method of depth-first traversal is also known as \u003cstrong\u003epreorder traversal\u003c/strong\u003e.\nOnce we're done, we will have visited the nodes in the following order:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e20 -\u0026gt; 50 -\u0026gt; 45 -\u0026gt; 8 -\u0026gt; 2 -\u0026gt; 101 -\u0026gt; 39 -\u0026gt; 75 -\u0026gt; 11 -\u0026gt; 57\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo how would we go about building this in code? Well the good news is that the\nprocess is almost identical to the breadth-first traversal!\u003c/p\u003e\n\n\u003cp\u003eLet's think about what we did in that case. We started at the root (20), then\nvisited its left-most child (50). We added that node's children to the end of\nthe array of nodes to visit, then continued visiting the remaining children of\nthe root node (2 and 11). In this case, however, we want to visit the children\nof 50 \u003cstrong\u003ebefore\u003c/strong\u003e we visit its siblings. Doing that is just a matter of making\none small change to our earlier code.\u003c/p\u003e\n\n\u003cp\u003eHere's what our pseudocode would look like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eInitialize an empty output array\nInitialize an array of nodes to visit and add the root node to it\nWhile there are nodes in the array of nodes to visit\n  Remove the first node from the array of nodes to visit\n  Add its value to the output array\n  Add its children (if any) to the BEGINNING of the array of nodes to visit\nReturn the output array\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOnce again, spend a couple of minutes working through the process with our\nexample tree to see how it works.\u003c/p\u003e\n\n\u003cp\u003eThe final code looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edepth_first_traversal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n  \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 1. Remove the first node from the `nodes_to_visit` array\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enode\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eshift\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 2. Add its value to the result array\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:value\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 3. Add its children (if any) to the BEGINNING of the `nodes_to_visit` array\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:children\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003enodes_to_visit\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNote that the only change in our method was to add the child nodes to the\n\u003cstrong\u003ebeginning\u003c/strong\u003e of the \u003ccode\u003enodes_to_visit\u003c/code\u003e array instead of the end.\u003c/p\u003e\n\n\u003cp\u003eDepth-first search also lends itself well to a recursive solution, where we\ntraverse each sub-tree of the node's children recursively before moving to the\nnext sub-tree:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edepth_first_traversal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[])\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# visit each node (add it to the list of results)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:value\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:children\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nf\"\u003eeach\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003echild\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# visit each child node\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edepth_first_traversal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echild\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eWhen to Use Breadth-First vs. Depth-First Traversal Methods\u003c/h2\u003e\n\n\u003cp\u003eUnfortunately, there are no hard and fast rules here — it really depends on the\ncircumstances. However, there are a couple of factors that can provide some\nguidance.\u003c/p\u003e\n\n\u003ch3\u003eThe Type of Output Needed\u003c/h3\u003e\n\n\u003cp\u003eIn some cases, the desired output will determine what method of traversal should\nbe used. Say, for example, we have a company organization chart that lists all\nthe employees hierarchically:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/phase-4-data-structures-tree-traversal/org-chart.png\" alt=\"Org chart\"\u003e\u003c/p\u003e\n\n\u003cp\u003eOn occasion, we may need to print out all the employees. If we want to print\nthem in hierarchical order — the CEO first, followed by Vice Presidents,\nManagers, etc. — we would use a breadth-first traversal. But if we want to print\nout the employees by function or department — the head of the department or\nfunction first, followed by all their direct reports, then all the employees who\nreport to \u003cem\u003ethem\u003c/em\u003e, etc. — we would use a depth-first approach.\u003c/p\u003e\n\n\u003ch3\u003eBig O Considerations\u003c/h3\u003e\n\n\u003cp\u003eSetting aside binary search trees — which, as we discussed in the previous\nlesson, are usually (but not always) more efficient — the time complexity of\ntraversing trees is the same regardless of the approach used. No matter which\nway we proceed through the tree, we need to visit every node, giving a time\ncomplexity of O(n). Therefore, time complexity will not help us pick one\napproach over the other.\u003c/p\u003e\n\n\u003cp\u003eSpace complexity considerations, however, \u003cem\u003ecan\u003c/em\u003e help us choose. Because we use\nan additional data structure to hold elements as we go (as we did in the\nexamples above with the holder array), we want to choose a method that minimizes\nthe storage requirements. To do this, we need to consider the \u003cstrong\u003eheight\u003c/strong\u003e vs. the\n\u003cstrong\u003ewidth\u003c/strong\u003e of our tree.\u003c/p\u003e\n\n\u003cp\u003eWith breadth-first traversal, we work our way across each level, adding the\nchildren of each node to our holder array as we go. With depth-first traversal,\non the other hand, we work our way down from each child node in turn, adding\nchildren of that node at each successive level. As a result, if we have a very\nwide tree, where there are not a lot of levels but there are many nodes on each\nlevel, the storage requirements will be less if we use depth-first search.\nConversely, if we have a long skinny tree, where each node has many children and\ngrandchildren, but there aren't a lot of nodes within each level, breadth-first\ntraversal will be more efficient.\u003c/p\u003e\n\n\u003ch2\u003eExercise: Build \u003ccode\u003egetElementById\u003c/code\u003e\n\u003c/h2\u003e\n\n\u003cp\u003eLet's get some practice using our traversal skills by creating a Ruby version of\nJavaScript's \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById\"\u003e\u003ccode\u003eDocument.getElementById\u003c/code\u003e method\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eIn the \u003ccode\u003elib\u003c/code\u003e folder, we having included an implementation of a \u003ccode\u003eTree\u003c/code\u003e class. The\nnodes in the \u003ccode\u003eTree\u003c/code\u003e will be structured as follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003etag_name: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'h1'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'heading'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003etext_content: \u003c/span\u003e\u003cspan class=\"s1\"\u003e'Title'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"ss\"\u003echildren: \u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou do not need to create nodes or a \u003ccode\u003eNode\u003c/code\u003e class yourself — the tests will\nhandle that part.\u003c/p\u003e\n\n\u003cp\u003eTo pass the tests, you will need to add an instance method, \u003ccode\u003eget_element_by_id\u003c/code\u003e,\nto the \u003ccode\u003eTree\u003c/code\u003e class that uses the depth-first approach to traverse the \u003ccode\u003eTree\u003c/code\u003e\nand find the desired node. Like the browser's \u003ccode\u003egetElementById\u003c/code\u003e method, your\nmethod should take a string as an argument and return the node with that value.\nIf a matching node is not found, your method should return \u003ccode\u003enil\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eOnce you have the tests passing, try modifying your method to use breadth-first\ntraversal instead; the tests should still pass.\u003c/p\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=eFK3pzJEHKI\"\u003eBaseCS: Tree Traversal\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://eugene-eeo.github.io/blog/tree-traversal-storage.html\"\u003eTree Traversal Space Requirements\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g52a07a325b05f9c023dac72a74eaf69b","title":"Using the useDispatch Hook Lab","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"react-hooks-redux-use-dispatch-lab\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-use-dispatch-lab/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-use-dispatch-lab\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/react-hooks-redux-use-dispatch-lab/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDispatch an action using the \u003ccode\u003euseDispatch\u003c/code\u003e hook\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\n\u003cp\u003eIn this application we will be building an application to keep track of our\nfavorite restaurants. We will keep our \u003ccode\u003ereact\u003c/code\u003e application separated from our\n\u003ccode\u003eredux\u003c/code\u003e store by using the \u003ccode\u003eProvider\u003c/code\u003e component.\u003c/p\u003e\n\n\u003cp\u003eUse the \u003ccode\u003ereact-redux\u003c/code\u003e library to connect the store to our \u003ccode\u003ereact\u003c/code\u003e\napplication. Utilize the \u003ccode\u003eProvider\u003c/code\u003e component to give your components access\nto the Redux store. Make sure to also implement \u003ccode\u003euseDispatch()\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eInstructions\u003c/h2\u003e\n\n\u003cp\u003eRedux is already set up through \u003ccode\u003eindex.js\u003c/code\u003e and the reducer \u003ccode\u003erestaurantsReducer\u003c/code\u003e.\nIn the \u003ccode\u003eRestaurantInput\u003c/code\u003e component, use the \u003ccode\u003euseDispatch\u003c/code\u003e hook along with the\n\u003ccode\u003eaddRestaurant\u003c/code\u003e action creator to dispatch an action to the store when the form\nis submitted.\u003c/p\u003e\n\n\u003cp\u003eRun this app in the browser to get a sense of how the app should function. Then,\nwrite code to get the tests to pass!\u003c/p\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g9cd0f1a8b8f2a09f8b5a53ffe48b5464","title":"Validation Messages and Error Handling","type":"Assignment","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-validation-messages-and-error-handling\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\" style=\"visibility: hidden;\"\u003e\u003ca class=\"fis-fork-link\" id=\"fork-link\" href=\"https://github.com/learn-co-curriculum/phase-4-validation-messages-and-error-handling/fork\" target=\"_blank\"\u003e\u003cimg id=\"fork-img\" title=\"Fork This Assignment\" alt=\"Fork This Assignment\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-validation-messages-and-error-handling\" target=\"_blank\"\u003e\u003cimg id=\"repo-img\" title=\"Open GitHub Repo\" alt=\"GitHub Repo\"\u003e\u003c/a\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-validation-messages-and-error-handling/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\n\u003ch2\u003eLearning Goals\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDisplay validation messages on the frontend\u003c/li\u003e\n\u003cli\u003eUse HTTP status codes to interpret server response\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIn previous lessons, we learned how to use Active Record to perform server-side\nvalidations. Now, let's see how we can use those error messages to display\nuseful information to our users so they can submit valid data.\u003c/p\u003e\n\n\u003cp\u003eTo get the backend set up, run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ebundle \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails db:migrate db:seed\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003erails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, in a new terminal, run the frontend:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight console\"\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enpm start \u003cspan class=\"nt\"\u003e--prefix\u003c/span\u003e client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eConfirm both applications are up and running by visiting\n\u003ca href=\"http://localhost:4000\"\u003e\u003ccode\u003elocalhost:4000\u003c/code\u003e\u003c/a\u003e and viewing the list of movies in your\nReact application.\u003c/p\u003e\n\n\u003ch2\u003eWriting Server-Side Validations\u003c/h2\u003e\n\n\u003cp\u003eLet's start by adding some validations to our \u003ccode\u003eMovie\u003c/code\u003e model:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovie\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"no\"\u003eCATEGORIES\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Comedy'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Drama'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Animation'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Mystery'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Horror'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Fantasy'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Action'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Documentary'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Science Fiction'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003epresence: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:year\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003enumericality: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003egreater_than_or_equal_to: \u003c/span\u003e\u003cspan class=\"mi\"\u003e1888\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003eless_than_or_equal_to: \u003c/span\u003e\u003cspan class=\"no\"\u003eDate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etoday\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eyear\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:poster_url\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003epresence: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:category\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003einclusion: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003ein: \u003c/span\u003e\u003cspan class=\"no\"\u003eCATEGORIES\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003emessage: \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"must be one of: \u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"no\"\u003eCATEGORIES\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e', '\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can also update our controller action to check the validity of our model when\nit is created, and respond appropriately:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_params\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :created\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eRecordInvalid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"ss\"\u003ejson: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ss\"\u003eerrors: \u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erecord\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efull_messages\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"ss\"\u003estatus: :unprocessable_entity\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, in the browser, try to submit the form with some invalid data. Use the\nNetwork tab to view the response from the server. You should see that we are\nsuccessfully returning the validation errors and the status code from this\nrequest:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/validation-messages-and-error-handling/network-422-error.png\" alt=\"network 422 errors\"\u003e\u003c/p\u003e\n\n\u003cp\u003eNow that we have the error messages back from the server, how can we show them\nto our users so that they know how to fix them?\u003c/p\u003e\n\n\u003ch2\u003eDisplaying Validation Errors\u003c/h2\u003e\n\n\u003cp\u003eLet's focus on the React side of things. There are now two possible options when\nwe submit the form. Either we get a \u003cstrong\u003egood response\u003c/strong\u003e indicating that the form\ndata was saved successfully, or a \u003cstrong\u003ebad response\u003c/strong\u003e indicating that something\nwent wrong with our request. So, we need to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCheck if we got a good response or a bad response\u003c/li\u003e\n\u003cli\u003eIf we got a bad response:\n\n\u003cul\u003e\n\u003cli\u003eSave the error messages in state\u003c/li\u003e\n\u003cli\u003eDisplay the errors to our user\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIf we got a good response:\n\n\u003cul\u003e\n\u003cli\u003eNavigate the user to the home page to show them their newly created movie\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eLet's take things one step at a time. First: \u003cstrong\u003eCheck if we got a good response\nor a bad response\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eIn the \u003ccode\u003eMovieForm\u003c/code\u003e component's \u003ccode\u003ehandleSubmit\u003c/code\u003e function, modify the fetch request\nas follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/movies\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eformData\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}).\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, try submitting the form with invalid data again and take a look at the\nresponse object that is logged in the console:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://curriculum-content.s3.amazonaws.com/phase-4/validation-messages-and-error-handling/bad-fetch-response.png\" alt=\"fetch bad response\"\u003e\u003c/p\u003e\n\n\u003cp\u003eWe can use the \u003ccode\u003e.ok\u003c/code\u003e property of the \u003ccode\u003eresponse\u003c/code\u003e object to see whether the\nresponse has a good status code (200-300 range) or a bad status code (400-500\nrange) and handle the response accordingly. If the response is not ok, we'll want\nto display some error messages to the user; that means we'll need to keep track\nof those error messages in state, and re-render the component when those error\nmessages are updated:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eMovieForm\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esetErrors\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003euseState\u003c/span\u003e\u003cspan class=\"p\"\u003e([]);\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// rest of component code\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eok\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003enewMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enewMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrorData\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003esetErrors\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrorData\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe'll also want to \u003ca href=\"https://reactjs.org/docs/conditional-rendering.html#inline-if-with-logical--operator\"\u003econditionally display\u003c/a\u003e the errors in the JSX\nbeing returned from our component:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight jsx\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// In the JSX returned by MovieForm:\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e \u003cspan class=\"na\"\u003eonSubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleSubmit\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"cm\"\u003e/* rest of form elements here... */\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eul\u003c/span\u003e \u003cspan class=\"na\"\u003estyle\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ecolor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ered\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e \u003cspan class=\"na\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eerror\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eerror\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eul\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eSubmitButton\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"submit\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eAdd Movie\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nc\"\u003eSubmitButton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow the user should see the error messages on the form when it doesn't pass our\nvalidations on the server!\u003c/p\u003e\n\n\u003ch2\u003eBonus: Refactoring with async/await\u003c/h2\u003e\n\n\u003cp\u003eYou may notice the code for the \u003ccode\u003efetch\u003c/code\u003e request in its entirety is a bit hard to\nread:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleSubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epreventDefault\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/movies\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eformData\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}).\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eok\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003enewMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enewMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrorData\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003esetErrors\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrorData\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn particular, working with the \u003ccode\u003eresponse\u003c/code\u003e object and the Promise chaining\nrequired to read the JSON data from the response isn't particularly elegant.\u003c/p\u003e\n\n\u003cp\u003eOne way we can clean this up is using the \u003ca href=\"https://javascript.info/async-await\"\u003e\u003ccode\u003easync/await\u003c/code\u003e\u003c/a\u003e syntax:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// make the function async to enable the await keyword\u003c/span\u003e\n\u003cspan class=\"k\"\u003easync\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleSubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epreventDefault\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// fetch returns a Promise, we must await it\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003eawait\u003c/span\u003e \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e/movies\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eformData\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// response.json() returns a Promise, we must await it\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003eawait\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eok\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eMovie created:\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003esetErrors\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis code better expresses our function's intent when it comes to working with\nthe response. Our server will always send back JSON data, so we always want to\nparse the response; and after we've parsed the response, we can decide what to\ndo with that data based on whether or not the response was \u003ccode\u003eok\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eTo handle server-side validations, we can leverage Active Record to check our\nmodel's validity before saving bad data to the database. We can also send back\ndifferent response data with different status codes from our controller actions\nbased on the validity of our data.\u003c/p\u003e\n\n\u003cp\u003eTo help our users correct these validation errors, we need to show them the\nerror messages from the server. We can write some conditional code to handle\nsuccessful vs unsuccessful responses from the server. In a React application, we\ncan then use state to hold the error messages and render them somewhere on the\nform using JSX.\u003c/p\u003e\n\n\u003ch2\u003eCheck For Understanding\u003c/h2\u003e\n\n\u003cp\u003eBefore you move on, make sure you can answer the following questions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eHow can we differentiate between a successful and unsuccessful response using\n\u003ccode\u003efetch\u003c/code\u003e?\u003c/li\u003e\n\u003cli\u003eWhy might it be important to display validation error messages to our users?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#checking_that_the_fetch_was_successful\"\u003eUsing Fetch\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://javascript.info/async-await\"\u003easync/await\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":1.0,"dueAt":null,"lockAt":null,"unlockAt":null}],"discussion_topics":[],"quizzes":[{"exportId":"g5bf105a033e7b94145957fe2678ca4e4","title":"Active Model Serializer Quiz","type":"Quizzes::Quiz","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-quiz-active-model-serializer\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-quiz-active-model-serializer/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eIt's time to check your knowledge! Use this quiz to create a custom study guide. Note any answers that were marked incorrect, so you can study the relevant material and try this quiz again.\u003c/p\u003e\n\u003cp\u003eIf you don't know the answer to a question, please do not guess. Instead, select \"I don't know\". It's OK not to know everything and to admit when we're unsure.\u003c/p\u003e","assignmentExportId":"gfcad255311fb7745dfadb3cb9cce419d","questionCount":4,"timeLimit":null,"attempts":3,"graded":true,"pointsPossible":4.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g0e0fb49c1b2eae22124eb3b8d0fbcfdc","title":"Active Record Associations Quiz","type":"Quizzes::Quiz","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-quiz-active-record-associations\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-quiz-active-record-associations/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eIt's time to check your knowledge! Use this quiz to create a custom study guide. Note any answers that were marked incorrect, so you can study the relevant material and try this quiz again.\u003cbr\u003eIf you don't know the answer to a question, please do not guess. Instead, select \"I don't know\". It's OK not to know everything and to admit when we're unsure.\u003c/p\u003e\n\u003cp\u003eIf you get stuck, check out these pages from the Rails guides:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/association_basics.html\"\u003eAssociation Basics\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://guides.rubyonrails.org/routing.html#nested-resources\"\u003eRails Routing: Nested Resources\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","assignmentExportId":"gf576aade466c333f55bfec8ca9c805c0","questionCount":7,"timeLimit":null,"attempts":3,"graded":true,"pointsPossible":7.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g2a0853c1241e49db847e0ce9493490b6","title":"Deploying Quiz","type":"Quizzes::Quiz","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-quiz-deploying\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\"\u003e\n  \u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-quiz-deploying/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\n\u003c/header\u003e\n\n\u003cp\u003eIt's time to check your knowledge! Use this quiz to create a custom study guide.\nNote any answers that were marked incorrect, so you can study the relevant\nmaterial and try this quiz again.\u003c/p\u003e\n\n\u003cp\u003eIf you don't know the answer to a question, please do not guess. Instead, select\n\"I don't know\". It's OK not to know everything and to admit when we're unsure.\u003c/p\u003e","assignmentExportId":"g460c5e42fffa1df4bfcbe155d17e516a","questionCount":5,"timeLimit":null,"attempts":3,"graded":true,"pointsPossible":5.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g319ed87847316689e7229f01fa5c1df4","title":"Rails Fundamentals Quiz","type":"Quizzes::Quiz","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-quiz-rails-fundamentals\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-quiz-rails-fundamentals/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eIt's time to check your knowledge! Use this quiz to create a custom study guide. Note any answers that were marked incorrect, so you can study the relevant material and try this quiz again.\u003c/p\u003e\n\u003cp\u003eIf you don't know the answer to a question, please do not guess. Instead, select \"I don't know\". It's OK not to know everything and to admit when we're unsure.\u003c/p\u003e","assignmentExportId":"g984682e1b93c9e0135604595324dadcb","questionCount":6,"timeLimit":null,"attempts":3,"graded":true,"pointsPossible":6.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"g223abc7a504efa4cfbc7149a22ed8175","title":"Validations Quiz","type":"Quizzes::Quiz","content":"\u003cdiv id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-quiz-validations\"\u003e\u003c/div\u003e\n\u003cheader class=\"fis-header\"\u003e\u003ca class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-quiz-validations/issues/new\" target=\"_blank\"\u003e\u003cimg id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"\u003e\u003c/a\u003e\u003c/header\u003e\n\u003cp\u003eIt's time to check your knowledge! Use this quiz to create a custom study guide. Note any answers that were marked incorrect, so you can study the relevant material and try this quiz again.\u003c/p\u003e\n\u003cp\u003eIf you don't know the answer to a question, please do not guess. Instead, select \"I don't know\". It's OK not to know everything and to admit when we're unsure.\u003c/p\u003e","assignmentExportId":"gab9e8779bb0416c571d53e92b81fdc7c","questionCount":7,"timeLimit":null,"attempts":3,"graded":true,"pointsPossible":7.0,"dueAt":null,"lockAt":null,"unlockAt":null}],"files":null}